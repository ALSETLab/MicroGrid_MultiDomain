within OpenIPSL.Examples;
package ModelPredictiveControl
  "Package containing system examples for Model Predictive Control Studies"
  package Luigi_Vanfretti_Special_Package

    model MPCAppliedEnergyOriginal
      "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
      extends Modelica.Icons.Example;

      parameter Boolean equivalentGRID = false;
      parameter Boolean equivalentsystem = false;

      OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=180,
            origin={-60,80})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        enableV_b=true,
        v_0=powerFlow.powerflow.bus.V1,
        angle_0=powerFlow.powerflow.bus.A1,
        P_0=powerFlow.powerflow.machines.PG1,
        Q_0=powerFlow.powerflow.machines.QG1,
        V_b=6000)  if not equivalentGRID
        annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                {-14,84}})));
      OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
            powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
            powerFlow.powerflow.bus.V4) if not equivalentGRID
        annotation (Placement(transformation(extent={{50,70},{70,90}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                {36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                {36,74}})));
      OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
            powerFlow.powerflow.bus.V5)  annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,16})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,60})));
      OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
            powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,10})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000,
        R=0.005,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,10})));
      GenerationUnits.PSSE.G2_16MVA                         G2(
        enableV_b=true,
        enableP_0=true,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V6,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A6,
        V_b=6000,
        P_0=powerFlow.powerflow.machines.PG2,
        Q_0=powerFlow.powerflow.machines.QG2,
        enableangle_0=true)
                      annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-30,10})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
        annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
      OpenIPSL.Electrical.Loads.PSSE.Load Load1(
        V_b=220000,
        P_0=powerFlow.powerflow.loads.PL1,
        Q_0=powerFlow.powerflow.loads.QL1,
        v_0=powerFlow.powerflow.bus.V3,
        angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-20,48},{0,68}})));
      Electrical.Events.Breaker breaker(enableTrigger=false,
        t_o=0.25,
        rc_enabled=false,
        t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,26})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
      Modelica.Blocks.Sources.Constant IN22(k=0)
        annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
      Modelica.Blocks.Math.Add AddU2
        annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
      Modelica.Blocks.Interfaces.RealInput IN2(start=0)
        "Connector of Real input signal 2"
               annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
              origin={-150,-12})));
                Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
            iconTransformation(extent={{-160,-44},{-140,-24}})));
      Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
            iconTransformation(extent={{-160,-66},{-140,-46}})));
      Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
            iconTransformation(extent={{-160,-88},{-140,-68}})));

      Modelica.Blocks.Interfaces.RealOutput OUT1
        annotation (Placement(transformation(extent={{140,70},{160,90}})));
     Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT3
        annotation (Placement(transformation(extent={{140,30},{160,50}})));

      PFData.PowerFlow powerFlow(redeclare record PowerFlow =
            OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
        annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
      Electrical.Machines.PSSE.GENCLS IB(
        V_b=220000,
        v_0=powerFlow.powerflow.bus.V4,
        angle_0=powerFlow.powerflow.bus.A4,
        P_0=powerFlow.powerflow.machines.Pinf,
        Q_0=powerFlow.powerflow.machines.Qinf,
        M_b=100000000,
        X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                {100,90}})));
      Electrical.Loads.PSSE.Load_ExtInput Load2(
        P_0=powerFlow.powerflow.loads.PL2,
        Q_0=powerFlow.powerflow.loads.QL2,
        v_0=powerFlow.powerflow.bus.V5,
        angle_0=powerFlow.powerflow.bus.A5,
        d_P=0,
        t1=100,
        d_t=1000)
        annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

      inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
          fixedSeed=10000)
        annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
      Modelica.Blocks.Sources.Sine sine(
        amplitude=0,
        f=1/260,
        phase=3.1415926535898,
        startTime=1000)
        annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

      Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-90})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T4(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-90})));
      GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
        V_b=480,
        P_0=powerFlow.powerflow.machines.PPV,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QPV,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V8,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A8,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
      Modelica.Blocks.Math.Add AddU3
        annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
      Modelica.Blocks.Sources.Constant IN33(k=0)
        annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

      Modelica.Blocks.Math.Add AddU4
        annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
      Modelica.Blocks.Math.Add AddU5
        annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
      Modelica.Blocks.Sources.Constant IN44(k=0)
        annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
      Modelica.Blocks.Sources.Constant IN55(k=0)
        annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
      Modelica.Blocks.Interfaces.RealOutput OUT4
        annotation (Placement(transformation(extent={{140,10},{160,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT5
        annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT6
        annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT7
        annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT8
        annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT9
        annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT10
        annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT11
        annotation (Placement(transformation(extent={{164,70},{184,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT12
        annotation (Placement(transformation(extent={{164,50},{184,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT13
        annotation (Placement(transformation(extent={{164,30},{184,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT14
        annotation (Placement(transformation(extent={{164,10},{184,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT15
        annotation (Placement(transformation(extent={{164,-10},{184,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT16
        annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT17
        annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT18
        annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT19
        annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT20
        annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT21
        annotation (Placement(transformation(extent={{184,70},{204,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT22
        annotation (Placement(transformation(extent={{184,50},{204,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT23
        annotation (Placement(transformation(extent={{184,30},{204,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT24
        annotation (Placement(transformation(extent={{184,10},{204,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT25
        annotation (Placement(transformation(extent={{184,-10},{204,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT26
        annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT27
        annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT28
        annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT29
        annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT30
        annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT31
        annotation (Placement(transformation(extent={{204,70},{224,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT32
        annotation (Placement(transformation(extent={{204,50},{224,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT33
        annotation (Placement(transformation(extent={{204,30},{224,50}})));
      GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
        V_base=480,
        V_b(displayUnit="kV") = 480,
        enableV_b=true,
        P_0=powerFlow.powerflow.machines.PBESS,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QBESS,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V10,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A10,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
      Modelica.Blocks.Interfaces.RealOutput OUT34
        annotation (Placement(transformation(extent={{204,10},{224,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT35
        annotation (Placement(transformation(extent={{206,-10},{226,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT36
        annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT37
        annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT38
        annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT39
        annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
      Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-50})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T3(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={12,-50})));
      Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-90})));
      Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-50})));
      Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,10})));
      Electrical.Branches.PwLine          L4(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,6},{
                50,14}})));
      Electrical.Branches.PwLine          L5(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-54},
                {50,-46}})));
      Electrical.Branches.PwLine          L6(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-94},
                {50,-86}})));
      Modelica.Blocks.Interfaces.RealOutput OUT40
        annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT41
        annotation (Placement(transformation(extent={{224,70},{244,90}})));
      Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
          active_sigma=0.0000000001, samplePeriod=0.1)
        annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT42
        annotation (Placement(transformation(extent={{224,50},{244,70}})));
    equation

    // OUT1 = G2.gen.w;
    // OUT2 = G2.gen.delta;
    // OUT3 = G2.gen.Epq;
    // OUT4 = G2.gen.PSIkd;
    // OUT5 = G2.gen.PSIppq;
    // OUT6 = G2.sEXSMPC.simpleLagLim.state;
    // OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
    // OUT8 = G2.gASTMPC.simpleLagLim.state;
    // OUT9 = G2.gASTMPC.simpleLag.state;
    // OUT10 = G2.gASTMPC.simpleLag1.state;
    // OUT11 = PV.rEGCA1_1.simpleLag.state;
    // OUT12 = PV.rEGCA1_1.integrator.y;
    // OUT13 = PV.rEGCA1_1.integrator1.y;
    // OUT14 =PV.EC.IGQ.y;
    // OUT15 =PV.EC.IGV.y;
    // OUT16 =PV.EC.simpleLag.state;
    // OUT17 =PV.EC.simpleLag1.state;
    // OUT18 =PV.EC.simpleLag2.state;
    // OUT19 =PV.EC.IGP.y;
    // OUT20 =PV.EC.simpleLag3.state;
    // OUT21 =PV.EC.simpleLag4.state;
    // OUT22 =PV.EC.simpleLag5.state;
    // OUT23 = BESS.rEGCA1_1.simpleLag.state;
    // OUT24 = BESS.rEGCA1_1.integrator.y;
    // OUT25 = BESS.rEGCA1_1.integrator1.y;
    // OUT26 =BESS.EC.integrator3.y;
    // OUT27 =BESS.EC.integrator1.y;
    // OUT28 =BESS.EC.simpleLag.state;
    // OUT29 =BESS.EC.IGQ.y;
    // OUT30 =BESS.EC.IGV.y;
    // OUT31 =BESS.EC.IGP.y;
    // OUT32 =BESS.EC.simpleLag1.state;
    // OUT33 =BESS.EC.simpleLag2.state;
    // OUT34 =BESS.EC.simpleLag3.state;
    // OUT35 =BESS.EC.simpleLag4.state;
    // OUT36 = G2.gen.PMECH;
    // OUT37 = G2.sEXSMPC.EFD;
    // OUT38 = BESS.rEGCA1_1.Pgen;
    // OUT39 = BESS.rEGCA1_1.Qgen;
    // OUT40 = PV.rEGCA1_1.Pgen;
    // OUT41 = PV.rEGCA1_1.Qgen;
    // OUT42 = Bus5.v;
    // OUT43 = Bus5.angle;

    OUT1 = G2.gen.w;
    OUT2 = G2.gen.delta;
    OUT3 = G2.gen.Epq;
    OUT4 = G2.gen.PSIkd;
    OUT5 = G2.gen.PSIppq;
    OUT6 = G2.sEXSMPC.simpleLagLim.state;
    OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
    OUT8 = G2.gASTMPC.simpleLagLim.state;
    OUT9 = G2.gASTMPC.simpleLag.state;
    OUT10 = G2.gASTMPC.simpleLag1.state;
    OUT11 = PV.rEGCA1_1.simpleLag.state;
    OUT12 = PV.rEGCA1_1.integrator.y;
    OUT13 = PV.rEGCA1_1.integrator1.y;
    OUT14 =PV.EC.IGQ.y;
    OUT15 =PV.EC.IGV.y;
    OUT16 =PV.EC.simpleLag.state;
    OUT17 =PV.EC.simpleLag1.state;
    OUT18 =PV.EC.simpleLag2.state;
    OUT19 =PV.EC.IGP.y;
    OUT20 =PV.EC.simpleLag3.state;
    OUT21 =PV.EC.simpleLag5.state;
    OUT22 = PV.EC.simpleLag4.state;
    OUT23 = BESS.rEGCA1_1.simpleLag.state;
    OUT24 = BESS.rEGCA1_1.integrator.y;
    OUT25 = BESS.rEGCA1_1.integrator1.y;
    OUT26 =BESS.EC.integrator3.y;
    OUT27 =BESS.EC.simpleLag.state;
    OUT28 =BESS.EC.IGQ.y;
    OUT29 =BESS.EC.IGV.y;
    OUT30 =BESS.EC.IGP.y;
    OUT31 =BESS.EC.simpleLag1.state;
    OUT32 =BESS.EC.simpleLag2.state;
    OUT33 =BESS.EC.simpleLag3.state;
    OUT34 =BESS.EC.simpleLag4.state;
    OUT35 = G2.gen.PMECH;
    OUT36 = G2.sEXSMPC.EFD;
    OUT37 = BESS.rEGCA1_1.Pgen;
    OUT38 = BESS.rEGCA1_1.Qgen;
    OUT39 = PV.rEGCA1_1.Pgen;
    OUT40 = PV.rEGCA1_1.Qgen;
    OUT41 = Bus5.v;
    OUT42 = Bus5.angle;

      connect(T1.p, Bus2.p)
        annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
      connect(Bus1.p, T1.n)
        annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
      connect(G1.conn, Bus1.p)
        annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
      connect(L1.n, Bus3.p)
        annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
      connect(L1.p, Bus2.p)
        annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
      connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
              80}}, color={0,0,255}));
      connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
              80}}, color={0,0,255}));
      connect(Load1.p, Bus3.p)
        annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
      connect(L3.p, Bus4.p)
        annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
      connect(breaker.s, Bus5.p)
        annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                          color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
              {-82,16}},
                     color={0,0,127}));

      connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                     color={0,0,127}));
      connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
              {-82,-14}},
                     color={0,0,127}));
      connect(AddU2.y, G2.Efd_ref)
        annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                               color={0,0,127}));
      connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
              {-42,16}},                          color={0,0,127}));
      connect(IB.p, Bus4.p)
        annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
      connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
              80,16}},
                   color={0,0,255}));
      connect(T4.n, Bus10.p)
        annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
      connect(Bus6.p, T2.n)
        annotation (Line(points={{-10,10},{-1,10}},
                                                color={0,0,255}));
      connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                               color={0,0,127}));
      connect(IN33.y,AddU3. u2)
        annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
      connect(BESS.p1, Bus10.p)
        annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
      connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
              -80},{-59,-80}}, color={0,0,127}));
      connect(IN55.y, AddU5.u2)
        annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
      connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
              -96},{-42,-96}},   color={0,0,127}));
      connect(IN44.y, AddU4.u2)
        annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
      connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
              {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
      connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
              {-150,-78}}, color={0,0,127}));
      connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                         color={0,0,255}));
      connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
              {-150,-34}}, color={0,0,127}));
      connect(PV.p1, Bus8.p)
        annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
      connect(Bus8.p, T3.n)
        annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
      connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
              10}}, color={0,0,255}));
      connect(T3.p, Bus9.p)
        annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
      connect(T4.p, Bus11.p)
        annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
      connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
              {80,16}},     color={0,0,255}));
      connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus11.p, L6.p)
        annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
      connect(Bus9.p, L5.p)
        annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
      connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
              10}}, color={0,0,255}));
      connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
            color={0,0,127}));
      connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
              {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
      connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
              -14.5},{101.9,-14.5}}, color={0,0,127}));
        annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                    Placement(transformation(extent={{140,-40},{160,-20}})),
                    Placement(transformation(extent={{140,-60},{160,-40}})),
                    Placement(transformation(extent={{140,-80},{160,-60}})),
                   Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-140},{140,140}}), graphics={
            Rectangle(
              extent={{130,98},{252,-124}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-160,30},{-134,-90}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,36},{124,-124}},
              lineColor={238,46,47},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,98},{124,38}},
              lineColor={0,128,255},
              lineThickness=0.5),
            Text(
              extent={{78,-106},{114,-120}},
              textColor={238,46,47},
              textString="Microgrid"),
            Text(
              extent={{76,58},{128,34}},
              textColor={28,108,200},
              textString="Utility Grid"),
            Text(
              extent={{-30,-102},{34,-124}},
              textColor={0,140,72},
              textString="Linearization Unit"),
            Text(
              extent={{-164,50},{-132,30}},
              textColor={0,140,72},
              textString="Inputs"),
            Text(
              extent={{128,118},{168,98}},
              textColor={0,140,72},
              textString="Outputs")}),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(
          StopTime=10,
          Interval=0.0001,
          __Dymola_Algorithm="Dassl"),
        Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
    end MPCAppliedEnergyOriginal;

    model MPCAppliedEnergyLinearized
      "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
      extends Modelica.Icons.Example;

      parameter Boolean equivalentGRID = true;
      parameter Boolean equivalentsystem = false;

      OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=180,
            origin={-60,80})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        enableV_b=true,
        v_0=powerFlow.powerflow.bus.V1,
        angle_0=powerFlow.powerflow.bus.A1,
        P_0=powerFlow.powerflow.machines.PG1,
        Q_0=powerFlow.powerflow.machines.QG1,
        V_b=6000)  if not equivalentGRID
        annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                {-14,84}})));
      OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
            powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
            powerFlow.powerflow.bus.V4) if not equivalentGRID
        annotation (Placement(transformation(extent={{50,70},{70,90}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                {36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                {36,74}})));
      OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
            powerFlow.powerflow.bus.V5)  annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,16})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,60})));
      OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
            powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,10})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000,
        R=0.005,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,10})));
      GenerationUnits.PSSE.G2_16MVA                         G2(
        enableV_b=true,
        enableP_0=true,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V6,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A6,
        V_b=6000,
        P_0=powerFlow.powerflow.machines.PG2,
        Q_0=powerFlow.powerflow.machines.QG2,
        enableangle_0=true)
                      annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-30,10})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
        annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
      OpenIPSL.Electrical.Loads.PSSE.Load Load1(
        V_b=220000,
        P_0=powerFlow.powerflow.loads.PL1,
        Q_0=powerFlow.powerflow.loads.QL1,
        v_0=powerFlow.powerflow.bus.V3,
        angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-20,48},{0,68}})));
      Electrical.Events.Breaker breaker(enableTrigger=false,
        t_o=0.05,
        rc_enabled=true,
        t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,26})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
      Modelica.Blocks.Sources.Constant IN22(k=0)
        annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
      Modelica.Blocks.Math.Add AddU2
        annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
      Modelica.Blocks.Interfaces.RealInput IN2(start=0)
        "Connector of Real input signal 2"
               annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
              origin={-150,-12})));

      Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
            iconTransformation(extent={{-160,-44},{-140,-24}})));
      Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
            iconTransformation(extent={{-160,-66},{-140,-46}})));
      Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
            iconTransformation(extent={{-160,-88},{-140,-68}})));

      Modelica.Blocks.Interfaces.RealOutput OUT1
        annotation (Placement(transformation(extent={{140,70},{160,90}})));
     Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT3
        annotation (Placement(transformation(extent={{140,30},{160,50}})));

      PFData.PowerFlow powerFlow(redeclare record PowerFlow =
            OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
        annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
      Electrical.Machines.PSSE.GENCLS IB(
        V_b=220000,
        v_0=powerFlow.powerflow.bus.V4,
        angle_0=powerFlow.powerflow.bus.A4,
        P_0=powerFlow.powerflow.machines.Pinf,
        Q_0=powerFlow.powerflow.machines.Qinf,
        M_b=100000000,
        X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                {100,90}})));
      Electrical.Loads.PSSE.Load_ExtInput Load2(
        P_0=powerFlow.powerflow.loads.PL2,
        Q_0=powerFlow.powerflow.loads.QL2,
        v_0=powerFlow.powerflow.bus.V5,
        angle_0=powerFlow.powerflow.bus.A5,
        d_P=0,
        t1=100,
        d_t=1000)
        annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

      inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
          fixedSeed=10000)
        annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

      Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-90})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T4(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-90})));
      GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
        V_b=480,
        P_0=powerFlow.powerflow.machines.PPV,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QPV,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V8,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A8,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
      Modelica.Blocks.Math.Add AddU3
        annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
      Modelica.Blocks.Sources.Constant IN33(k=0)
        annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

      Modelica.Blocks.Math.Add AddU4
        annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
      Modelica.Blocks.Math.Add AddU5
        annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
      Modelica.Blocks.Sources.Constant IN44(k=0)
        annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
      Modelica.Blocks.Sources.Constant IN55(k=0)
        annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
      Modelica.Blocks.Interfaces.RealOutput OUT4
        annotation (Placement(transformation(extent={{140,10},{160,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT5
        annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT6
        annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT7
        annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT8
        annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT9
        annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT10
        annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT11
        annotation (Placement(transformation(extent={{164,70},{184,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT12
        annotation (Placement(transformation(extent={{164,50},{184,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT13
        annotation (Placement(transformation(extent={{164,30},{184,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT14
        annotation (Placement(transformation(extent={{164,10},{184,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT15
        annotation (Placement(transformation(extent={{164,-10},{184,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT16
        annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT17
        annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT18
        annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT19
        annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT20
        annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT21
        annotation (Placement(transformation(extent={{184,70},{204,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT22
        annotation (Placement(transformation(extent={{184,50},{204,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT23
        annotation (Placement(transformation(extent={{184,30},{204,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT24
        annotation (Placement(transformation(extent={{184,10},{204,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT25
        annotation (Placement(transformation(extent={{184,-10},{204,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT26
        annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT27
        annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT28
        annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT29
        annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT30
        annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT31
        annotation (Placement(transformation(extent={{204,70},{224,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT32
        annotation (Placement(transformation(extent={{204,50},{224,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT33
        annotation (Placement(transformation(extent={{204,30},{224,50}})));
      GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                               BESS(
        V_base=480,
        V_b(displayUnit="kV") = 480,
        enableV_b=true,
        P_0=powerFlow.powerflow.machines.PBESS,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QBESS,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V10,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A10,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
      Modelica.Blocks.Interfaces.RealOutput OUT34
        annotation (Placement(transformation(extent={{204,10},{224,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT35
        annotation (Placement(transformation(extent={{206,-10},{226,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT36
        annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT37
        annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT38
        annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
      Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-50})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T3(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={12,-50})));
      Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-90})));
      Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-50})));
      Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,10})));
      Electrical.Branches.PwLine          L4(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,6},{
                50,14}})));
      Electrical.Branches.PwLine          L5(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-54},
                {50,-46}})));
      Electrical.Branches.PwLine          L6(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-94},
                {50,-86}})));
      Modelica.Blocks.Interfaces.RealOutput OUT39
        annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT40
        annotation (Placement(transformation(extent={{208,-108},{228,-88}})));
      Modelica.Blocks.Interfaces.RealOutput OUT41
        annotation (Placement(transformation(extent={{224,70},{244,90}})));
      Modelica.Blocks.Sources.Sine sine(
        amplitude=0,
        f=1/260,
        phase=3.1415926535898,
        startTime=1000)
        annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
      Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
          active_sigma=0.0000000000000001,
                                     samplePeriod=0.01)
        annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT42
        annotation (Placement(transformation(extent={{224,50},{244,70}})));
    equation

    OUT1 = G2.gen.w;
    OUT2 = G2.gen.delta;
    OUT3 = G2.gen.Epq;
    OUT4 = G2.gen.PSIkd;
    OUT5 = G2.gen.PSIppq;
    OUT6 = G2.sEXSMPC.simpleLagLim.state;
    OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
    OUT8 = G2.gASTMPC.simpleLagLim.state;
    OUT9 = G2.gASTMPC.simpleLag.state;
    OUT10 = G2.gASTMPC.simpleLag1.state;
    OUT11 = PV.rEGCA1_1.simpleLag.state;
    OUT12 = PV.rEGCA1_1.integrator.y;
    OUT13 = PV.rEGCA1_1.integrator1.y;
    OUT14 =PV.EC.IGQ.y;
    OUT15 =PV.EC.IGV.y;
    OUT16 =PV.EC.simpleLag.state;
    OUT17 =PV.EC.simpleLag1.state;
    OUT18 =PV.EC.simpleLag2.state;
    OUT19 =PV.EC.IGP.y;
    OUT20 =PV.EC.simpleLag3.state;
    OUT21 =PV.EC.simpleLag5.state;
    OUT22 = PV.EC.simpleLag4.state;
    OUT23 = BESS.rEGCA1_1.simpleLag.state;
    OUT24 = BESS.rEGCA1_1.integrator.y;
    OUT25 = BESS.rEGCA1_1.integrator1.y;
    OUT26 =BESS.EC.integrator3.y;
    OUT27 =BESS.EC.simpleLag.state;
    OUT28 =BESS.EC.IGQ.y;
    OUT29 =BESS.EC.IGV.y;
    OUT30 =BESS.EC.IGP.y;
    OUT31 =BESS.EC.simpleLag1.state;
    OUT32 =BESS.EC.simpleLag2.state;
    OUT33 =BESS.EC.simpleLag3.state;
    OUT34 =BESS.EC.simpleLag4.state;
    OUT35 = G2.gen.PMECH;
    OUT36 = G2.sEXSMPC.EFD;
    OUT37 = BESS.rEGCA1_1.Pgen;
    OUT38 = BESS.rEGCA1_1.Qgen;
    OUT39 = PV.rEGCA1_1.Pgen;
    OUT40 = PV.rEGCA1_1.Qgen;
    OUT41 = Bus5.v;
    OUT42 = Bus5.angle;

      connect(T1.p, Bus2.p)
        annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
      connect(Bus1.p, T1.n)
        annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
      connect(G1.conn, Bus1.p)
        annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
      connect(L1.n, Bus3.p)
        annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
      connect(L1.p, Bus2.p)
        annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
      connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
              80}}, color={0,0,255}));
      connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
              80}}, color={0,0,255}));
      connect(Load1.p, Bus3.p)
        annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
      connect(L3.p, Bus4.p)
        annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
      connect(breaker.s, Bus5.p)
        annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                          color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
              {-82,16}},
                     color={0,0,127}));

      connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                     color={0,0,127}));
      connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
              {-82,-14}},
                     color={0,0,127}));
      connect(AddU2.y, G2.Efd_ref)
        annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                               color={0,0,127}));
      connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
              {-42,16}},                          color={0,0,127}));
      connect(IB.p, Bus4.p)
        annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
      connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
              80,16}},
                   color={0,0,255}));
      connect(T4.n, Bus10.p)
        annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
      connect(Bus6.p, T2.n)
        annotation (Line(points={{-10,10},{-1,10}},
                                                color={0,0,255}));
      connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                               color={0,0,127}));
      connect(IN33.y,AddU3. u2)
        annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
      connect(BESS.p1, Bus10.p)
        annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
      connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
              -80},{-59,-80}}, color={0,0,127}));
      connect(IN55.y, AddU5.u2)
        annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
      connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
              -96},{-42,-96}},   color={0,0,127}));
      connect(IN44.y, AddU4.u2)
        annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
      connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
              {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
      connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
              {-150,-78}}, color={0,0,127}));
      connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                         color={0,0,255}));
      connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
              {-150,-34}}, color={0,0,127}));
      connect(PV.p1, Bus8.p)
        annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
      connect(Bus8.p, T3.n)
        annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
      connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
              10}}, color={0,0,255}));
      connect(T3.p, Bus9.p)
        annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
      connect(T4.p, Bus11.p)
        annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
      connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
              {80,16}},     color={0,0,255}));
      connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus11.p, L6.p)
        annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
      connect(Bus9.p, L5.p)
        annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
      connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
              10}}, color={0,0,255}));
      connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
              {83.2,-16.4}}, color={0,0,127}));
      connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
              -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
              127}));
      connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
              {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                    Placement(transformation(extent={{140,-40},{160,-20}})),
                    Placement(transformation(extent={{140,-60},{160,-40}})),
                    Placement(transformation(extent={{140,-80},{160,-60}})),
                   Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-140},{140,140}}), graphics={
            Rectangle(
              extent={{130,98},{254,-124}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-160,30},{-134,-90}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,36},{124,-124}},
              lineColor={238,46,47},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,98},{124,38}},
              lineColor={0,128,255},
              lineThickness=0.5),
            Text(
              extent={{78,-106},{114,-120}},
              textColor={238,46,47},
              textString="Microgrid"),
            Text(
              extent={{76,58},{128,34}},
              textColor={28,108,200},
              textString="Utility Grid"),
            Text(
              extent={{-30,-102},{34,-124}},
              textColor={0,140,72},
              textString="Linearization Unit"),
            Text(
              extent={{-164,50},{-132,30}},
              textColor={0,140,72},
              textString="Inputs"),
            Text(
              extent={{128,118},{168,98}},
              textColor={0,140,72},
              textString="Outputs")}),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
        Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
    end MPCAppliedEnergyLinearized;

    model MPCAppliedEnergyOriginal_TABLE
      "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
      extends Modelica.Icons.Example;

      parameter Boolean equivalentGRID = false;
      parameter Boolean equivalentsystem = false;

      OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=180,
            origin={-60,80})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        enableV_b=true,
        v_0=powerFlow.powerflow.bus.V1,
        angle_0=powerFlow.powerflow.bus.A1,
        P_0=powerFlow.powerflow.machines.PG1,
        Q_0=powerFlow.powerflow.machines.QG1,
        V_b=6000)  if not equivalentGRID
        annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                {-14,84}})));
      OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
            powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
            powerFlow.powerflow.bus.V4) if not equivalentGRID
        annotation (Placement(transformation(extent={{50,70},{70,90}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                {36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                {36,74}})));
      OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
            powerFlow.powerflow.bus.V5)  annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,16})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,60})));
      OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
            powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,10})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000,
        R=0.005,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,10})));
      GenerationUnits.PSSE.G2_16MVA                         G2(
        enableV_b=true,
        enableP_0=true,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V6,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A6,
        V_b=6000,
        P_0=powerFlow.powerflow.machines.PG2,
        Q_0=powerFlow.powerflow.machines.QG2,
        enableangle_0=true)
                      annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-30,10})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
        annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
      OpenIPSL.Electrical.Loads.PSSE.Load Load1(
        V_b=220000,
        P_0=powerFlow.powerflow.loads.PL1,
        Q_0=powerFlow.powerflow.loads.QL1,
        v_0=powerFlow.powerflow.bus.V3,
        angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-20,48},{0,68}})));
      Electrical.Events.Breaker breaker(enableTrigger=false,
        t_o=8.05,
        rc_enabled=false,
        t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,26})));

      Modelica.Blocks.Interfaces.RealOutput OUT1
        annotation (Placement(transformation(extent={{140,70},{160,90}})));
     Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT3
        annotation (Placement(transformation(extent={{140,30},{160,50}})));

      PFData.PowerFlow powerFlow(redeclare record PowerFlow =
            OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
        annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
      Electrical.Machines.PSSE.GENCLS IB(
        V_b=220000,
        v_0=powerFlow.powerflow.bus.V4,
        angle_0=powerFlow.powerflow.bus.A4,
        P_0=powerFlow.powerflow.machines.Pinf,
        Q_0=powerFlow.powerflow.machines.Qinf,
        M_b=100000000,
        X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                {100,90}})));
      Electrical.Loads.PSSE.Load_ExtInput Load2(
        P_0=powerFlow.powerflow.loads.PL2,
        Q_0=powerFlow.powerflow.loads.QL2,
        v_0=powerFlow.powerflow.bus.V5,
        angle_0=powerFlow.powerflow.bus.A5,
        d_P=0,
        t1=100,
        d_t=1000)
        annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

      inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
          fixedSeed=10000)
        annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
      Modelica.Blocks.Sources.Sine sine(
        amplitude=0,
        f=1/260,
        phase=3.1415926535898,
        startTime=1000)
        annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

      Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-90})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T4(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-90})));
      GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
        V_b=480,
        P_0=powerFlow.powerflow.machines.PPV,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QPV,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V8,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A8,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

      Modelica.Blocks.Interfaces.RealOutput OUT4
        annotation (Placement(transformation(extent={{140,10},{160,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT5
        annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT6
        annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT7
        annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT8
        annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT9
        annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT10
        annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT11
        annotation (Placement(transformation(extent={{164,70},{184,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT12
        annotation (Placement(transformation(extent={{164,50},{184,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT13
        annotation (Placement(transformation(extent={{164,30},{184,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT14
        annotation (Placement(transformation(extent={{164,10},{184,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT15
        annotation (Placement(transformation(extent={{164,-10},{184,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT16
        annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT17
        annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT18
        annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT19
        annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT20
        annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT21
        annotation (Placement(transformation(extent={{184,70},{204,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT22
        annotation (Placement(transformation(extent={{184,50},{204,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT23
        annotation (Placement(transformation(extent={{184,30},{204,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT24
        annotation (Placement(transformation(extent={{184,10},{204,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT25
        annotation (Placement(transformation(extent={{184,-10},{204,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT26
        annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT27
        annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT28
        annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT29
        annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT30
        annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT31
        annotation (Placement(transformation(extent={{204,70},{224,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT32
        annotation (Placement(transformation(extent={{204,50},{224,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT33
        annotation (Placement(transformation(extent={{204,30},{224,50}})));
      GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
        V_base=480,
        V_b(displayUnit="kV") = 480,
        enableV_b=true,
        P_0=powerFlow.powerflow.machines.PBESS,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QBESS,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V10,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A10,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
      Modelica.Blocks.Interfaces.RealOutput OUT34
        annotation (Placement(transformation(extent={{204,10},{224,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT35
        annotation (Placement(transformation(extent={{206,-10},{226,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT36
        annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT37
        annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT38
        annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT39
        annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
      Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-50})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T3(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={12,-50})));
      Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-90})));
      Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-50})));
      Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,10})));
      Electrical.Branches.PwLine          L4(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,6},{
                50,14}})));
      Electrical.Branches.PwLine          L5(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-54},
                {50,-46}})));
      Electrical.Branches.PwLine          L6(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-94},
                {50,-86}})));
      Modelica.Blocks.Interfaces.RealOutput OUT40
        annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT41
        annotation (Placement(transformation(extent={{224,70},{244,90}})));
      Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
          active_sigma=0.0000000001, samplePeriod=0.1)
        annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT42
        annotation (Placement(transformation(extent={{224,50},{244,70}})));
      Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,0;
            1,0; 1.5,0.01; 2,0.02; 2.5,0.03; 3,0.038866743; 3.5,0.037753418; 4,
            0.037107802; 4.5,0.037002253; 5,0.036978601; 5.5,0.036940717; 6,
            0.036891783; 6.5,0.036838558; 7,0.036783494; 7.5,0.036727613; 8,
            0.036671576; 8.5,0.036615857; 9,0.036560784; 9.5,0.036506575; 10,
            0.036453372; 10.5,0.036401264; 11,0.036350303; 11.5,0.036300516; 12,
            0.036251911; 12.5,0.036204487; 13,0.036205816; 13.5,0.036165179; 14,
            0.036100279; 14.5,0.036026731; 15,0.035950076; 15.5,0.035872445; 16,
            0.035794958; 16.5,0.035718269; 17,0.03564276; 17.5,0.035568647; 18,
            0.035496054; 18.5,0.035425046; 19,0.035355653; 19.5,0.035287881; 20,
            0.035221723; 20.5,0.035157162; 21,0.035094174], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
        annotation (Placement(transformation(extent={{-98,6},{-78,26}})));
      Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,0;
            1,0; 1.5,-0.01; 2,-0.019403796; 2.5,-0.015015564; 3,-0.006630538;
            3.5,0.000448858; 4,0.005655098; 4.5,0.00953237; 5,0.012513723; 5.5,
            0.014870511; 6,0.016783628; 6.5,0.018379301; 7,0.019746297; 7.5,
            0.020946948; 8,0.022025012; 8.5,0.023011249; 9,0.023927323; 9.5,
            0.024788538; 10,0.025605744; 10.5,0.026386672; 11,0.027136872; 11.5,
            0.027860361; 12,0.02856008; 12.5,0.029238219; 13,0.029713182; 13.5,
            0.030025595; 14,0.030212236; 14.5,0.030303839; 15,0.030325643; 15.5,
            0.030297179; 16,0.030233092; 16.5,0.030144187; 17,0.03003836; 17.5,
            0.029921336; 18,0.029797245; 18.5,0.029669051; 19,0.029538871; 19.5,
            0.029408206; 20,0.029278116; 20.5,0.029149341; 21,0.029022391],
          smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
        annotation (Placement(transformation(extent={{-98,-20},{-78,0}})));
      Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,0;
            1,0; 1.5,0.01; 2,0.003467729; 2.5,0.00193645; 3,0.001766902; 3.5,
            0.002546846; 4,0.003888495; 4.5,0.005526485; 5,0.007337952; 5.5,
            0.009253813; 6,0.011226833; 6.5,0.013223775; 7,0.015221652; 7.5,
            0.017204785; 8,0.019162611; 8.5,0.021088128; 9,0.022976813; 9.5,
            0.024825867; 10,0.026633689; 10.5,0.028399504; 11,0.030123108; 11.5,
            0.031804685; 12,0.033444686; 12.5,0.035043737; 13,0.035868876; 13.5,
            0.036277836; 14,0.036483454; 14.5,0.036588736; 15,0.036644418; 15.5,
            0.036675573; 16,0.036694567; 16.5,0.036707491; 17,0.036717347; 17.5,
            0.036725612; 18,0.036733013; 18.5,0.036739911; 19,0.036746483; 19.5,
            0.036752818; 20,0.036758959; 20.5,0.036764932; 21,0.036770748],
          smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
        annotation (Placement(transformation(extent={{-98,-48},{-78,-28}})));
      Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,0;
            1,0; 1.5,0.049405385; 2,0.024119186; 2.5,0.025918531; 3,0.024962863;
            3.5,0.024409993; 4,0.024302432; 4.5,0.024294339; 5,0.024290294; 5.5,
            0.024285185; 6,0.024281474; 6.5,0.024279358; 7,0.024278379; 7.5,
            0.024278162; 8,0.02427846; 8.5,0.024279106; 9,0.024279984; 9.5,
            0.024281014; 10,0.024282139; 10.5,0.024283321; 11,0.024284532; 11.5,
            0.024285754; 12,0.024286973; 12.5,0.024288182; 13,0.024301127; 13.5,
            0.024302225; 14,0.024305414; 14.5,0.024310561; 15,0.024316785; 15.5,
            0.024323536; 16,0.024330526; 16.5,0.024337598; 17,0.02434466; 17.5,
            0.024351657; 18,0.024358555; 18.5,0.024365332; 19,0.024371977; 19.5,
            0.024378481; 20,0.024384841; 20.5,0.024391055; 21,0.024397122],
          smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
        annotation (Placement(transformation(extent={{-98,-94},{-78,-74}})));
      Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,0;
            1,0; 1.5,0.000922072; 2,-0.002003474; 2.5,-0.000623297; 3,-0.001029937;
            3.5,-0.002167308; 4,-0.003618844; 4.5,-0.005313508; 5,-0.007180519;
            5.5,-0.009152941; 6,-0.011181594; 6.5,-0.01323276; 7,-0.015283462;
            7.5,-0.017318074; 8,-0.019326068; 8.5,-0.021300474; 9,-0.023236801;
            9.5,-0.02513228; 10,-0.026985341; 10.5,-0.028795238; 11,-0.030561796;
            11.5,-0.032285229; 12,-0.033966015; 12.5,-0.035604807; 13,-0.036444876;
            13.5,-0.03686358; 14,-0.037073175; 14.5,-0.037178802; 15,-0.037232902;
            15.5,-0.037261466; 16,-0.037277341; 16.5,-0.037286874; 17,-0.037293207;
            17.5,-0.037297902; 18,-0.037301735; 18.5,-0.037305093; 19,-0.037308174;
            19.5,-0.037311076; 20,-0.037313851; 20.5,-0.037316528; 21,-0.037319122],
          smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
        annotation (Placement(transformation(extent={{-98,-120},{-78,-100}})));
    equation

    // OUT1 = G2.gen.w;
    // OUT2 = G2.gen.delta;
    // OUT3 = G2.gen.Epq;
    // OUT4 = G2.gen.PSIkd;
    // OUT5 = G2.gen.PSIppq;
    // OUT6 = G2.sEXSMPC.simpleLagLim.state;
    // OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
    // OUT8 = G2.gASTMPC.simpleLagLim.state;
    // OUT9 = G2.gASTMPC.simpleLag.state;
    // OUT10 = G2.gASTMPC.simpleLag1.state;
    // OUT11 = PV.rEGCA1_1.simpleLag.state;
    // OUT12 = PV.rEGCA1_1.integrator.y;
    // OUT13 = PV.rEGCA1_1.integrator1.y;
    // OUT14 =PV.EC.IGQ.y;
    // OUT15 =PV.EC.IGV.y;
    // OUT16 =PV.EC.simpleLag.state;
    // OUT17 =PV.EC.simpleLag1.state;
    // OUT18 =PV.EC.simpleLag2.state;
    // OUT19 =PV.EC.IGP.y;
    // OUT20 =PV.EC.simpleLag3.state;
    // OUT21 =PV.EC.simpleLag4.state;
    // OUT22 =PV.EC.simpleLag5.state;
    // OUT23 = BESS.rEGCA1_1.simpleLag.state;
    // OUT24 = BESS.rEGCA1_1.integrator.y;
    // OUT25 = BESS.rEGCA1_1.integrator1.y;
    // OUT26 =BESS.EC.integrator3.y;
    // OUT27 =BESS.EC.integrator1.y;
    // OUT28 =BESS.EC.simpleLag.state;
    // OUT29 =BESS.EC.IGQ.y;
    // OUT30 =BESS.EC.IGV.y;
    // OUT31 =BESS.EC.IGP.y;
    // OUT32 =BESS.EC.simpleLag1.state;
    // OUT33 =BESS.EC.simpleLag2.state;
    // OUT34 =BESS.EC.simpleLag3.state;
    // OUT35 =BESS.EC.simpleLag4.state;
    // OUT36 = G2.gen.PMECH;
    // OUT37 = G2.sEXSMPC.EFD;
    // OUT38 = BESS.rEGCA1_1.Pgen;
    // OUT39 = BESS.rEGCA1_1.Qgen;
    // OUT40 = PV.rEGCA1_1.Pgen;
    // OUT41 = PV.rEGCA1_1.Qgen;
    // OUT42 = Bus5.v;
    // OUT43 = Bus5.angle;

    OUT1 = G2.gen.w;
    OUT2 = G2.gen.delta;
    OUT3 = G2.gen.Epq;
    OUT4 = G2.gen.PSIkd;
    OUT5 = G2.gen.PSIppq;
    OUT6 = G2.sEXSMPC.simpleLagLim.state;
    OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
    OUT8 = G2.gASTMPC.simpleLagLim.state;
    OUT9 = G2.gASTMPC.simpleLag.state;
    OUT10 = G2.gASTMPC.simpleLag1.state;
    OUT11 = PV.rEGCA1_1.simpleLag.state;
    OUT12 = PV.rEGCA1_1.integrator.y;
    OUT13 = PV.rEGCA1_1.integrator1.y;
    OUT14 =PV.EC.IGQ.y;
    OUT15 =PV.EC.IGV.y;
    OUT16 =PV.EC.simpleLag.state;
    OUT17 =PV.EC.simpleLag1.state;
    OUT18 =PV.EC.simpleLag2.state;
    OUT19 =PV.EC.IGP.y;
    OUT20 =PV.EC.simpleLag3.state;
    OUT21 =PV.EC.simpleLag5.state;
    OUT22 = PV.EC.simpleLag4.state;
    OUT23 = BESS.rEGCA1_1.simpleLag.state;
    OUT24 = BESS.rEGCA1_1.integrator.y;
    OUT25 = BESS.rEGCA1_1.integrator1.y;
    OUT26 =BESS.EC.integrator3.y;
    OUT27 =BESS.EC.simpleLag.state;
    OUT28 =BESS.EC.IGQ.y;
    OUT29 =BESS.EC.IGV.y;
    OUT30 =BESS.EC.IGP.y;
    OUT31 =BESS.EC.simpleLag1.state;
    OUT32 =BESS.EC.simpleLag2.state;
    OUT33 =BESS.EC.simpleLag3.state;
    OUT34 =BESS.EC.simpleLag4.state;
    OUT35 = G2.gen.PMECH;
    OUT36 = G2.sEXSMPC.EFD;
    OUT37 = BESS.rEGCA1_1.Pgen;
    OUT38 = BESS.rEGCA1_1.Qgen;
    OUT39 = PV.rEGCA1_1.Pgen;
    OUT40 = PV.rEGCA1_1.Qgen;
    OUT41 = Bus5.v;
    OUT42 = Bus5.angle;

      connect(T1.p, Bus2.p)
        annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
      connect(Bus1.p, T1.n)
        annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
      connect(G1.conn, Bus1.p)
        annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
      connect(L1.n, Bus3.p)
        annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
      connect(L1.p, Bus2.p)
        annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
      connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
              80}}, color={0,0,255}));
      connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
              80}}, color={0,0,255}));
      connect(Load1.p, Bus3.p)
        annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
      connect(L3.p, Bus4.p)
        annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
      connect(breaker.s, Bus5.p)
        annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

      connect(IB.p, Bus4.p)
        annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
      connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
              80,16}},
                   color={0,0,255}));
      connect(T4.n, Bus10.p)
        annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
      connect(Bus6.p, T2.n)
        annotation (Line(points={{-10,10},{-1,10}},
                                                color={0,0,255}));
      connect(BESS.p1, Bus10.p)
        annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
      connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                         color={0,0,255}));
      connect(PV.p1, Bus8.p)
        annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
      connect(Bus8.p, T3.n)
        annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
      connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
              10}}, color={0,0,255}));
      connect(T3.p, Bus9.p)
        annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
      connect(T4.p, Bus11.p)
        annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
      connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
              {80,16}},     color={0,0,255}));
      connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus11.p, L6.p)
        annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
      connect(Bus9.p, L5.p)
        annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
      connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
              10}}, color={0,0,255}));
      connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
            color={0,0,127}));
      connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
              {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
      connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
              -14.5},{101.9,-14.5}}, color={0,0,127}));
      connect(combiTimeTable.y[1], G2.P_ref1)
        annotation (Line(points={{-77,16},{-42,16}}, color={0,0,127}));
      connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-77,
              -10},{-52,-10},{-52,4},{-42,4}}, color={0,0,127}));
      connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-77,
              -38},{-50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
      connect(combiTimeTable3.y[1], BESS.Paux1)
        annotation (Line(points={{-77,-84},{-42,-84}}, color={0,0,127}));
      connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-77,
              -110},{-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
        annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                    Placement(transformation(extent={{140,-40},{160,-20}})),
                    Placement(transformation(extent={{140,-60},{160,-40}})),
                    Placement(transformation(extent={{140,-80},{160,-60}})),
                   Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-140},{140,140}}), graphics={
            Rectangle(
              extent={{130,98},{252,-124}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,98},{124,38}},
              lineColor={0,128,255},
              lineThickness=0.5),
            Text(
              extent={{78,-106},{114,-120}},
              textColor={238,46,47},
              textString="Microgrid"),
            Text(
              extent={{76,58},{128,34}},
              textColor={28,108,200},
              textString="Utility Grid"),
            Text(
              extent={{-30,-102},{34,-124}},
              textColor={0,140,72},
              textString="Linearization Unit"),
            Text(
              extent={{128,118},{168,98}},
              textColor={0,140,72},
              textString="Outputs")}),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(
          StopTime=10,
          Interval=0.0001,
          __Dymola_Algorithm="Dassl"),
        Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
    end MPCAppliedEnergyOriginal_TABLE;

    model Microgrid_with_simplified_renewable_Signal_Generator_Kalman_Filter
      "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
      extends Modelica.Icons.Example;

      parameter Boolean equivalentGRID = true;
      parameter Boolean equivalentsystem = false;

      OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=180,
            origin={-60,80})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        enableV_b=true,
        v_0=powerFlow.powerflow.bus.V1,
        angle_0=powerFlow.powerflow.bus.A1,
        P_0=powerFlow.powerflow.machines.PG1,
        Q_0=powerFlow.powerflow.machines.QG1,
        V_b=6000)  if not equivalentGRID
        annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                {-14,84}})));
      OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
            powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
            powerFlow.powerflow.bus.V4) if not equivalentGRID
        annotation (Placement(transformation(extent={{50,70},{70,90}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                {36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                {36,74}})));
      OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
            powerFlow.powerflow.bus.V5)  annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,16})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,60})));
      OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
            powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,10})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000,
        R=0.005,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,10})));
      GenerationUnits.PSSE.G2_16MVA                         G2(
        enableV_b=true,
        enableP_0=true,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V6,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A6,
        V_b=6000,
        P_0=powerFlow.powerflow.machines.PG2,
        Q_0=powerFlow.powerflow.machines.QG2,
        enableangle_0=true)
                      annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-30,10})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
        annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
      OpenIPSL.Electrical.Loads.PSSE.Load Load1(
        V_b=220000,
        P_0=powerFlow.powerflow.loads.PL1,
        Q_0=powerFlow.powerflow.loads.QL1,
        v_0=powerFlow.powerflow.bus.V3,
        angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-20,48},{0,68}})));
      Electrical.Events.Breaker breaker(enableTrigger=false,
        t_o=0.5,
        rc_enabled=true,
        t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,26})));

      PFData.PowerFlow powerFlow(redeclare record PowerFlow =
            OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
        annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
      Electrical.Machines.PSSE.GENCLS IB(
        V_b=220000,
        v_0=powerFlow.powerflow.bus.V4,
        angle_0=powerFlow.powerflow.bus.A4,
        P_0=powerFlow.powerflow.machines.Pinf,
        Q_0=powerFlow.powerflow.machines.Qinf,
        M_b=100000000,
        X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                {100,90}})));
      Electrical.Loads.PSSE.Load_ExtInput Load2(
        P_0=powerFlow.powerflow.loads.PL2,
        Q_0=powerFlow.powerflow.loads.QL2,
        v_0=powerFlow.powerflow.bus.V5,
        angle_0=powerFlow.powerflow.bus.A5,
        d_P=0,
        t1=100,
        d_t=1000)
        annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

      inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
          fixedSeed=10000)
        annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

      Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-90})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T4(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-90})));
      GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
        V_b=480,
        P_0=powerFlow.powerflow.machines.PPV,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QPV,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V8,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A8,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

      GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                               BESS(
        V_base=480,
        V_b(displayUnit="kV") = 480,
        enableV_b=true,
        P_0=powerFlow.powerflow.machines.PBESS,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QBESS,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V10,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A10,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
      Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-50})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T3(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={12,-50})));
      Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-90})));
      Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-50})));
      Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,10})));
      Electrical.Branches.PwLine          L4(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,6},{
                50,14}})));
      Electrical.Branches.PwLine          L5(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-54},
                {50,-46}})));
      Electrical.Branches.PwLine          L6(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-94},
                {50,-86}})));
      Modelica.Blocks.Sources.Sine sine(
        amplitude=0,
        f=1/260,
        phase=3.1415926535898,
        startTime=1000)
        annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
      Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
          active_sigma=0.0000000001, samplePeriod=0.01)
        annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT1
        annotation (Placement(transformation(extent={{140,70},{160,90}})));
     Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT3
        annotation (Placement(transformation(extent={{140,30},{160,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT4
        annotation (Placement(transformation(extent={{140,10},{160,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT5
        annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT6
        annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT7
        annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT8
        annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT9
        annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT10
        annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT11
        annotation (Placement(transformation(extent={{164,70},{184,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT12
        annotation (Placement(transformation(extent={{164,50},{184,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT13
        annotation (Placement(transformation(extent={{164,30},{184,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT14
        annotation (Placement(transformation(extent={{164,10},{184,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT15
        annotation (Placement(transformation(extent={{164,-10},{184,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT16
        annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT17
        annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT18
        annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT19
        annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT20
        annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT21
        annotation (Placement(transformation(extent={{184,70},{204,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT22
        annotation (Placement(transformation(extent={{184,50},{204,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT23
        annotation (Placement(transformation(extent={{184,30},{204,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT24
        annotation (Placement(transformation(extent={{184,10},{204,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT25
        annotation (Placement(transformation(extent={{184,-10},{204,10}})));
    equation

    OUT1 = G2.gen.w;
    OUT2 = G2.gen.delta;
    OUT3 = G2.gen.Epq;
    OUT4 = G2.gen.PSIkd;
    OUT5 = G2.gen.PSIppq;
    OUT6 = G2.sEXSMPC.simpleLagLim.state;
    OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
    OUT8 = G2.gASTMPC.simpleLagLim.state;
    OUT9 = G2.gASTMPC.simpleLag.state;
    OUT10 = G2.gASTMPC.simpleLag1.state;

    // OUT1 = G2.gen.w;
    // OUT2 = G2.gen.delta;
    // OUT3 = G2.gen.P;
    // OUT4 = G2.gen.Q;
    // OUT5 = G2.gen.p.ir;
    // OUT6 = G2.gen.p.ii;
    // OUT7 = G2.gen.PMECH;
    // OUT8 = G2.sEXSMPC.EFD;
    // OUT9 = G2.gASTMPC.simpleLag1.y;
    OUT11 = Bus6.v;

    OUT12 =PV.rEGCA1_1.Pgen;
    OUT13 =PV.rEGCA1_1.Qgen;
    OUT14 =PV.rEGCA1_1.p.ir;
    OUT15 =PV.rEGCA1_1.p.ii;
    OUT16 = Bus8.v;


    OUT17 =BESS.rEGCA1_1.Pgen;
    OUT18 =BESS.rEGCA1_1.Qgen;
    OUT19 =BESS.rEGCA1_1.p.ir;
    OUT20 =BESS.rEGCA1_1.p.ii;
    OUT21 = Bus10.v;

    OUT22 = Load2.P;
    OUT23 = Load2.Q;

    OUT24 = Bus5.v;
    OUT25 = Bus5.angle;

      connect(T1.p, Bus2.p)
        annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
      connect(Bus1.p, T1.n)
        annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
      connect(G1.conn, Bus1.p)
        annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
      connect(L1.n, Bus3.p)
        annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
      connect(L1.p, Bus2.p)
        annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
      connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
              80}}, color={0,0,255}));
      connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
              80}}, color={0,0,255}));
      connect(Load1.p, Bus3.p)
        annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
      connect(L3.p, Bus4.p)
        annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
      connect(breaker.s, Bus5.p)
        annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

      connect(IB.p, Bus4.p)
        annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
      connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
              80,16}},
                   color={0,0,255}));
      connect(T4.n, Bus10.p)
        annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
      connect(Bus6.p, T2.n)
        annotation (Line(points={{-10,10},{-1,10}},
                                                color={0,0,255}));
      connect(BESS.p1, Bus10.p)
        annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
      connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                         color={0,0,255}));
      connect(PV.p1, Bus8.p)
        annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
      connect(Bus8.p, T3.n)
        annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
      connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
              10}}, color={0,0,255}));
      connect(T3.p, Bus9.p)
        annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
      connect(T4.p, Bus11.p)
        annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
      connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
              {80,16}},     color={0,0,255}));
      connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus11.p, L6.p)
        annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
      connect(Bus9.p, L5.p)
        annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
      connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
              10}}, color={0,0,255}));
      connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
              {83.2,-16.4}}, color={0,0,127}));
      connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
              -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
              127}));
      connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
              {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                    Placement(transformation(extent={{140,-40},{160,-20}})),
                    Placement(transformation(extent={{140,-60},{160,-40}})),
                    Placement(transformation(extent={{140,-80},{160,-60}})),
                   Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-140},{140,140}}), graphics={
            Rectangle(
              extent={{-128,98},{124,38}},
              lineColor={0,128,255},
              lineThickness=0.5),
            Text(
              extent={{78,-106},{114,-120}},
              textColor={238,46,47},
              textString="Microgrid"),
            Text(
              extent={{76,58},{128,34}},
              textColor={28,108,200},
              textString="Utility Grid"),
            Text(
              extent={{-30,-102},{34,-124}},
              textColor={0,140,72},
              textString="Linearization Unit")}),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(
          StopTime=5,
          __Dymola_NumberOfIntervals=1000,
          __Dymola_Algorithm="Dassl"),
        Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
    end Microgrid_with_simplified_renewable_Signal_Generator_Kalman_Filter;

    model Microgrid_with_simplified_renewable_no_outputs
      "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
      extends Modelica.Icons.Example;

      parameter Boolean equivalentGRID = true;
      parameter Boolean equivalentsystem = false;

      OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=180,
            origin={-60,80})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        enableV_b=true,
        v_0=powerFlow.powerflow.bus.V1,
        angle_0=powerFlow.powerflow.bus.A1,
        P_0=powerFlow.powerflow.machines.PG1,
        Q_0=powerFlow.powerflow.machines.QG1,
        V_b=6000)  if not equivalentGRID
        annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                {-14,84}})));
      OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
            powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
            powerFlow.powerflow.bus.V4) if not equivalentGRID
        annotation (Placement(transformation(extent={{50,70},{70,90}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                {36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                {36,74}})));
      OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
            powerFlow.powerflow.bus.V5)  annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,16})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,60})));
      OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
            powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,10})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000,
        R=0.005,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,10})));
      GenerationUnits.PSSE.G2_16MVA                         G2(
        enableV_b=true,
        enableP_0=true,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V6,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A6,
        V_b=6000,
        P_0=powerFlow.powerflow.machines.PG2,
        Q_0=powerFlow.powerflow.machines.QG2,
        enableangle_0=true)
                      annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-30,10})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
        annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
      OpenIPSL.Electrical.Loads.PSSE.Load Load1(
        V_b=220000,
        P_0=powerFlow.powerflow.loads.PL1,
        Q_0=powerFlow.powerflow.loads.QL1,
        v_0=powerFlow.powerflow.bus.V3,
        angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-20,48},{0,68}})));
      Electrical.Events.Breaker breaker(enableTrigger=false,
        t_o=0.5,
        rc_enabled=true,
        t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,26})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
      Modelica.Blocks.Sources.Constant IN22(k=0)
        annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
      Modelica.Blocks.Math.Add AddU2
        annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
      Modelica.Blocks.Interfaces.RealInput IN2(start=0)
        "Connector of Real input signal 2"
               annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
              origin={-150,-12})));

      Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
            iconTransformation(extent={{-160,-44},{-140,-24}})));
      Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
            iconTransformation(extent={{-160,-66},{-140,-46}})));
      Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
            iconTransformation(extent={{-160,-88},{-140,-68}})));

      PFData.PowerFlow powerFlow(redeclare record PowerFlow =
            OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
        annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
      Electrical.Machines.PSSE.GENCLS IB(
        V_b=220000,
        v_0=powerFlow.powerflow.bus.V4,
        angle_0=powerFlow.powerflow.bus.A4,
        P_0=powerFlow.powerflow.machines.Pinf,
        Q_0=powerFlow.powerflow.machines.Qinf,
        M_b=100000000,
        X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                {100,90}})));
      Electrical.Loads.PSSE.Load_ExtInput Load2(
        P_0=powerFlow.powerflow.loads.PL2,
        Q_0=powerFlow.powerflow.loads.QL2,
        v_0=powerFlow.powerflow.bus.V5,
        angle_0=powerFlow.powerflow.bus.A5,
        d_P=0,
        t1=100,
        d_t=1000)
        annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

      inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
          fixedSeed=10000)
        annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

      Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-90})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T4(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-90})));
      GenerationUnits.PSSE.Solar_Units.SolarMPCSysIdentification
                                                              PV(
        V_b=480,
        P_0=powerFlow.powerflow.machines.PPV,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QPV,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V8,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A8,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
      Modelica.Blocks.Math.Add AddU3
        annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
      Modelica.Blocks.Sources.Constant IN33(k=0)
        annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

      Modelica.Blocks.Math.Add AddU4
        annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
      Modelica.Blocks.Math.Add AddU5
        annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
      Modelica.Blocks.Sources.Constant IN44(k=0)
        annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
      Modelica.Blocks.Sources.Constant IN55(k=0)
        annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
      GenerationUnits.PSSE.Battery_Units.BESSMPCSysIdentification
                                                               BESS(
        V_base=480,
        V_b(displayUnit="kV") = 480,
        enableV_b=true,
        P_0=powerFlow.powerflow.machines.PBESS,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QBESS,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V10,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A10,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
      Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-50})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T3(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={12,-50})));
      Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-90})));
      Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-50})));
      Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,10})));
      Electrical.Branches.PwLine          L4(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,6},{
                50,14}})));
      Electrical.Branches.PwLine          L5(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-54},
                {50,-46}})));
      Electrical.Branches.PwLine          L6(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-94},
                {50,-86}})));
      Modelica.Blocks.Sources.Sine sine(
        amplitude=0,
        f=1/260,
        phase=3.1415926535898,
        startTime=1000)
        annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
      Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
          active_sigma=0.0000000001, samplePeriod=0.01)
        annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
    equation


      connect(T1.p, Bus2.p)
        annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
      connect(Bus1.p, T1.n)
        annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
      connect(G1.conn, Bus1.p)
        annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
      connect(L1.n, Bus3.p)
        annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
      connect(L1.p, Bus2.p)
        annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
      connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
              80}}, color={0,0,255}));
      connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
              80}}, color={0,0,255}));
      connect(Load1.p, Bus3.p)
        annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
      connect(L3.p, Bus4.p)
        annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
      connect(breaker.s, Bus5.p)
        annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                          color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
              {-82,16}},
                     color={0,0,127}));

      connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                     color={0,0,127}));
      connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
              {-82,-14}},
                     color={0,0,127}));
      connect(AddU2.y, G2.Efd_ref)
        annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                               color={0,0,127}));
      connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
              {-42,16}},                          color={0,0,127}));
      connect(IB.p, Bus4.p)
        annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
      connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
              80,16}},
                   color={0,0,255}));
      connect(T4.n, Bus10.p)
        annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
      connect(Bus6.p, T2.n)
        annotation (Line(points={{-10,10},{-1,10}},
                                                color={0,0,255}));
      connect(IN33.y,AddU3. u2)
        annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
      connect(BESS.p1, Bus10.p)
        annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
      connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
              -80},{-59,-80}}, color={0,0,127}));
      connect(IN55.y, AddU5.u2)
        annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
      connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
              -96},{-42,-96}},   color={0,0,127}));
      connect(IN44.y, AddU4.u2)
        annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
      connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
              {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
      connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
              {-150,-78}}, color={0,0,127}));
      connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                         color={0,0,255}));
      connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
              {-150,-34}}, color={0,0,127}));
      connect(PV.p1, Bus8.p)
        annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
      connect(Bus8.p, T3.n)
        annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
      connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
              10}}, color={0,0,255}));
      connect(T3.p, Bus9.p)
        annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
      connect(T4.p, Bus11.p)
        annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
      connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
              {80,16}},     color={0,0,255}));
      connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus11.p, L6.p)
        annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
      connect(Bus9.p, L5.p)
        annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
      connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
              10}}, color={0,0,255}));
      connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
              {83.2,-16.4}}, color={0,0,127}));
      connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
              -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
              127}));
      connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
              {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
      connect(PV.Qref, AddU3.y) annotation (Line(points={{-42,-56},{-54,-56},{-54,-50},
              {-59,-50}}, color={0,0,127}));
        annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                    Placement(transformation(extent={{140,-40},{160,-20}})),
                    Placement(transformation(extent={{140,-60},{160,-40}})),
                    Placement(transformation(extent={{140,-80},{160,-60}})),
                   Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-140},{140,140}}), graphics={
            Rectangle(
              extent={{-160,30},{-134,-90}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,36},{124,-124}},
              lineColor={238,46,47},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,98},{124,38}},
              lineColor={0,128,255},
              lineThickness=0.5),
            Text(
              extent={{78,-106},{114,-120}},
              textColor={238,46,47},
              textString="Microgrid"),
            Text(
              extent={{76,58},{128,34}},
              textColor={28,108,200},
              textString="Utility Grid"),
            Text(
              extent={{-30,-102},{34,-124}},
              textColor={0,140,72},
              textString="Linearization Unit"),
            Text(
              extent={{-164,50},{-132,30}},
              textColor={0,140,72},
              textString="Inputs")}),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(
          StopTime=10,
          __Dymola_NumberOfIntervals=10000,
          __Dymola_Algorithm="Dassl"),
        Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
    end Microgrid_with_simplified_renewable_no_outputs;

    model Microgrid_with_simplified_renewable_V1
      "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
      extends Modelica.Icons.Example;

      parameter Boolean equivalentGRID = true;
      parameter Boolean equivalentsystem = false;

      OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=180,
            origin={-60,80})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        enableV_b=true,
        v_0=powerFlow.powerflow.bus.V1,
        angle_0=powerFlow.powerflow.bus.A1,
        P_0=powerFlow.powerflow.machines.PG1,
        Q_0=powerFlow.powerflow.machines.QG1,
        V_b=6000)  if not equivalentGRID
        annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                {-14,84}})));
      OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
            powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
            powerFlow.powerflow.bus.V4) if not equivalentGRID
        annotation (Placement(transformation(extent={{50,70},{70,90}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                {36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                {36,74}})));
      OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
            powerFlow.powerflow.bus.V5)  annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,16})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,60})));
      OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
            powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,10})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000,
        R=0.005,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,10})));
      GenerationUnits.PSSE.G2_16MVA                         G2(
        enableV_b=true,
        enableP_0=true,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V6,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A6,
        V_b=6000,
        P_0=powerFlow.powerflow.machines.PG2,
        Q_0=powerFlow.powerflow.machines.QG2,
        enableangle_0=true)
                      annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-30,10})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
        annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
      OpenIPSL.Electrical.Loads.PSSE.Load Load1(
        V_b=220000,
        P_0=powerFlow.powerflow.loads.PL1,
        Q_0=powerFlow.powerflow.loads.QL1,
        v_0=powerFlow.powerflow.bus.V3,
        angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-20,48},{0,68}})));
      Electrical.Events.Breaker breaker(enableTrigger=false,
        t_o=0.5,
        rc_enabled=true,
        t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,26})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
      Modelica.Blocks.Sources.Constant IN22(k=0)
        annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
      Modelica.Blocks.Math.Add AddU2
        annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
      Modelica.Blocks.Interfaces.RealInput IN2(start=0)
        "Connector of Real input signal 2"
               annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
              origin={-150,-12})));

      Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
            iconTransformation(extent={{-160,-44},{-140,-24}})));
      Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
            iconTransformation(extent={{-160,-66},{-140,-46}})));
      Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
            iconTransformation(extent={{-160,-88},{-140,-68}})));

      PFData.PowerFlow powerFlow(redeclare record PowerFlow =
            OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
        annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
      Electrical.Machines.PSSE.GENCLS IB(
        V_b=220000,
        v_0=powerFlow.powerflow.bus.V4,
        angle_0=powerFlow.powerflow.bus.A4,
        P_0=powerFlow.powerflow.machines.Pinf,
        Q_0=powerFlow.powerflow.machines.Qinf,
        M_b=100000000,
        X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                {100,90}})));
      Electrical.Loads.PSSE.Load_ExtInput Load2(
        P_0=powerFlow.powerflow.loads.PL2,
        Q_0=powerFlow.powerflow.loads.QL2,
        v_0=powerFlow.powerflow.bus.V5,
        angle_0=powerFlow.powerflow.bus.A5,
        d_P=0,
        t1=100,
        d_t=1000)
        annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

      inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
          fixedSeed=10000)
        annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

      Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-90})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T4(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-90})));
      GenerationUnits.PSSE.Solar_Units.SolarMPCSysIdentification
                                                              PV(
        V_b=480,
        P_0=powerFlow.powerflow.machines.PPV,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QPV,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V8,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A8,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
      Modelica.Blocks.Math.Add AddU3
        annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
      Modelica.Blocks.Sources.Constant IN33(k=0)
        annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

      Modelica.Blocks.Math.Add AddU4
        annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
      Modelica.Blocks.Math.Add AddU5
        annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
      Modelica.Blocks.Sources.Constant IN44(k=0)
        annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
      Modelica.Blocks.Sources.Constant IN55(k=0)
        annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
      GenerationUnits.PSSE.Battery_Units.BESSMPCSysIdentification
                                                               BESS(
        V_base=480,
        V_b(displayUnit="kV") = 480,
        enableV_b=true,
        P_0=powerFlow.powerflow.machines.PBESS,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QBESS,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V10,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A10,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
      Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-50})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T3(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={12,-50})));
      Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-90})));
      Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-50})));
      Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,10})));
      Electrical.Branches.PwLine          L4(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,6},{
                50,14}})));
      Electrical.Branches.PwLine          L5(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-54},
                {50,-46}})));
      Electrical.Branches.PwLine          L6(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-94},
                {50,-86}})));
      Modelica.Blocks.Sources.Sine sine(
        amplitude=0,
        f=1/260,
        phase=3.1415926535898,
        startTime=1000)
        annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
      Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
          active_sigma=0.0000000001, samplePeriod=0.01)
        annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT1
        annotation (Placement(transformation(extent={{140,70},{160,90}})));
     Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT3
        annotation (Placement(transformation(extent={{140,30},{160,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT4
        annotation (Placement(transformation(extent={{140,10},{160,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT5
        annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT6
        annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT7
        annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT8
        annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT9
        annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT10
        annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT11
        annotation (Placement(transformation(extent={{164,70},{184,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT12
        annotation (Placement(transformation(extent={{164,50},{184,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT13
        annotation (Placement(transformation(extent={{164,30},{184,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT14
        annotation (Placement(transformation(extent={{164,10},{184,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT15
        annotation (Placement(transformation(extent={{164,-10},{184,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT16
        annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT17
        annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT18
        annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT19
        annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT20
        annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT21
        annotation (Placement(transformation(extent={{184,70},{204,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT22
        annotation (Placement(transformation(extent={{184,50},{204,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT23
        annotation (Placement(transformation(extent={{184,30},{204,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT24
        annotation (Placement(transformation(extent={{184,10},{204,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT25
        annotation (Placement(transformation(extent={{184,-10},{204,10}})));
    equation

    OUT1 = G2.gen.w;
    OUT2 = G2.gen.delta;
    OUT3 = G2.gen.Epq;
    OUT4 = G2.gen.PSIkd;
    OUT5 = G2.gen.PSIppq;
    OUT6 = G2.sEXSMPC.simpleLagLim.state;
    OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
    OUT8 = G2.gASTMPC.simpleLagLim.state;
    OUT9 = G2.gASTMPC.simpleLag.state;
    OUT10 = G2.gASTMPC.simpleLag1.state;

    // OUT1 = G2.gen.w;
    // OUT2 = G2.gen.delta;
    // OUT3 = G2.gen.P;
    // OUT4 = G2.gen.Q;
    // OUT5 = G2.gen.p.ir;
    // OUT6 = G2.gen.p.ii;
    // OUT7 = G2.gen.PMECH;
    // OUT8 = G2.sEXSMPC.EFD;
    // OUT9 = G2.gASTMPC.simpleLag1.y;
    OUT11 = Bus6.v;

    OUT12 =PV.rEGCA1_1.Pgen;
    OUT13 =PV.rEGCA1_1.Qgen;
    OUT14 =PV.rEGCA1_1.p.ir;
    OUT15 =PV.rEGCA1_1.p.ii;
    OUT16 = Bus8.v;

    OUT17 =BESS.rEGCA1_1.Pgen;
    OUT18 =BESS.rEGCA1_1.Qgen;
    OUT19 =BESS.rEGCA1_1.p.ir;
    OUT20 =BESS.rEGCA1_1.p.ii;
    OUT21 = Bus10.v;

    OUT22 = Load2.P;
    OUT23 = Load2.Q;

    OUT24 = Bus5.v;
    OUT25 = Bus5.angle;

      connect(T1.p, Bus2.p)
        annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
      connect(Bus1.p, T1.n)
        annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
      connect(G1.conn, Bus1.p)
        annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
      connect(L1.n, Bus3.p)
        annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
      connect(L1.p, Bus2.p)
        annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
      connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
              80}}, color={0,0,255}));
      connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
              80}}, color={0,0,255}));
      connect(Load1.p, Bus3.p)
        annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
      connect(L3.p, Bus4.p)
        annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
      connect(breaker.s, Bus5.p)
        annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                          color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
              {-82,16}},
                     color={0,0,127}));

      connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                     color={0,0,127}));
      connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
              {-82,-14}},
                     color={0,0,127}));
      connect(AddU2.y, G2.Efd_ref)
        annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                               color={0,0,127}));
      connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
              {-42,16}},                          color={0,0,127}));
      connect(IB.p, Bus4.p)
        annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
      connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
              80,16}},
                   color={0,0,255}));
      connect(T4.n, Bus10.p)
        annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
      connect(Bus6.p, T2.n)
        annotation (Line(points={{-10,10},{-1,10}},
                                                color={0,0,255}));
      connect(IN33.y,AddU3. u2)
        annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
      connect(BESS.p1, Bus10.p)
        annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
      connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
              -80},{-59,-80}}, color={0,0,127}));
      connect(IN55.y, AddU5.u2)
        annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
      connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
              -96},{-42,-96}},   color={0,0,127}));
      connect(IN44.y, AddU4.u2)
        annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
      connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
              {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
      connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
              {-150,-78}}, color={0,0,127}));
      connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                         color={0,0,255}));
      connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
              {-150,-34}}, color={0,0,127}));
      connect(PV.p1, Bus8.p)
        annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
      connect(Bus8.p, T3.n)
        annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
      connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
              10}}, color={0,0,255}));
      connect(T3.p, Bus9.p)
        annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
      connect(T4.p, Bus11.p)
        annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
      connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
              {80,16}},     color={0,0,255}));
      connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus11.p, L6.p)
        annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
      connect(Bus9.p, L5.p)
        annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
      connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
              10}}, color={0,0,255}));
      connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
              {83.2,-16.4}}, color={0,0,127}));
      connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
              -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
              127}));
      connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
              {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
      connect(PV.Qref, AddU3.y) annotation (Line(points={{-42,-56},{-54,-56},{-54,-50},
              {-59,-50}}, color={0,0,127}));
        annotation(Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-140},{140,140}}), graphics={
            Rectangle(
              extent={{-160,30},{-134,-90}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,36},{124,-124}},
              lineColor={238,46,47},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,98},{124,38}},
              lineColor={0,128,255},
              lineThickness=0.5),
            Text(
              extent={{78,-106},{114,-120}},
              textColor={238,46,47},
              textString="Microgrid"),
            Text(
              extent={{76,58},{128,34}},
              textColor={28,108,200},
              textString="Utility Grid"),
            Text(
              extent={{-30,-102},{34,-124}},
              textColor={0,140,72},
              textString="Linearization Unit"),
            Text(
              extent={{-164,50},{-132,30}},
              textColor={0,140,72},
              textString="Inputs")}),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(
          StopTime=10,
          __Dymola_NumberOfIntervals=10000,
          __Dymola_Algorithm="Dassl"),
        Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
    end Microgrid_with_simplified_renewable_V1;

    model Microgrid_with_simplified_renewable_V2
      "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
      extends Modelica.Icons.Example;

      parameter Boolean equivalentGRID = true;
      parameter Boolean equivalentsystem = false;

      OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=180,
            origin={-60,80})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        enableV_b=true,
        v_0=powerFlow.powerflow.bus.V1,
        angle_0=powerFlow.powerflow.bus.A1,
        P_0=powerFlow.powerflow.machines.PG1,
        Q_0=powerFlow.powerflow.machines.QG1,
        V_b=6000)  if not equivalentGRID
        annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                {-14,84}})));
      OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
            powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
            powerFlow.powerflow.bus.V4) if not equivalentGRID
        annotation (Placement(transformation(extent={{50,70},{70,90}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                {36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                {36,74}})));
      OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
            powerFlow.powerflow.bus.V5)  annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,16})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,60})));
      OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
            powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,10})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000,
        R=0.005,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,10})));
      GenerationUnits.PSSE.G2_16MVA                         G2(
        enableV_b=true,
        enableP_0=true,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V6,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A6,
        V_b=6000,
        P_0=powerFlow.powerflow.machines.PG2,
        Q_0=powerFlow.powerflow.machines.QG2,
        enableangle_0=true)
                      annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-30,10})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
        annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
      OpenIPSL.Electrical.Loads.PSSE.Load Load1(
        V_b=220000,
        P_0=powerFlow.powerflow.loads.PL1,
        Q_0=powerFlow.powerflow.loads.QL1,
        v_0=powerFlow.powerflow.bus.V3,
        angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-20,48},{0,68}})));
      Electrical.Events.Breaker breaker(enableTrigger=false,
        t_o=0.5,
        rc_enabled=true,
        t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,26})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
      Modelica.Blocks.Sources.Constant IN22(k=0)
        annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
      Modelica.Blocks.Math.Add AddU2
        annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
      Modelica.Blocks.Interfaces.RealInput IN2(start=0)
        "Connector of Real input signal 2"
               annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
              origin={-150,-12})));

      Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
            iconTransformation(extent={{-160,-44},{-140,-24}})));
      Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
            iconTransformation(extent={{-160,-66},{-140,-46}})));
      Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
            iconTransformation(extent={{-160,-88},{-140,-68}})));

      PFData.PowerFlow powerFlow(redeclare record PowerFlow =
            OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
        annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
      Electrical.Machines.PSSE.GENCLS IB(
        V_b=220000,
        v_0=powerFlow.powerflow.bus.V4,
        angle_0=powerFlow.powerflow.bus.A4,
        P_0=powerFlow.powerflow.machines.Pinf,
        Q_0=powerFlow.powerflow.machines.Qinf,
        M_b=100000000,
        X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                {100,90}})));
      Electrical.Loads.PSSE.Load_ExtInput Load2(
        P_0=powerFlow.powerflow.loads.PL2,
        Q_0=powerFlow.powerflow.loads.QL2,
        v_0=powerFlow.powerflow.bus.V5,
        angle_0=powerFlow.powerflow.bus.A5,
        d_P=0,
        t1=100,
        d_t=1000)
        annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

      inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
          fixedSeed=10000)
        annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

      Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-90})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T4(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-90})));
      GenerationUnits.PSSE.Solar_Units.SolarMPCSysIdentification
                                                              PV(
        V_b=480,
        P_0=powerFlow.powerflow.machines.PPV,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QPV,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V8,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A8,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
      Modelica.Blocks.Math.Add AddU3
        annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
      Modelica.Blocks.Sources.Constant IN33(k=0)
        annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

      Modelica.Blocks.Math.Add AddU4
        annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
      Modelica.Blocks.Math.Add AddU5
        annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
      Modelica.Blocks.Sources.Constant IN44(k=0)
        annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
      Modelica.Blocks.Sources.Constant IN55(k=0)
        annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
      GenerationUnits.PSSE.Battery_Units.BESSMPCSysIdentification
                                                               BESS(
        V_base=480,
        V_b(displayUnit="kV") = 480,
        enableV_b=true,
        P_0=powerFlow.powerflow.machines.PBESS,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QBESS,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V10,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A10,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
      Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-50})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T3(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={12,-50})));
      Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-90})));
      Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-50})));
      Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,10})));
      Electrical.Branches.PwLine          L4(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,6},{
                50,14}})));
      Electrical.Branches.PwLine          L5(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-54},
                {50,-46}})));
      Electrical.Branches.PwLine          L6(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-94},
                {50,-86}})));
      Modelica.Blocks.Sources.Sine sine(
        amplitude=0,
        f=1/260,
        phase=3.1415926535898,
        startTime=1000)
        annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
      Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
          active_sigma=0.0000000001, samplePeriod=0.01)
        annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT1
        annotation (Placement(transformation(extent={{140,70},{160,90}})));
     Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT3
        annotation (Placement(transformation(extent={{140,30},{160,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT4
        annotation (Placement(transformation(extent={{140,10},{160,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT5
        annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT6
        annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT7
        annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT8
        annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT9
        annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT10
        annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT11
        annotation (Placement(transformation(extent={{164,70},{184,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT12
        annotation (Placement(transformation(extent={{164,50},{184,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT13
        annotation (Placement(transformation(extent={{164,30},{184,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT14
        annotation (Placement(transformation(extent={{164,10},{184,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT15
        annotation (Placement(transformation(extent={{164,-10},{184,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT16
        annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT17
        annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT18
        annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT19
        annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT20
        annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT21
        annotation (Placement(transformation(extent={{184,70},{204,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT22
        annotation (Placement(transformation(extent={{184,50},{204,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT23
        annotation (Placement(transformation(extent={{184,30},{204,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT24
        annotation (Placement(transformation(extent={{184,10},{204,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT25
        annotation (Placement(transformation(extent={{184,-10},{204,10}})));
    equation

    OUT1 = G2.gen.w;
    OUT2 = G2.gen.delta;
    OUT3 = G2.sEXSMPC.EFD;
    OUT4 = G2.gASTMPC.simpleLag1.state;
    OUT5 = G2.gen.P;
    OUT6 = G2.gen.Q;
    OUT7 = G2.gen.p.ir;
    OUT8 = G2.gen.p.ii;
    OUT9 = G2.gen.PMECH;
    OUT10 = G2.sEXSMPC.EFD;
    OUT11 = Bus6.v;

    OUT12 =PV.rEGCA1_1.Pgen;
    OUT13 =PV.rEGCA1_1.Qgen;
    OUT14 =PV.rEGCA1_1.p.ir;
    OUT15 =PV.rEGCA1_1.p.ii;
    OUT16 = Bus8.v;

    OUT17 =BESS.rEGCA1_1.Pgen;
    OUT18 =BESS.rEGCA1_1.Qgen;
    OUT19 =BESS.rEGCA1_1.p.ir;
    OUT20 =BESS.rEGCA1_1.p.ii;
    OUT21 = Bus10.v;

    OUT22 = Load2.P;
    OUT23 = Load2.Q;

    OUT24 = Bus5.v;
    OUT25 = Bus5.angle;

      connect(T1.p, Bus2.p)
        annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
      connect(Bus1.p, T1.n)
        annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
      connect(G1.conn, Bus1.p)
        annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
      connect(L1.n, Bus3.p)
        annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
      connect(L1.p, Bus2.p)
        annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
      connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
              80}}, color={0,0,255}));
      connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
              80}}, color={0,0,255}));
      connect(Load1.p, Bus3.p)
        annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
      connect(L3.p, Bus4.p)
        annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
      connect(breaker.s, Bus5.p)
        annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                          color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
              {-82,16}},
                     color={0,0,127}));

      connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                     color={0,0,127}));
      connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
              {-82,-14}},
                     color={0,0,127}));
      connect(AddU2.y, G2.Efd_ref)
        annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                               color={0,0,127}));
      connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
              {-42,16}},                          color={0,0,127}));
      connect(IB.p, Bus4.p)
        annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
      connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
              80,16}},
                   color={0,0,255}));
      connect(T4.n, Bus10.p)
        annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
      connect(Bus6.p, T2.n)
        annotation (Line(points={{-10,10},{-1,10}},
                                                color={0,0,255}));
      connect(IN33.y,AddU3. u2)
        annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
      connect(BESS.p1, Bus10.p)
        annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
      connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
              -80},{-59,-80}}, color={0,0,127}));
      connect(IN55.y, AddU5.u2)
        annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
      connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
              -96},{-42,-96}},   color={0,0,127}));
      connect(IN44.y, AddU4.u2)
        annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
      connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
              {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
      connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
              {-150,-78}}, color={0,0,127}));
      connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                         color={0,0,255}));
      connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
              {-150,-34}}, color={0,0,127}));
      connect(PV.p1, Bus8.p)
        annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
      connect(Bus8.p, T3.n)
        annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
      connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
              10}}, color={0,0,255}));
      connect(T3.p, Bus9.p)
        annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
      connect(T4.p, Bus11.p)
        annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
      connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
              {80,16}},     color={0,0,255}));
      connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus11.p, L6.p)
        annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
      connect(Bus9.p, L5.p)
        annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
      connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
              10}}, color={0,0,255}));
      connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
              {83.2,-16.4}}, color={0,0,127}));
      connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
              -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
              127}));
      connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
              {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
      connect(PV.Qref, AddU3.y) annotation (Line(points={{-42,-56},{-54,-56},{-54,-50},
              {-59,-50}}, color={0,0,127}));
        annotation(Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-140},{140,140}}), graphics={
            Rectangle(
              extent={{-160,30},{-134,-90}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,36},{124,-124}},
              lineColor={238,46,47},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,98},{124,38}},
              lineColor={0,128,255},
              lineThickness=0.5),
            Text(
              extent={{78,-106},{114,-120}},
              textColor={238,46,47},
              textString="Microgrid"),
            Text(
              extent={{76,58},{128,34}},
              textColor={28,108,200},
              textString="Utility Grid"),
            Text(
              extent={{-30,-102},{34,-124}},
              textColor={0,140,72},
              textString="Linearization Unit"),
            Text(
              extent={{-164,50},{-132,30}},
              textColor={0,140,72},
              textString="Inputs")}),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(
          StopTime=10,
          __Dymola_NumberOfIntervals=10000,
          __Dymola_Algorithm="Dassl"),
        Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
    end Microgrid_with_simplified_renewable_V2;

    model MPCAppliedEnergyOriginal_V2
      "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
      extends Modelica.Icons.Example;

      parameter Boolean equivalentGRID = false;
      parameter Boolean equivalentsystem = false;

      OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
            powerFlow.powerflow.bus.A1) if not equivalentGRID
        annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
            extent={{-8,-8},{8,8}},
            rotation=180,
            origin={-60,80})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        enableV_b=true,
        v_0=powerFlow.powerflow.bus.V1,
        angle_0=powerFlow.powerflow.bus.A1,
        P_0=powerFlow.powerflow.machines.PG1,
        Q_0=powerFlow.powerflow.machines.QG1,
        V_b=6000)  if not equivalentGRID
        annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                {-14,84}})));
      OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
            powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-10,70},{10,90}})));
      OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
            powerFlow.powerflow.bus.V4) if not equivalentGRID
        annotation (Placement(transformation(extent={{50,70},{70,90}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                {36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                {36,74}})));
      OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
            powerFlow.powerflow.bus.V5)  annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,16})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) if not equivalentGRID annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,60})));
      OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
            powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,10})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=13800,
        VB1=13800,
        VNOM2=6000,
        VB2=6000,
        R=0.005,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,10})));
      GenerationUnits.PSSE.G2_16MVA                         G2(
        enableV_b=true,
        enableP_0=true,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V6,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A6,
        V_b=6000,
        P_0=powerFlow.powerflow.machines.PG2,
        Q_0=powerFlow.powerflow.machines.QG2,
        enableangle_0=true)
                      annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-30,10})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
        annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
      OpenIPSL.Electrical.Loads.PSSE.Load Load1(
        V_b=220000,
        P_0=powerFlow.powerflow.loads.PL1,
        Q_0=powerFlow.powerflow.loads.QL1,
        v_0=powerFlow.powerflow.bus.V3,
        angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
        annotation (Placement(transformation(extent={{-20,48},{0,68}})));
      Electrical.Events.Breaker breaker(enableTrigger=false,
        t_o=0.25,
        rc_enabled=false,
        t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,26})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
      Modelica.Blocks.Sources.Constant IN22(k=0)
        annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
      Modelica.Blocks.Math.Add AddU2
        annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
      Modelica.Blocks.Interfaces.RealInput IN2(start=0)
        "Connector of Real input signal 2"
               annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=0,
            origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
              origin={-150,-12})));
                Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
            iconTransformation(extent={{-160,-44},{-140,-24}})));
      Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
            iconTransformation(extent={{-160,-66},{-140,-46}})));
      Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
        annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
            iconTransformation(extent={{-160,-88},{-140,-68}})));

      Modelica.Blocks.Interfaces.RealOutput OUT1
        annotation (Placement(transformation(extent={{140,70},{160,90}})));
     Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT3
        annotation (Placement(transformation(extent={{140,30},{160,50}})));

      PFData.PowerFlow powerFlow(redeclare record PowerFlow =
            OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
        annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
      Electrical.Machines.PSSE.GENCLS IB(
        V_b=220000,
        v_0=powerFlow.powerflow.bus.V4,
        angle_0=powerFlow.powerflow.bus.A4,
        P_0=powerFlow.powerflow.machines.Pinf,
        Q_0=powerFlow.powerflow.machines.Qinf,
        M_b=100000000,
        X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                {100,90}})));
      Electrical.Loads.PSSE.Load_ExtInput Load2(
        P_0=powerFlow.powerflow.loads.PL2,
        Q_0=powerFlow.powerflow.loads.QL2,
        v_0=powerFlow.powerflow.bus.V5,
        angle_0=powerFlow.powerflow.bus.A5,
        d_P=0,
        t1=100,
        d_t=1000)
        annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

      inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
          fixedSeed=10000)
        annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
      Modelica.Blocks.Sources.Sine sine(
        amplitude=0,
        f=1/260,
        phase=3.1415926535898,
        startTime=1000)
        annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

      Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-90})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T4(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-90})));
      GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
        V_b=480,
        P_0=powerFlow.powerflow.machines.PPV,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QPV,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V8,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A8,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
      Modelica.Blocks.Math.Add AddU3
        annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
      Modelica.Blocks.Sources.Constant IN33(k=0)
        annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

      Modelica.Blocks.Math.Add AddU4
        annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
      Modelica.Blocks.Math.Add AddU5
        annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
      Modelica.Blocks.Sources.Constant IN44(k=0)
        annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
      Modelica.Blocks.Sources.Constant IN55(k=0)
        annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
      Modelica.Blocks.Interfaces.RealOutput OUT4
        annotation (Placement(transformation(extent={{140,10},{160,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT5
        annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT6
        annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT7
        annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT8
        annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT9
        annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT10
        annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT11
        annotation (Placement(transformation(extent={{164,70},{184,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT12
        annotation (Placement(transformation(extent={{164,50},{184,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT13
        annotation (Placement(transformation(extent={{164,30},{184,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT14
        annotation (Placement(transformation(extent={{164,10},{184,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT15
        annotation (Placement(transformation(extent={{164,-10},{184,10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT16
        annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
      Modelica.Blocks.Interfaces.RealOutput OUT17
        annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT18
        annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT19
        annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT20
        annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT21
        annotation (Placement(transformation(extent={{184,70},{204,90}})));
      Modelica.Blocks.Interfaces.RealOutput OUT22
        annotation (Placement(transformation(extent={{184,50},{204,70}})));
      Modelica.Blocks.Interfaces.RealOutput OUT23
        annotation (Placement(transformation(extent={{184,30},{204,50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT24
        annotation (Placement(transformation(extent={{184,10},{204,30}})));
      Modelica.Blocks.Interfaces.RealOutput OUT25
        annotation (Placement(transformation(extent={{184,-10},{204,10}})));
      GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
        V_base=480,
        V_b(displayUnit="kV") = 480,
        enableV_b=true,
        P_0=powerFlow.powerflow.machines.PBESS,
        enableP_0=true,
        Q_0=powerFlow.powerflow.machines.QBESS,
        enableQ_0=true,
        v_0=powerFlow.powerflow.bus.V10,
        enablev_0=true,
        angle_0=powerFlow.powerflow.bus.A10,
        enableangle_0=true)
        annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
      Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-10,-50})));
      Electrical.Branches.PSSE.TwoWindingTransformer          T3(
        G=0,
        B=0,
        CW=1,
        VNOM1=13800,
        VB1=13800,
        VNOM2=480,
        VB2=480,
        R=0.001,
        X=0.1)  annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={12,-50})));
      Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-90})));
      Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,-50})));
      Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={30,10})));
      Electrical.Branches.PwLine          L4(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,6},{
                50,14}})));
      Electrical.Branches.PwLine          L5(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-54},
                {50,-46}})));
      Electrical.Branches.PwLine          L6(
        R=0.01,
        X=0.001,
        G=0,
        B=0)  annotation (Placement(transformation(extent={{38,-94},
                {50,-86}})));
      Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
          active_sigma=0.0000000001, samplePeriod=0.1)
        annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
      Modelica.Blocks.Math.Add add
        annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
    equation

    OUT1 = G2.gen.w;
    OUT2 = G2.gen.delta;
    OUT3 = G2.sEXSMPC.EFD;
    OUT4 = G2.gASTMPC.simpleLag1.state;
    OUT5 = G2.gen.P;
    OUT6 = G2.gen.Q;
    OUT7 = G2.gen.p.ir;
    OUT8 = G2.gen.p.ii;
    OUT9 = G2.gen.PMECH;
    OUT10 = G2.sEXSMPC.EFD;
    OUT11 = Bus6.v;

    OUT12 =PV.rEGCA1_1.Pgen;
    OUT13 =PV.rEGCA1_1.Qgen;
    OUT14 =PV.rEGCA1_1.p.ir;
    OUT15 =PV.rEGCA1_1.p.ii;
    OUT16 = Bus8.v;

    OUT17 =BESS.rEGCA1_1.Pgen;
    OUT18 =BESS.rEGCA1_1.Qgen;
    OUT19 =BESS.rEGCA1_1.p.ir;
    OUT20 =BESS.rEGCA1_1.p.ii;
    OUT21 = Bus10.v;

    OUT22 = Load2.P;
    OUT23 = Load2.Q;

    OUT24 = Bus5.v;
    OUT25 = Bus5.angle;

      connect(T1.p, Bus2.p)
        annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
      connect(Bus1.p, T1.n)
        annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
      connect(G1.conn, Bus1.p)
        annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
      connect(L1.n, Bus3.p)
        annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
      connect(L1.p, Bus2.p)
        annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
      connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
              80}}, color={0,0,255}));
      connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
              80}}, color={0,0,255}));
      connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
              80}}, color={0,0,255}));
      connect(Load1.p, Bus3.p)
        annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
      connect(L3.p, Bus4.p)
        annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
      connect(breaker.s, Bus5.p)
        annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                          color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
              {-82,16}},
                     color={0,0,127}));

      connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                     color={0,0,127}));
      connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
              {-82,-14}},
                     color={0,0,127}));
      connect(AddU2.y, G2.Efd_ref)
        annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                               color={0,0,127}));
      connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
              {-42,16}},                          color={0,0,127}));
      connect(IB.p, Bus4.p)
        annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
      connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
              80,16}},
                   color={0,0,255}));
      connect(T4.n, Bus10.p)
        annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
      connect(Bus6.p, T2.n)
        annotation (Line(points={{-10,10},{-1,10}},
                                                color={0,0,255}));
      connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                               color={0,0,127}));
      connect(IN33.y,AddU3. u2)
        annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
      connect(BESS.p1, Bus10.p)
        annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
      connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
              -80},{-59,-80}}, color={0,0,127}));
      connect(IN55.y, AddU5.u2)
        annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
      connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
              -96},{-42,-96}},   color={0,0,127}));
      connect(IN44.y, AddU4.u2)
        annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
      connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
              {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
      connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
              {-150,-78}}, color={0,0,127}));
      connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                         color={0,0,255}));
      connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
              {-150,-34}}, color={0,0,127}));
      connect(PV.p1, Bus8.p)
        annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
      connect(Bus8.p, T3.n)
        annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
      connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
              10}}, color={0,0,255}));
      connect(T3.p, Bus9.p)
        annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
      connect(T4.p, Bus11.p)
        annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
      connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
              {80,16}},     color={0,0,255}));
      connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus11.p, L6.p)
        annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
      connect(Bus9.p, L5.p)
        annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
      connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
              10},{80,16}}, color={0,0,255}));
      connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
              10}}, color={0,0,255}));
      connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
            color={0,0,127}));
      connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
              {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
      connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
              -14.5},{101.9,-14.5}}, color={0,0,127}));
        annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                    Placement(transformation(extent={{140,-40},{160,-20}})),
                    Placement(transformation(extent={{140,-60},{160,-40}})),
                    Placement(transformation(extent={{140,-80},{160,-60}})),
                   Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-140},{140,140}}), graphics={
            Rectangle(
              extent={{-160,30},{-134,-90}},
              lineColor={0,140,72},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,36},{124,-124}},
              lineColor={238,46,47},
              lineThickness=0.5),
            Rectangle(
              extent={{-128,98},{124,38}},
              lineColor={0,128,255},
              lineThickness=0.5),
            Text(
              extent={{78,-106},{114,-120}},
              textColor={238,46,47},
              textString="Microgrid"),
            Text(
              extent={{76,58},{128,34}},
              textColor={28,108,200},
              textString="Utility Grid"),
            Text(
              extent={{-30,-102},{34,-124}},
              textColor={0,140,72},
              textString="Linearization Unit"),
            Text(
              extent={{-164,50},{-132,30}},
              textColor={0,140,72},
              textString="Inputs"),
            Text(
              extent={{128,118},{168,98}},
              textColor={0,140,72},
              textString="Outputs")}),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(
          StopTime=10,
          Interval=0.0001,
          __Dymola_Algorithm="Dassl"),
        Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
    end MPCAppliedEnergyOriginal_V2;

    package Testing_Kalman_Filter_State_Estimation
      model MPCAppliedEnergyOriginal_v1
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.25,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
                  Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            Interval=0.0001,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_v1;

      model MPCAppliedEnergyLinearized_v1
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.05,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000000000001,
                                       samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_v1;

      model MPCAppliedEnergyOriginal_v2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.25,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
                  Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.sEXSMPC.EFD;
      OUT4 = G2.gASTMPC.simpleLag1.state;
      OUT5 = G2.gen.P;
      OUT6 = G2.gen.Q;
      OUT7 = G2.gen.p.ir;
      OUT8 = G2.gen.p.ii;
      OUT9 = G2.gen.PMECH;
      OUT10 = G2.sEXSMPC.EFD;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            Interval=0.0001,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_v2;

      model MPCAppliedEnergyLinearized_v2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.25,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCSysIdentification
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCSysIdentification
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.sEXSMPC.EFD;
      OUT4 = G2.gASTMPC.simpleLag1.state;
      OUT5 = G2.gen.P;
      OUT6 = G2.gen.Q;
      OUT7 = G2.gen.p.ir;
      OUT8 = G2.gen.p.ii;
      OUT9 = G2.gen.PMECH;
      OUT10 = G2.sEXSMPC.EFD;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(PV.Qref, AddU3.y) annotation (Line(points={{-42,-56},{-54,-56},{-54,-50},
                {-59,-50}}, color={0,0,127}));
          annotation(Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=10000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_v2;

      model MPCAppliedEnergyOriginal_v3
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.25,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
                  Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(
          enableNoise=true,
          useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-44,102},{-24,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0.01,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
            Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=Bus5.v)
          annotation (Placement(transformation(extent={{22,-160},{42,-140}})));
        NonElectrical.Continuous.SimpleLag simpleLag(
          K=1,
          T=0.05,
          y_start=powerFlow.powerflow.bus.V5)
          annotation (Placement(transformation(extent={{60,-160},{80,-140}})));
        Modelica.Blocks.Interfaces.RealOutput V5filtered
          "Connector of Real output signal"
          annotation (Placement(transformation(extent={{96,-160},{116,-140}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0005, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{64,-18},{76,-6}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=G2.gen.w)
          annotation (Placement(transformation(extent={{22,-192},{42,-172}})));
        NonElectrical.Continuous.SimpleLag simpleLag1(
          K=1,
          T=0.05,
          y_start=powerFlow.powerflow.bus.V5)
          annotation (Placement(transformation(extent={{60,-192},{80,-172}})));
        Modelica.Blocks.Interfaces.RealOutput wfiltered
          "Connector of Real output signal"
          annotation (Placement(transformation(extent={{96,-192},{116,-172}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=Bus5.angle)
          annotation (Placement(transformation(extent={{120,-170},{140,-150}})));
        NonElectrical.Continuous.SimpleLag simpleLag2(
          K=1,
          T=0.05,
          y_start=powerFlow.powerflow.bus.V5)
          annotation (Placement(transformation(extent={{158,-170},{178,-150}})));
        Modelica.Blocks.Interfaces.RealOutput anglefiltered
          "Connector of Real output signal" annotation (Placement(
              transformation(extent={{194,-170},{214,-150}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(add.u2, sine.y) annotation (Line(points={{83.2,-16.4},{83.2,-22},
                {80.5,-22},{80.5,-31}}, color={0,0,127}));
        connect(realExpression.y, simpleLag.u)
          annotation (Line(points={{43,-150},{58,-150}}, color={0,0,127}));
        connect(simpleLag.y, V5filtered)
          annotation (Line(points={{81,-150},{106,-150}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{76.54,
                -12.06},{79.87,-12.06},{79.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(realExpression1.y, simpleLag1.u)
          annotation (Line(points={{43,-182},{58,-182}}, color={0,0,127}));
        connect(simpleLag1.y, wfiltered)
          annotation (Line(points={{81,-182},{106,-182}}, color={0,0,127}));
        connect(realExpression2.y, simpleLag2.u)
          annotation (Line(points={{141,-160},{156,-160}}, color={0,0,127}));
        connect(simpleLag2.y, anglefiltered)
          annotation (Line(points={{179,-160},{204,-160}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=50,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_v3;

      model MPCAppliedEnergyOriginal_v3_table
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=10,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=10000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,0;
              0.51,0; 5,0], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,6},{-98,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              0; 0.51,0; 5,0], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-20},{-98,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              0; 0.51,0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-48},{-98,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              0; 0.51,0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-94},{-98,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              0; 0.51,0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-120},{-98,-100}})));
        Modelica.Blocks.Sources.CombiTimeTable NOISE(table=[0,0; 0.01,0; 0.02,0;
              0.029999999,0; 0.039999999,0; 0.050000001,0; 0.059999999,0; 0.07,
              0; 0.079999998,0; 0.090000004,0; 0.100000001,0.000765828;
              0.109999999,-3.11e-05; 0.119999997,-0.001686434; 0.129999995,
              0.000196278; 0.140000001,-0.000638509; 0.150000006,0.001692023;
              0.159999996,-0.000199512; 0.170000002,-0.000158132; 0.180000007,-1.98e-05;
              0.189999998,-0.000367722; 0.200000003,0.000362195; 0.209999993,
              0.000167119; 0.219999999,-0.000671293; 0.230000004,-0.000146563;
              0.239999995,0.000808811; 0.25,0.00023586; 0.25999999,-8.66e-05;
              0.270000011,-0.000618853; 0.280000001,-0.000350953; 0.289999992,
              0.000996562; 0.300000012,0.002390895; 0.310000002,-0.00066852;
              0.319999993,-0.000633284; 0.330000013,-0.001600458; 0.340000004,-0.00027044;
              0.349999994,-0.000798949; 0.360000014,-0.001395716; 0.370000005,
              0.000859035; 0.379999995,0.000572825; 0.389999986,-0.001195866;
              0.400000006,0.001379896; 0.409999996,-0.000532857; 0.419999987,-0.000782796;
              0.430000007,-0.000164075; 0.439999998,-0.00172218; 0.449999988,
              0.000523107; 0.460000008,7.61e-05; 0.469999999,0.002294836;
              0.479999989,-0.000912428; 0.49000001,0.000502996; 0.5,-0.000823051;
              0.50999999,0.000899144; 0.519999981,-0.00053079; 0.529999971,-0.00013102;
              0.540000021,0.00093754; 0.550000012,0.002360425; 0.560000002,-0.000197763;
              0.569999993,-0.001217566; 0.579999983,-0.000883346; 0.589999974,-0.002840401;
              0.600000024,-3.69e-05; 0.610000014,0.000727957; 0.620000005,-0.000523062;
              0.629999995,0.000386397; 0.639999986,0.000661203; 0.649999976,
              0.000403916; 0.660000026,0.00096436; 0.670000017,0.000421406;
              0.680000007,0.000593125; 0.689999998,-0.00081256; 0.699999988,-0.001440591;
              0.709999979,-0.0011799; 0.720000029,-0.000163626; 0.730000019,
              5.57e-05; 0.74000001,-0.00150545; 0.75,-0.001295022; 0.75999999,
              0.001803143; 0.769999981,0.001282885; 0.779999971,-0.000465233;
              0.790000021,0.000842175; 0.800000012,-0.000580662; 0.810000002,-0.000409747;
              0.819999993,0.001830256; 0.829999983,-8.92e-05; 0.839999974,
              0.001486473; 0.850000024,-0.00017079; 0.860000014,-0.001250295;
              0.870000005,-0.00050715; 0.879999995,-0.00058688; 0.889999986,-0.00098863;
              0.899999976,7.76e-05; 0.910000026,0.000778498; 0.920000017,-6.12e-05;
              0.930000007,-0.000285475; 0.939999998,-0.000937102; 0.949999988,
              0.000414709; 0.959999979,-0.00113201; 0.970000029,-0.000733541;
              0.980000019,0.002175736; 0.99000001,-0.000170558; 1,-0.000743484;
              1.00999999,-0.000189991; 1.019999981,-0.000286557; 1.029999971,
              0.001273388; 1.039999962,0.001281302; 1.049999952,-0.00021705;
              1.059999943,-0.001351912; 1.070000052,-9.49e-05; 1.080000043,-6.35e-05;
              1.090000033,0.000747625; 1.100000024,0.000124633; 1.110000014,-0.000570606;
              1.120000005,0.002144473; 1.129999995,0.000203655; 1.139999986,
              0.000554571; 1.149999976,-0.000760581; 1.159999967,-0.001690967;
              1.169999957,7.21e-05; 1.179999948,-0.000460015; 1.190000057,
              0.000503418; 1.200000048,-4.47e-05; 1.210000038,-0.000449499;
              1.220000029,-0.000501274; 1.230000019,0.001241574; 1.24000001,
              0.000594054; 1.25,-0.002023311; 1.25999999,-0.002627983;
              1.269999981,0.000220587; 1.279999971,-0.001130306; 1.289999962,
              0.001051052; 1.299999952,0.001084924; 1.309999943,-0.001402907;
              1.320000052,0.001631321; 1.330000043,0.000349984; 1.340000033,
              0.001569892; 1.350000024,-0.00010887; 1.360000014,-0.00210567;
              1.370000005,0.000802394; 1.379999995,0.001378988; 1.389999986,
              0.000913647; 1.399999976,0.001576642; 1.409999967,-9.44e-05;
              1.419999957,-0.000336302; 1.429999948,0.001393549; 1.440000057,
              0.000950993; 1.450000048,-0.000823206; 1.460000038,-0.000588702;
              1.470000029,-0.000772243; 1.480000019,0.001716915; 1.49000001,
              0.000232451; 1.5,-0.001572475; 1.50999999,-0.000445345;
              1.519999981,0.000173771; 1.529999971,-0.001713008; 1.539999962,
              0.000794346; 1.549999952,-0.000226282; 1.559999943,0.000519097;
              1.570000052,0.000218283; 1.580000043,0.00043511; 1.590000033,
              7.29e-05; 1.600000024,4.31e-05; 1.610000014,-0.000255912;
              1.620000005,0.000922479; 1.629999995,-0.001822856; 1.639999986,-1.06e-05;
              1.649999976,0.000101835; 1.659999967,0.000480102; 1.669999957,
              0.000364404; 1.679999948,0.000592429; 1.690000057,-0.000255189;
              1.700000048,-8.39e-06; 1.710000038,-0.000173769; 1.720000029,-0.001015553;
              1.730000019,-0.000230505; 1.74000001,0.001738619; 1.75,
              0.001462994; 1.75999999,-0.000246714; 1.769999981,0.000666873;
              1.779999971,-0.000233389; 1.789999962,-4.6e-05; 1.799999952,
              0.000558377; 1.809999943,-0.000311432; 1.820000052,-0.00099055;
              1.830000043,3.8e-05; 1.840000033,0.001015437; 1.850000024,
              0.001854446; 1.860000014,0.001196141; 1.870000005,0.000764403;
              1.879999995,-3.21e-05; 1.889999986,-0.0006456; 1.899999976,-0.001999504;
              1.909999967,0.000535688; 1.919999957,-0.000955785; 1.929999948,-0.000298241;
              1.940000057,0.000306225; 1.950000048,0.000814045; 1.960000038,-0.000229426;
              1.970000029,0.000108512; 1.980000019,-2.57e-05; 1.99000001,
              0.001149107; 2,0.001257887; 2.00999999,0.000493747; 2.019999981,
              0.001458305; 2.029999971,0.000170153; 2.039999962,0.001464615;
              2.049999952,0.000356736; 2.059999943,-0.001628429; 2.069999933,-0.000195852;
              2.079999924,2.53e-05; 2.089999914,-0.000941009; 2.099999905,
              0.000654999; 2.109999895,0.00197613; 2.119999886,-0.000946503;
              2.130000114,-0.000547234; 2.140000105,1.52e-05; 2.150000095,
              0.00182225; 2.160000086,0.000431702; 2.170000076,-0.000382485;
              2.180000067,0.000329364; 2.190000057,-6.22e-05; 2.200000048,-0.001656021;
              2.210000038,-0.000715807; 2.220000029,-0.000163199; 2.230000019,
              0.000480145; 2.24000001,0.001350183; 2.25,-0.000461146;
              2.25999999,-0.000442242; 2.269999981,-0.001194557; 2.279999971,
              0.001046916; 2.289999962,-0.001665902; 2.299999952,-0.001429422;
              2.309999943,0.000805173; 2.319999933,-0.00017345; 2.329999924,
              0.000551636; 2.339999914,0.001731012; 2.349999905,-2.36e-05;
              2.359999895,0.000247795; 2.369999886,0.00108934; 2.380000114,
              0.001886655; 2.390000105,0.000902288; 2.400000095,0.000276287;
              2.410000086,0.000320561; 2.420000076,0.001280345; 2.430000067,-0.00115012;
              2.440000057,0.00152713; 2.450000048,-0.000686331; 2.460000038,
              0.001340074; 2.470000029,0.001101676; 2.480000019,-0.000306204;
              2.49000001,0.001647968; 2.5,-0.000225483; 2.50999999,0.001106848;
              2.519999981,0.000825103; 2.529999971,-0.00084744; 2.539999962,-0.000459001;
              2.549999952,-0.001158001; 2.559999943,0.000146978; 2.569999933,
              0.000418243; 2.579999924,2.32e-06; 2.589999914,-0.001784242;
              2.599999905,-0.000521344; 2.609999895,0.001302065; 2.619999886,-0.000887643;
              2.630000114,-0.001288273; 2.640000105,-0.00060098; 2.650000095,-0.000797136;
              2.660000086,-0.001225884; 2.670000076,0.001136613; 2.680000067,
              0.001704971; 2.690000057,0.002251008; 2.700000048,-0.000471022;
              2.710000038,-0.000213202; 2.720000029,-0.000337075; 2.730000019,-0.000593188;
              2.74000001,-0.000918799; 2.75,-0.00026408; 2.75999999,0.000956053;
              2.769999981,-4.83e-05; 2.779999971,-0.00045103; 2.789999962,
              0.000165292; 2.799999952,0.00122582; 2.809999943,-0.001218245;
              2.819999933,0.001535131; 2.829999924,0.001255208; 2.839999914,
              0.000936428; 2.849999905,0.000218346; 2.859999895,0.000273868;
              2.869999886,0.000217088; 2.880000114,-0.001750011; 2.890000105,-0.000967441;
              2.900000095,0.001318804; 2.910000086,-0.001295904; 2.920000076,-0.000132887;
              2.930000067,-0.000189708; 2.940000057,-7.16e-05; 2.950000048,
              0.001611781; 2.960000038,-0.000812447; 2.970000029,0.001335666;
              2.980000019,0.000136867; 2.99000001,-3.49e-05; 3,0.000742244;
              3.00999999,-1.48e-05; 3.019999981,0.000270343; 3.029999971,
              0.000528403; 3.039999962,0.000295228; 3.049999952,-0.001665838;
              3.059999943,0.001078944; 3.069999933,0.000161975; 3.079999924,-0.001297844;
              3.089999914,-4.66e-05; 3.099999905,-8.59e-05; 3.109999895,-8.18e-05;
              3.119999886,0.00050854; 3.130000114,-9.81e-05; 3.140000105,-0.000400727;
              3.150000095,1.59e-05; 3.160000086,-0.00042499; 3.170000076,
              0.000758049; 3.180000067,0.000480319; 3.190000057,-0.00034947;
              3.200000048,0.001137576; 3.210000038,0.000133303; 3.220000029,-9.01e-05;
              3.230000019,9.68e-05; 3.24000001,-0.001020668; 3.25,0.001069166;
              3.25999999,-0.000187796; 3.269999981,0.000912963; 3.279999971,-8.97e-05;
              3.289999962,0.000399101; 3.299999952,-0.000277415; 3.309999943,
              0.000844366; 3.319999933,-4.62e-05; 3.329999924,0.000512223;
              3.339999914,0.000446826; 3.349999905,0.00153013; 3.359999895,-0.000320873;
              3.369999886,-0.001403007; 3.380000114,-0.00030876; 3.390000105,
              0.000653304; 3.400000095,0.000707746; 3.410000086,0.000986656;
              3.420000076,0.002768222; 3.430000067,0.001517238; 3.440000057,
              0.000336939; 3.450000048,-0.002178873; 3.460000038,-0.001560737;
              3.470000029,0.000354694; 3.480000019,-0.001380505; 3.49000001,-0.000837196;
              3.5,-0.000837949; 3.50999999,0.000707963; 3.519999981,3.15e-05;
              3.529999971,-0.001461289; 3.539999962,-0.000143491; 3.549999952,
              0.000630345; 3.559999943,-0.002228165; 3.569999933,0.00103042;
              3.579999924,-0.000872024; 3.589999914,-0.002191567; 3.599999905,
              0.001261413; 3.609999895,-1.21e-06; 3.619999886,0.001096282;
              3.630000114,0.000113109; 3.640000105,0.000336073; 3.650000095,
              0.000582169; 3.660000086,0.000351009; 3.670000076,-0.000261132;
              3.680000067,0.001026351; 3.690000057,-0.000630306; 3.700000048,-0.001093405;
              3.710000038,8.61e-05; 3.720000029,0.000827726; 3.730000019,
              0.001813788; 3.74000001,-0.000678739; 3.75,-0.000541762;
              3.75999999,-0.000576266; 3.769999981,9.22e-05; 3.779999971,
              0.001245246; 3.789999962,0.000653674; 3.799999952,0.000335513;
              3.809999943,0.000536664; 3.819999933,0.00010443; 3.829999924,-0.00139834;
              3.839999914,-0.000665538; 3.849999905,0.00204117; 3.859999895,
              0.00102259; 3.869999886,-0.000900549; 3.880000114,0.001191602;
              3.890000105,-0.000817929; 3.900000095,1.25e-05; 3.910000086,
              0.001062595; 3.920000076,0.002202685; 3.930000067,0.000214525;
              3.940000057,0.001384859; 3.950000048,-0.000620847; 3.960000038,
              0.000878326; 3.970000029,-0.001420998; 3.980000019,0.001345491;
              3.99000001,-0.000875949; 4,-0.000869617; 4.010000229,0.000253014;
              4.019999981,-2.57e-05; 4.03000021,-0.000277106; 4.039999962,
              0.000368744; 4.050000191,0.000783157; 4.059999943,0.000386467;
              4.070000172,0.000502826; 4.079999924,0.000505763; 4.090000153,-0.000145631;
              4.099999905,0.000392502; 4.110000134,-0.000933931; 4.119999886,
              1.22e-05; 4.130000114,-0.001357752; 4.139999866,-3.75e-05;
              4.150000095,0.000305219; 4.159999847,-0.000301354; 4.170000076,
              0.000246467; 4.179999828,-0.00072956; 4.190000057,0.001934262;
              4.199999809,-0.000859966; 4.210000038,0.000898433; 4.21999979,
              0.000832653; 4.230000019,0.000273932; 4.239999771,-0.000105234;
              4.25,0.00031284; 4.260000229,-0.001833005; 4.269999981,-0.000269813;
              4.28000021,0.000129162; 4.289999962,0.0014977; 4.300000191,
              0.00047492; 4.309999943,3.57e-05; 4.320000172,-0.000712435;
              4.329999924,-0.000668719; 4.340000153,0.001442118; 4.349999905,
              0.000238111; 4.360000134,0.000238403; 4.369999886,0.00202456;
              4.380000114,0.000843803; 4.389999866,-0.000268344; 4.400000095,-0.000196848;
              4.409999847,-0.00081803; 4.420000076,-0.001846331; 4.429999828,-0.001482054;
              4.440000057,0.001645793; 4.449999809,-0.000471386; 4.460000038,
              0.000262986; 4.46999979,0.001293262; 4.480000019,0.000865387;
              4.489999771,-5.27e-05; 4.5,0.001409822; 4.510000229,-0.001255982;
              4.519999981,0.000621314; 4.53000021,-0.001167677; 4.539999962,-0.001514669;
              4.550000191,-0.000428032; 4.559999943,1.84e-05; 4.570000172,-0.000616931;
              4.579999924,-0.001182829; 4.590000153,-0.000555776; 4.599999905,-0.001297874;
              4.610000134,-0.002053794; 4.619999886,0.001203779; 4.630000114,
              0.001387897; 4.639999866,-0.00143083; 4.650000095,0.002206937;
              4.659999847,0.000142765; 4.670000076,0.001735498; 4.679999828,-0.000320533;
              4.690000057,0.000303905; 4.699999809,0.000542402; 4.710000038,
              0.000126429; 4.71999979,-0.000112181; 4.730000019,-0.000743582;
              4.739999771,-0.000377945; 4.75,0.000479095; 4.760000229,
              0.001743586; 4.769999981,0.001491895; 4.78000021,0.000492091;
              4.789999962,0.000121491; 4.800000191,-0.001719327; 4.809999943,-0.00120401;
              4.820000172,-0.000489745; 4.829999924,-0.000166957; 4.840000153,
              0.00021416; 4.849999905,-0.000250773; 4.860000134,-0.000205197;
              4.869999886,0.000536172; 4.880000114,0.001481039; 4.889999866,-0.001693141;
              4.900000095,0.0008738; 4.909999847,-0.000241523; 4.920000076,
              0.001005654; 4.929999828,0.000234443; 4.940000057,-0.000430027;
              4.949999809,-0.000635593; 4.960000038,0.000663425; 4.96999979,
              2.3e-05; 4.980000019,0.000166657; 4.989999771,0.000351443; 5,
              0.001593706; 5.010000229,-0.000322307; 5.019999981,-0.000420366;
              5.03000021,0.002713771; 5.039999962,-0.000422144; 5.050000191,
              0.000118524; 5.059999943,-0.001078104; 5.070000172,0.00076323;
              5.079999924,0.000115776; 5.090000153,-0.000340514; 5.099999905,
              0.000210623; 5.110000134,0.00051562; 5.119999886,-0.001763631;
              5.130000114,0.00039944; 5.139999866,-0.000122091; 5.150000095,
              0.002087676; 5.159999847,-0.000390235; 5.170000076,0.000388644;
              5.179999828,-0.000514705; 5.190000057,-0.000269168; 5.199999809,-0.000578641;
              5.210000038,0.000255208; 5.21999979,-0.000406205; 5.230000019,
              0.002017004; 5.239999771,-0.000584063; 5.25,-6.22e-05;
              5.260000229,0.000329198; 5.269999981,0.000453986; 5.28000021,
              0.000563974; 5.289999962,0.001082298; 5.300000191,0.000544631;
              5.309999943,-0.000347361; 5.320000172,-0.000974684; 5.329999924,-0.000647834;
              5.340000153,0.000786383; 5.349999905,-0.00065199; 5.360000134,-0.000229672;
              5.369999886,-0.000238335; 5.380000114,0.000893231; 5.389999866,
              0.00111995; 5.400000095,-0.000199481; 5.409999847,0.000995194;
              5.420000076,-0.000773819; 5.429999828,-0.000605976; 5.440000057,-0.001253864;
              5.449999809,0.000275043; 5.460000038,-0.000746308; 5.46999979,-0.000807942;
              5.480000019,0.00058524; 5.489999771,0.00084546; 5.5,0.00075741;
              5.510000229,0.000347817; 5.519999981,6.24e-05; 5.53000021,-0.001404126;
              5.539999962,0.00069094; 5.550000191,-0.000524041; 5.559999943,
              0.001341896; 5.570000172,-2.94e-05; 5.579999924,-0.001199986;
              5.590000153,0.001100577; 5.599999905,-0.000922138; 5.610000134,
              0.00107809; 5.619999886,0.000370582; 5.630000114,0.001407309;
              5.639999866,-0.000746803; 5.650000095,-0.00020872; 5.659999847,-0.000143963;
              5.670000076,0.001388842; 5.679999828,0.000201567; 5.690000057,
              0.000944241; 5.699999809,9.48e-05; 5.710000038,0.000111923;
              5.71999979,0.001050733; 5.730000019,-0.000481636; 5.739999771,
              0.00070664; 5.75,0.000803966; 5.760000229,0.000969737;
              5.769999981,-6.7e-05; 5.78000021,-0.000389326; 5.789999962,
              0.001592334; 5.800000191,0.000410992; 5.809999943,0.001565628;
              5.820000172,2.4e-05; 5.829999924,-0.000107136; 5.840000153,
              0.000263334; 5.849999905,-0.000473433; 5.860000134,0.001582253;
              5.869999886,0.00026778; 5.880000114,0.001680262; 5.889999866,
              0.001544011; 5.900000095,-0.000653923; 5.909999847,0.000458469;
              5.920000076,0.000489519; 5.929999828,-0.000932288; 5.940000057,
              0.000984889; 5.949999809,-0.000733265; 5.960000038,-0.000419704;
              5.96999979,-0.000788766; 5.980000019,0.000943286; 5.989999771,
              0.000474669; 6,0.001352769; 6.010000229,-0.000209399; 6.019999981,
              0.000764919; 6.03000021,0.000859244; 6.039999962,-0.001197697;
              6.050000191,-0.00067189; 6.059999943,-0.001269953; 6.070000172,-0.000640845;
              6.079999924,0.00121863; 6.090000153,-6.47e-05; 6.099999905,
              0.000660244; 6.110000134,-0.000692067; 6.119999886,-0.00116757;
              6.130000114,0.00148311; 6.139999866,0.00152617; 6.150000095,-0.000358628;
              6.159999847,-0.000348141; 6.170000076,-0.000228704; 6.179999828,-0.000110421;
              6.190000057,0.000399829; 6.199999809,-0.000993569; 6.210000038,
              0.000528119; 6.21999979,-0.00053789; 6.230000019,0.001000686;
              6.239999771,0.00112871; 6.25,-0.001698974; 6.260000229,-0.000723466;
              6.269999981,-0.000113616; 6.28000021,0.000482241; 6.289999962,-0.000373148;
              6.300000191,-0.000491644; 6.309999943,0.000805564; 6.320000172,
              8.81e-05; 6.329999924,5.09e-05; 6.340000153,0.000231526;
              6.349999905,-7.58e-05; 6.360000134,-0.002377672; 6.369999886,-4.59e-05;
              6.380000114,-0.00019862; 6.389999866,1.18e-06; 6.400000095,-0.001346319;
              6.409999847,0.001216276; 6.420000076,0.001432341; 6.429999828,
              6.47e-05; 6.440000057,0.000479529; 6.449999809,-0.000533087;
              6.460000038,-0.000875839; 6.46999979,0.000196137; 6.480000019,-0.000998766;
              6.489999771,-0.001779578; 6.5,0.000308397; 6.510000229,-0.000622318;
              6.519999981,0.002031709; 6.53000021,-0.000462382; 6.539999962,
              0.00100016; 6.550000191,0.000514736; 6.559999943,0.001178736;
              6.570000172,-0.002199453; 6.579999924,0.000405987; 6.590000153,
              0.000912592; 6.599999905,0.00013485; 6.610000134,0.000998248;
              6.619999886,-0.000226501; 6.630000114,0.000970344; 6.639999866,
              0.002216322; 6.650000095,0.000309632; 6.659999847,0.000737386;
              6.670000076,-0.000890573; 6.679999828,0.00045261; 6.690000057,
              0.001032557; 6.699999809,0.001835896; 6.710000038,-0.000204828;
              6.71999979,8.28e-05; 6.730000019,0.001166266; 6.739999771,
              0.000681293; 6.75,0.000123923; 6.760000229,0.001454783;
              6.769999981,0.000393696; 6.78000021,0.002044588; 6.789999962,-0.00050534;
              6.800000191,0.000796667; 6.809999943,0.000338766; 6.820000172,
              0.00092266; 6.829999924,0.000497988; 6.840000153,-0.001078811;
              6.849999905,-0.000191228; 6.860000134,-0.00015259; 6.869999886,-0.00153462;
              6.880000114,0.000312617; 6.889999866,-0.002127897; 6.900000095,
              0.001951945; 6.909999847,-0.000335018; 6.920000076,0.00135822;
              6.929999828,-0.000189372; 6.940000057,0.001697473; 6.949999809,-0.00097269;
              6.960000038,-0.000123307; 6.96999979,-0.000737975; 6.980000019,
              0.001044508; 6.989999771,0.000476477; 7,-0.000355383; 7.010000229,
              -0.000149701; 7.019999981,-0.001062883; 7.03000021,0.001302986;
              7.039999962,-0.000922292; 7.050000191,-0.00033958; 7.059999943,-0.000896657;
              7.070000172,-0.000214575; 7.079999924,6.09e-05; 7.090000153,
              0.001006604; 7.099999905,0.000588812; 7.110000134,0.000390609;
              7.119999886,-0.000993368; 7.130000114,0.001043179; 7.139999866,-0.000103697;
              7.150000095,0.000708749; 7.159999847,0.001541669; 7.170000076,-0.002215121;
              7.179999828,-0.000557626; 7.190000057,0.001839414; 7.199999809,-0.000788689;
              7.210000038,-0.001785995; 7.21999979,0.001103488; 7.230000019,-0.001806755;
              7.239999771,0.000841703; 7.25,0.001349897; 7.260000229,-0.000719046;
              7.269999981,-9.51e-05; 7.28000021,-2.33e-05; 7.289999962,
              0.001107209; 7.300000191,0.000926507; 7.309999943,0.000201564;
              7.320000172,0.000502057; 7.329999924,-0.000115163; 7.340000153,-0.001318935;
              7.349999905,0.000130329; 7.360000134,0.000508372; 7.369999886,-0.002603642;
              7.380000114,-0.000524595; 7.389999866,0.002169751; 7.400000095,
              0.001031142; 7.409999847,-0.001691965; 7.420000076,0.000372157;
              7.429999828,0.000554387; 7.440000057,-0.000162497; 7.449999809,
              0.001312383; 7.460000038,0.000318119; 7.46999979,-0.000743698;
              7.480000019,-0.000510814; 7.489999771,-0.001079457; 7.5,
              0.000484085; 7.510000229,0.000469445; 7.519999981,0.00081473;
              7.53000021,-0.000103393; 7.539999962,-0.000950735; 7.550000191,-0.000542554;
              7.559999943,-0.000126893; 7.570000172,-0.000355832; 7.579999924,-0.000505487;
              7.590000153,0.00016362; 7.599999905,0.000324424; 7.610000134,
              0.000374129; 7.619999886,0.001467552; 7.630000114,0.001386663;
              7.639999866,-0.001253207; 7.650000095,-0.00083258; 7.659999847,-0.000243123;
              7.670000076,-0.000421664; 7.679999828,-0.000185828; 7.690000057,
              0.00038928; 7.699999809,0.001692636; 7.710000038,-0.000985979;
              7.71999979,0.000339623; 7.730000019,-0.002127585; 7.739999771,-0.000530609;
              7.75,0.000520141; 7.760000229,0.000152363; 7.769999981,
              0.001444548; 7.78000021,-0.001617038; 7.789999962,-0.000553184;
              7.800000191,-0.000349187; 7.809999943,-0.001075195; 7.820000172,-0.000686057;
              7.829999924,-0.001056965; 7.840000153,-0.000127798; 7.849999905,
              0.000121791; 7.860000134,0.0005777; 7.869999886,-0.000292192;
              7.880000114,0.001004067; 7.889999866,-2.68e-05; 7.900000095,
              0.000677721; 7.909999847,3.85e-05; 7.920000076,-0.001748683;
              7.929999828,-0.00113831; 7.940000057,-0.000550965; 7.949999809,-0.001143427;
              7.960000038,0.001020859; 7.96999979,0.000630069; 7.980000019,
              0.000910135; 7.989999771,0.000643309; 8,-0.0002293; 8.010000229,-0.000690169;
              8.020000458,0.001731783; 8.029999733,0.001237677; 8.039999962,-0.000671085;
              8.050000191,-0.001494895; 8.06000042,-0.001148515; 8.069999695,
              0.000666723; 8.079999924,0.001012432; 8.090000153,0.00014827;
              8.100000381,0.001522651; 8.109999657,0.000921924; 8.119999886,
              0.000938417; 8.130000114,0.000438361; 8.140000343,-0.000214374;
              8.149999619,-0.000976946; 8.159999847,0.000289412; 8.170000076,
              0.001717101; 8.180000305,-0.000561942; 8.18999958,-0.000547295;
              8.199999809,-6.23e-05; 8.210000038,-0.000359596; 8.220000267,
              0.000243547; 8.229999542,-0.000392967; 8.239999771,0.001659693;
              8.25,0.000229182; 8.260000229,0.001033522; 8.270000458,-0.001043468;
              8.279999733,-5.93e-05; 8.289999962,-0.000487367; 8.300000191,
              0.001571108; 8.31000042,0.000352632; 8.319999695,-0.000895077;
              8.329999924,-0.000978375; 8.340000153,-0.001282467; 8.350000381,
              0.000415129; 8.359999657,9.48e-05; 8.369999886,0.001215078;
              8.380000114,-0.002200686; 8.390000343,-0.000156158; 8.399999619,-0.000203062;
              8.409999847,0.000873665; 8.420000076,-0.000636444; 8.430000305,
              0.000154627; 8.43999958,-0.001220084; 8.449999809,-0.000434733;
              8.460000038,-0.000192419; 8.470000267,3.55e-05; 8.479999542,
              0.000890458; 8.489999771,-0.00013833; 8.5,-0.001231154;
              8.510000229,0.001465126; 8.520000458,0.000672111; 8.529999733,-0.000141804;
              8.539999962,0.00057408; 8.550000191,-0.000439323; 8.56000042,
              0.000180737; 8.569999695,0.001046062; 8.579999924,0.000726398;
              8.590000153,0.001589826; 8.600000381,-0.000993791; 8.609999657,-6.27e-05;
              8.619999886,-0.001062296; 8.630000114,-0.000376317; 8.640000343,-0.000125104;
              8.649999619,5.36e-05; 8.659999847,0.001305353; 8.670000076,-3.93e-05;
              8.680000305,0.000555769; 8.68999958,0.000403083; 8.699999809,
              0.000505458; 8.710000038,0.000880958; 8.720000267,-0.001050844;
              8.729999542,-0.000519845; 8.739999771,-0.000343933; 8.75,1.08e-05;
              8.760000229,-0.000555123; 8.770000458,0.000439638; 8.779999733,
              0.000278497; 8.789999962,-0.001420412; 8.800000191,-0.001315654;
              8.81000042,0.001110623; 8.819999695,0.000349556; 8.829999924,
              0.000326793; 8.840000153,0.000653357; 8.850000381,0.000122516;
              8.859999657,-0.001526289; 8.869999886,-0.002150869; 8.880000114,
              0.000681911; 8.890000343,0.001669617; 8.899999619,-0.00045887;
              8.909999847,0.000754925; 8.920000076,-0.001081721; 8.930000305,
              0.000567446; 8.93999958,-0.001056031; 8.949999809,-0.001318446;
              8.960000038,-0.000585391; 8.970000267,0.001630084; 8.979999542,
              0.000842473; 8.989999771,0.00099233; 9,0.00013062; 9.010000229,-0.000796009;
              9.020000458,-0.000307792; 9.029999733,0.000233539; 9.039999962,-0.001029361;
              9.050000191,0.002172217; 9.06000042,0.000584804; 9.069999695,-0.000298076;
              9.079999924,0.000773271; 9.090000153,-9.3e-05; 9.100000381,
              0.000693836; 9.109999657,-0.000466305; 9.119999886,0.000799127;
              9.130000114,-0.000145837; 9.140000343,0.00092084; 9.149999619,-0.000779914;
              9.159999847,0.00189426; 9.170000076,-1.27e-05; 9.180000305,-0.000483076;
              9.18999958,8.65e-06; 9.199999809,-0.000567686; 9.210000038,-0.001577601;
              9.220000267,-0.000152462; 9.229999542,0.000584379; 9.239999771,-0.001111894;
              9.25,0.000663606; 9.260000229,-0.00110169; 9.270000458,0.00044229;
              9.279999733,0.001282277; 9.289999962,0.001109766; 9.300000191,-0.000619004;
              9.31000042,0.001831157; 9.319999695,-0.000643586; 9.329999924,
              0.001218684; 9.340000153,0.000202703; 9.350000381,0.00019046;
              9.359999657,-0.000794617; 9.369999886,0.000153444; 9.380000114,-3.98e-05;
              9.390000343,-0.001298821; 9.399999619,0.000233411; 9.409999847,
              0.00135533; 9.420000076,0.00097574; 9.430000305,0.001265294;
              9.43999958,-0.00041784; 9.449999809,0.001463504; 9.460000038,
              0.000415792; 9.470000267,0.001419664; 9.479999542,-0.001536603;
              9.489999771,-0.001588547; 9.5,0.000163096; 9.510000229,
              0.000841517; 9.520000458,-0.000762133; 9.529999733,0.000641234;
              9.539999962,0.00063222; 9.550000191,-0.000918852; 9.56000042,
              0.001017807; 9.569999695,0.000277188; 9.579999924,-0.00034614;
              9.590000153,-0.000929485; 9.600000381,0.000671258; 9.609999657,
              4.11e-05; 9.619999886,-0.000283315; 9.630000114,0.000788869;
              9.640000343,0.000849506; 9.649999619,-0.00165436; 9.659999847,
              0.000953514; 9.670000076,-0.000881382; 9.680000305,8.7e-05;
              9.68999958,0.001239343; 9.699999809,-0.000757344; 9.710000038,-8.16e-05;
              9.720000267,-0.000753758; 9.729999542,-0.001908737; 9.739999771,-0.000380148;
              9.75,-0.000788464; 9.760000229,-0.001386286; 9.770000458,
              0.000612814; 9.779999733,0.001438536; 9.789999962,-2.43e-05;
              9.800000191,-7.75e-05; 9.81000042,-0.000185757; 9.819999695,
              0.001933194; 9.829999924,0.000402837; 9.840000153,-0.001062702;
              9.850000381,-6.01e-05; 9.859999657,0.00033254; 9.869999886,-0.00042624;
              9.880000114,-0.001222796; 9.890000343,0.001559863; 9.899999619,-0.001287066;
              9.909999847,-0.002348974; 9.920000076,0.000695457; 9.930000305,-0.000868595;
              9.93999958,-0.000839134; 9.949999809,0.000160506; 9.960000038,
              0.000136669; 9.970000267,-0.001001424; 9.979999542,-0.000642024;
              9.989999771,-0.002574507; 10,-1.72e-05; 10.01000023,-0.000463236;
              10.02000046,-0.001392261; 10.02999973,-0.000378239; 10.03999996,-0.001157788;
              10.05000019,0.000836653; 10.06000042,-0.000501129; 10.06999969,
              0.000436389; 10.07999992,0.000539635; 10.09000015,-0.001049936;
              10.10000038,0.001602525; 10.10999966,0.001052589; 10.11999989,
              0.000888343; 10.13000011,-0.000587291; 10.14000034,0.001057218;
              10.14999962,-0.000283557; 10.15999985,-0.000262784; 10.17000008,-0.001666156;
              10.18000031,-0.001658973; 10.18999958,0.000799365; 10.19999981,
              0.000856959; 10.21000004,-0.001480939; 10.22000027,-0.002020257;
              10.22999954,8.14e-06; 10.23999977,-0.000155407; 10.25,0.001011302;
              10.26000023,-0.00036714; 10.27000046,-0.001535901; 10.27999973,
              7.96e-05; 10.28999996,-0.000214236; 10.30000019,0.000779125;
              10.31000042,-0.000638389; 10.31999969,-0.001642898; 10.32999992,
              0.00056902; 10.34000015,-0.00072127; 10.35000038,9.82e-05;
              10.35999966,-0.000442031; 10.36999989,0.001678997; 10.38000011,
              0.001427421; 10.39000034,-0.000498218; 10.39999962,-0.001893281;
              10.40999985,0.00096997; 10.42000008,-0.002236533; 10.43000031,
              0.000147984; 10.43999958,0.000929333; 10.44999981,0.000278056;
              10.46000004,-0.000471027; 10.47000027,-0.000170978; 10.47999954,
              0.000196379; 10.48999977,-0.000515445; 10.5,-0.000258499;
              10.51000023,-0.000870839; 10.52000046,-0.000102241; 10.52999973,-0.001127876;
              10.53999996,-0.000406562; 10.55000019,-0.000887096; 10.56000042,
              0.000722403; 10.56999969,0.001147611; 10.57999992,0.000239985;
              10.59000015,-0.000406703; 10.60000038,-0.000351517; 10.60999966,-0.00127084;
              10.61999989,0.000543235; 10.63000011,-0.000517925; 10.64000034,-0.000323639;
              10.64999962,-0.000366479; 10.65999985,-0.000114956; 10.67000008,
              0.000570281; 10.68000031,0.001075854; 10.68999958,0.002259745;
              10.69999981,0.00055517; 10.71000004,-0.001294832; 10.72000027,-0.00079704;
              10.72999954,-0.001293262; 10.73999977,0.000587979; 10.75,
              0.002047344; 10.76000023,1.38e-05; 10.77000046,0.000648178;
              10.77999973,-0.000871268; 10.78999996,0.000440269; 10.80000019,
              0.000194712; 10.81000042,0.000811591; 10.81999969,0.000834965;
              10.82999992,-0.000303813; 10.84000015,0.00078981; 10.85000038,
              0.000271059; 10.85999966,-0.000300165; 10.86999989,0.000864175;
              10.88000011,0.000834005; 10.89000034,0.000524595; 10.89999962,-0.000284821;
              10.90999985,-0.000930278; 10.92000008,0.000568512; 10.93000031,
              0.000574309; 10.93999958,-0.000743248; 10.94999981,0.000293915;
              10.96000004,0.000669517; 10.97000027,0.000888669; 10.97999954,
              0.000314287; 10.98999977,-0.002274078; 11,0.001348905;
              11.01000023,-0.000495716; 11.02000046,0.000446772; 11.02999973,
              0.000977169; 11.03999996,0.001012181; 11.05000019,-0.000468393;
              11.06000042,-0.000286459; 11.06999969,0.001154179; 11.07999992,
              0.000377007; 11.09000015,-0.000273157; 11.10000038,0.000488631;
              11.10999966,0.000337893; 11.11999989,-0.000341016; 11.13000011,-0.000635428;
              11.14000034,0.001423073; 11.14999962,-0.000336042; 11.15999985,-0.000285282;
              11.17000008,0.000157116; 11.18000031,-0.001629974; 11.18999958,-0.000166719;
              11.19999981,-1.05e-05; 11.21000004,-0.000371279; 11.22000027,
              2.53e-05; 11.22999954,0.000264849; 11.23999977,-0.002298784;
              11.25,-0.000340432; 11.26000023,-0.001187004; 11.27000046,-0.001147707;
              11.27999973,0.001413073; 11.28999996,-0.00016046; 11.30000019,
              0.000355976; 11.31000042,-0.000979976; 11.31999969,-0.000784006;
              11.32999992,0.000966915; 11.34000015,0.000904691; 11.35000038,
              0.000778817; 11.35999966,0.001535594; 11.36999989,-0.002614375;
              11.38000011,0.000170562; 11.39000034,-0.00028598; 11.39999962,
              0.002100846; 11.40999985,-0.001654476; 11.42000008,0.000801032;
              11.43000031,0.000972761; 11.43999958,0.001617348; 11.44999981,-0.001220805;
              11.46000004,0.001214289; 11.47000027,-0.001032531; 11.47999954,-0.001114116;
              11.48999977,-1.52e-05; 11.5,-9.39e-05; 11.51000023,0.000843927;
              11.52000046,-0.000526898; 11.52999973,0.001179406; 11.53999996,-4.4e-05;
              11.55000019,-0.000518027; 11.56000042,0.000461056; 11.56999969,-0.000610778;
              11.57999992,-0.00116789; 11.59000015,0.000633021; 11.60000038,-0.001102398;
              11.60999966,0.001005284; 11.61999989,-0.000419204; 11.63000011,
              0.000132385; 11.64000034,-0.001534678; 11.64999962,0.001673692;
              11.65999985,-0.000321552; 11.67000008,-0.000671435; 11.68000031,-0.000706932;
              11.68999958,0.001150817; 11.69999981,0.000566555; 11.71000004,-0.000469363;
              11.72000027,0.000718125; 11.72999954,-0.000604166; 11.73999977,-0.001247866;
              11.75,0.002289621; 11.76000023,-0.000467836; 11.77000046,
              0.000549055; 11.77999973,-0.000644378; 11.78999996,0.001820283;
              11.80000019,-0.00082132; 11.81000042,0.000256245; 11.81999969,-0.002694493;
              11.82999992,0.000467756; 11.84000015,-0.000500703; 11.85000038,
              0.000802786; 11.85999966,0.000221974; 11.86999989,-0.00091934;
              11.88000011,-5.4e-06; 11.89000034,0.001704111; 11.89999962,
              4.78e-05; 11.90999985,-0.000743485; 11.92000008,0.001679495;
              11.93000031,0.001052183; 11.93999958,5.03e-06; 11.94999981,-0.000621945;
              11.96000004,0.000420212; 11.97000027,-0.000519057; 11.97999954,
              0.001227113; 11.98999977,-0.000509421; 12,0.001471592;
              12.01000023,0.000471503; 12.02000046,0.000805302; 12.02999973,-0.001100803;
              12.03999996,0.002360707; 12.05000019,0.000481871; 12.06000042,
              0.00055542; 12.06999969,-0.000352956; 12.07999992,-0.000593531;
              12.09000015,-0.000350963; 12.10000038,0.00120939; 12.10999966,
              0.00016013; 12.11999989,-0.000451315; 12.13000011,0.001207847;
              12.14000034,-0.000683995; 12.14999962,0.000244003; 12.15999985,-0.000255005;
              12.17000008,0.000262373; 12.18000031,-0.000270382; 12.18999958,
              0.001328721; 12.19999981,-3.66e-06; 12.21000004,0.00087464;
              12.22000027,-0.001345119; 12.22999954,0.001697275; 12.23999977,
              0.000481714; 12.25,-0.001467761; 12.26000023,-0.00172591;
              12.27000046,-0.000608464; 12.27999973,0.000819652; 12.28999996,
              0.000744259; 12.30000019,0.0011463; 12.31000042,-0.001112362;
              12.31999969,0.000433991; 12.32999992,-0.002004017; 12.34000015,-0.001171795;
              12.35000038,0.000715381; 12.35999966,0.001023008; 12.36999989,-0.001882064;
              12.38000011,-0.000280848; 12.39000034,0.001138891; 12.39999962,
              0.000801952; 12.40999985,-0.000583431; 12.42000008,0.000851104;
              12.43000031,-0.001622159; 12.43999958,-0.0025493; 12.44999981,-0.00089603;
              12.46000004,-0.000463074; 12.47000027,2.96e-05; 12.47999954,-0.000369995;
              12.48999977,-0.001342508; 12.5,0.000327377; 12.51000023,-0.000911194;
              12.52000046,-0.001121458; 12.52999973,0.000680621; 12.53999996,-0.001437024;
              12.55000019,-0.000159758; 12.56000042,-7.93e-05; 12.56999969,
              0.000389513; 12.57999992,-0.001332629; 12.59000015,0.000968777;
              12.60000038,0.000412352; 12.60999966,0.000110682; 12.61999989,
              0.002856828; 12.63000011,0.000689706; 12.64000034,-0.000484107;
              12.64999962,0.00137829; 12.65999985,0.000655818; 12.67000008,
              0.000990719; 12.68000031,-0.000912305; 12.68999958,-0.000525538;
              12.69999981,-0.001029262; 12.71000004,-0.00215429; 12.72000027,
              0.000290592; 12.72999954,5.96e-06; 12.73999977,-0.000569163;
              12.75,0.001115612; 12.76000023,-0.000283882; 12.77000046,
              0.000444977; 12.77999973,-0.000185558; 12.78999996,-0.000608316;
              12.80000019,-0.001011425; 12.81000042,0.001197643; 12.81999969,-0.000201851;
              12.82999992,0.000160437; 12.84000015,-0.000165308; 12.85000038,
              0.000610245; 12.85999966,9.94e-06; 12.86999989,-0.000516124;
              12.88000011,0.001138532; 12.89000034,-3.99e-05; 12.89999962,
              0.000692721; 12.90999985,0.001207746; 12.92000008,0.000163567;
              12.93000031,0.00135776; 12.93999958,-0.000800873; 12.94999981,-3.69e-07;
              12.96000004,0.001537629; 12.97000027,5.16e-05; 12.97999954,-0.000298194;
              12.98999977,0.000101053; 13,-0.00099177; 13.01000023,-0.000621427;
              13.02000046,0.000257912; 13.02999973,-0.00188149; 13.03999996,-0.000909069;
              13.05000019,0.001702821; 13.06000042,-0.000984194; 13.06999969,-0.000571289;
              13.07999992,0.001782609; 13.09000015,-0.000710195; 13.10000038,
              0.001002176; 13.10999966,-0.001129227; 13.11999989,0.000727192;
              13.13000011,0.000716538; 13.14000034,-3.09e-05; 13.14999962,-0.001578046;
              13.15999985,3.87e-05; 13.17000008,-1.33e-05; 13.18000031,-0.000101745;
              13.18999958,-0.000943458; 13.19999981,0.000202545; 13.21000004,-0.001256385;
              13.22000027,-0.000778678; 13.22999954,-0.001040867; 13.23999977,
              0.001038863; 13.25,0.001390233; 13.26000023,0.001361005;
              13.27000046,0.001678602; 13.27999973,-0.002091043; 13.28999996,
              0.000538814; 13.30000019,-0.000995808; 13.31000042,-1.95e-05;
              13.31999969,0.001738874; 13.32999992,0.000986901; 13.34000015,-2.37e-05;
              13.35000038,-0.000255186; 13.35999966,0.000923518; 13.36999989,-0.00077874;
              13.38000011,0.000232129; 13.39000034,-5.88e-05; 13.39999962,
              0.000371001; 13.40999985,-0.000672355; 13.42000008,-0.001045481;
              13.43000031,-0.00070361; 13.43999958,0.000196598; 13.44999981,
              0.001626914; 13.46000004,0.000765267; 13.47000027,0.000625859;
              13.47999954,0.000550229; 13.48999977,-0.000324557; 13.5,-0.001472084;
              13.51000023,-0.001256586; 13.52000046,0.001576129; 13.52999973,-0.000877166;
              13.53999996,0.000254241; 13.55000019,-0.000390133; 13.56000042,-0.002250402;
              13.56999969,-0.001076967; 13.57999992,0.000262846; 13.59000015,-0.001225959;
              13.60000038,-0.001246381; 13.60999966,-0.000268682; 13.61999989,-0.000803969;
              13.63000011,-0.000564001; 13.64000034,-0.000944039; 13.64999962,
              2.35e-05; 13.65999985,0.001203371; 13.67000008,-0.001242427;
              13.68000031,-0.001071692; 13.68999958,-0.000382444; 13.69999981,-0.001496928;
              13.71000004,2.39e-05; 13.72000027,0.001003026; 13.72999954,
              0.000357722; 13.73999977,-0.000634911; 13.75,0.002266448;
              13.76000023,-0.002324039; 13.77000046,-0.001015298; 13.77999973,
              0.001122316; 13.78999996,-0.000501929; 13.80000019,-0.001048222;
              13.81000042,0.000401849; 13.81999969,8.96e-05; 13.82999992,-0.000225834;
              13.84000015,0.001465744; 13.85000038,0.000885673; 13.85999966,
              6.89e-05; 13.86999989,-0.00136795; 13.88000011,0.00019419;
              13.89000034,-0.000595831; 13.89999962,-7.24e-05; 13.90999985,-0.000343784;
              13.92000008,0.000114433; 13.93000031,0.001682928; 13.93999958,-0.000408472;
              13.94999981,0.001366049; 13.96000004,-0.000337215; 13.97000027,-0.000291382;
              13.97999954,0.001974494; 13.98999977,0.001102754; 14,-0.000180201;
              14.01000023,-0.001904851; 14.02000046,0.001261786; 14.02999973,
              0.002155171; 14.03999996,-0.000189746; 14.05000019,0.001065459;
              14.06000042,0.002189978; 14.06999969,0.000974451; 14.07999992,
              0.000397123; 14.09000015,-0.002414993; 14.10000038,0.001165867;
              14.10999966,-0.000140727; 14.11999989,0.001049957; 14.13000011,
              0.000510461; 14.14000034,-0.000500076; 14.14999962,0.00096752;
              14.15999985,0.000644255; 14.17000008,0.000936484; 14.18000031,-0.001382721;
              14.18999958,0.000524686; 14.19999981,0.000716304; 14.21000004,-8.32e-05;
              14.22000027,-0.000183021; 14.22999954,-0.000676019; 14.23999977,-0.000848288;
              14.25,0.001126119; 14.26000023,-0.000496738; 14.27000046,
              0.000245131; 14.27999973,0.000802642; 14.28999996,0.00049595;
              14.30000019,-0.00120027; 14.31000042,-0.000405905; 14.31999969,
              0.001422478; 14.32999992,0.000321287; 14.34000015,-0.000367701;
              14.35000038,-0.000117396; 14.35999966,-0.000746009; 14.36999989,
              0.000462585; 14.38000011,0.000168887; 14.39000034,0.000990285;
              14.39999962,0.001301892; 14.40999985,0.001013219; 14.42000008,-0.000125924;
              14.43000031,-0.000756797; 14.43999958,0.000144581; 14.44999981,-0.00095664;
              14.46000004,0.00115858; 14.47000027,-0.000581389; 14.47999954,-0.000104821;
              14.48999977,0.001128061; 14.5,0.000476673; 14.51000023,
              0.001365743; 14.52000046,0.000239849; 14.52999973,-0.000531558;
              14.53999996,0.001944938; 14.55000019,-0.000440604; 14.56000042,
              0.000778185; 14.56999969,0.000445671; 14.57999992,-0.000145734;
              14.59000015,-0.001530343; 14.60000038,0.000158739; 14.60999966,-0.00055775;
              14.61999989,-0.000806561; 14.63000011,-0.000394121; 14.64000034,-0.000299624;
              14.64999962,0.000253206; 14.65999985,-0.00053485; 14.67000008,-0.001109443;
              14.68000031,0.001393813; 14.68999958,-0.001043599; 14.69999981,-0.001209886;
              14.71000004,0.001455556; 14.72000027,0.000850112; 14.72999954,-0.000102327;
              14.73999977,-0.000629149; 14.75,0.000562629; 14.76000023,
              0.001148173; 14.77000046,-0.000759433; 14.77999973,0.002592833;
              14.78999996,0.001209119; 14.80000019,0.001120437; 14.81000042,-0.001969042;
              14.81999969,-0.000137911; 14.82999992,-0.000500224; 14.84000015,-0.000685747;
              14.85000038,6.63e-05; 14.85999966,-0.000148638; 14.86999989,
              0.000500755; 14.88000011,0.002007103; 14.89000034,0.000454225;
              14.89999962,0.001762639; 14.90999985,-0.001167631; 14.92000008,
              0.000938445; 14.93000031,0.000827883; 14.93999958,0.001058658;
              14.94999981,-0.000922257; 14.96000004,-0.000266538; 14.97000027,
              0.000169426; 14.97999954,-0.000744903; 14.98999977,-0.000124294;
              15,0.000403606; 15.01000023,0.001010296; 15.02000046,0.000555049;
              15.02999973,-0.001073887; 15.03999996,-0.001655205; 15.05000019,
              8.23e-05; 15.06000042,0.000770417; 15.06999969,-0.000923145;
              15.07999992,-0.00042348; 15.09000015,0.000694074; 15.10000038,-0.002273818;
              15.10999966,-0.000413831; 15.11999989,-0.000346471; 15.13000011,-0.000506246;
              15.14000034,0.000812568; 15.14999962,0.000211737; 15.15999985,-0.001437188;
              15.17000008,-0.000318083; 15.18000031,0.000435743; 15.18999958,
              0.000202347; 15.19999981,0.000224658; 15.21000004,0.000846225;
              15.22000027,0.000724041; 15.22999954,-0.00224921; 15.23999977,-0.000532495;
              15.25,0.000969599; 15.26000023,-0.000867305; 15.27000046,
              0.00049045; 15.27999973,-0.000440614; 15.28999996,-0.000666242;
              15.30000019,-0.002005564; 15.31000042,0.000158931; 15.31999969,-0.001754475;
              15.32999992,-0.000388606; 15.34000015,-0.00015311; 15.35000038,
              0.000626086; 15.35999966,0.001253011; 15.36999989,0.000311041;
              15.38000011,0.000171244; 15.39000034,-0.000537419; 15.39999962,-0.001309363;
              15.40999985,0.000604853; 15.42000008,0.000417078; 15.43000031,-0.000471444;
              15.43999958,0.000426799; 15.44999981,-0.000634856; 15.46000004,-0.000980079;
              15.47000027,-0.000929959; 15.47999954,0.000607007; 15.48999977,-0.000237406;
              15.5,-0.000476791; 15.51000023,0.00156296; 15.52000046,-0.000941018;
              15.52999973,-0.000179464; 15.53999996,0.000650372; 15.55000019,-0.000414498;
              15.56000042,-0.000807244; 15.56999969,-8.83e-05; 15.57999992,
              0.000985577; 15.59000015,-0.000833452; 15.60000038,0.000773815;
              15.60999966,-0.001440916; 15.61999989,0.001479321; 15.63000011,
              0.001781966; 15.64000034,-0.001944977; 15.64999962,9.75e-05;
              15.65999985,0.000902817; 15.67000008,0.001456516; 15.68000031,-0.000898181;
              15.68999958,0.001566923; 15.69999981,0.000791635; 15.71000004,
              0.000715919; 15.72000027,0.000640976; 15.72999954,0.000101939;
              15.73999977,0.000902244; 15.75,-0.001227264; 15.76000023,
              0.001414207; 15.77000046,0.001053751; 15.77999973,-0.000969183;
              15.78999996,-0.001138862; 15.80000019,1.63e-05; 15.81000042,
              0.000784557; 15.81999969,0.00091981; 15.82999992,-0.000403856;
              15.84000015,0.002501132; 15.85000038,-0.000745935; 15.85999966,
              0.000382768; 15.86999989,0.000581408; 15.88000011,-0.001163332;
              15.89000034,0.000176829; 15.89999962,0.000919969; 15.90999985,-3.79e-05;
              15.92000008,0.000825243; 15.93000031,0.000212617; 15.93999958,-0.000693154;
              15.94999981,0.000935939; 15.96000004,-0.000976079; 15.97000027,-6.32e-06;
              15.97999954,-0.000814144; 15.98999977,-0.000687722; 16,6.4e-06;
              16.01000023,-0.002346543; 16.02000046,0.000454841; 16.03000069,
              0.000649702; 16.04000092,-0.003003579; 16.04999924,-0.000522037;
              16.05999947,-0.00012077; 16.06999969,0.000698194; 16.07999992,-0.000105439;
              16.09000015,4.06e-05; 16.10000038,-0.000242008; 16.11000061,-0.001216293;
              16.12000084,0.001810583; 16.12999916,6.08e-05; 16.13999939,
              0.000250139; 16.14999962,-0.001178644; 16.15999985,-3.29e-06;
              16.17000008,0.00015383; 16.18000031,-0.000726299; 16.19000053,
              0.001445265; 16.20000076,0.000782984; 16.20999908,0.000187978;
              16.21999931,-0.000970866; 16.22999954,-0.001620058; 16.23999977,
              0.000444225; 16.25,-0.00108537; 16.26000023,-0.000781985;
              16.27000046,-0.000857511; 16.28000069,-0.000389342; 16.29000092,-0.002612584;
              16.29999924,-0.000436525; 16.30999947,-0.000156366; 16.31999969,
              0.002982471; 16.32999992,4.91e-05; 16.34000015,0.001117859;
              16.35000038,-0.00053042; 16.36000061,-0.000569935; 16.37000084,-0.000960821;
              16.37999916,-1.51e-05; 16.38999939,-0.000813563; 16.39999962,-0.001481793;
              16.40999985,4.86e-05; 16.42000008,0.001156736; 16.43000031,
              0.002179099; 16.44000053,-0.000340381; 16.45000076,0.000862262;
              16.45999908,0.001111716; 16.46999931,0.000927911; 16.47999954,
              0.00016514; 16.48999977,0.002036614; 16.5,-0.001429535;
              16.51000023,-0.001183479; 16.52000046,0.000758627; 16.53000069,-0.000392406;
              16.54000092,0.00088907; 16.54999924,7.34e-05; 16.55999947,
              0.00084915; 16.56999969,-0.000291083; 16.57999992,-0.000689341;
              16.59000015,0.00025974; 16.60000038,0.000579993; 16.61000061,-0.000871925;
              16.62000084,-0.000568616; 16.62999916,-0.001602009; 16.63999939,
              0.000141435; 16.64999962,0.000763528; 16.65999985,-7.12e-05;
              16.67000008,-0.001687838; 16.68000031,-0.000730538; 16.69000053,-0.000392232;
              16.70000076,-0.001222481; 16.70999908,-0.000858131; 16.71999931,
              0.000305917; 16.72999954,0.000176635; 16.73999977,-0.001385782;
              16.75,0.000807473; 16.76000023,0.000516373; 16.77000046,
              0.000442119; 16.78000069,0.000633162; 16.79000092,-0.000137548;
              16.79999924,-0.001575236; 16.80999947,-0.000546741; 16.81999969,
              6.81e-05; 16.82999992,-0.000123999; 16.84000015,-0.001618375;
              16.85000038,0.00047982; 16.86000061,-0.001235019; 16.87000084,-0.001526975;
              16.87999916,-0.000556389; 16.88999939,-0.001396819; 16.89999962,
              0.001649564; 16.90999985,0.000299285; 16.92000008,0.000442017;
              16.93000031,0.000884953; 16.94000053,-0.000185643; 16.95000076,-0.000182237;
              16.95999908,0.000420028; 16.96999931,-2.57e-05; 16.97999954,
              0.000500344; 16.98999977,-0.001189924; 17,0.001243006;
              17.01000023,4.84e-05; 17.02000046,-9.53e-05; 17.03000069,
              0.000395917; 17.04000092,-6.79e-05; 17.04999924,3.32e-05;
              17.05999947,0.000181108; 17.06999969,-4.12e-05; 17.07999992,
              0.00283182; 17.09000015,-0.00036536; 17.10000038,0.001094067;
              17.11000061,-0.002530471; 17.12000084,7.2e-05; 17.12999916,-0.001166106;
              17.13999939,0.00108383; 17.14999962,0.000178854; 17.15999985,-0.000133729;
              17.17000008,-0.000482626; 17.18000031,0.000593335; 17.19000053,-0.00058379;
              17.20000076,0.000308776; 17.20999908,-9.8e-05; 17.21999931,
              0.000117756; 17.22999954,-0.000644208; 17.23999977,0.002268487;
              17.25,-0.001204689; 17.26000023,-7.03e-05; 17.27000046,
              0.002430535; 17.28000069,0.000630048; 17.29000092,0.000782385;
              17.29999924,-0.000525453; 17.30999947,0.000184268; 17.31999969,
              0.000182958; 17.32999992,-0.000890388; 17.34000015,0.001156074;
              17.35000038,-0.001725565; 17.36000061,0.002009277; 17.37000084,-0.001205176;
              17.37999916,-0.000407979; 17.38999939,3.24e-05; 17.39999962,
              0.000516932; 17.40999985,0.000341411; 17.42000008,0.00036328;
              17.43000031,-0.000305083; 17.44000053,0.00018101; 17.45000076,
              0.000170903; 17.45999908,0.000323403; 17.46999931,-0.000170354;
              17.47999954,0.000193692; 17.48999977,0.000201084; 17.5,8.36e-05;
              17.51000023,-0.001506195; 17.52000046,0.000674183; 17.53000069,
              5.17e-05; 17.54000092,8.71e-05; 17.54999924,-0.001101761;
              17.55999947,-0.001709886; 17.56999969,1.12e-05; 17.57999992,-0.001523287;
              17.59000015,0.001018903; 17.60000038,-0.001007569; 17.61000061,-0.00047017;
              17.62000084,0.001654845; 17.62999916,0.000460434; 17.63999939,-0.001096896;
              17.64999962,-0.000706554; 17.65999985,0.000280959; 17.67000008,
              0.000906757; 17.68000031,-0.00225973; 17.69000053,-0.001040511;
              17.70000076,0.001623344; 17.70999908,0.000819963; 17.71999931,-0.000268253;
              17.72999954,-0.00244557; 17.73999977,-0.001406671; 17.75,-0.000286357;
              17.76000023,-0.000804772; 17.77000046,-0.001167023; 17.78000069,
              0.000919716; 17.79000092,-0.001079857; 17.79999924,-2.03e-05;
              17.80999947,-0.000637036; 17.81999969,0.000865136; 17.82999992,
              8.31e-05; 17.84000015,0.000246866; 17.85000038,-0.000869304;
              17.86000061,-0.00029845; 17.87000084,-0.000986547; 17.87999916,
              0.000224601; 17.88999939,0.000272851; 17.89999962,0.000509652;
              17.90999985,-7.77e-07; 17.92000008,-0.001048316; 17.93000031,-0.000176706;
              17.94000053,-0.000751171; 17.95000076,-0.000429413; 17.95999908,
              0.002639096; 17.96999931,-0.000594007; 17.97999954,0.000432425;
              17.98999977,-0.000216257; 18,0.000563748; 18.01000023,-0.001005038;
              18.02000046,0.000296272; 18.03000069,0.000984258; 18.04000092,-0.000828899;
              18.04999924,0.000101264; 18.05999947,-7.98e-05; 18.06999969,
              0.000790224; 18.07999992,0.000106377; 18.09000015,0.001573102;
              18.10000038,0.000880649; 18.11000061,0.002091651; 18.12000084,-0.000571489;
              18.12999916,0.000263342; 18.13999939,-0.000655922; 18.14999962,-0.001383932;
              18.15999985,-0.001488875; 18.17000008,0.000331338; 18.18000031,-0.000792231;
              18.19000053,-0.001924349; 18.20000076,-0.000327629; 18.20999908,
              0.000516998; 18.21999931,-0.001210323; 18.22999954,0.000254331;
              18.23999977,0.001490579; 18.25,-0.000647056; 18.26000023,-0.000864811;
              18.27000046,-0.000711548; 18.28000069,0.000314852; 18.29000092,
              0.000235102; 18.29999924,-0.000255242; 18.30999947,0.000884967;
              18.31999969,-0.001543648; 18.32999992,2.17e-05; 18.34000015,-0.000383809;
              18.35000038,-0.000136985; 18.36000061,-0.001707941; 18.37000084,-0.000149739;
              18.37999916,7.49e-05; 18.38999939,0.000668; 18.39999962,
              0.00035324; 18.40999985,0.000420605; 18.42000008,-0.000495323;
              18.43000031,0.00114216; 18.44000053,0.000800439; 18.45000076,
              0.000478223; 18.45999908,0.001894898; 18.46999931,-0.000785512;
              18.47999954,-0.000499727; 18.48999977,0.000586104; 18.5,-0.000424555;
              18.51000023,-0.001734725; 18.52000046,-0.000368235; 18.53000069,
              0.000723155; 18.54000092,0.001064638; 18.54999924,-0.000374731;
              18.55999947,0.002241516; 18.56999969,0.00016435; 18.57999992,
              0.001169718; 18.59000015,-0.000770763; 18.60000038,0.001488727;
              18.61000061,0.001305482; 18.62000084,-0.000271516; 18.62999916,-0.000164802;
              18.63999939,-0.000134668; 18.64999962,0.000633703; 18.65999985,
              0.000200505; 18.67000008,0.001553712; 18.68000031,-0.000333627;
              18.69000053,0.000167446; 18.70000076,0.001698288; 18.70999908,
              0.000277702; 18.71999931,0.000750757; 18.72999954,0.000331342;
              18.73999977,-0.00167562; 18.75,-0.000665308; 18.76000023,
              0.000695631; 18.77000046,-0.000520293; 18.78000069,-0.000716751;
              18.79000092,0.001746942; 18.79999924,-0.000316527; 18.80999947,-0.000866455;
              18.81999969,-0.001126308; 18.82999992,-0.000105441; 18.84000015,
              0.002232996; 18.85000038,0.001756996; 18.86000061,0.001752012;
              18.87000084,0.00104534; 18.87999916,0.000731845; 18.88999939,
              0.000859832; 18.89999962,-0.00051022; 18.90999985,-0.001375101;
              18.92000008,0.000573283; 18.93000031,-0.001371818; 18.94000053,
              0.001260287; 18.95000076,-0.000845439; 18.95999908,-0.001366895;
              18.96999931,0.000140349; 18.97999954,-0.000259487; 18.98999977,
              0.000199256; 19,0.000515384; 19.01000023,0.000709058; 19.02000046,
              0.000418489; 19.03000069,0.000683057; 19.04000092,0.000836576;
              19.04999924,-0.0003991; 19.05999947,-0.000128732; 19.06999969,
              0.000841692; 19.07999992,0.000474723; 19.09000015,0.000923573;
              19.10000038,0.000505246; 19.11000061,0.000116781; 19.12000084,
              0.001981251; 19.12999916,0.000520909; 19.13999939,0.00219096;
              19.14999962,-0.000994155; 19.15999985,0.000507072; 19.17000008,-0.000398189;
              19.18000031,0.001117608; 19.19000053,0.001658554; 19.20000076,
              0.00046908; 19.20999908,-0.000313152; 19.21999931,-0.000728505;
              19.22999954,-0.000302327; 19.23999977,-0.000305483; 19.25,-0.001492999;
              19.26000023,-0.000348283; 19.27000046,0.000527444; 19.28000069,
              3.52e-05; 19.29000092,0.000369571; 19.29999924,0.001859892;
              19.30999947,0.000978682; 19.31999969,0.00219057; 19.32999992,-0.0001585;
              19.34000015,-0.002648277; 19.35000038,-7.28e-06; 19.36000061,
              0.000747521; 19.37000084,0.001188536; 19.37999916,-8.39e-05;
              19.38999939,0.000550168; 19.39999962,0.000108064; 19.40999985,
              0.002020412; 19.42000008,-0.001027126; 19.43000031,0.001316456;
              19.44000053,0.000482681; 19.45000076,-0.000589837; 19.45999908,-0.00160786;
              19.46999931,-0.000195581; 19.47999954,-0.000872569; 19.48999977,
              0.000748271; 19.5,-0.000957118; 19.51000023,0.000501963;
              19.52000046,0.001338703; 19.53000069,-0.00054849; 19.54000092,
              0.000723742; 19.54999924,4.62e-05; 19.55999947,0.000553062;
              19.56999969,0.000752016; 19.57999992,-0.000548469; 19.59000015,-0.000552077;
              19.60000038,-0.000252367; 19.61000061,-0.000272061; 19.62000084,-0.001173732;
              19.62999916,0.000113753; 19.63999939,0.001305043; 19.64999962,-0.000543792;
              19.65999985,-0.000347606; 19.67000008,-0.000879255; 19.68000031,
              0.000702022; 19.69000053,-0.000837604; 19.70000076,-0.000557589;
              19.70999908,0.002044788; 19.71999931,0.000289102; 19.72999954,
              0.000545523; 19.73999977,-0.000554375; 19.75,3.32e-05;
              19.76000023,0.001097462; 19.77000046,-0.000581884; 19.78000069,
              0.002277667; 19.79000092,0.000150697; 19.79999924,-0.000238655;
              19.80999947,0.00040288; 19.81999969,-0.000454834; 19.82999992,-0.000201682;
              19.84000015,-0.000386014; 19.85000038,0.000475359; 19.86000061,
              9.88e-05; 19.87000084,-0.001340251; 19.87999916,-5.44e-05;
              19.88999939,0.001182796; 19.89999962,-0.001573185; 19.90999985,-0.000270831;
              19.92000008,-0.000620114; 19.93000031,-0.002397137; 19.94000053,
              0.000591398; 19.95000076,0.001449201; 19.95999908,-0.001483093;
              19.96999931,0.000966464; 19.97999954,4.68e-05; 19.98999977,
              0.000112239; 20,-0.000969738; 20.01000023,-0.001869318;
              20.02000046,0.000188311; 20.03000069,-0.000780309; 20.04000092,
              0.001486093; 20.04999924,2.26e-05; 20.05999947,0.001207335;
              20.06999969,0.000154186; 20.07999992,-0.001156837; 20.09000015,
              0.000993685; 20.10000038,0.000367196; 20.11000061,-0.001347824;
              20.12000084,0.000568644; 20.12999916,0.000111578; 20.13999939,-7.31e-05;
              20.14999962,0.001123034; 20.15999985,0.000612734; 20.17000008,-9.46e-05;
              20.18000031,-0.001923393; 20.19000053,-0.000937449; 20.20000076,-0.000325289;
              20.20999908,0.001299659; 20.21999931,0.000496243; 20.22999954,-0.000610056;
              20.23999977,-0.000181101; 20.25,0.001322223; 20.26000023,-0.000420702;
              20.27000046,-0.000356377; 20.28000069,0.000378765; 20.29000092,-0.00120245;
              20.29999924,0.001711642; 20.30999947,-0.000772137; 20.31999969,
              0.001152302; 20.32999992,4.09e-05; 20.34000015,0.000840905;
              20.35000038,-0.000421702; 20.36000061,0.000624161; 20.37000084,-0.001334754;
              20.37999916,0.000524562; 20.38999939,0.00107293; 20.39999962,-0.002854551;
              20.40999985,0.000340041; 20.42000008,0.000738762; 20.43000031,-0.00162385;
              20.44000053,0.000909067; 20.45000076,0.000881315; 20.45999908,-0.000146042;
              20.46999931,0.001207134; 20.47999954,0.001142269; 20.48999977,
              0.000103526; 20.5,-0.002116414; 20.51000023,0.001343714;
              20.52000046,-0.001239826; 20.53000069,-0.001591419; 20.54000092,
              0.000557588; 20.54999924,-0.002093173; 20.55999947,0.00052188;
              20.56999969,0.001412336; 20.57999992,-0.000179289; 20.59000015,
              0.001648347; 20.60000038,-0.000727955; 20.61000061,0.000392701;
              20.62000084,0.000631642; 20.62999916,-0.001089247; 20.63999939,
              0.000174748; 20.64999962,0.001806332; 20.65999985,-0.00026599;
              20.67000008,0.000160091; 20.68000031,0.001488492; 20.69000053,-0.000328695;
              20.70000076,-0.001903968; 20.70999908,0.001476267; 20.71999931,
              0.000333506; 20.72999954,-0.000166501; 20.73999977,-0.001234807;
              20.75,-0.000172691; 20.76000023,-0.002340382; 20.77000046,
              0.000257583; 20.78000069,-0.000504604; 20.79000092,-0.000356873;
              20.79999924,-0.001314345; 20.80999947,0.000379623; 20.81999969,-0.00044555;
              20.82999992,-0.000786154; 20.84000015,-0.001398266; 20.85000038,
              0.000949162; 20.86000061,-0.000580567; 20.87000084,-0.000579304;
              20.87999916,0.000416431; 20.88999939,-0.000747021; 20.89999962,-0.001031256;
              20.90999985,0.000415237; 20.92000008,0.001200255; 20.93000031,
              0.000575148; 20.94000053,0.00099931; 20.95000076,0.000860373;
              20.95999908,-2.56e-05; 20.96999931,-0.000510176; 20.97999954,
              0.000643299; 20.98999977,-0.000662478; 21,-0.000196636;
              21.01000023,0.000366976; 21.02000046,0.000318818; 21.03000069,
              0.002034627; 21.04000092,0.000573139; 21.04999924,-0.001068253;
              21.05999947,-0.001782548; 21.06999969,-0.000938529; 21.07999992,
              2.63e-06; 21.09000015,0.001769502; 21.10000038,-0.001451276;
              21.11000061,0.002028003; 21.12000084,-0.000217981; 21.12999916,
              0.000523989; 21.13999939,0.00189159; 21.14999962,0.000393073;
              21.15999985,0.001581217; 21.17000008,-0.000720666; 21.18000031,
              0.000267284; 21.19000053,0.001524466; 21.20000076,0.000344125;
              21.20999908,0.001798527; 21.21999931,0.000633676; 21.22999954,-0.000530594;
              21.23999977,-0.00056515; 21.25,0.000373729; 21.26000023,-0.00011701;
              21.27000046,0.000693616; 21.28000069,-0.00034575; 21.29000092,
              0.000209163; 21.29999924,-5.51e-05; 21.30999947,0.000942217;
              21.31999969,-0.001055109; 21.32999992,0.000820744; 21.34000015,-0.00019783;
              21.35000038,2.99e-05; 21.36000061,-0.000866319; 21.37000084,
              0.000132137; 21.37999916,-0.000194887; 21.38999939,1.45e-05;
              21.39999962,-0.002733825; 21.40999985,-9.5e-06; 21.42000008,-0.000587294;
              21.43000031,0.000922259; 21.44000053,0.001958704; 21.45000076,-0.000131605;
              21.45999908,-0.001665164; 21.46999931,0.00238991; 21.47999954,
              0.001137668; 21.48999977,-0.000982629; 21.5,3.67e-05; 21.51000023,
              0.002269569; 21.52000046,0.0005298; 21.53000069,3.89e-05;
              21.54000092,-0.000328055; 21.54999924,0.000457358; 21.55999947,
              0.000876028; 21.56999969,-0.000194372; 21.57999992,0.000363542;
              21.59000015,0.001045378; 21.60000038,0.00073864; 21.61000061,-0.0015463;
              21.62000084,0.000695794; 21.62999916,0.000394939; 21.63999939,-0.000624752;
              21.64999962,0.000193395; 21.65999985,-0.00089516; 21.67000008,-0.000164045;
              21.68000031,-5.18e-05; 21.69000053,-0.000408152; 21.70000076,
              0.000363349; 21.70999908,-0.000671463; 21.71999931,0.002660855;
              21.72999954,-0.001221644; 21.73999977,1.38e-05; 21.75,0.000131465;
              21.76000023,-0.001663574; 21.77000046,-9.48e-05; 21.78000069,-0.001708655;
              21.79000092,-0.000391564; 21.79999924,-0.000192295; 21.80999947,
              0.001425416; 21.81999969,-0.000630762; 21.82999992,0.001259554;
              21.84000015,-0.001774084; 21.85000038,1.68e-05; 21.86000061,
              0.001128578; 21.87000084,0.000628304; 21.87999916,-0.000533585;
              21.88999939,0.000845892; 21.89999962,0.001374249; 21.90999985,-0.000979802;
              21.92000008,0.00038042; 21.93000031,0.000621662; 21.94000053,-0.000706247;
              21.95000076,-0.001069822; 21.95999908,6.51e-05; 21.96999931,-0.000367241;
              21.97999954,-0.001694525; 21.98999977,-0.000900698; 22,-0.000715176;
              22.01000023,0.000133843; 22.02000046,-0.000690095; 22.03000069,-0.001222268;
              22.04000092,0.000755625; 22.04999924,0.000229421; 22.05999947,-0.000367889;
              22.06999969,0.00135165; 22.07999992,-0.000101589; 22.09000015,-0.001290467;
              22.10000038,-0.000116473; 22.11000061,0.000791306; 22.12000084,-0.001682704;
              22.12999916,-0.000892339; 22.13999939,-0.000111345; 22.14999962,
              0.000357536; 22.15999985,-0.000530759; 22.17000008,0.000285342;
              22.18000031,-0.001341744; 22.19000053,-0.000639132; 22.20000076,
              0.00034018; 22.20999908,-0.000635261; 22.21999931,0.000123613;
              22.22999954,-0.000846681; 22.23999977,-0.00049253; 22.25,-0.001194405;
              22.26000023,-0.00090968; 22.27000046,0.000186374; 22.28000069,-0.00049065;
              22.29000092,-0.00156619; 22.29999924,-0.000744958; 22.30999947,-0.000103914;
              22.31999969,0.001163022; 22.32999992,0.000462591; 22.34000015,-0.00146182;
              22.35000038,-0.000598469; 22.36000061,-0.000853384; 22.37000084,-0.000492394;
              22.37999916,0.000635967; 22.38999939,-0.000712869; 22.39999962,-5.23e-06;
              22.40999985,0.001121001; 22.42000008,0.00148141; 22.43000031,
              0.000460548; 22.44000053,-0.001473857; 22.45000076,-0.000765378;
              22.45999908,-0.000665425; 22.46999931,0.00052574; 22.47999954,-0.000299933;
              22.48999977,-0.000478888; 22.5,0.000332299; 22.51000023,
              0.000521493; 22.52000046,0.000462191; 22.53000069,-0.001317217;
              22.54000092,0.00084335; 22.54999924,0.001134489; 22.55999947,
              0.000567959; 22.56999969,-0.00165038; 22.57999992,0.001277021;
              22.59000015,-0.001123397; 22.60000038,-0.000681153; 22.61000061,-0.000610153;
              22.62000084,0.00018515; 22.62999916,-0.000201725; 22.63999939,
              0.00173324; 22.64999962,-0.000534156; 22.65999985,-0.000504307;
              22.67000008,0.000138646; 22.68000031,-0.000512609; 22.69000053,-0.000473984;
              22.70000076,-0.000439674; 22.70999908,-0.000232035; 22.71999931,
              0.001440629; 22.72999954,0.000718903; 22.73999977,0.000522022;
              22.75,-7.77e-05; 22.76000023,0.000538646; 22.77000046,-0.001449384;
              22.78000069,-0.000967646; 22.79000092,-0.000251466; 22.79999924,
              0.002165896; 22.80999947,0.000772528; 22.81999969,-0.000965232;
              22.82999992,-0.000536086; 22.84000015,-0.000118948; 22.85000038,-8.12e-05;
              22.86000061,-0.001433651; 22.87000084,-0.000789604; 22.87999916,
              0.000223113; 22.88999939,0.001172735; 22.89999962,-0.000854801;
              22.90999985,0.001598856; 22.92000008,0.002464453; 22.93000031,
              0.00219705; 22.94000053,0.000412887; 22.95000076,0.000127835;
              22.95999908,-0.001706548; 22.96999931,-0.000225689; 22.97999954,-0.001562139;
              22.98999977,0.000771544; 23,0.001934674; 23.01000023,-0.00080406;
              23.02000046,-0.000467172; 23.03000069,-0.000832466; 23.04000092,
              0.000863306; 23.04999924,-0.000234281; 23.05999947,-0.002217273;
              23.06999969,-0.000488529; 23.07999992,0.000534167; 23.09000015,-0.000441259;
              23.10000038,-0.00114428; 23.11000061,0.000794803; 23.12000084,-0.00061295;
              23.12999916,-0.000392117; 23.13999939,-0.000159206; 23.14999962,
              0.000434729; 23.15999985,-0.000537063; 23.17000008,-0.003332675;
              23.18000031,0.000505035; 23.19000053,0.000686338; 23.20000076,-0.000223012;
              23.20999908,0.000160194; 23.21999931,8.9e-05; 23.22999954,
              0.00304104; 23.23999977,0.000995534; 23.25,-0.001266487;
              23.26000023,0.001236974; 23.27000046,-9.22e-05; 23.28000069,-0.000893317;
              23.29000092,0.002751578; 23.29999924,0.001974235; 23.30999947,
              0.002364056; 23.31999969,-0.001128873; 23.32999992,0.00079168;
              23.34000015,-0.000233594; 23.35000038,-0.000520904; 23.36000061,
              0.00086229; 23.37000084,8.47e-05; 23.37999916,-0.001328249;
              23.38999939,0.001377846; 23.39999962,0.000642276; 23.40999985,
              0.00047474; 23.42000008,0.000805234; 23.43000031,0.001212767;
              23.44000053,-0.000719315; 23.45000076,-0.000630256; 23.45999908,-0.002840172;
              23.46999931,7.94e-05; 23.47999954,0.000876229; 23.48999977,-0.001524958;
              23.5,0.000352974; 23.51000023,0.000620235; 23.52000046,
              0.000737434; 23.53000069,6.5e-05; 23.54000092,0.001493687;
              23.54999924,-0.000616347; 23.55999947,-5.72e-05; 23.56999969,-0.000848971;
              23.57999992,-0.00062997; 23.59000015,-0.001387638; 23.60000038,
              0.000674422; 23.61000061,8.74e-05; 23.62000084,0.000714891;
              23.62999916,0.001400657; 23.63999939,0.000325371; 23.64999962,
              6.4e-05; 23.65999985,0.001807829; 23.67000008,0.002000958;
              23.68000031,-0.000905196; 23.69000053,0.001257365; 23.70000076,
              0.000388375; 23.70999908,0.000284832; 23.71999931,0.000632563;
              23.72999954,0.000783664; 23.73999977,-0.001932763; 23.75,
              0.000464942; 23.76000023,0.000438084; 23.77000046,-0.000989191;
              23.78000069,0.001316872; 23.79000092,-0.002246405; 23.79999924,-0.000214051;
              23.80999947,-8.33e-05; 23.81999969,-0.000275528; 23.82999992,
              0.001209674; 23.84000015,0.000130893; 23.85000038,0.000541477;
              23.86000061,0.000491331; 23.87000084,0.000508417; 23.87999916,
              0.000118223; 23.88999939,-0.00016025; 23.89999962,-0.00300352;
              23.90999985,0.001027751; 23.92000008,-0.001046563; 23.93000031,
              0.000157068; 23.94000053,-0.000756618; 23.95000076,-0.000393978;
              23.95999908,-0.000543366; 23.96999931,-6.45e-05; 23.97999954,-0.000831167;
              23.98999977,8.37e-05; 24,0.000463961; 24.01000023,-2.71e-05;
              24.02000046,0.001150712; 24.03000069,-0.000192214; 24.04000092,
              0.000978134; 24.04999924,0.001134154; 24.05999947,-0.00024883;
              24.06999969,0.001387891; 24.07999992,0.002842227; 24.09000015,-0.001391629;
              24.10000038,-0.000175558; 24.11000061,0.000789943; 24.12000084,-0.001295836;
              24.12999916,-0.000439827; 24.13999939,-0.000551617; 24.14999962,-0.000345534;
              24.15999985,0.001570172; 24.17000008,-0.000611075; 24.18000031,-0.001115803;
              24.19000053,-0.000887537; 24.20000076,0.000688243; 24.20999908,-0.000649417;
              24.21999931,0.001483974; 24.22999954,0.001541187; 24.23999977,-0.001304;
              24.25,0.00035316; 24.26000023,-0.000644055; 24.27000046,-0.000245776;
              24.28000069,-0.001115467; 24.29000092,0.000746328; 24.29999924,
              0.000966235; 24.30999947,-0.000550572; 24.31999969,0.001380662;
              24.32999992,0.000975629; 24.34000015,-0.000401734; 24.35000038,
              0.001326512; 24.36000061,3.07e-05; 24.37000084,0.000454987;
              24.37999916,9.04e-05; 24.38999939,-0.001972372; 24.39999962,
              0.000634911; 24.40999985,0.00018688; 24.42000008,-0.000967713;
              24.43000031,7.09e-05; 24.44000053,-3.15e-05; 24.45000076,
              0.000524203; 24.45999908,-0.000324872; 24.46999931,0.000411546;
              24.47999954,-0.00023058; 24.48999977,2.91e-05; 24.5,-0.00163003;
              24.51000023,-0.00091849; 24.52000046,-0.000617907; 24.53000069,
              0.001077873; 24.54000092,-0.001029602; 24.54999924,0.000745976;
              24.55999947,0.000207269; 24.56999969,0.001608386; 24.57999992,-0.001221835;
              24.59000015,-0.001390736; 24.60000038,0.000271435; 24.61000061,
              0.000451067; 24.62000084,0.000500141; 24.62999916,-0.000910131;
              24.63999939,0.000914331; 24.64999962,0.001011127; 24.65999985,-0.001775263;
              24.67000008,0.000353504; 24.68000031,0.00144516; 24.69000053,
              0.000719374; 24.70000076,-0.001541754; 24.70999908,-0.000611582;
              24.71999931,0.000777473; 24.72999954,-0.000709046; 24.73999977,
              1.23e-05; 24.75,-0.000571207; 24.76000023,-0.001863532;
              24.77000046,-0.001095595; 24.78000069,-0.001712308; 24.79000092,
              0.001157652; 24.79999924,0.001273179; 24.80999947,0.000186138;
              24.81999969,0.000269674; 24.82999992,-5.78e-05; 24.84000015,-0.002392418;
              24.85000038,-0.001581641; 24.86000061,-7.15e-05; 24.87000084,
              7.7e-05; 24.87999916,0.00050732; 24.88999939,-0.001909843;
              24.89999962,0.00078845; 24.90999985,0.000841044; 24.92000008,
              0.00199448; 24.93000031,-0.000358969; 24.94000053,-0.000561542;
              24.95000076,0.001107926; 24.95999908,0.000197297; 24.96999931,
              0.000369417; 24.97999954,-0.000128619; 24.98999977,0.000764179;
              25,0.000293223; 25.01000023,-0.001103794; 25.02000046,0.001246009;
              25.03000069,-0.000174852; 25.04000092,0.000258431; 25.04999924,-0.00077954;
              25.05999947,-0.000355006; 25.06999969,-0.000575942; 25.07999992,
              0.000450508; 25.09000015,0.000349853; 25.10000038,0.001998558;
              25.11000061,-1.25e-05; 25.12000084,-0.001416606; 25.12999916,
              0.000307754; 25.13999939,-0.001572649; 25.14999962,0.001045866;
              25.15999985,9.62e-06; 25.17000008,0.000978872; 25.18000031,-0.000102923;
              25.19000053,4.9e-05; 25.20000076,0.000664354; 25.20999908,-0.000257206;
              25.21999931,-0.000154591; 25.22999954,-0.000659174; 25.23999977,-0.001153233;
              25.25,0.001750876; 25.26000023,0.000648545; 25.27000046,-0.000944742;
              25.28000069,-0.001109; 25.29000092,-0.001355291; 25.29999924,-0.000983951;
              25.30999947,-0.000466695; 25.31999969,0.001719616; 25.32999992,
              7.78e-05; 25.34000015,-0.000512345; 25.35000038,-0.001129463;
              25.36000061,6.02e-05; 25.37000084,-0.000783292; 25.37999916,
              0.000117668; 25.38999939,-0.00089033; 25.39999962,0.000845401;
              25.40999985,-0.000115306; 25.42000008,-0.000615862; 25.43000031,-0.000433165;
              25.44000053,-0.000409516; 25.45000076,0.001446047; 25.45999908,-0.001436193;
              25.46999931,-8.75e-05; 25.47999954,-0.000797462; 25.48999977,-0.00018912;
              25.5,-0.001532359; 25.51000023,-5.76e-05; 25.52000046,0.001254159;
              25.53000069,-0.000740773; 25.54000092,-0.000223037; 25.54999924,-0.001054852;
              25.55999947,-0.000812534; 25.56999969,-0.000770435; 25.57999992,
              0.002001847; 25.59000015,0.000531762; 25.60000038,0.002655813;
              25.61000061,0.000516295; 25.62000084,0.000504097; 25.62999916,
              0.000412351; 25.63999939,0.000381556; 25.64999962,-0.000299703;
              25.65999985,0.001323808; 25.67000008,-0.000282837; 25.68000031,-0.0006021;
              25.69000053,0.003285814; 25.70000076,0.000981206; 25.70999908,
              0.000356634; 25.71999931,0.000236039; 25.72999954,-0.000568586;
              25.73999977,-0.000567016; 25.75,0.000617979; 25.76000023,
              0.000514044; 25.77000046,0.000656555; 25.78000069,-0.000121483;
              25.79000092,-0.00094353; 25.79999924,0.000314975; 25.80999947,
              0.0004376; 25.81999969,0.000665088; 25.82999992,0.000838097;
              25.84000015,-0.000206108; 25.85000038,0.000997672; 25.86000061,
              0.000760324; 25.87000084,-0.000323552; 25.87999916,-6.98e-05;
              25.88999939,0.001873555; 25.89999962,0.001409404; 25.90999985,
              0.001468458; 25.92000008,-0.00040286; 25.93000031,-0.001786192;
              25.94000053,-0.000813365; 25.95000076,2.12e-05; 25.95999908,-2.19e-05;
              25.96999931,0.000171857; 25.97999954,-0.00019446; 25.98999977,-0.002934933;
              26,-0.000309766; 26.01000023,0.000838624; 26.02000046,-0.000883505;
              26.03000069,-0.000319315; 26.04000092,-0.001185786; 26.04999924,
              0.000254343; 26.05999947,-0.001547913; 26.06999969,-0.000653586;
              26.07999992,-0.000642415; 26.09000015,8.95e-05; 26.10000038,
              0.001971709; 26.11000061,-0.000304105; 26.12000084,-0.001103939;
              26.12999916,0.002018103; 26.13999939,-0.000175221; 26.14999962,
              0.000530872; 26.15999985,-0.000164998; 26.17000008,0.001735822;
              26.18000031,0.001193483; 26.19000053,-0.000404531; 26.20000076,-0.000296937;
              26.20999908,-0.000432041; 26.21999931,-4.6e-05; 26.22999954,
              0.000215868; 26.23999977,-0.001514861; 26.25,0.000617666;
              26.26000023,-0.000636189; 26.27000046,0.000149527; 26.28000069,-0.002211581;
              26.29000092,-0.002399317; 26.29999924,0.000704106; 26.30999947,-0.000639852;
              26.31999969,0.000809093; 26.32999992,0.00047083; 26.34000015,
              0.000355638; 26.35000038,0.000796832; 26.36000061,0.000198866;
              26.37000084,0.001529594; 26.37999916,-0.001119706; 26.38999939,-0.001213514;
              26.39999962,0.001016794; 26.40999985,0.000673999; 26.42000008,-0.000452264;
              26.43000031,0.000845342; 26.44000053,0.001505272; 26.45000076,
              0.001106006; 26.45999908,0.001958444; 26.46999931,-0.000423795;
              26.47999954,-0.000369561; 26.48999977,-0.000295713; 26.5,
              0.000944822; 26.51000023,-0.000298742; 26.52000046,-0.000188052;
              26.53000069,0.000822538; 26.54000092,0.000428364; 26.54999924,
              0.001168504; 26.55999947,0.000153405; 26.56999969,0.001443337;
              26.57999992,-0.001034594; 26.59000015,-0.000955099; 26.60000038,
              0.002261283; 26.61000061,-0.000696211; 26.62000084,-5.05e-05;
              26.62999916,0.000809733; 26.63999939,-0.000563245; 26.64999962,
              0.001865911; 26.65999985,0.000125032; 26.67000008,-0.000261481;
              26.68000031,0.00220985; 26.69000053,4.96e-05; 26.70000076,-0.001439277;
              26.70999908,0.001275597; 26.71999931,-0.000123441; 26.72999954,-0.000493803;
              26.73999977,0.000826349; 26.75,-0.000927952; 26.76000023,-0.000927721;
              26.77000046,-0.000244696; 26.78000069,0.001678622; 26.79000092,
              0.001808043; 26.79999924,0.000265264; 26.80999947,-0.000996279;
              26.81999969,0.000601785; 26.82999992,-0.00072194; 26.84000015,-0.002192195;
              26.85000038,-0.002812747; 26.86000061,-0.00096157; 26.87000084,
              0.000881595; 26.87999916,0.000625098; 26.88999939,-0.000295664;
              26.89999962,-0.000881195; 26.90999985,-0.002047518; 26.92000008,-0.001060392;
              26.93000031,-0.000894956; 26.94000053,0.000105439; 26.95000076,
              0.001477857; 26.95999908,-0.000113896; 26.96999931,-0.000465306;
              26.97999954,-0.000336276; 26.98999977,0.000840424; 27,0.000237089;
              27.01000023,-0.000181637; 27.02000046,-0.001114188; 27.03000069,-0.001104364;
              27.04000092,-0.001385672; 27.04999924,6.07e-05; 27.05999947,-0.001260424;
              27.06999969,-0.001128615; 27.07999992,0.00052908; 27.09000015,
              0.000995165; 27.10000038,-0.001463801; 27.11000061,-0.001005778;
              27.12000084,-0.001563886; 27.12999916,-0.000397194; 27.13999939,
              0.001246236; 27.14999962,0.000459293; 27.15999985,-0.001022472;
              27.17000008,-0.000583404; 27.18000031,-0.000159959; 27.19000053,-0.000361992;
              27.20000076,0.000579179; 27.20999908,0.001892717; 27.21999931,
              0.001661732; 27.22999954,-3.15e-05; 27.23999977,-0.001256645;
              27.25,-0.000107466; 27.26000023,0.000863347; 27.27000046,
              0.000769887; 27.28000069,0.000892731; 27.29000092,-0.001262053;
              27.29999924,3.34e-05; 27.30999947,0.000425483; 27.31999969,
              0.000974539; 27.32999992,-0.001443192; 27.34000015,0.000303893;
              27.35000038,-0.000306766; 27.36000061,0.00033192; 27.37000084,-0.001768187;
              27.37999916,-0.000579754; 27.38999939,-0.00082469; 27.39999962,-0.00029548;
              27.40999985,0.002012701; 27.42000008,0.000930671; 27.43000031,
              0.000572159; 27.44000053,-0.001011056; 27.45000076,-0.000404462;
              27.45999908,-0.000321729; 27.46999931,0.001829023; 27.47999954,
              0.000261087; 27.48999977,-0.000580927; 27.5,-0.001387511;
              27.51000023,-0.000209813; 27.52000046,-0.001135484; 27.53000069,
              0.001738963; 27.54000092,0.000753267; 27.54999924,9.91e-05;
              27.55999947,-5.6e-05; 27.56999969,-0.000342638; 27.57999992,
              0.00110026; 27.59000015,0.000254153; 27.60000038,0.001346153;
              27.61000061,-0.00086161; 27.62000084,0.001080213; 27.62999916,-0.000282989;
              27.63999939,7.37e-05; 27.64999962,-0.000191426; 27.65999985,
              0.000474941; 27.67000008,-0.001425028; 27.68000031,-0.000501105;
              27.69000053,-0.000618332; 27.70000076,-2.49e-05; 27.70999908,
              0.001324782; 27.71999931,-0.000466408; 27.72999954,-0.000910428;
              27.73999977,-0.000434992; 27.75,-0.000328752; 27.76000023,
              0.000204754; 27.77000046,-0.001201725; 27.78000069,-0.002288138;
              27.79000092,8.91e-05; 27.79999924,0.001130499; 27.80999947,-0.00013545;
              27.81999969,0.000203474; 27.82999992,0.001644843; 27.84000015,-0.000436857;
              27.85000038,0.000587617; 27.86000061,-0.000120581; 27.87000084,-0.000259007;
              27.87999916,-0.000186955; 27.88999939,0.000165061; 27.89999962,
              0.00016727; 27.90999985,-0.000145676; 27.92000008,0.000512818;
              27.93000031,-0.000383584; 27.94000053,0.000276846; 27.95000076,
              0.001059125; 27.95999908,0.000371769; 27.96999931,-3.82e-06;
              27.97999954,-0.000138102; 27.98999977,0.001383473; 28,-0.00023206;
              28.01000023,0.001878136; 28.02000046,-0.001221747; 28.03000069,-0.001465861;
              28.04000092,0.001893686; 28.04999924,-0.000648499; 28.05999947,-0.002335466;
              28.06999969,-4.46e-05; 28.07999992,0.001998172; 28.09000015,
              2.93e-05; 28.10000038,-0.000190929; 28.11000061,0.000380831;
              28.12000084,-0.000785866; 28.12999916,0.000223385; 28.13999939,
              0.00201587; 28.14999962,0.001116657; 28.15999985,0.000127315;
              28.17000008,0.002217674; 28.18000031,-0.000403997; 28.19000053,
              0.000694952; 28.20000076,0.002775875; 28.20999908,-0.001030856;
              28.21999931,-0.000339802; 28.22999954,0.001168856; 28.23999977,-0.000633084;
              28.25,-0.000743979; 28.26000023,-0.001649058; 28.27000046,
              0.000268836; 28.28000069,0.001717616; 28.29000092,3.15e-05;
              28.29999924,0.000407295; 28.30999947,0.000325666; 28.31999969,-0.001860307;
              28.32999992,-0.000417871; 28.34000015,0.000888236; 28.35000038,-0.000982455;
              28.36000061,9.15e-05; 28.37000084,-0.000166381; 28.37999916,
              0.001561603; 28.38999939,0.000125992; 28.39999962,0.001055251;
              28.40999985,0.000520334; 28.42000008,-0.000810519; 28.43000031,-0.000786319;
              28.44000053,-0.000449973; 28.45000076,-0.000150527; 28.45999908,
              0.001115724; 28.46999931,0.000558872; 28.47999954,-0.000349203;
              28.48999977,-0.00016382; 28.5,-0.000555389; 28.51000023,-0.000781189;
              28.52000046,0.001630968; 28.53000069,-0.000836106; 28.54000092,
              0.001843451; 28.54999924,-0.00074343; 28.55999947,0.000854032;
              28.56999969,-0.000102491; 28.57999992,0.000641827; 28.59000015,
              0.00040626; 28.60000038,-0.00048062; 28.61000061,-0.00068336;
              28.62000084,-0.002461919; 28.62999916,0.000194795; 28.63999939,
              0.000239882; 28.64999962,0.000606776; 28.65999985,0.000412919;
              28.67000008,-0.001359891; 28.68000031,-0.000605169; 28.69000053,-0.001237207;
              28.70000076,0.000192814; 28.70999908,-0.000232659; 28.71999931,
              0.000330846; 28.72999954,-0.00074528; 28.73999977,-0.002883898;
              28.75,-0.000377606; 28.76000023,-0.000452707; 28.77000046,
              0.000487623; 28.78000069,0.00011614; 28.79000092,0.000594558;
              28.79999924,-0.000554446; 28.80999947,0.000614509; 28.81999969,-0.000385999;
              28.82999992,0.001669387; 28.84000015,0.000404199; 28.85000038,
              8.42e-05; 28.86000061,-0.000291715; 28.87000084,0.001165453;
              28.87999916,0.000216958; 28.88999939,0.001222684; 28.89999962,
              0.000453489; 28.90999985,-0.001242862; 28.92000008,-0.000327063;
              28.93000031,0.001700239; 28.94000053,0.001557326; 28.95000076,
              0.002080284; 28.95999908,-0.001823899; 28.96999931,-0.000614745;
              28.97999954,0.001495794; 28.98999977,0.000729773; 29,-0.000706491;
              29.01000023,-0.000470828; 29.02000046,-0.000916047; 29.03000069,-0.000222372;
              29.04000092,7.14e-05; 29.04999924,-0.001295382; 29.05999947,-0.000365925;
              29.06999969,-0.000745652; 29.07999992,-0.000452183; 29.09000015,
              0.000647735; 29.10000038,-0.000582043; 29.11000061,0.000145708;
              29.12000084,-0.000352718; 29.12999916,0.000349342; 29.13999939,
              0.000147699; 29.14999962,-0.002195837; 29.15999985,-0.000674399;
              29.17000008,-0.000648277; 29.18000031,0.000282481; 29.19000053,
              0.00021402; 29.20000076,0.00142901; 29.20999908,0.000990771;
              29.21999931,-4.06e-05; 29.22999954,0.000875421; 29.23999977,-0.000299216;
              29.25,0.00117903; 29.26000023,0.000637404; 29.27000046,-0.000760046;
              29.28000069,0.000378122; 29.29000092,0.0005324; 29.29999924,-0.001128588;
              29.30999947,0.000356213; 29.31999969,-2.2e-05; 29.32999992,
              0.001325293; 29.34000015,-0.00053092; 29.35000038,-0.001819099;
              29.36000061,-0.00081862; 29.37000084,-0.000582132; 29.37999916,-0.000140086;
              29.38999939,0.000414259; 29.39999962,-0.001130111; 29.40999985,
              0.000781988; 29.42000008,0.000646072; 29.43000031,0.000891506;
              29.44000053,0.000366514; 29.45000076,-0.000900016; 29.45999908,-0.000387701;
              29.46999931,-0.00070949; 29.47999954,-0.001229198; 29.48999977,
              0.000408116; 29.5,-0.000684636; 29.51000023,-0.001128859;
              29.52000046,-0.001243587; 29.53000069,0.002156773; 29.54000092,
              0.000209079; 29.54999924,-0.000150313; 29.55999947,0.000468337;
              29.56999969,-0.000651992; 29.57999992,-0.000293245; 29.59000015,-0.001365371;
              29.60000038,-0.000734001; 29.61000061,0.001954019; 29.62000084,
              0.001592211; 29.62999916,-0.0008465; 29.63999939,-0.001494218;
              29.64999962,0.001438551; 29.65999985,0.00028391; 29.67000008,-0.002196979;
              29.68000031,0.000848652; 29.69000053,-7.92e-05; 29.70000076,-0.001271691;
              29.70999908,0.00112742; 29.71999931,-0.001442833; 29.72999954,-0.000587166;
              29.73999977,0.001055938; 29.75,-0.000920518; 29.76000023,
              0.000146419; 29.77000046,4.6e-05; 29.78000069,0.001208783;
              29.79000092,0.000490761; 29.79999924,0.000582002; 29.80999947,
              5.92e-05; 29.81999969,-0.000247724; 29.82999992,0.000156476;
              29.84000015,-0.001003701; 29.85000038,0.000485423; 29.86000061,
              0.001263396; 29.87000084,0.001021145; 29.87999916,-0.000240969;
              29.88999939,0.000665358; 29.89999962,0.000746075; 29.90999985,-0.000142781;
              29.92000008,0.000247244; 29.93000031,0.000125937; 29.94000053,
              0.000806343; 29.95000076,-0.001351285; 29.95999908,-0.000510312;
              29.96999931,0.000834014; 29.97999954,0.001761903; 29.98999977,
              0.000248533; 30,-0.000657713; 30.01000023,-0.00165514;
              30.02000046,-0.000288404; 30.03000069,0.000770681; 30.04000092,
              0.001260154; 30.04999924,-0.000343294; 30.05999947,-0.002441232;
              30.06999969,0.000536586; 30.07999992,0.002480911; 30.09000015,-0.000508398;
              30.10000038,0.000347762; 30.11000061,-0.000877558; 30.12000084,-0.001250033;
              30.12999916,-3.74e-05; 30.13999939,0.000103654; 30.14999962,-0.000668232;
              30.15999985,0.001290922; 30.17000008,0.000939341; 30.18000031,
              0.000203821; 30.19000053,-0.001245428; 30.20000076,-0.001195687;
              30.20999908,0.001317184; 30.21999931,-7.19e-05; 30.22999954,-0.00059531;
              30.23999977,0.00100068; 30.25,0.000137888; 30.26000023,
              0.000823844; 30.27000046,0.000277608; 30.28000069,0.001149803;
              30.29000092,-0.001979712; 30.29999924,0.000519515; 30.30999947,-0.001277354;
              30.31999969,0.001491166; 30.32999992,-0.000762339; 30.34000015,
              0.00046923; 30.35000038,0.000539016; 30.36000061,0.000726734;
              30.37000084,-0.001424431; 30.37999916,0.000203542; 30.38999939,
              0.002406998; 30.39999962,0.00022679; 30.40999985,-0.000611917;
              30.42000008,0.000361963; 30.43000031,-0.00071813; 30.44000053,
              0.000113632; 30.45000076,-0.000341358; 30.45999908,-0.000550362;
              30.46999931,0.001981861; 30.47999954,-0.000898801; 30.48999977,-0.001373056;
              30.5,-0.000479078; 30.51000023,0.001271524; 30.52000046,
              0.001043114; 30.53000069,0.000222942; 30.54000092,0.003189992;
              30.54999924,0.001490883; 30.55999947,-0.000388131; 30.56999969,-0.000174339;
              30.57999992,-0.000446709; 30.59000015,0.001680762; 30.60000038,
              0.000346376; 30.61000061,-0.001275496; 30.62000084,-0.000211138;
              30.62999916,0.001109617; 30.63999939,8.47e-05; 30.64999962,
              0.000683953; 30.65999985,0.001538052; 30.67000008,0.001282757;
              30.68000031,-0.000380595; 30.69000053,0.00244768; 30.70000076,
              0.000789419; 30.70999908,-0.000113986; 30.71999931,-0.001071548;
              30.72999954,0.001155774; 30.73999977,-0.000153336; 30.75,-1.63e-05;
              30.76000023,0.000681526; 30.77000046,-0.000592189; 30.78000069,-6.16e-05;
              30.79000092,-0.000411964; 30.79999924,-0.00103407; 30.80999947,
              0.001104302; 30.81999969,0.000716171; 30.82999992,-0.000427508;
              30.84000015,0.000885912; 30.85000038,0.000208538; 30.86000061,
              0.000406223; 30.87000084,-0.001019425; 30.87999916,0.000861065;
              30.88999939,-0.001548022; 30.89999962,5.74e-05; 30.90999985,-5.53e-05;
              30.92000008,0.000975813; 30.93000031,-0.001989241; 30.94000053,
              0.001658708; 30.95000076,0.000249301; 30.95999908,0.000358882;
              30.96999931,7.82e-05; 30.97999954,0.001541545; 30.98999977,-0.000125538;
              31,0.00188511; 31.01000023,-0.001075667; 31.02000046,-0.001556277;
              31.03000069,-0.001312518; 31.04000092,-0.00082227; 31.04999924,
              0.000320192; 31.05999947,0.000460762; 31.06999969,0.000987728;
              31.07999992,-0.00025718; 31.09000015,-0.001188963; 31.10000038,
              0.001190484; 31.11000061,-0.000814799; 31.12000084,-0.001069902;
              31.12999916,-0.000332406; 31.13999939,-0.000821401; 31.14999962,-1.43e-05;
              31.15999985,-0.00052009; 31.17000008,-0.001254185; 31.18000031,-0.001029073;
              31.19000053,-7.07e-05; 31.20000076,0.000800337; 31.20999908,
              0.001996386; 31.21999931,0.001145188; 31.22999954,0.001147822;
              31.23999977,-0.000663684; 31.25,-0.000429311; 31.26000023,
              0.000357385; 31.27000046,0.000744571; 31.28000069,-0.000683832;
              31.29000092,0.00223889; 31.29999924,-0.001435114; 31.30999947,-3.1e-05;
              31.31999969,0.002178077; 31.32999992,0.000525472; 31.34000015,
              0.001861683; 31.35000038,0.001101582; 31.36000061,-0.000589815;
              31.37000084,-0.000310674; 31.37999916,-0.000781263; 31.38999939,
              0.000378474; 31.39999962,-0.000241251; 31.40999985,0.000634152;
              31.42000008,7.49e-05; 31.43000031,-0.000183535; 31.44000053,
              0.000367606; 31.45000076,-0.001829295; 31.45999908,-0.00107812;
              31.46999931,-0.000370753; 31.47999954,-0.000325757; 31.48999977,
              0.000266996; 31.5,0.002380853; 31.51000023,-0.00018277;
              31.52000046,-0.000513269; 31.53000069,-0.000111978; 31.54000092,-0.001519197;
              31.54999924,0.000537931; 31.55999947,-0.001098298; 31.56999969,
              7.5e-05; 31.57999992,0.001485814; 31.59000015,-0.001826012;
              31.60000038,0.000870215; 31.61000061,0.000359703; 31.62000084,-0.000646786;
              31.62999916,-0.000453965; 31.63999939,0.001235125; 31.64999962,-0.000578048;
              31.65999985,-0.000885383; 31.67000008,0.000620754; 31.68000031,-0.001246856;
              31.69000053,-0.000395558; 31.70000076,0.000741318; 31.70999908,-0.000276654;
              31.71999931,-0.000193606; 31.72999954,0.000250301; 31.73999977,
              0.001392177; 31.75,0.001404394; 31.76000023,0.000981428;
              31.77000046,-0.001710813; 31.78000069,-0.00099783; 31.79000092,
              0.000647033; 31.79999924,-0.000554442; 31.80999947,0.000903243;
              31.81999969,0.001228678; 31.82999992,-0.001796697; 31.84000015,-0.000925975;
              31.85000038,-0.00013934; 31.86000061,0.000541873; 31.87000084,-0.000781765;
              31.87999916,0.000204703; 31.88999939,0.001005728; 31.89999962,
              0.000332192; 31.90999985,-0.001049705; 31.92000008,-0.000482801;
              31.93000031,-0.001222039; 31.94000053,-0.000367394; 31.95000076,
              0.001229192; 31.95999908,-0.000433286; 31.96999931,-0.002212255;
              31.97999954,0.00018235; 31.98999977,7.58e-05; 32,-0.000318406;
              32.00999832,0.000311115; 32.02000046,0.000109731; 32.02999878,
              5.24e-05; 32.04000092,0.000406208; 32.04999924,-0.000617989;
              32.06000137,-0.00022652; 32.06999969,0.001353289; 32.08000183,-0.001482689;
              32.09000015,-0.000808238; 32.09999847,-0.000659561; 32.11000061,-0.001545373;
              32.11999893,3.35e-05; 32.13000107,-0.001968889; 32.13999939,-0.000234328;
              32.15000153,-1.01e-05; 32.15999985,0.00050052; 32.16999817,-0.000531916;
              32.18000031,-0.00083863; 32.18999863,0.001645325; 32.20000076,
              0.000796153; 32.20999908,-0.000892027; 32.22000122,-0.0015053;
              32.22999954,0.000377889; 32.24000168,0.000568068; 32.25,-0.000848063;
              32.25999832,0.000600565; 32.27000046,2.51e-05; 32.27999878,
              0.002712753; 32.29000092,0.000883558; 32.29999924,0.000690943;
              32.31000137,-0.000207407; 32.31999969,0.00109875; 32.33000183,
              0.00030815; 32.34000015,-0.000709314; 32.34999847,0.001488763;
              32.36000061,-0.001052084; 32.36999893,0.000534352; 32.38000107,-0.000102858;
              32.38999939,-0.00087685; 32.40000153,0.000217767; 32.40999985,-0.000124067;
              32.41999817,-0.000531145; 32.43000031,0.001800777; 32.43999863,-0.000266486;
              32.45000076,-0.001321382; 32.45999908,-0.002430091; 32.47000122,
              0.000310153; 32.47999954,-0.00043727; 32.49000168,0.001443129;
              32.5,0.000898143; 32.50999832,-0.000145458; 32.52000046,-0.000662274;
              32.52999878,0.000368469; 32.54000092,-0.000866789; 32.54999924,
              5.96e-05; 32.56000137,0.001119806; 32.56999969,-0.000646883;
              32.58000183,-0.000374583; 32.59000015,-0.000321188; 32.59999847,
              0.000598274; 32.61000061,-0.000778446; 32.61999893,0.000923789;
              32.63000107,-0.000292627; 32.63999939,-0.000141387; 32.65000153,-0.000783661;
              32.65999985,0.000469941; 32.66999817,0.000424707; 32.68000031,-0.000181956;
              32.68999863,0.000425281; 32.70000076,0.000505432; 32.70999908,
              0.000282353; 32.72000122,5.18e-05; 32.72999954,-0.001032942;
              32.74000168,0.000958924; 32.75,-0.000707014; 32.75999832,-0.000358052;
              32.77000046,-0.001585972; 32.77999878,4.08e-05; 32.79000092,
              0.001491317; 32.79999924,0.000141286; 32.81000137,0.000499931;
              32.81999969,-0.000558347; 32.83000183,-0.003231148; 32.84000015,
              0.000848464; 32.84999847,-0.000189961; 32.86000061,-0.000711372;
              32.86999893,0.001642102; 32.88000107,-0.001386378; 32.88999939,
              0.000746494; 32.90000153,0.00063016; 32.90999985,-0.000654102;
              32.91999817,1.63e-05; 32.93000031,-0.001846415; 32.93999863,-0.00105719;
              32.95000076,0.000104203; 32.95999908,-0.000853132; 32.97000122,
              0.001205661; 32.97999954,-0.001476154; 32.99000168,-6.31e-05; 33,
              0.001193025; 33.00999832,0.000282602; 33.02000046,-0.000643575;
              33.02999878,-0.000482627; 33.04000092,-0.000209133; 33.04999924,-0.000696895;
              33.06000137,0.000809948; 33.06999969,-0.001006729; 33.08000183,
              0.000314501; 33.09000015,-0.000441597; 33.09999847,0.000501403;
              33.11000061,0.001893542; 33.11999893,0.000473712; 33.13000107,
              1.65e-05; 33.13999939,0.000846277; 33.15000153,-3.64e-05;
              33.15999985,0.000219914; 33.16999817,-0.000338474; 33.18000031,-0.001297415;
              33.18999863,0.000203348; 33.20000076,-0.000520615; 33.20999908,-0.000495878;
              33.22000122,-0.000206396; 33.22999954,-0.00058203; 33.24000168,
              0.000279353; 33.25,-0.000325418; 33.25999832,0.000415551;
              33.27000046,-0.001077319; 33.27999878,-0.001498712; 33.29000092,-0.000429345;
              33.29999924,0.000458752; 33.31000137,0.000385561; 33.31999969,
              0.000516051; 33.33000183,0.000957408; 33.34000015,-0.000568005;
              33.34999847,-0.000165652; 33.36000061,-0.000175458; 33.36999893,-0.002068078;
              33.38000107,-0.000735039; 33.38999939,-0.000418093; 33.40000153,-0.003448451;
              33.40999985,0.000618941; 33.41999817,-0.000840511; 33.43000031,
              0.001495931; 33.43999863,-0.000232941; 33.45000076,0.001284791;
              33.45999908,0.001077451; 33.47000122,0.002227856; 33.47999954,-0.001118927;
              33.49000168,-0.000520286; 33.5,0.001154806; 33.50999832,-0.001454037;
              33.52000046,0.000275118; 33.52999878,-0.001276107; 33.54000092,
              0.0002978; 33.54999924,0.000506292; 33.56000137,0.000553616;
              33.56999969,-3.96e-05; 33.58000183,0.002167334; 33.59000015,
              0.000253118; 33.59999847,0.000446953; 33.61000061,0.002306313;
              33.61999893,-0.000130772; 33.63000107,0.001895252; 33.63999939,
              0.002295124; 33.65000153,0.000834044; 33.65999985,-0.001128629;
              33.66999817,-0.000295165; 33.68000031,0.000374952; 33.68999863,
              0.000718581; 33.70000076,-0.001336926; 33.70999908,0.001025348;
              33.72000122,-0.000102115; 33.72999954,0.000318208; 33.74000168,
              0.000911497; 33.75,-0.000452222; 33.75999832,0.001551091;
              33.77000046,-2.86e-05; 33.77999878,-4.53e-05; 33.79000092,-0.000180347;
              33.79999924,0.000285049; 33.81000137,0.000502249; 33.81999969,
              0.00104851; 33.83000183,-0.000586359; 33.84000015,-0.000504907;
              33.84999847,0.000471944; 33.86000061,0.002187235; 33.86999893,-0.000306922;
              33.88000107,0.000963082; 33.88999939,0.001118933; 33.90000153,-0.0001021;
              33.90999985,0.000585399; 33.91999817,0.000201102; 33.93000031,
              0.000636247; 33.93999863,-0.001841338; 33.95000076,0.001082481;
              33.95999908,0.000324029; 33.97000122,-0.00035099; 33.97999954,-0.001446133;
              33.99000168,0.000804654; 34,-0.00098525; 34.00999832,-0.001953043;
              34.02000046,-0.001040863; 34.02999878,0.000948007; 34.04000092,
              0.000614175; 34.04999924,-0.001616006; 34.06000137,-0.000502279;
              34.06999969,0.0002637; 34.08000183,-0.000648375; 34.09000015,
              0.000305538; 34.09999847,-0.001142149; 34.11000061,-0.000611655;
              34.11999893,-0.000104494; 34.13000107,0.001360414; 34.13999939,-0.001538755;
              34.15000153,0.000226316; 34.15999985,-0.001384323; 34.16999817,-0.000833791;
              34.18000031,0.001173152; 34.18999863,-0.000263273; 34.20000076,-0.000447846;
              34.20999908,-0.00109422; 34.22000122,-0.000892768; 34.22999954,
              0.000367484; 34.24000168,-5.33e-07; 34.25,-0.001835763;
              34.25999832,-7.47e-05; 34.27000046,-0.000116437; 34.27999878,-0.00155777;
              34.29000092,-0.003405897; 34.29999924,-6.63e-05; 34.31000137,
              0.001799774; 34.31999969,0.000150721; 34.33000183,0.001919362;
              34.34000015,-0.000298837; 34.34999847,0.000836502; 34.36000061,-0.000498581;
              34.36999893,0.000126941; 34.38000107,-0.000897667; 34.38999939,
              0.002092035; 34.40000153,-0.000424167; 34.40999985,0.000624828;
              34.41999817,0.00032125; 34.43000031,0.001620981; 34.43999863,-0.002356205;
              34.45000076,0.001060308; 34.45999908,0.000686888; 34.47000122,-0.001089182;
              34.47999954,0.000314436; 34.49000168,0.000249705; 34.5,
              0.001260404; 34.50999832,-0.001595113; 34.52000046,0.000333789;
              34.52999878,-0.00089373; 34.54000092,-0.002099341; 34.54999924,
              2.6e-05; 34.56000137,0.000701844; 34.56999969,0.001405142;
              34.58000183,0.000479546; 34.59000015,0.000251779; 34.59999847,
              0.002513772; 34.61000061,-0.00151171; 34.61999893,0.001850957;
              34.63000107,-0.000126295; 34.63999939,-0.000235403; 34.65000153,-0.000196529;
              34.65999985,0.001131295; 34.66999817,-0.000223389; 34.68000031,-0.001697961;
              34.68999863,0.00067538; 34.70000076,-0.00020435; 34.70999908,
              0.000106946; 34.72000122,-0.00019159; 34.72999954,-0.000164345;
              34.74000168,-0.000552572; 34.75,-4.42e-05; 34.75999832,-0.000522236;
              34.77000046,-0.00170764; 34.77999878,0.000150288; 34.79000092,-0.002025535;
              34.79999924,0.001931611; 34.81000137,-0.000451303; 34.81999969,-5.75e-05;
              34.83000183,-0.000356058; 34.84000015,0.002142554; 34.84999847,-0.00081596;
              34.86000061,-7.87e-05; 34.86999893,-0.000408128; 34.88000107,-0.001137558;
              34.88999939,0.000935741; 34.90000153,0.001467289; 34.90999985,
              7.5e-05; 34.91999817,-0.00082539; 34.93000031,0.000737483;
              34.93999863,0.000484697; 34.95000076,-0.001901676; 34.95999908,-0.001214904;
              34.97000122,-0.001588251; 34.97999954,0.00135029; 34.99000168,-0.001696625;
              35,4.27e-05; 35.00999832,0.000210039; 35.02000046,-0.001961771;
              35.02999878,-0.002084112; 35.04000092,0.000742365; 35.04999924,-0.000204658;
              35.06000137,-0.000736331; 35.06999969,4.08e-05; 35.08000183,-0.000123571;
              35.09000015,-0.000549283; 35.09999847,-0.001353017; 35.11000061,-0.000267208;
              35.11999893,0.001397205; 35.13000107,-0.000384475; 35.13999939,-0.000342145;
              35.15000153,-0.00202482; 35.15999985,-0.000423479; 35.16999817,-0.000415105;
              35.18000031,0.001500325; 35.18999863,0.001265435; 35.20000076,
              0.000513703; 35.20999908,0.000471548; 35.22000122,-0.000270838;
              35.22999954,-1.14e-05; 35.24000168,0.000349848; 35.25,0.002561495;
              35.25999832,0.002041012; 35.27000046,0.000761646; 35.27999878,-0.000271416;
              35.29000092,0.00087007; 35.29999924,-0.00014555; 35.31000137,
              0.000764565; 35.31999969,-0.001508977; 35.33000183,-0.00020268;
              35.34000015,-0.001523367; 35.34999847,-0.000487207; 35.36000061,
              0.000969373; 35.36999893,0.001143181; 35.38000107,-0.002011667;
              35.38999939,0.002018; 35.40000153,0.001371296; 35.40999985,
              0.001044365; 35.41999817,0.001434745; 35.43000031,0.000407926;
              35.43999863,0.001402859; 35.45000076,-0.002961048; 35.45999908,
              0.001115601; 35.47000122,-6.64e-06; 35.47999954,-0.000427448;
              35.49000168,-0.002337734; 35.5,0.000764474; 35.50999832,
              0.001868131; 35.52000046,-0.000470328; 35.52999878,5.27e-05;
              35.54000092,5.04e-05; 35.54999924,-0.001737122; 35.56000137,-0.00033998;
              35.56999969,-0.000431504; 35.58000183,0.001666108; 35.59000015,
              0.000808763; 35.59999847,0.000323808; 35.61000061,-0.000242269;
              35.61999893,0.000263854; 35.63000107,-0.001963349; 35.63999939,-0.000375894;
              35.65000153,0.0007504; 35.65999985,0.000995788; 35.66999817,
              0.00034901; 35.68000031,0.000596817; 35.68999863,0.000176633;
              35.70000076,-0.000405853; 35.70999908,9.38e-05; 35.72000122,
              0.000644295; 35.72999954,0.000185884; 35.74000168,0.002315931;
              35.75,-0.000873072; 35.75999832,0.000178182; 35.77000046,
              0.000888711; 35.77999878,-0.000101999; 35.79000092,0.000401436;
              35.79999924,-0.001062093; 35.81000137,-0.001209901; 35.81999969,-0.000299666;
              35.83000183,-0.000205692; 35.84000015,0.000559129; 35.84999847,
              0.000527241; 35.86000061,0.001467363; 35.86999893,0.000348893;
              35.88000107,0.00092307; 35.88999939,0.002645711; 35.90000153,
              0.000357417; 35.90999985,-0.001924187; 35.91999817,1.52e-05;
              35.93000031,-0.000483475; 35.93999863,-0.000756786; 35.95000076,-0.000331194;
              35.95999908,-0.000591346; 35.97000122,-0.000893786; 35.97999954,
              0.000490828; 35.99000168,0.000574218; 36,0.001118875; 36.00999832,
              1.29e-05; 36.02000046,-0.001771954; 36.02999878,-0.001369816;
              36.04000092,-0.000705524; 36.04999924,-0.000197418; 36.06000137,-0.000953239;
              36.06999969,0.00025151; 36.08000183,0.000409237; 36.09000015,
              0.000533464; 36.09999847,-0.001866149; 36.11000061,0.001375787;
              36.11999893,0.00176186; 36.13000107,-0.001274763; 36.13999939,-0.000111312;
              36.15000153,-0.000507232; 36.15999985,-0.000310951; 36.16999817,-5.24e-05;
              36.18000031,0.000389239; 36.18999863,0.001634019; 36.20000076,
              0.001155687; 36.20999908,0.000369873; 36.22000122,0.000226665;
              36.22999954,-0.000107867; 36.24000168,-5.58e-05; 36.25,-0.000125324;
              36.25999832,-0.000278019; 36.27000046,0.000697351; 36.27999878,-0.001728527;
              36.29000092,-0.001660485; 36.29999924,0.00064892; 36.31000137,
              0.000239738; 36.31999969,-0.000401647; 36.33000183,-0.000582817;
              36.34000015,0.000813326; 36.34999847,0.001165029; 36.36000061,-0.000749962;
              36.36999893,-0.000333737; 36.38000107,0.000140623; 36.38999939,
              0.002029129; 36.40000153,0.002893848; 36.40999985,-0.001552047;
              36.41999817,0.000237383; 36.43000031,0.001544342; 36.43999863,-0.0004197;
              36.45000076,-0.000129492; 36.45999908,-0.000558833; 36.47000122,
              0.000782715; 36.47999954,0.000208873; 36.49000168,-0.000140479;
              36.5,-0.000322722; 36.50999832,6.06e-05; 36.52000046,-0.000323461;
              36.52999878,-0.000183282; 36.54000092,0.000774769; 36.54999924,
              0.000432093; 36.56000137,-0.001115546; 36.56999969,-0.000137631;
              36.58000183,-0.001935621; 36.59000015,0.000187015; 36.59999847,
              0.001149149; 36.61000061,-0.000553267; 36.61999893,-0.000514054;
              36.63000107,0.000225712; 36.63999939,-0.002441439; 36.65000153,-0.000435018;
              36.65999985,0.001153061; 36.66999817,-0.002569573; 36.68000031,
              0.00285484; 36.68999863,-0.002494209; 36.70000076,-0.001562504;
              36.70999908,-0.001141542; 36.72000122,-0.000451405; 36.72999954,-0.000182969;
              36.74000168,-0.001319458; 36.75,-0.001423222; 36.75999832,-0.000123346;
              36.77000046,0.000317387; 36.77999878,0.000915277; 36.79000092,-0.000331795;
              36.79999924,0.001703166; 36.81000137,0.000988151; 36.81999969,
              0.000822256; 36.83000183,0.000733196; 36.84000015,0.000294482;
              36.84999847,-0.000975111; 36.86000061,0.000755828; 36.86999893,-0.000926373;
              36.88000107,-0.000445545; 36.88999939,-0.000197426; 36.90000153,
              0.000280717; 36.90999985,0.000822721; 36.91999817,0.00152869;
              36.93000031,-0.001075494; 36.93999863,1.3e-05; 36.95000076,-0.000194832;
              36.95999908,0.001458997; 36.97000122,-0.000305437; 36.97999954,
              0.000154754; 36.99000168,-0.001183595; 37,0.001660021;
              37.00999832,7.61e-05; 37.02000046,0.000448013; 37.02999878,-0.000978432;
              37.04000092,-0.000106064; 37.04999924,0.000263832; 37.06000137,-0.000908891;
              37.06999969,0.000923736; 37.08000183,-0.000601302; 37.09000015,-0.000302942;
              37.09999847,0.000131661; 37.11000061,-0.000902629; 37.11999893,-0.00059672;
              37.13000107,-0.001253824; 37.13999939,-0.000384684; 37.15000153,
              0.000849549; 37.15999985,0.000800048; 37.16999817,-0.000450338;
              37.18000031,-0.001389665; 37.18999863,-0.000457306; 37.20000076,-0.000936644;
              37.20999908,-0.001089168; 37.22000122,0.001177293; 37.22999954,-0.00052253;
              37.24000168,-0.000277927; 37.25,-0.00031656; 37.25999832,
              0.001004796; 37.27000046,-0.001038311; 37.27999878,-0.000897927;
              37.29000092,0.001219743; 37.29999924,9.98e-05; 37.31000137,
              0.000256985; 37.31999969,-0.00194258; 37.33000183,0.000374744;
              37.34000015,0.000829987; 37.34999847,0.001613773; 37.36000061,
              0.000669145; 37.36999893,-0.001116697; 37.38000107,-0.000511969;
              37.38999939,-0.001036477; 37.40000153,0.000473243; 37.40999985,
              0.000166028; 37.41999817,-0.000782556; 37.43000031,0.00071155;
              37.43999863,-0.001285397; 37.45000076,3.02e-05; 37.45999908,
              0.001733079; 37.47000122,0.001126063; 37.47999954,-0.001319971;
              37.49000168,9.01e-05; 37.5,0.000803197; 37.50999832,0.001503011;
              37.52000046,-0.002114757; 37.52999878,0.000558522; 37.54000092,
              1.18e-05; 37.54999924,-0.001786655; 37.56000137,0.000299404;
              37.56999969,-0.000960884; 37.58000183,-0.000962375; 37.59000015,
              0.001136249; 37.59999847,-0.001069356; 37.61000061,-0.000119575;
              37.61999893,-0.002594856; 37.63000107,0.00065548; 37.63999939,-0.001321167;
              37.65000153,0.000328038; 37.65999985,-0.000381372; 37.66999817,-0.000149636;
              37.68000031,-0.000326958; 37.68999863,-0.000248501; 37.70000076,-0.000482481;
              37.70999908,-0.000634635; 37.72000122,-0.000211594; 37.72999954,-0.000624477;
              37.74000168,-0.000683022; 37.75,-0.000218301; 37.75999832,
              1.12e-05; 37.77000046,0.000262381; 37.77999878,0.001845463;
              37.79000092,-0.001009892; 37.79999924,-0.000432997; 37.81000137,
              0.002494672; 37.81999969,-0.001757922; 37.83000183,-0.001014297;
              37.84000015,0.001528717; 37.84999847,0.000318138; 37.86000061,-0.00024549;
              37.86999893,4.68e-05; 37.88000107,-0.000374586; 37.88999939,
              0.000148191; 37.90000153,0.000375602; 37.90999985,-0.000834108;
              37.91999817,0.000341117; 37.93000031,0.000107873; 37.93999863,
              0.000506469; 37.95000076,-0.001459369; 37.95999908,-0.00101446;
              37.97000122,0.000789678; 37.97999954,0.000965501; 37.99000168,
              0.000673808; 38,-2.31e-05; 38.00999832,0.000690732; 38.02000046,
              0.000334701; 38.02999878,-0.000204618; 38.04000092,-0.000953981;
              38.04999924,0.000808424; 38.06000137,-0.000114258; 38.06999969,-0.000348865;
              38.08000183,-0.001693773; 38.09000015,0.001877869; 38.09999847,-0.000253162;
              38.11000061,-0.002021847; 38.11999893,-0.001346047; 38.13000107,-0.000859471;
              38.13999939,-0.000181071; 38.15000153,-0.000169239; 38.15999985,
              0.001780455; 38.16999817,0.000385941; 38.18000031,-0.000359347;
              38.18999863,-0.000269065; 38.20000076,0.00098335; 38.20999908,
              0.000122765; 38.22000122,0.000610227; 38.22999954,-9.02e-05;
              38.24000168,-0.000599418; 38.25,-8.6e-05; 38.25999832,0.0016051;
              38.27000046,-0.000583593; 38.27999878,-0.000520126; 38.29000092,-0.000340688;
              38.29999924,0.000781141; 38.31000137,-0.001449015; 38.31999969,-0.000180365;
              38.33000183,0.001491511; 38.34000015,-0.001957886; 38.34999847,
              0.001002008; 38.36000061,0.001006719; 38.36999893,0.000752945;
              38.38000107,-0.000982201; 38.38999939,-0.001640927; 38.40000153,-0.000881543;
              38.40999985,-0.001407844; 38.41999817,-7.36e-05; 38.43000031,-0.000843161;
              38.43999863,-0.001582375; 38.45000076,0.001160059; 38.45999908,-7.88e-05;
              38.47000122,-0.000424064; 38.47999954,0.00054492; 38.49000168,
              5.63e-05; 38.5,0.000157522; 38.50999832,-0.001126938; 38.52000046,
              1.11e-06; 38.52999878,-0.000221547; 38.54000092,0.001072549;
              38.54999924,0.000196911; 38.56000137,0.00036197; 38.56999969,-0.001131215;
              38.58000183,-0.000737744; 38.59000015,0.00019048; 38.59999847,-0.000591324;
              38.61000061,0.000676558; 38.61999893,0.000438602; 38.63000107,
              0.001239866; 38.63999939,-6.05e-05; 38.65000153,0.00016612;
              38.65999985,-0.000865526; 38.66999817,0.000107924; 38.68000031,
              0.001366138; 38.68999863,5.3e-05; 38.70000076,0.000493345;
              38.70999908,0.000443516; 38.72000122,0.000754738; 38.72999954,-0.000342837;
              38.74000168,0.000684794; 38.75,0.000709592; 38.75999832,
              0.001200539; 38.77000046,0.000116725; 38.77999878,0.000444742;
              38.79000092,-0.002338209; 38.79999924,-0.00132747; 38.81000137,
              0.000412464; 38.81999969,0.001390463; 38.83000183,-0.000603173;
              38.84000015,0.000169142; 38.84999847,0.000503371; 38.86000061,-0.000830211;
              38.86999893,0.000322701; 38.88000107,-0.00203917; 38.88999939,
              0.001546759; 38.90000153,0.002346906; 38.90999985,8.55e-05;
              38.91999817,-0.000126243; 38.93000031,0.000554551; 38.93999863,
              0.001117637; 38.95000076,0.000762473; 38.95999908,-0.000250387;
              38.97000122,0.000252378; 38.97999954,0.00064179; 38.99000168,-0.000885712;
              39,0.000148804; 39.00999832,-0.000525526; 39.02000046,-0.000522311;
              39.02999878,-0.000123606; 39.04000092,-0.000113692; 39.04999924,
              0.000154705; 39.06000137,-0.00129976; 39.06999969,-0.000878336;
              39.08000183,0.001190225; 39.09000015,0.000421548; 39.09999847,-0.00041779;
              39.11000061,-0.000672571; 39.11999893,-0.00204819; 39.13000107,
              0.000425121; 39.13999939,-0.00153555; 39.15000153,0.002257194;
              39.15999985,-0.002574959; 39.16999817,-0.000280916; 39.18000031,-0.000804336;
              39.18999863,0.000396873; 39.20000076,-0.001216651; 39.20999908,
              0.00069599; 39.22000122,0.001139031; 39.22999954,0.000712094;
              39.24000168,0.00285782; 39.25,0.000645589; 39.25999832,0.00042459;
              39.27000046,-0.000244844; 39.27999878,-0.001346065; 39.29000092,-0.000149121;
              39.29999924,0.00141544; 39.31000137,-0.002066578; 39.31999969,
              0.000339027; 39.33000183,0.000827554; 39.34000015,-0.000306576;
              39.34999847,-0.000218719; 39.36000061,0.001335509; 39.36999893,-0.000386081;
              39.38000107,0.001464199; 39.38999939,0.001239673; 39.40000153,-0.000871653;
              39.40999985,-0.000291596; 39.41999817,-0.000698848; 39.43000031,-0.000243957;
              39.43999863,-0.001234963; 39.45000076,0.000793459; 39.45999908,-8.95e-05;
              39.47000122,0.000351798; 39.47999954,0.000569407; 39.49000168,-0.000986812;
              39.5,0.000880626; 39.50999832,0.001683019; 39.52000046,-0.000166985;
              39.52999878,-0.000488943; 39.54000092,0.000791641; 39.54999924,-0.000418187;
              39.56000137,0.001138492; 39.56999969,-0.000698956; 39.58000183,-0.000748328;
              39.59000015,0.001804162; 39.59999847,-0.000761132; 39.61000061,-0.000154698;
              39.61999893,-0.000152007; 39.63000107,0.000154824; 39.63999939,
              0.000115049; 39.65000153,0.001180734; 39.65999985,0.000872359;
              39.66999817,0.000227724; 39.68000031,-0.001703858; 39.68999863,-0.000596735;
              39.70000076,-0.000680155; 39.70999908,0.001280949; 39.72000122,
              0.003507148; 39.72999954,0.000163047; 39.74000168,0.001187317;
              39.75,-0.001175152; 39.75999832,0.000383914; 39.77000046,7.31e-05;
              39.77999878,-0.000810591; 39.79000092,8.94e-05; 39.79999924,-0.000265295;
              39.81000137,-0.000797217; 39.81999969,0.000549743; 39.83000183,-2.16e-05;
              39.84000015,0.001263548; 39.84999847,-0.000185391; 39.86000061,-0.000447935;
              39.86999893,-0.000269857; 39.88000107,0.000463343; 39.88999939,-0.000380374;
              39.90000153,0.000245484; 39.90999985,0.00039997; 39.91999817,-0.000622964;
              39.93000031,-0.000235278; 39.93999863,-0.000395256; 39.95000076,-0.000421382;
              39.95999908,0.001755835; 39.97000122,-0.000337077; 39.97999954,-0.000531036;
              39.99000168,0.00132289; 40,0.001481992; 40.00999832,-0.000135602;
              40.02000046,-0.001604803; 40.02999878,0.000389825; 40.04000092,
              0.001510262; 40.04999924,-0.000560997; 40.06000137,-0.000250727;
              40.06999969,-0.001672322; 40.08000183,-0.00223159; 40.09000015,-0.000150212;
              40.09999847,-0.000157434; 40.11000061,-0.001488498; 40.11999893,-0.001652394;
              40.13000107,0.000511863; 40.13999939,-0.000545795; 40.15000153,-0.001632306;
              40.15999985,-0.000605532; 40.16999817,-0.001293383; 40.18000031,-0.000357796;
              40.18999863,-0.001531337; 40.20000076,0.00031217; 40.20999908,
              0.000273823; 40.22000122,0.000875828; 40.22999954,0.00085335;
              40.24000168,0.000439245; 40.25,-0.001349496; 40.25999832,
              0.000443577; 40.27000046,0.000875966; 40.27999878,-0.001173875;
              40.29000092,0.001659378; 40.29999924,0.000844699; 40.31000137,-0.001457851;
              40.31999969,-0.001105058; 40.33000183,-0.00099468; 40.34000015,
              0.001672389; 40.34999847,0.000470751; 40.36000061,0.002480901;
              40.36999893,-0.001900211; 40.38000107,0.000364791; 40.38999939,
              0.001488184; 40.40000153,-0.000933751; 40.40999985,-0.001239402;
              40.41999817,0.000480708; 40.43000031,0.00041864; 40.43999863,-0.001222861;
              40.45000076,-0.000379205; 40.45999908,0.001175801; 40.47000122,-0.000894346;
              40.47999954,0.000885534; 40.49000168,-0.00068405; 40.5,
              0.000973977; 40.50999832,0.001004099; 40.52000046,-0.00216763;
              40.52999878,-0.000558901; 40.54000092,-0.00090769; 40.54999924,
              0.001059488; 40.56000137,-0.000979555; 40.56999969,-0.001158673;
              40.58000183,0.000873316; 40.59000015,0.000399145; 40.59999847,-0.000729495;
              40.61000061,0.001889305; 40.61999893,-0.000927667; 40.63000107,
              0.000573214; 40.63999939,-0.000693189; 40.65000153,0.000141176;
              40.65999985,-0.0005188; 40.66999817,-0.000513801; 40.68000031,-0.000304432;
              40.68999863,-0.001082276; 40.70000076,-5.74e-05; 40.70999908,-0.001370904;
              40.72000122,-0.000488832; 40.72999954,-0.000360353; 40.74000168,-0.000225102;
              40.75,0.001803514; 40.75999832,-0.002226841; 40.77000046,-0.000637991;
              40.77999878,-0.000494797; 40.79000092,-9.91e-05; 40.79999924,
              0.00023732; 40.81000137,-0.000658864; 40.81999969,-0.000343924;
              40.83000183,0.000391017; 40.84000015,-0.000136872; 40.84999847,-0.00149136;
              40.86000061,-3.08e-06; 40.86999893,1.29e-05; 40.88000107,
              0.000679586; 40.88999939,-0.000222051; 40.90000153,0.000745237;
              40.90999985,-0.000997716; 40.91999817,0.000298658; 40.93000031,
              0.000976712; 40.93999863,-0.001656452; 40.95000076,-0.000711281;
              40.95999908,0.00026361; 40.97000122,0.002575821; 40.97999954,
              0.000205751; 40.99000168,-0.001003817; 41,-0.000366147;
              41.00999832,-0.002272625; 41.02000046,0.000116946; 41.02999878,
              0.0006912; 41.04000092,-0.000579926; 41.04999924,-5.88e-05;
              41.06000137,-0.000161801; 41.06999969,0.000902001; 41.08000183,
              0.002262203; 41.09000015,0.001161568; 41.09999847,-0.000509082;
              41.11000061,0.001317971; 41.11999893,-0.000407561; 41.13000107,
              2.1e-05; 41.13999939,-0.000162762; 41.15000153,-0.001727293;
              41.15999985,0.000252733; 41.16999817,-0.001502753; 41.18000031,-0.000524359;
              41.18999863,0.000802686; 41.20000076,2.42e-05; 41.20999908,-0.000640402;
              41.22000122,-4.19e-05; 41.22999954,-0.000619378; 41.24000168,
              0.001002752; 41.25,-0.001274262; 41.25999832,-0.001054309;
              41.27000046,-0.001426677; 41.27999878,-0.001940293; 41.29000092,
              0.000320589; 41.29999924,-0.000597986; 41.31000137,0.001000017;
              41.31999969,0.001116532; 41.33000183,-0.000242569; 41.34000015,-0.001127091;
              41.34999847,0.000434351; 41.36000061,0.000611923; 41.36999893,-7.14e-05;
              41.38000107,0.000899768; 41.38999939,-0.001660267; 41.40000153,
              0.000728538; 41.40999985,-0.0009612; 41.41999817,-0.000372542;
              41.43000031,-0.000675614; 41.43999863,-0.000380451; 41.45000076,-0.000914567;
              41.45999908,-0.000792362; 41.47000122,-0.00069018; 41.47999954,-0.000492707;
              41.49000168,0.003218904; 41.5,0.001200735; 41.50999832,
              0.000104925; 41.52000046,-0.000875592; 41.52999878,0.000687913;
              41.54000092,0.0001141; 41.54999924,3.5e-05; 41.56000137,
              0.000950306; 41.56999969,0.000442163; 41.58000183,0.000143893;
              41.59000015,-0.000913046; 41.59999847,0.003068551; 41.61000061,-0.000147333;
              41.61999893,-0.001573665; 41.63000107,-0.002578697; 41.63999939,-0.001145042;
              41.65000153,0.000751635; 41.65999985,-0.000536365; 41.66999817,
              0.00032028; 41.68000031,-4.07e-05; 41.68999863,0.000845967;
              41.70000076,-0.000990471; 41.70999908,0.00181127; 41.72000122,-0.000664765;
              41.72999954,0.000277346; 41.74000168,0.00036865; 41.75,
              0.000777681; 41.75999832,0.000294911; 41.77000046,0.000664647;
              41.77999878,0.001257386; 41.79000092,-0.000289394; 41.79999924,-0.000187293;
              41.81000137,9.97e-05; 41.81999969,-0.000437712; 41.83000183,
              0.000881868; 41.84000015,-0.0008939; 41.84999847,0.00034233;
              41.86000061,0.001111703; 41.86999893,-0.002346851; 41.88000107,-0.001601771;
              41.88999939,-0.000945964; 41.90000153,-3.22e-05; 41.90999985,-0.001228701;
              41.91999817,0.000420823; 41.93000031,0.000879985; 41.93999863,-0.001224556;
              41.95000076,0.000219608; 41.95999908,0.0017679; 41.97000122,-0.00058536;
              41.97999954,-0.000699293; 41.99000168,0.000303286; 42,-0.001364565;
              42.00999832,0.001253379; 42.02000046,-0.000476139; 42.02999878,
              0.000673642; 42.04000092,0.000637287; 42.04999924,-0.000381838;
              42.06000137,0.000385852; 42.06999969,0.000666011; 42.08000183,-0.000318257;
              42.09000015,0.00175445; 42.09999847,0.000737914; 42.11000061,-0.000584352;
              42.11999893,0.001757633; 42.13000107,0.00106004; 42.13999939,
              0.000568743; 42.15000153,0.002010183; 42.15999985,0.001236075;
              42.16999817,-0.000483009; 42.18000031,-0.000501463; 42.18999863,-0.000731079;
              42.20000076,-0.000480594; 42.20999908,0.000718168; 42.22000122,-0.00045016;
              42.22999954,0.000417936; 42.24000168,-0.000491155; 42.25,
              0.000975719; 42.25999832,0.001988726; 42.27000046,0.000228156;
              42.27999878,-0.000518452; 42.29000092,-0.000409879; 42.29999924,-0.001721808;
              42.31000137,0.000297961; 42.31999969,0.000403302; 42.33000183,-0.001949082;
              42.34000015,0.000519171; 42.34999847,0.001229688; 42.36000061,-0.001221961;
              42.36999893,0.002036884; 42.38000107,6.3e-05; 42.38999939,
              0.000702363; 42.40000153,-0.000120475; 42.40999985,0.001758578;
              42.41999817,-0.000943243; 42.43000031,0.000396951; 42.43999863,
              0.000210595; 42.45000076,-0.00032373; 42.45999908,8.53e-05;
              42.47000122,0.000531576; 42.47999954,-0.00027925; 42.49000168,-0.000431296;
              42.5,-1.33e-05; 42.50999832,-0.000998353; 42.52000046,0.000392095;
              42.52999878,0.000339999; 42.54000092,0.00036798; 42.54999924,
              0.001269031; 42.56000137,-0.000128178; 42.56999969,0.001783164;
              42.58000183,0.00028893; 42.59000015,0.000738517; 42.59999847,-0.000176826;
              42.61000061,0.001241347; 42.61999893,-0.000920157; 42.63000107,-0.000713993;
              42.63999939,0.000621259; 42.65000153,-0.000473851; 42.65999985,-0.000131014;
              42.66999817,0.001112384; 42.68000031,-0.000141538; 42.68999863,-0.001602243;
              42.70000076,-0.001040328; 42.70999908,-0.000286804; 42.72000122,
              0.001252462; 42.72999954,-0.000186092; 42.74000168,-0.000332763;
              42.75,0.00135665; 42.75999832,-0.001704291; 42.77000046,7.51e-05;
              42.77999878,0.001419242; 42.79000092,-0.00080386; 42.79999924,-0.000887775;
              42.81000137,-0.000536372; 42.81999969,0.001671124; 42.83000183,-0.000624584;
              42.84000015,-0.002219485; 42.84999847,0.000466907; 42.86000061,-0.000354256;
              42.86999893,0.001867206; 42.88000107,0.000524149; 42.88999939,-0.000839486;
              42.90000153,0.00035014; 42.90999985,0.00075641; 42.91999817,-0.00034389;
              42.93000031,0.00093858; 42.93999863,-0.000116906; 42.95000076,-5.42e-05;
              42.95999908,-0.00177397; 42.97000122,0.000492515; 42.97999954,
              0.000858512; 42.99000168,-0.001427261; 43,0.000180593;
              43.00999832,0.000711517; 43.02000046,0.001329932; 43.02999878,
              0.001275919; 43.04000092,0.000564938; 43.04999924,0.000667319;
              43.06000137,0.000718741; 43.06999969,0.000878676; 43.08000183,-0.001191218;
              43.09000015,8.2e-06; 43.09999847,-0.001490443; 43.11000061,-0.001696492;
              43.11999893,-0.000720261; 43.13000107,-0.000511859; 43.13999939,-0.001462176;
              43.15000153,-0.001119133; 43.15999985,0.000274943; 43.16999817,
              0.000374475; 43.18000031,0.001068667; 43.18999863,0.000128299;
              43.20000076,0.000221338; 43.20999908,0.000587377; 43.22000122,-0.00072427;
              43.22999954,0.000126342; 43.24000168,0.000272817; 43.25,-0.000570284;
              43.25999832,0.000919478; 43.27000046,0.000652276; 43.27999878,-0.001254639;
              43.29000092,-2.17e-05; 43.29999924,-0.000160373; 43.31000137,-0.000179831;
              43.31999969,-0.000906451; 43.33000183,0.000133234; 43.34000015,
              0.000740325; 43.34999847,-6.96e-05; 43.36000061,-0.000645163;
              43.36999893,-0.000210394; 43.38000107,-0.000143121; 43.38999939,-0.000923581;
              43.40000153,-0.00094793; 43.40999985,-0.002542308; 43.41999817,-0.002108752;
              43.43000031,0.00153823; 43.43999863,0.001580702; 43.45000076,
              0.00034764; 43.45999908,-0.001191453; 43.47000122,-0.000348622;
              43.47999954,0.001191103; 43.49000168,0.000914743; 43.5,
              0.002859499; 43.50999832,-0.001077941; 43.52000046,0.001248016;
              43.52999878,0.001640071; 43.54000092,-3.4e-05; 43.54999924,
              0.000118062; 43.56000137,-0.000281194; 43.56999969,-0.001125862;
              43.58000183,2.12e-05; 43.59000015,-0.000956347; 43.59999847,-0.00072837;
              43.61000061,0.000547977; 43.61999893,5.83e-05; 43.63000107,
              0.000899387; 43.63999939,0.000468777; 43.65000153,-1.89e-05;
              43.65999985,-0.000186436; 43.66999817,3.65e-05; 43.68000031,
              0.000836022; 43.68999863,-0.00037171; 43.70000076,-0.000121998;
              43.70999908,-0.001287056; 43.72000122,-0.00206839; 43.72999954,-0.001602061;
              43.74000168,-0.000981924; 43.75,0.000173699; 43.75999832,-0.000212686;
              43.77000046,0.000629579; 43.77999878,0.001189358; 43.79000092,
              0.000257489; 43.79999924,-0.00086342; 43.81000137,-0.000159895;
              43.81999969,0.000123216; 43.83000183,5.27e-05; 43.84000015,-0.000376655;
              43.84999847,0.000593537; 43.86000061,0.000829386; 43.86999893,
              0.001362195; 43.88000107,0.001029576; 43.88999939,-0.000339448;
              43.90000153,9.24e-05; 43.90999985,0.000793758; 43.91999817,-8.71e-05;
              43.93000031,-0.001223973; 43.93999863,-0.001120322; 43.95000076,-0.001047009;
              43.95999908,-0.001623897; 43.97000122,0.001542003; 43.97999954,-0.001282332;
              43.99000168,-0.001033091; 44,0.00057403; 44.00999832,0.00187337;
              44.02000046,-0.000157255; 44.02999878,0.000953537; 44.04000092,
              0.000224222; 44.04999924,-0.001438057; 44.06000137,-0.000339056;
              44.06999969,-0.001705914; 44.08000183,0.000156501; 44.09000015,-0.000818422;
              44.09999847,-0.000713694; 44.11000061,0.000356465; 44.11999893,
              0.00063384; 44.13000107,0.00126026; 44.13999939,-0.000953358;
              44.15000153,0.000645093; 44.15999985,-0.001663838; 44.16999817,-0.000390073;
              44.18000031,6.5e-05; 44.18999863,-0.002248967; 44.20000076,-0.00127174;
              44.20999908,0.00060465; 44.22000122,0.001119383; 44.22999954,
              0.003109399; 44.24000168,-3.95e-06; 44.25,0.002354594;
              44.25999832,6.41e-05; 44.27000046,0.000994037; 44.27999878,-0.000338196;
              44.29000092,-0.000776305; 44.29999924,-0.002126792; 44.31000137,-0.001435829;
              44.31999969,6.13e-06; 44.33000183,-0.001632577; 44.34000015,-0.000251455;
              44.34999847,-0.001621879; 44.36000061,0.000251226; 44.36999893,
              0.00108238; 44.38000107,-0.000785196; 44.38999939,0.000835605;
              44.40000153,-0.000987285; 44.40999985,-0.000198585; 44.41999817,-0.001486336;
              44.43000031,-4.63e-05; 44.43999863,-0.000763237; 44.45000076,-0.000183589;
              44.45999908,-0.00143964; 44.47000122,-0.000191652; 44.47999954,
              0.000587312; 44.49000168,-0.000440421; 44.5,0.000556976;
              44.50999832,0.001111199; 44.52000046,0.00059515; 44.52999878,
              6.8e-05; 44.54000092,0.000497883; 44.54999924,-0.000200364;
              44.56000137,0.000288158; 44.56999969,0.000105772; 44.58000183,
              0.000100531; 44.59000015,0.000444703; 44.59999847,-0.000311015;
              44.61000061,0.000995536; 44.61999893,0.000690852; 44.63000107,-1.01e-05;
              44.63999939,0.000123468; 44.65000153,0.000434041; 44.65999985,
              0.001660156; 44.66999817,0.001131785; 44.68000031,0.001685123;
              44.68999863,0.000714591; 44.70000076,-0.000258383; 44.70999908,-0.000341852;
              44.72000122,0.001310111; 44.72999954,-0.000174673; 44.74000168,
              0.000242818; 44.75,0.001162862; 44.75999832,-0.000199625;
              44.77000046,0.002058672; 44.77999878,0.001981295; 44.79000092,-0.000620034;
              44.79999924,-0.001824911; 44.81000137,-0.000506955; 44.81999969,-0.000275003;
              44.83000183,-0.001465461; 44.84000015,-0.000278602; 44.84999847,
              0.002592466; 44.86000061,0.000859012; 44.86999893,0.001055306;
              44.88000107,-0.000867675; 44.88999939,0.000230311; 44.90000153,
              9.2e-05; 44.90999985,0.000242222; 44.91999817,0.000923357;
              44.93000031,0.002168755; 44.93999863,0.001149839; 44.95000076,-0.001467158;
              44.95999908,-0.001901827; 44.97000122,0.002177131; 44.97999954,-0.001202836;
              44.99000168,0.000221497; 45,-0.001865056; 45.00999832,0.001862741;
              45.02000046,-0.001133605; 45.02999878,0.000377976; 45.04000092,
              0.002685845; 45.04999924,0.001301297; 45.06000137,0.00023784;
              45.06999969,-0.001079112; 45.08000183,-0.000215354; 45.09000015,-3.01e-05;
              45.09999847,0.000735555; 45.11000061,0.000661364; 45.11999893,
              0.001661189; 45.13000107,-0.002220982; 45.13999939,-0.000305984;
              45.15000153,0.003009153; 45.15999985,-0.00019517; 45.16999817,
              0.001121529; 45.18000031,-0.000611499; 45.18999863,-0.000940317;
              45.20000076,0.001124224; 45.20999908,-0.000756255; 45.22000122,
              0.00021077; 45.22999954,-0.001660396; 45.24000168,-0.000740773;
              45.25,0.001329653; 45.25999832,0.000585701; 45.27000046,-0.000265015;
              45.27999878,0.00012456; 45.29000092,-0.002535423; 45.29999924,-0.000823339;
              45.31000137,-0.001129975; 45.31999969,-0.001548143; 45.33000183,
              0.001113553; 45.34000015,-8.98e-05; 45.34999847,-0.001853584;
              45.36000061,0.000705304; 45.36999893,0.000184795; 45.38000107,-0.001094567;
              45.38999939,0.000539199; 45.40000153,0.001296861; 45.40999985,
              0.000438613; 45.41999817,5.79e-05; 45.43000031,-0.000206412;
              45.43999863,-0.000574678; 45.45000076,-0.002506854; 45.45999908,-0.00025947;
              45.47000122,0.00010749; 45.47999954,0.000651768; 45.49000168,-0.000465261;
              45.5,0.001067152; 45.50999832,0.000977182; 45.52000046,-0.000553231;
              45.52999878,0.0020212; 45.54000092,0.000824134; 45.54999924,
              0.002033998; 45.56000137,0.001265402; 45.56999969,-0.000231855;
              45.58000183,0.00032828; 45.59000015,0.000425014; 45.59999847,
              0.00063345; 45.61000061,0.000841816; 45.61999893,0.000757224;
              45.63000107,0.001297615; 45.63999939,0.002212763; 45.65000153,-0.000192735;
              45.65999985,-0.000523445; 45.66999817,0.002499458; 45.68000031,-0.001499312;
              45.68999863,-0.000848299; 45.70000076,0.001023763; 45.70999908,
              0.001147348; 45.72000122,-0.001567407; 45.72999954,-0.000685677;
              45.74000168,-0.000861699; 45.75,-0.000276652; 45.75999832,
              0.001134291; 45.77000046,0.001227223; 45.77999878,0.00205622;
              45.79000092,-0.001670249; 45.79999924,-0.001052309; 45.81000137,-0.000454274;
              45.81999969,2.3e-05; 45.83000183,0.00019166; 45.84000015,
              0.000158797; 45.84999847,-0.000877321; 45.86000061,0.001245457;
              45.86999893,0.000330784; 45.88000107,-0.001018954; 45.88999939,
              0.000705904; 45.90000153,-0.000762809; 45.90999985,0.002246477;
              45.91999817,0.00058218; 45.93000031,-0.001572935; 45.93999863,-0.00132424;
              45.95000076,-0.000372599; 45.95999908,-0.000266221; 45.97000122,
              0.000808459; 45.97999954,0.001030473; 45.99000168,0.000311349; 46,
              0.000612752; 46.00999832,0.001378109; 46.02000046,0.001280745;
              46.02999878,-0.000215561; 46.04000092,0.001351328; 46.04999924,
              0.000431915; 46.06000137,-0.000877761; 46.06999969,-0.000838762;
              46.08000183,-0.00049015; 46.09000015,-0.001184545; 46.09999847,-0.000140552;
              46.11000061,0.000928425; 46.11999893,0.002561923; 46.13000107,
              0.000196574; 46.13999939,-0.000417933; 46.15000153,-0.000962797;
              46.15999985,0.000503541; 46.16999817,0.000928181; 46.18000031,
              0.000661383; 46.18999863,0.000412643; 46.20000076,-0.000590607;
              46.20999908,0.001295443; 46.22000122,0.000324748; 46.22999954,-0.002310106;
              46.24000168,-0.001610467; 46.25,0.000463806; 46.25999832,-0.000755194;
              46.27000046,-0.00035301; 46.27999878,0.000660974; 46.29000092,
              3.41e-05; 46.29999924,-0.000398182; 46.31000137,-0.000137301;
              46.31999969,-0.000707497; 46.33000183,-0.000481698; 46.34000015,-0.000894423;
              46.34999847,-0.000605902; 46.36000061,-0.000777443; 46.36999893,-0.00017399;
              46.38000107,0.001339819; 46.38999939,0.000350182; 46.40000153,
              0.001109008; 46.40999985,-3.19e-05; 46.41999817,0.000357173;
              46.43000031,0.000873083; 46.43999863,0.000309328; 46.45000076,
              2.76e-05; 46.45999908,1.24e-05; 46.47000122,0.001545629;
              46.47999954,-0.000625522; 46.49000168,-0.000246594; 46.5,-0.000467546;
              46.50999832,-0.00019879; 46.52000046,-0.00119636; 46.52999878,
              0.000379946; 46.54000092,-9.89e-05; 46.54999924,-0.000824091;
              46.56000137,0.000189359; 46.56999969,-0.000581722; 46.58000183,
              0.00076695; 46.59000015,-0.001255441; 46.59999847,-0.000478358;
              46.61000061,0.000613875; 46.61999893,-0.000535828; 46.63000107,-0.000146189;
              46.63999939,0.001117089; 46.65000153,-0.001208926; 46.65999985,-0.000729675;
              46.66999817,-0.000657976; 46.68000031,0.001569827; 46.68999863,
              0.000598461; 46.70000076,9.83e-05; 46.70999908,-0.000111498;
              46.72000122,-0.000354485; 46.72999954,-0.000984189; 46.74000168,-0.000493731;
              46.75,-0.001349757; 46.75999832,-0.000327817; 46.77000046,-0.00140789;
              46.77999878,0.00049526; 46.79000092,0.000170925; 46.79999924,
              0.000999826; 46.81000137,-0.001025783; 46.81999969,0.000744238;
              46.83000183,-0.001966379; 46.84000015,-0.001192246; 46.84999847,
              0.000812571; 46.86000061,-0.000355102; 46.86999893,0.000782229;
              46.88000107,-0.000489989; 46.88999939,-0.000462446; 46.90000153,-7.97e-05;
              46.90999985,-0.001202604; 46.91999817,0.000857857; 46.93000031,
              0.001229913; 46.93999863,0.000723707; 46.95000076,-0.001761027;
              46.95999908,0.000127822; 46.97000122,8.97e-05; 46.97999954,-0.002460445;
              46.99000168,0.000195945; 47,-0.000261583; 47.00999832,0.000340242;
              47.02000046,0.001260069; 47.02999878,-0.001076472; 47.04000092,
              0.000614208; 47.04999924,-0.001920683; 47.06000137,0.000769658;
              47.06999969,0.0005215; 47.08000183,-0.002051714; 47.09000015,
              0.00135628; 47.09999847,5.7e-05; 47.11000061,0.001571824;
              47.11999893,0.000662249; 47.13000107,0.001077726; 47.13999939,-0.001877558;
              47.15000153,0.001083241; 47.15999985,-0.000887527; 47.16999817,
              0.000250378; 47.18000031,-0.000484098; 47.18999863,0.000355712;
              47.20000076,0.000621692; 47.20999908,-0.001026791; 47.22000122,-0.000422817;
              47.22999954,-0.001640866; 47.24000168,-0.000498942; 47.25,
              0.001174809; 47.25999832,-0.001217386; 47.27000046,0.000110139;
              47.27999878,-0.000235498; 47.29000092,0.000607137; 47.29999924,
              0.000448473; 47.31000137,-5.22e-05; 47.31999969,0.000369882;
              47.33000183,0.000456281; 47.34000015,-0.000381433; 47.34999847,
              0.00058532; 47.36000061,-0.001495338; 47.36999893,0.000976304;
              47.38000107,-0.00160758; 47.38999939,-0.002180283; 47.40000153,-0.00030884;
              47.40999985,-0.001526275; 47.41999817,-8.81e-05; 47.43000031,-0.000346152;
              47.43999863,-0.000220379; 47.45000076,0.000416363; 47.45999908,
              0.001274704; 47.47000122,0.001245859; 47.47999954,-0.000721586;
              47.49000168,0.001630765; 47.5,-0.001709246; 47.50999832,-0.000124776;
              47.52000046,-0.000785774; 47.52999878,0.000987142; 47.54000092,-0.000257948;
              47.54999924,-0.000438762; 47.56000137,0.000125757; 47.56999969,
              0.001158774; 47.58000183,-0.000269871; 47.59000015,-0.001063867;
              47.59999847,-0.000284271; 47.61000061,0.000126298; 47.61999893,
              0.001222458; 47.63000107,0.001733575; 47.63999939,-0.003259292;
              47.65000153,-0.000749357; 47.65999985,0.000997983; 47.66999817,
              0.001822235; 47.68000031,-0.001675558; 47.68999863,-0.000180271;
              47.70000076,0.001504143; 47.70999908,0.000915732; 47.72000122,-0.000813403;
              47.72999954,-0.000776728; 47.74000168,-0.001098902; 47.75,-0.000166111;
              47.75999832,-0.000346322; 47.77000046,-0.000796879; 47.77999878,-0.000404828;
              47.79000092,0.000688112; 47.79999924,0.000905858; 47.81000137,
              0.001418199; 47.81999969,0.001432649; 47.83000183,-0.000417269;
              47.84000015,-0.000122243; 47.84999847,0.000301576; 47.86000061,
              0.001260908; 47.86999893,-0.000209818; 47.88000107,-0.000836574;
              47.88999939,-0.001263386; 47.90000153,-0.000806262; 47.90999985,-0.000199359;
              47.91999817,-0.002050865; 47.93000031,0.000981192; 47.93999863,
              0.001273963; 47.95000076,-0.000832815; 47.95999908,0.000348226;
              47.97000122,-0.000799334; 47.97999954,-0.000407433; 47.99000168,
              0.00025358; 48,0.001516696; 48.00999832,-0.001036693; 48.02000046,
              -1.4e-05; 48.02999878,0.000396012; 48.04000092,-0.000183179;
              48.04999924,-0.001463172; 48.06000137,7.77e-05; 48.06999969,
              0.000294939; 48.08000183,0.000821856; 48.09000015,-0.000314143;
              48.09999847,-0.002116208; 48.11000061,0.000308761; 48.11999893,-0.000154798;
              48.13000107,0.000209381; 48.13999939,0.001774945; 48.15000153,
              0.000884646; 48.15999985,0.001838784; 48.16999817,0.000170594;
              48.18000031,0.000296185; 48.18999863,0.000783436; 48.20000076,-0.000438932;
              48.20999908,-0.000272602; 48.22000122,-0.000617262; 48.22999954,
              0.001129283; 48.24000168,0.000373813; 48.25,8.68e-05; 48.25999832,
              0.00270835; 48.27000046,-0.001235678; 48.27999878,-0.000211291;
              48.29000092,-1.01e-05; 48.29999924,0.000555103; 48.31000137,-0.000510028;
              48.31999969,0.000420742; 48.33000183,0.000651758; 48.34000015,-0.00080119;
              48.34999847,0.00076665; 48.36000061,-0.001057484; 48.36999893,
              0.000248966; 48.38000107,-0.000542777; 48.38999939,0.001075859;
              48.40000153,0.000495391; 48.40999985,-0.000987776; 48.41999817,-0.001695921;
              48.43000031,-0.000364467; 48.43999863,0.000840398; 48.45000076,-0.000913458;
              48.45999908,0.002446859; 48.47000122,-0.000886999; 48.47999954,-0.00165668;
              48.49000168,-0.000150597; 48.5,-0.000323193; 48.50999832,
              0.001160898; 48.52000046,0.001029629; 48.52999878,0.000467883;
              48.54000092,0.000489475; 48.54999924,-0.002516475; 48.56000137,
              0.001655042; 48.56999969,0.000353159; 48.58000183,9.22e-05;
              48.59000015,9.04e-05; 48.59999847,6.65e-05; 48.61000061,-0.00036901;
              48.61999893,-0.001040655; 48.63000107,0.000426067; 48.63999939,-0.000239001;
              48.65000153,0.001725128; 48.65999985,0.000308136; 48.66999817,-0.000730767;
              48.68000031,-0.000268955; 48.68999863,-0.000743336; 48.70000076,-0.000233342;
              48.70999908,-0.001082391; 48.72000122,-0.001827934; 48.72999954,-0.001672298;
              48.74000168,0.000906168; 48.75,-0.000530647; 48.75999832,
              0.000704957; 48.77000046,-0.000900736; 48.77999878,-0.001373899;
              48.79000092,-0.00064223; 48.79999924,-9.18e-05; 48.81000137,
              0.000956836; 48.81999969,0.000453546; 48.83000183,-0.001191399;
              48.84000015,0.000706155; 48.84999847,-0.000642782; 48.86000061,-0.000114711;
              48.86999893,-0.000760796; 48.88000107,-0.000518855; 48.88999939,
              0.001295854; 48.90000153,-0.000309339; 48.90999985,0.000680983;
              48.91999817,-3.51e-05; 48.93000031,0.000495836; 48.93999863,
              0.002153012; 48.95000076,2.09e-05; 48.95999908,0.001472916;
              48.97000122,-0.002220175; 48.97999954,0.000224521; 48.99000168,-1.72e-06;
              49,0.001242756; 49.00999832,0.002224914; 49.02000046,0.000819396;
              49.02999878,-0.000690421; 49.04000092,0.000265775; 49.04999924,-0.000985734;
              49.06000137,0.00074308; 49.06999969,0.000411475; 49.08000183,
              0.001319046; 49.09000015,-0.000230392; 49.09999847,0.000636712;
              49.11000061,0.000616035; 49.11999893,-0.000834097; 49.13000107,
              0.000130576; 49.13999939,-6.3e-05; 49.15000153,-0.001103436;
              49.15999985,-0.000410099; 49.16999817,-0.000260437; 49.18000031,
              0.001083311; 49.18999863,-0.000780051; 49.20000076,-0.000640067;
              49.20999908,-0.000293081; 49.22000122,0.001345803; 49.22999954,-0.000684296;
              49.24000168,-0.001024586; 49.25,4.52e-05; 49.25999832,0.000583636;
              49.27000046,0.001738658; 49.27999878,0.000484063; 49.29000092,-0.000113682;
              49.29999924,-0.001311625; 49.31000137,-0.000129852; 49.31999969,
              0.000836017; 49.33000183,-0.001331637; 49.34000015,-0.001756652;
              49.34999847,2.27e-05; 49.36000061,-0.002207872; 49.36999893,-0.000746705;
              49.38000107,0.000281489; 49.38999939,0.000305858; 49.40000153,
              0.001348539; 49.40999985,0.00094691; 49.41999817,-7.57e-05;
              49.43000031,-0.000897518; 49.43999863,0.000529333; 49.45000076,
              0.00036792; 49.45999908,-0.001964699; 49.47000122,-0.003093729;
              49.47999954,-0.000572769; 49.49000168,-0.000319671; 49.5,
              0.001349317; 49.50999832,-0.000609562; 49.52000046,-0.000367495;
              49.52999878,-0.002267195; 49.54000092,0.001351174; 49.54999924,-0.001241769;
              49.56000137,-0.000353062; 49.56999969,0.001363319; 49.58000183,-0.002411741;
              49.59000015,0.000252274; 49.59999847,-0.000909596; 49.61000061,
              0.000286908; 49.61999893,-0.000915152; 49.63000107,-0.000288073;
              49.63999939,4.05e-05; 49.65000153,-0.001685998; 49.65999985,
              0.001190122; 49.66999817,-0.001911095; 49.68000031,0.000213723;
              49.68999863,-0.000260772; 49.70000076,0.001530885; 49.70999908,
              0.000182924; 49.72000122,0.001025227; 49.72999954,-0.001855589;
              49.74000168,5.98e-05; 49.75,-0.000592445; 49.75999832,-0.003081029;
              49.77000046,0.001396036; 49.77999878,0.00014188; 49.79000092,
              0.0001623; 49.79999924,0.00171405; 49.81000137,-0.000521203;
              49.81999969,-0.000140298; 49.83000183,-0.001212615; 49.84000015,
              0.000613231; 49.84999847,-0.000329312; 49.86000061,-0.000451276;
              49.86999893,-0.002791382; 49.88000107,-0.001125691; 49.88999939,-0.000953969;
              49.90000153,0.001128791; 49.90999985,0.000648487; 49.91999817,-0.001171536;
              49.93000031,-0.000183942; 49.93999863,0.0024905; 49.95000076,
              0.001087886; 49.95999908,-0.001964559; 49.97000122,0.000309594;
              49.97999954,6.98e-05; 49.99000168,-0.000826718; 50,-0.001313275;
              50.00999832,0.001359342; 50.02000046,-0.001523089; 50.02999878,-0.00029471;
              50.04000092,-0.000467767; 50.04999924,0.000467271; 50.06000137,
              8.56e-06; 50.06999969,0.000707139; 50.08000183,0.000184405;
              50.09000015,-0.001671488; 50.09999847,0.000208853; 50.11000061,
              0.000107304; 50.11999893,0.001161723; 50.13000107,0.000450869;
              50.13999939,0.001173639; 50.15000153,-0.001827596; 50.15999985,
              0.000688271; 50.16999817,0.000915272; 50.18000031,-0.00142899;
              50.18999863,0.000416215; 50.20000076,-0.000652297; 50.20999908,-0.001097006;
              50.22000122,0.001539949; 50.22999954,0.000980335; 50.24000168,
              0.001275007; 50.25,-0.000880372; 50.25999832,-0.00114547;
              50.27000046,-0.001488627; 50.27999878,-0.000398609; 50.29000092,
              0.000595505; 50.29999924,0.00064805; 50.31000137,-0.000667451;
              50.31999969,0.000942327; 50.33000183,8.94e-05; 50.34000015,
              0.000563293; 50.34999847,3.64e-05; 50.36000061,0.001049487;
              50.36999893,-0.001043728; 50.38000107,0.000111079; 50.38999939,-0.000321897;
              50.40000153,0.001276687; 50.40999985,0.001359567; 50.41999817,
              0.000117855; 50.43000031,0.001336902; 50.43999863,0.000813394;
              50.45000076,-0.001205099; 50.45999908,0.000754107; 50.47000122,-0.000269378;
              50.47999954,-0.000151917; 50.49000168,0.00160178; 50.5,-0.001739274;
              50.50999832,-0.000407903; 50.52000046,5.12e-05; 50.52999878,-0.002230568;
              50.54000092,-0.00096456; 50.54999924,0.001064901; 50.56000137,-0.000158586;
              50.56999969,0.000260379; 50.58000183,-0.000167156; 50.59000015,-0.000254206;
              50.59999847,0.000347063; 50.61000061,-0.001317217; 50.61999893,
              0.000932327; 50.63000107,0.001859874; 50.63999939,0.000251957;
              50.65000153,0.000435606; 50.65999985,-0.000212238; 50.66999817,
              2.19e-05; 50.68000031,-0.000337725; 50.68999863,0.000433545;
              50.70000076,0.000663302; 50.70999908,-0.002320332; 50.72000122,-0.001016247;
              50.72999954,2.06e-05; 50.74000168,0.000462164; 50.75,0.00075789;
              50.75999832,-0.001173457; 50.77000046,9.96e-05; 50.77999878,
              0.000930304; 50.79000092,-0.000165838; 50.79999924,0.000176268;
              50.81000137,0.001182974; 50.81999969,0.000911758; 50.83000183,-0.00138329;
              50.84000015,0.000415485; 50.84999847,0.000468476; 50.86000061,
              0.00172859; 50.86999893,-0.001423595; 50.88000107,0.000962023;
              50.88999939,-0.001255957; 50.90000153,-0.000723614; 50.90999985,
              0.000684745; 50.91999817,4.24e-06; 50.93000031,-0.001434436;
              50.93999863,7.22e-05; 50.95000076,0.001632525; 50.95999908,
              0.000379556; 50.97000122,-0.000799447; 50.97999954,-5.42e-05;
              50.99000168,0.000242641; 51,0.001170601; 51.00999832,-1.45e-05;
              51.02000046,-0.000719446; 51.02999878,0.001250611; 51.04000092,
              0.000913697; 51.04999924,0.001983929; 51.06000137,0.001086057;
              51.06999969,-0.000452599; 51.08000183,0.000207469; 51.09000015,-0.000243468;
              51.09999847,-0.000301435; 51.11000061,0.000360125; 51.11999893,
              0.000778046; 51.13000107,0.001662789; 51.13999939,-5.67e-06;
              51.15000153,0.000187274; 51.15999985,-0.002056472; 51.16999817,
              0.000719145; 51.18000031,-0.000218131; 51.18999863,0.000410966;
              51.20000076,0.000610925; 51.20999908,0.000860617; 51.22000122,
              0.00159493; 51.22999954,-0.000649689; 51.24000168,0.000594934;
              51.25,-0.00111102; 51.25999832,-0.001647904; 51.27000046,-0.001228173;
              51.27999878,-0.001735842; 51.29000092,-0.00154368; 51.29999924,
              0.001655136; 51.31000137,0.000639073; 51.31999969,-0.002054343;
              51.33000183,0.001246915; 51.34000015,0.000406882; 51.34999847,-0.000234839;
              51.36000061,-0.000352608; 51.36999893,-0.000623108; 51.38000107,
              0.000301222; 51.38999939,-0.001206303; 51.40000153,0.001374262;
              51.40999985,-0.000802605; 51.41999817,0.000554534; 51.43000031,-0.000715627;
              51.43999863,-0.000522995; 51.45000076,-0.000655071; 51.45999908,-0.001021833;
              51.47000122,0.000997521; 51.47999954,-0.003091473; 51.49000168,
              0.00069304; 51.5,-0.001100529; 51.50999832,-0.001524823;
              51.52000046,0.001790797; 51.52999878,0.001093076; 51.54000092,-0.000578797;
              51.54999924,-0.000146162; 51.56000137,-0.000910402; 51.56999969,
              0.00161322; 51.58000183,-0.001264627; 51.59000015,0.000906977;
              51.59999847,3.73e-05; 51.61000061,0.00181511; 51.61999893,
              0.001417269; 51.63000107,-5.25e-05; 51.63999939,8e-05;
              51.65000153,-0.000393384; 51.65999985,0.000343407; 51.66999817,
              0.000287674; 51.68000031,-0.000619105; 51.68999863,0.000393264;
              51.70000076,0.001855482; 51.70999908,1.05e-05; 51.72000122,
              7.44e-06; 51.72999954,-0.000929899; 51.74000168,0.000132034;
              51.75,-0.000629445; 51.75999832,-9.98e-05; 51.77000046,
              0.000928661; 51.77999878,0.000381409; 51.79000092,-8.89e-05;
              51.79999924,-0.000133638; 51.81000137,-0.000619266; 51.81999969,-0.000879447;
              51.83000183,-0.000869121; 51.84000015,-0.000893988; 51.84999847,-0.000284893;
              51.86000061,-0.001228562; 51.86999893,-0.000250142; 51.88000107,-0.001453978;
              51.88999939,0.000359885; 51.90000153,-4.57e-05; 51.90999985,
              0.001687092; 51.91999817,-0.001542836; 51.93000031,0.001892142;
              51.93999863,-0.000245236; 51.95000076,-6.94e-05; 51.95999908,-0.000584026;
              51.97000122,-0.000112743; 51.97999954,-0.000572848; 51.99000168,
              0.000114606; 52,-0.000331293; 52.00999832,-6.27e-05; 52.02000046,
              0.000117895; 52.02999878,-0.00068492; 52.04000092,-0.000255248;
              52.04999924,0.000887004; 52.06000137,0.001143959; 52.06999969,
              0.000358559; 52.08000183,0.000340098; 52.09000015,-0.001026872;
              52.09999847,-0.001065284; 52.11000061,0.000991335; 52.11999893,-0.000821095;
              52.13000107,-0.003334466; 52.13999939,-0.00125965; 52.15000153,
              0.00039648; 52.15999985,-2.58e-05; 52.16999817,0.001139199;
              52.18000031,-0.000544734; 52.18999863,0.001555446; 52.20000076,
              2.98e-05; 52.20999908,0.001112534; 52.22000122,0.001416561;
              52.22999954,0.000249244; 52.24000168,-0.000169249; 52.25,
              0.001453944; 52.25999832,-0.000287398; 52.27000046,0.002281743;
              52.27999878,-0.000144111; 52.29000092,-0.001803911; 52.29999924,-0.000262389;
              52.31000137,0.000270343; 52.31999969,0.000886728; 52.33000183,-0.000890142;
              52.34000015,-0.000222736; 52.34999847,0.000332939; 52.36000061,
              0.00167718; 52.36999893,-0.001213458; 52.38000107,-0.000194345;
              52.38999939,0.001100384; 52.40000153,0.000364086; 52.40999985,-3.89e-05;
              52.41999817,0.001939619; 52.43000031,-0.000448287; 52.43999863,
              1.91e-05; 52.45000076,0.000970439; 52.45999908,-0.000275601;
              52.47000122,0.000327519; 52.47999954,0.000539077; 52.49000168,
              0.000279676; 52.5,0.000199505; 52.50999832,0.000233548;
              52.52000046,-0.000682624; 52.52999878,0.002203743; 52.54000092,
              0.000181774; 52.54999924,-7.69e-05; 52.56000137,0.001087172;
              52.56999969,-0.001924767; 52.58000183,-0.001477475; 52.59000015,
              0.00025924; 52.59999847,-0.000351473; 52.61000061,-0.000644059;
              52.61999893,0.000735091; 52.63000107,0.001472525; 52.63999939,-0.001319265;
              52.65000153,0.000275785; 52.65999985,-0.001651775; 52.66999817,-0.000270875;
              52.68000031,0.000279119; 52.68999863,-0.000429625; 52.70000076,
              0.000265176; 52.70999908,-0.00114798; 52.72000122,0.000181024;
              52.72999954,0.001101291; 52.74000168,-0.001484541; 52.75,
              0.000514476; 52.75999832,-0.00114594; 52.77000046,-0.000567021;
              52.77999878,0.00015111; 52.79000092,-8.6e-05; 52.79999924,-0.000465981;
              52.81000137,-0.001005842; 52.81999969,-0.000376033; 52.83000183,
              0.000127963; 52.84000015,-0.001028848; 52.84999847,-0.000224119;
              52.86000061,0.002016107; 52.86999893,-0.00137752; 52.88000107,-0.000270766;
              52.88999939,0.000856247; 52.90000153,-0.000306487; 52.90999985,-0.000374591;
              52.91999817,0.000138568; 52.93000031,-0.000227419; 52.93999863,-0.001763029;
              52.95000076,0.001465607; 52.95999908,9.37e-05; 52.97000122,-0.000950548;
              52.97999954,-0.000119134; 52.99000168,-0.000910773; 53,-0.000377018;
              53.00999832,-0.00096774; 53.02000046,-8.72e-05; 53.02999878,
              0.001030609; 53.04000092,-0.000302668; 53.04999924,-0.001141539;
              53.06000137,0.00079049; 53.06999969,9.99e-05; 53.08000183,
              0.000241336; 53.09000015,8.97e-05; 53.09999847,-0.000398155;
              53.11000061,4.48e-05; 53.11999893,0.000539691; 53.13000107,-0.00112596;
              53.13999939,-0.000579843; 53.15000153,-0.000556555; 53.15999985,-2.36e-05;
              53.16999817,-0.000458322; 53.18000031,-0.000776577; 53.18999863,
              0.001348547; 53.20000076,0.001304003; 53.20999908,0.000449479;
              53.22000122,-0.000749145; 53.22999954,-0.000601678; 53.24000168,
              0.001779231; 53.25,0.002020248; 53.25999832,-0.000156059;
              53.27000046,0.000805358; 53.27999878,0.001657202; 53.29000092,
              0.002714808; 53.29999924,-0.002316463; 53.31000137,-0.000793775;
              53.31999969,0.000808445; 53.33000183,0.002148206; 53.34000015,
              0.000726856; 53.34999847,-0.000242746; 53.36000061,0.001148281;
              53.36999893,0.000547406; 53.38000107,0.000533036; 53.38999939,-0.000746793;
              53.40000153,0.001368935; 53.40999985,0.001097836; 53.41999817,-0.000262149;
              53.43000031,0.001094199; 53.43999863,0.000178223; 53.45000076,
              0.002763966; 53.45999908,-0.000559868; 53.47000122,0.002074198;
              53.47999954,-0.000678633; 53.49000168,-6.88e-05; 53.5,-5.53e-05;
              53.50999832,-0.000900606; 53.52000046,-0.001134804; 53.52999878,-5.93e-05;
              53.54000092,-0.001415051; 53.54999924,-0.000153157; 53.56000137,-0.000617491;
              53.56999969,0.000842836; 53.58000183,0.000517162; 53.59000015,
              0.001023912; 53.59999847,-0.000139244; 53.61000061,-0.002352145;
              53.61999893,0.000149429; 53.63000107,0.000805635; 53.63999939,-0.000663469;
              53.65000153,3.39e-05; 53.65999985,0.001624873; 53.66999817,
              0.000108669; 53.68000031,-0.001110111; 53.68999863,0.001169985;
              53.70000076,0.002058964; 53.70999908,-0.001161445; 53.72000122,-0.00046681;
              53.72999954,-0.000263525; 53.74000168,-0.002178108; 53.75,
              0.00046013; 53.75999832,-0.000645171; 53.77000046,0.000233201;
              53.77999878,-0.000541625; 53.79000092,-0.000839264; 53.79999924,-0.001051973;
              53.81000137,0.000775443; 53.81999969,-0.000691928; 53.83000183,-0.000795615;
              53.84000015,-0.000764553; 53.84999847,-0.001144067; 53.86000061,
              0.000782825; 53.86999893,0.000901086; 53.88000107,-0.001346497;
              53.88999939,0.000600802; 53.90000153,-0.000674291; 53.90999985,
              0.001945876; 53.91999817,0.000739925; 53.93000031,0.000265575;
              53.93999863,-0.001826893; 53.95000076,0.000686492; 53.95999908,
              0.00037808; 53.97000122,0.000511025; 53.97999954,-0.001620621;
              53.99000168,-0.000366894; 54,-0.000794103; 54.00999832,-6.72e-05;
              54.02000046,0.000264327; 54.02999878,0.00146343; 54.04000092,
              0.002547294; 54.04999924,0.000453072; 54.06000137,-0.000913168;
              54.06999969,0.000143734; 54.08000183,-0.000680971; 54.09000015,
              0.001556512; 54.09999847,-0.000134426; 54.11000061,-0.00040136;
              54.11999893,-0.001190586; 54.13000107,-0.000278913; 54.13999939,
              0.000143274; 54.15000153,0.000716588; 54.15999985,0.000682334;
              54.16999817,-0.001828935; 54.18000031,-0.001714242; 54.18999863,-0.000190114;
              54.20000076,0.001341905; 54.20999908,0.000370722; 54.22000122,
              0.000529394; 54.22999954,6.73e-05; 54.24000168,-6.77e-05; 54.25,-0.000998328;
              54.25999832,-0.00038333; 54.27000046,-1.56e-05; 54.27999878,
              0.000507216; 54.29000092,-0.001456869; 54.29999924,-0.001885137;
              54.31000137,-0.000602608; 54.31999969,0.000363176; 54.33000183,-0.002323557;
              54.34000015,0.000530452; 54.34999847,-0.000303632; 54.36000061,-0.00033132;
              54.36999893,0.000223868; 54.38000107,-0.000415853; 54.38999939,
              0.00094811; 54.40000153,-0.00062655; 54.40999985,0.001060806;
              54.41999817,-0.001511797; 54.43000031,0.001570445; 54.43999863,
              0.000342591; 54.45000076,0.001347552; 54.45999908,-9.84e-06;
              54.47000122,0.000470745; 54.47999954,3.98e-05; 54.49000168,
              0.000841605; 54.5,0.000200892; 54.50999832,-0.000741812;
              54.52000046,0.001406329; 54.52999878,-4.27e-05; 54.54000092,
              0.000275902; 54.54999924,0.000107407; 54.56000137,-7.78e-05;
              54.56999969,-0.001802766; 54.58000183,-0.000512587; 54.59000015,
              0.000158144; 54.59999847,0.001701765; 54.61000061,0.000332617;
              54.61999893,0.000692751; 54.63000107,-0.000444911; 54.63999939,-9.62e-05;
              54.65000153,0.000204013; 54.65999985,-0.001389145; 54.66999817,
              0.000408582; 54.68000031,0.000124985; 54.68999863,-0.00056994;
              54.70000076,-0.001182977; 54.70999908,0.001220661; 54.72000122,-3.98e-05;
              54.72999954,9.76e-05; 54.74000168,0.000861228; 54.75,-0.000239119;
              54.75999832,-0.001015764; 54.77000046,-0.000705301; 54.77999878,
              0.000764307; 54.79000092,0.001108158; 54.79999924,0.001223715;
              54.81000137,-7.39e-05; 54.81999969,0.000556231; 54.83000183,
              0.001381641; 54.84000015,9.28e-05; 54.84999847,6.14e-05;
              54.86000061,-0.000290459; 54.86999893,0.000425214; 54.88000107,-0.000133581;
              54.88999939,-0.001335263; 54.90000153,-0.000380979; 54.90999985,
              0.000836993; 54.91999817,-0.000915373; 54.93000031,0.001189419;
              54.93999863,0.000169959; 54.95000076,-0.001624476; 54.95999908,
              0.001168667; 54.97000122,-0.000691641; 54.97999954,0.00090543;
              54.99000168,-0.001058981; 55,-0.002806839; 55.00999832,-0.000852406;
              55.02000046,-0.000498812; 55.02999878,-0.000361777; 55.04000092,
              0.000448875; 55.04999924,-0.000760029; 55.06000137,0.001060578;
              55.06999969,0.000865363; 55.08000183,-0.000805422; 55.09000015,
              0.001678684; 55.09999847,0.000881315; 55.11000061,-0.000258868;
              55.11999893,0.00038628; 55.13000107,-0.002040741; 55.13999939,
              0.000298699; 55.15000153,7.31e-05; 55.15999985,0.000766844;
              55.16999817,-0.001473512; 55.18000031,-0.000986029; 55.18999863,
              0.000108781; 55.20000076,0.0002985; 55.20999908,0.000369021;
              55.22000122,0.000799198; 55.22999954,-0.000371651; 55.24000168,-0.000184566;
              55.25,0.000851389; 55.25999832,-0.001305755; 55.27000046,3.36e-05;
              55.27999878,0.000281639; 55.29000092,-0.000118705; 55.29999924,-0.00029736;
              55.31000137,-0.000725533; 55.31999969,-0.000487717; 55.33000183,-0.000863891;
              55.34000015,0.000980968; 55.34999847,-0.00089534; 55.36000061,
              0.000179069; 55.36999893,0.000798617; 55.38000107,-0.000922154;
              55.38999939,1.57e-05; 55.40000153,-0.000112114; 55.40999985,
              0.00196641; 55.41999817,-0.000292397; 55.43000031,0.001261753;
              55.43999863,0.001469204; 55.45000076,-0.00014841; 55.45999908,
              0.001175339; 55.47000122,0.001022159; 55.47999954,-0.000459994;
              55.49000168,-0.001167631; 55.5,0.001437102; 55.50999832,
              0.000352517; 55.52000046,0.001287393; 55.52999878,-0.000802233;
              55.54000092,1.6e-05; 55.54999924,-0.000286313; 55.56000137,-0.000815392;
              55.56999969,0.000286676; 55.58000183,-0.001839307; 55.59000015,
              0.001628464; 55.59999847,-0.000965421; 55.61000061,0.002407358;
              55.61999893,-0.001036085; 55.63000107,-0.001736945; 55.63999939,-0.00171314;
              55.65000153,0.001681961; 55.65999985,-0.000637432; 55.66999817,-0.000150735;
              55.68000031,-0.001082314; 55.68999863,-0.000189406; 55.70000076,-0.00128438;
              55.70999908,-0.001565631; 55.72000122,-0.00022859; 55.72999954,
              0.000166502; 55.74000168,0.000630994; 55.75,0.000456904;
              55.75999832,-0.000573605; 55.77000046,-0.00089553; 55.77999878,-0.00045671;
              55.79000092,-8.27e-05; 55.79999924,0.000317881; 55.81000137,
              0.000431044; 55.81999969,0.001046903; 55.83000183,0.000225853;
              55.84000015,-9.17e-05; 55.84999847,0.000244641; 55.86000061,
              0.001200344; 55.86999893,0.000289505; 55.88000107,-0.000946085;
              55.88999939,0.000595001; 55.90000153,0.001479105; 55.90999985,
              0.000946429; 55.91999817,-0.00076804; 55.93000031,-0.000658988;
              55.93999863,0.000177626; 55.95000076,-0.001041382; 55.95999908,
              0.001544179; 55.97000122,-0.001046882; 55.97999954,-0.000660213;
              55.99000168,-0.000925609; 56,0.000612101; 56.00999832,0.001915956;
              56.02000046,0.001035325; 56.02999878,-0.000574223; 56.04000092,
              0.002207967; 56.04999924,-0.00019421; 56.06000137,-0.000173987;
              56.06999969,0.001016924; 56.08000183,0.002111217; 56.09000015,
              0.000366594; 56.09999847,0.000384068; 56.11000061,0.000308899;
              56.11999893,5.83e-05; 56.13000107,-0.000145173; 56.13999939,
              0.000896776; 56.15000153,-0.001268806; 56.15999985,-0.000223521;
              56.16999817,-0.000510227; 56.18000031,-0.000418922; 56.18999863,-0.000681015;
              56.20000076,0.000496905; 56.20999908,-5.77e-05; 56.22000122,-0.000309069;
              56.22999954,1.46e-05; 56.24000168,-0.000321703; 56.25,-0.000852913;
              56.25999832,0.000660637; 56.27000046,0.000666968; 56.27999878,
              0.000698267; 56.29000092,-1.99e-05; 56.29999924,0.000937376;
              56.31000137,9.57e-05; 56.31999969,-0.001393756; 56.33000183,
              5.21e-05; 56.34000015,9.79e-05; 56.34999847,0.00092054;
              56.36000061,0.001465804; 56.36999893,0.000790129; 56.38000107,-0.000575501;
              56.38999939,0.000542636; 56.40000153,0.000653353; 56.40999985,-0.00021691;
              56.41999817,-0.000164717; 56.43000031,0.000680083; 56.43999863,
              0.000136391; 56.45000076,0.000128976; 56.45999908,0.0004581;
              56.47000122,-0.001230358; 56.47999954,0.000178523; 56.49000168,-0.000502929;
              56.5,-2.47e-05; 56.50999832,0.001794196; 56.52000046,0.000538761;
              56.52999878,-6.15e-05; 56.54000092,-0.000839398; 56.54999924,-0.002084809;
              56.56000137,0.000286916; 56.56999969,1.76e-05; 56.58000183,-0.000117944;
              56.59000015,-6.31e-05; 56.59999847,-0.001297165; 56.61000061,
              0.002080488; 56.61999893,0.000695792; 56.63000107,-0.001211447;
              56.63999939,-3.96e-05; 56.65000153,-0.001423956; 56.65999985,-0.000406478;
              56.66999817,-0.000366288; 56.68000031,0.000358877; 56.68999863,
              0.001346679; 56.70000076,0.00046732; 56.70999908,-0.001475068;
              56.72000122,0.000938885; 56.72999954,0.00045514; 56.74000168,-0.000675367;
              56.75,0.000751917; 56.75999832,-0.000790472; 56.77000046,
              0.00196328; 56.77999878,0.000684525; 56.79000092,0.001312614;
              56.79999924,-0.00088034; 56.81000137,0.000729877; 56.81999969,
              0.000503928; 56.83000183,0.000279748; 56.84000015,-0.000627634;
              56.84999847,-0.000229853; 56.86000061,0.000142768; 56.86999893,
              0.000635619; 56.88000107,-0.000696389; 56.88999939,-0.000736032;
              56.90000153,0.000197466; 56.90999985,-0.000715287; 56.91999817,
              0.000935645; 56.93000031,0.001161477; 56.93999863,0.000572934;
              56.95000076,-3.13e-05; 56.95999908,-0.00050455; 56.97000122,-0.00258328;
              56.97999954,0.001485067; 56.99000168,0.001779939; 57,-0.00032477;
              57.00999832,0.000431287; 57.02000046,0.000754903; 57.02999878,-0.000929349;
              57.04000092,-0.000852962; 57.04999924,-2.71e-05; 57.06000137,
              0.000141067; 57.06999969,0.000325673; 57.08000183,0.000375947;
              57.09000015,0.000969613; 57.09999847,0.000858022; 57.11000061,-0.000269554;
              57.11999893,0.000657027; 57.13000107,0.000218898; 57.13999939,-0.001229499;
              57.15000153,-0.002670394; 57.15999985,0.001487796; 57.16999817,
              0.001082015; 57.18000031,0.000436305; 57.18999863,-0.001957344;
              57.20000076,0.002366371; 57.20999908,-0.00111349; 57.22000122,-0.000768756;
              57.22999954,-0.000890749; 57.24000168,0.00054665; 57.25,-0.000800781;
              57.25999832,-0.001146891; 57.27000046,0.001388089; 57.27999878,
              0.000856519; 57.29000092,-0.000110723; 57.29999924,-0.001204852;
              57.31000137,0.001598363; 57.31999969,9.2e-05; 57.33000183,-0.000233904;
              57.34000015,-0.000630793; 57.34999847,-0.000450384; 57.36000061,
              0.00107438; 57.36999893,-0.000270607; 57.38000107,-0.001505002;
              57.38999939,0.000951329; 57.40000153,-0.000784941; 57.40999985,-0.00102083;
              57.41999817,-0.000623001; 57.43000031,0.00165249; 57.43999863,-0.000226761;
              57.45000076,-0.000195491; 57.45999908,-0.000799032; 57.47000122,
              0.00044341; 57.47999954,0.001229001; 57.49000168,0.000472685;
              57.5,0.000248548; 57.50999832,0.000431761; 57.52000046,
              0.001521007; 57.52999878,-0.000920073; 57.54000092,0.002575764;
              57.54999924,0.00186042; 57.56000137,0.001873054; 57.56999969,-0.000769828;
              57.58000183,-0.002213418; 57.59000015,0.000390466; 57.59999847,-0.000399144;
              57.61000061,0.000305007; 57.61999893,3.12e-05; 57.63000107,
              0.000606225; 57.63999939,-0.00018024; 57.65000153,0.000302491;
              57.65999985,-0.001177515; 57.66999817,-0.000142158; 57.68000031,-0.000251609;
              57.68999863,0.001111725; 57.70000076,-0.000253483; 57.70999908,
              0.000836543; 57.72000122,0.000458785; 57.72999954,-0.001506776;
              57.74000168,-0.001978814; 57.75,-6e-05; 57.75999832,-0.000105688;
              57.77000046,-0.000453442; 57.77999878,-0.00274859; 57.79000092,-0.000497949;
              57.79999924,0.000889699; 57.81000137,-0.00101761; 57.81999969,
              0.000165535; 57.83000183,-0.000105834; 57.84000015,-0.000619907;
              57.84999847,0.000190241; 57.86000061,-0.001686823; 57.86999893,-0.000202718;
              57.88000107,0.000136615; 57.88999939,0.000610182; 57.90000153,
              0.00033137; 57.90999985,0.001101495; 57.91999817,0.000693584;
              57.93000031,-0.000297734; 57.93999863,0.000463121; 57.95000076,-0.000467166;
              57.95999908,0.001136281; 57.97000122,0.000189565; 57.97999954,
              0.001065462; 57.99000168,4.46e-05; 58,0.000983607; 58.00999832,
              0.000389907; 58.02000046,-0.00110433; 58.02999878,0.001213391;
              58.04000092,0.000127791; 58.04999924,-0.000145306; 58.06000137,-0.000206252;
              58.06999969,-0.001209388; 58.08000183,0.000218594; 58.09000015,-0.000356235;
              58.09999847,-0.000435925; 58.11000061,0.001007117; 58.11999893,-0.001806024;
              58.13000107,-0.000805115; 58.13999939,0.001310649; 58.15000153,-0.000264873;
              58.15999985,-0.000200864; 58.16999817,0.000981142; 58.18000031,-0.000195201;
              58.18999863,0.000122867; 58.20000076,-0.000403258; 58.20999908,-0.002176017;
              58.22000122,0.001385064; 58.22999954,-0.000159767; 58.24000168,-0.001109398;
              58.25,6.94e-05; 58.25999832,0.000155972; 58.27000046,0.002006793;
              58.27999878,7.87e-05; 58.29000092,-0.000314135; 58.29999924,-0.000602228;
              58.31000137,-0.000746208; 58.31999969,-0.000224369; 58.33000183,
              0.000200338; 58.34000015,-0.000918421; 58.34999847,0.001825525;
              58.36000061,0.000201235; 58.36999893,-0.001019204; 58.38000107,-0.001960507;
              58.38999939,0.000261177; 58.40000153,-0.001430482; 58.40999985,
              2.78e-05; 58.41999817,-0.001266445; 58.43000031,0.000770326;
              58.43999863,0.001709254; 58.45000076,0.00019664; 58.45999908,-0.000674148;
              58.47000122,0.000564437; 58.47999954,-0.000106645; 58.49000168,-0.001271317;
              58.5,-0.000171841; 58.50999832,-0.000658198; 58.52000046,-7.92e-05;
              58.52999878,0.000506099; 58.54000092,-0.001177601; 58.54999924,
              0.000585404; 58.56000137,0.000169089; 58.56999969,0.000300439;
              58.58000183,-0.000181299; 58.59000015,0.000635803; 58.59999847,-0.00021089;
              58.61000061,5.19e-05; 58.61999893,-0.001190918; 58.63000107,-0.000108915;
              58.63999939,-2.31e-05; 58.65000153,0.001443627; 58.65999985,-0.002095632;
              58.66999817,-0.000224991; 58.68000031,-0.001526621; 58.68999863,
              3.47e-05; 58.70000076,-5.79e-05; 58.70999908,0.000110505;
              58.72000122,-9.7e-05; 58.72999954,-0.002116107; 58.74000168,
              0.002513591; 58.75,0.000307417; 58.75999832,0.000962707;
              58.77000046,-0.000729054; 58.77999878,-0.001321145; 58.79000092,
              0.000523598; 58.79999924,1.35e-07; 58.81000137,0.001657266;
              58.81999969,-0.000977711; 58.83000183,-0.000934826; 58.84000015,
              0.000317743; 58.84999847,0.000434139; 58.86000061,-0.00025469;
              58.86999893,-0.000834018; 58.88000107,-0.000432793; 58.88999939,
              0.000872193; 58.90000153,-0.001162967; 58.90999985,0.001394015;
              58.91999817,8.86e-05; 58.93000031,0.000260131; 58.93999863,
              0.000248618; 58.95000076,0.002515311; 58.95999908,-0.000857817;
              58.97000122,0.000568243; 58.97999954,-0.000203314; 58.99000168,
              0.00093241; 59,0.001341858; 59.00999832,0.001263933; 59.02000046,
              -0.00091191; 59.02999878,0.000385912; 59.04000092,0.000585289;
              59.04999924,-0.002582618; 59.06000137,-0.001933254; 59.06999969,
              0.000943195; 59.08000183,-0.001404818; 59.09000015,-0.000295987;
              59.09999847,-0.000106938; 59.11000061,0.000672455; 59.11999893,
              0.00182879; 59.13000107,0.001297535; 59.13999939,0.00030101;
              59.15000153,-0.00124274; 59.15999985,-0.001043063; 59.16999817,-0.000140402;
              59.18000031,0.000440014; 59.18999863,0.000320238; 59.20000076,
              0.000819921; 59.20999908,-6.14e-05; 59.22000122,-0.000507483;
              59.22999954,0.001129668; 59.24000168,0.000967433; 59.25,-0.000107616;
              59.25999832,-0.00085508; 59.27000046,0.001369356; 59.27999878,-0.001085049;
              59.29000092,0.00108738; 59.29999924,-0.001543118; 59.31000137,
              1.93e-05; 59.31999969,-0.000657597; 59.33000183,-0.001071858;
              59.34000015,0.001683019; 59.34999847,0.000280867; 59.36000061,-0.000370738;
              59.36999893,-0.000345247; 59.38000107,-0.000781145; 59.38999939,-0.001036836;
              59.40000153,0.000744822; 59.40999985,-0.000596496; 59.41999817,
              0.001213865; 59.43000031,-0.000289567; 59.43999863,0.00138434;
              59.45000076,-0.001319356; 59.45999908,0.001081885; 59.47000122,-6.76e-05;
              59.47999954,-2.11e-05; 59.49000168,0.000158576; 59.5,-0.000512198;
              59.50999832,-0.000269955; 59.52000046,-0.0001019; 59.52999878,
              0.000416725; 59.54000092,8.6e-05; 59.54999924,-0.000257048;
              59.56000137,-0.000562667; 59.56999969,-7.37e-05; 59.58000183,
              0.002035607; 59.59000015,-0.000958589; 59.59999847,0.000345929;
              59.61000061,0.000531754; 59.61999893,-0.000866769; 59.63000107,
              0.00059821; 59.63999939,-0.000380304; 59.65000153,0.000594442;
              59.65999985,0.001051691; 59.66999817,-0.000285069; 59.68000031,
              3.52e-05; 59.68999863,-0.000990236; 59.70000076,-0.000870315;
              59.70999908,0.000193579; 59.72000122,-0.000937218; 59.72999954,-0.000830491;
              59.74000168,-0.000831922; 59.75,-0.000732469; 59.75999832,-0.000485299;
              59.77000046,-0.001106517; 59.77999878,-9.98e-05; 59.79000092,
              0.0001357; 59.79999924,0.002081567; 59.81000137,0.000704122;
              59.81999969,-0.001648791; 59.83000183,0.00076874; 59.84000015,
              0.001740413; 59.84999847,0.000507274; 59.86000061,0.001099537;
              59.86999893,0.00163104; 59.88000107,3.85e-05; 59.88999939,
              0.001190759; 59.90000153,-0.000151194; 59.90999985,0.002765328;
              59.91999817,-0.000892518; 59.93000031,-0.000705155; 59.93999863,-0.000286837;
              59.95000076,-0.000292654; 59.95999908,-0.001030474; 59.97000122,
              0.000146668; 59.97999954,-0.00165852; 59.99000168,-0.00013829; 60,
              0.000276419; 60.00999832,-0.001938178; 60.02000046,0.000693821;
              60.02999878,-0.001421143; 60.04000092,-6.68e-05; 60.04999924,
              0.001645652; 60.06000137,0.000384147; 60.06999969,0.002842979;
              60.08000183,0.000526964; 60.09000015,-0.000205786; 60.09999847,
              0.000980019; 60.11000061,0.000277256; 60.11999893,0.000405277;
              60.13000107,0.000299156; 60.13999939,-0.00021648; 60.15000153,
              0.001299637; 60.15999985,-0.000588314; 60.16999817,0.000639989;
              60.18000031,-0.001462563; 60.18999863,-0.001401268; 60.20000076,-0.00088705;
              60.20999908,0.000627403; 60.22000122,0.001315555; 60.22999954,
              0.000241821; 60.24000168,0.00220591; 60.25,0.001641016;
              60.25999832,0.001160269; 60.27000046,0.000772231; 60.27999878,-0.000987765;
              60.29000092,-0.000886335; 60.29999924,-0.000878424; 60.31000137,-0.000331472;
              60.31999969,-0.001130146; 60.33000183,0.00026152; 60.34000015,-0.001191267;
              60.34999847,0.001732889; 60.36000061,0.001822242; 60.36999893,-0.001794862;
              60.38000107,-0.001616643; 60.38999939,-0.001106236; 60.40000153,
              0.00024332; 60.40999985,1.02e-05; 60.41999817,0.000269999;
              60.43000031,0.001016067; 60.43999863,0.000487104; 60.45000076,-0.001032135;
              60.45999908,0.001531148; 60.47000122,0.000293357; 60.47999954,-0.000544276;
              60.49000168,0.000487301; 60.5,0.000625282; 60.50999832,-0.001927611;
              60.52000046,0.000576064; 60.52999878,-0.001024303; 60.54000092,-0.000207136;
              60.54999924,0.00048039; 60.56000137,-0.000285227; 60.56999969,
              0.000501043; 60.58000183,6.36e-05; 60.59000015,-0.000793276;
              60.59999847,-0.001626249; 60.61000061,-9.58e-05; 60.61999893,
              0.00080836; 60.63000107,-0.000123026; 60.63999939,-9.37e-05;
              60.65000153,0.001091604; 60.65999985,-0.001683244; 60.66999817,-0.000652184;
              60.68000031,-4.43e-05; 60.68999863,0.0002744; 60.70000076,-0.001460584;
              60.70999908,0.000340599; 60.72000122,0.000538642; 60.72999954,-0.000834557;
              60.74000168,-0.000132491; 60.75,0.001080312; 60.75999832,
              0.001848387; 60.77000046,0.001119306; 60.77999878,0.000728738;
              60.79000092,0.00017961; 60.79999924,0.000209678; 60.81000137,
              0.000296028; 60.81999969,-0.000571908; 60.83000183,-0.000696883;
              60.84000015,-0.000790975; 60.84999847,0.001031501; 60.86000061,-0.000658558;
              60.86999893,-0.0013484; 60.88000107,0.00029426; 60.88999939,-0.00141009;
              60.90000153,0.0013775; 60.90999985,8.17e-05; 60.91999817,-5.39e-05;
              60.93000031,0.000295211; 60.93999863,-0.000108902; 60.95000076,-0.000511018;
              60.95999908,0.002964879; 60.97000122,-0.000825497; 60.97999954,
              0.000187028; 60.99000168,0.0007739; 61,0.001205494; 61.00999832,-0.001298715;
              61.02000046,-0.0015931; 61.02999878,-4.42e-06; 61.04000092,
              0.000995692; 61.04999924,-0.000562322; 61.06000137,0.000488282;
              61.06999969,0.000780355; 61.08000183,0.000831982; 61.09000015,
              0.002282572; 61.09999847,-9.21e-06; 61.11000061,-9.66e-05;
              61.11999893,0.000477891; 61.13000107,0.000907809; 61.13999939,
              0.000574132; 61.15000153,-0.001189099; 61.15999985,2.86e-06;
              61.16999817,-0.000279477; 61.18000031,-0.000156452; 61.18999863,-0.000417694;
              61.20000076,0.001657473; 61.20999908,-0.001212728; 61.22000122,
              0.000263832; 61.22999954,0.001778546; 61.24000168,-0.001012842;
              61.25,-8.18e-05; 61.25999832,-0.000444995; 61.27000046,
              0.000762353; 61.27999878,0.000100893; 61.29000092,0.000677622;
              61.29999924,0.001268901; 61.31000137,-0.001195163; 61.31999969,
              0.000978963; 61.33000183,-6.8e-05; 61.34000015,0.000632637;
              61.34999847,0.001260522; 61.36000061,0.000247306; 61.36999893,
              0.001107959; 61.38000107,0.001158911; 61.38999939,-0.000298237;
              61.40000153,-0.000127362; 61.40999985,0.000114913; 61.41999817,-0.000422054;
              61.43000031,-0.000580688; 61.43999863,-0.000576186; 61.45000076,
              0.000276942; 61.45999908,-0.000250583; 61.47000122,-6.8e-05;
              61.47999954,0.001915391; 61.49000168,0.000946164; 61.5,-0.001025185;
              61.50999832,-0.0006909; 61.52000046,-0.001351054; 61.52999878,-0.000115839;
              61.54000092,0.000346762; 61.54999924,-0.000918871; 61.56000137,
              0.00161824; 61.56999969,-0.000186174; 61.58000183,-0.000393438;
              61.59000015,3.39e-05; 61.59999847,-0.000303208; 61.61000061,-0.000863669;
              61.61999893,-0.000109135; 61.63000107,0.000268741; 61.63999939,
              0.000427917; 61.65000153,0.000537624; 61.65999985,-0.000762957;
              61.66999817,8.95e-05; 61.68000031,-0.000562978; 61.68999863,
              0.000774666; 61.70000076,-6.45e-05; 61.70999908,4.17e-05;
              61.72000122,0.000664611; 61.72999954,-0.00072945; 61.74000168,-0.00084155;
              61.75,0.000477397; 61.75999832,0.000114167; 61.77000046,-0.000151629;
              61.77999878,0.002175756; 61.79000092,0.001685702; 61.79999924,
              0.000233448; 61.81000137,-0.001474196; 61.81999969,-0.000749773;
              61.83000183,0.000250552; 61.84000015,0.000193036; 61.84999847,-0.0010369;
              61.86000061,1.55e-05; 61.86999893,-0.00163373; 61.88000107,
              0.000454601; 61.88999939,-0.000735574; 61.90000153,-0.00157397;
              61.90999985,-0.001304848; 61.91999817,-0.000386888; 61.93000031,-0.000545538;
              61.93999863,0.000585377; 61.95000076,-9.6e-06; 61.95999908,
              0.002504121; 61.97000122,-0.000647801; 61.97999954,-0.001367797;
              61.99000168,0.000517581; 62,-0.002269445; 62.00999832,0.000442123;
              62.02000046,-0.000354184; 62.02999878,0.000894804; 62.04000092,-4.36e-05;
              62.04999924,0.002021089; 62.06000137,-0.000367407; 62.06999969,-0.001227036;
              62.08000183,0.000514718; 62.09000015,0.000678702; 62.09999847,
              0.000285413; 62.11000061,-0.000247066; 62.11999893,-0.000688058;
              62.13000107,0.001254129; 62.13999939,3.88e-06; 62.15000153,-0.000769183;
              62.15999985,-0.000704089; 62.16999817,-1.21e-05; 62.18000031,-0.000311793;
              62.18999863,-0.001636826; 62.20000076,-0.001106043; 62.20999908,-0.00159989;
              62.22000122,-0.000765572; 62.22999954,0.000450769; 62.24000168,-7.37e-05;
              62.25,-0.000768065; 62.25999832,-9.21e-05; 62.27000046,-0.00223718;
              62.27999878,0.001028695; 62.29000092,0.000750627; 62.29999924,
              0.001139882; 62.31000137,0.00109129; 62.31999969,0.001056475;
              62.33000183,-0.000723413; 62.34000015,-0.000113018; 62.34999847,
              0.000155314; 62.36000061,0.001086371; 62.36999893,0.00179495;
              62.38000107,0.00028885; 62.38999939,0.000157107; 62.40000153,-0.000395623;
              62.40999985,0.001229314; 62.41999817,0.000284012; 62.43000031,
              0.001721596; 62.43999863,0.001497864; 62.45000076,0.00021915;
              62.45999908,-0.000352533; 62.47000122,-0.000135425; 62.47999954,
              0.000344251; 62.49000168,-0.00086356; 62.5,0.001318633;
              62.50999832,0.001039714; 62.52000046,0.000991294; 62.52999878,
              0.000825093; 62.54000092,-0.001380875; 62.54999924,-0.000669746;
              62.56000137,-0.001630345; 62.56999969,-7.49e-05; 62.58000183,-0.000361256;
              62.59000015,0.000263291; 62.59999847,0.00060699; 62.61000061,-0.001158338;
              62.61999893,0.000571398; 62.63000107,-0.00171191; 62.63999939,
              0.001272222; 62.65000153,0.000662471; 62.65999985,-0.00112356;
              62.66999817,-0.001150231; 62.68000031,-0.001660992; 62.68999863,-0.001274789;
              62.70000076,0.000947114; 62.70999908,0.000510711; 62.72000122,
              0.001427078; 62.72999954,0.000602696; 62.74000168,-1.04e-05;
              62.75,-0.000229476; 62.75999832,-0.000155979; 62.77000046,
              0.00236795; 62.77999878,-0.000392404; 62.79000092,-0.000204705;
              62.79999924,0.00048786; 62.81000137,0.000442669; 62.81999969,-0.000834138;
              62.83000183,-0.00049025; 62.84000015,-8.67e-05; 62.84999847,
              0.000756125; 62.86000061,-0.000420818; 62.86999893,0.001112586;
              62.88000107,-0.000299115; 62.88999939,-0.001114045; 62.90000153,-0.000211843;
              62.90999985,0.000172017; 62.91999817,0.00118557; 62.93000031,-0.001175643;
              62.93999863,-0.000252398; 62.95000076,-0.001142666; 62.95999908,-0.000477805;
              62.97000122,-0.001017973; 62.97999954,0.001530298; 62.99000168,-0.000652478;
              63,0.000531252; 63.00999832,0.000312847; 63.02000046,-0.000452549;
              63.02999878,-0.000974035; 63.04000092,0.000819497; 63.04999924,
              0.001926367; 63.06000137,0.00060207; 63.06999969,-0.000305048;
              63.08000183,0.001989978; 63.09000015,-0.000841087; 63.09999847,-0.001060702;
              63.11000061,0.000303812; 63.11999893,0.001186201; 63.13000107,-0.00058306;
              63.13999939,0.000189656; 63.15000153,0.001963099; 63.15999985,
              0.001298377; 63.16999817,-0.000656939; 63.18000031,-0.001765554;
              63.18999863,0.001791445; 63.20000076,-0.001047486; 63.20999908,
              0.002017096; 63.22000122,-0.000901334; 63.22999954,-0.000198267;
              63.24000168,0.00036518; 63.25,0.000885687; 63.25999832,
              0.000351621; 63.27000046,-0.000697531; 63.27999878,0.000396282;
              63.29000092,0.000151998; 63.29999924,0.000766904; 63.31000137,
              0.001910272; 63.31999969,0.002783558; 63.33000183,-0.002166714;
              63.34000015,-0.000881572; 63.34999847,0.000588473; 63.36000061,
              0.000415194; 63.36999893,-0.001482566; 63.38000107,0.000630855;
              63.38999939,-0.001284249; 63.40000153,-0.000339331; 63.40999985,
              0.000910709; 63.41999817,-5.62e-05; 63.43000031,-0.000572581;
              63.43999863,-0.0005185; 63.45000076,-0.000106782; 63.45999908,-0.000191934;
              63.47000122,0.000525639; 63.47999954,-0.002956528; 63.49000168,
              0.000405114; 63.5,-6.58e-05; 63.50999832,-3.67e-05; 63.52000046,
              1.39e-05; 63.52999878,-0.000234274; 63.54000092,-0.000437359;
              63.54999924,0.000331908; 63.56000137,0.000348648; 63.56999969,-0.000164159;
              63.58000183,-0.000407175; 63.59000015,-0.000628439; 63.59999847,
              0.00137399; 63.61000061,-1.18e-05; 63.61999893,0.000619934;
              63.63000107,-0.000480628; 63.63999939,2.92e-05; 63.65000153,-9.05e-05;
              63.65999985,0.000793977; 63.66999817,0.000365359; 63.68000031,-0.001821043;
              63.68999863,-7.74e-05; 63.70000076,-0.000606783; 63.70999908,
              0.000901013; 63.72000122,0.000255589; 63.72999954,0.000527122;
              63.74000168,0.000246509; 63.75,0.000334551; 63.75999832,-0.001190339;
              63.77000046,0.001167821; 63.77999878,-0.000771494; 63.79000092,-0.000731074;
              63.79999924,-0.000271168; 63.81000137,0.00016271; 63.81999969,
              0.002417906; 63.83000183,0.000259359; 63.84000015,-1.42e-06;
              63.84999847,-0.001566417; 63.86000061,0.000569439; 63.86999893,-0.000537177;
              63.88000107,0.000295789; 63.88999939,-9.4e-05; 63.90000153,
              0.001003941; 63.90999985,7.71e-05; 63.91999817,-0.001769729;
              63.93000031,-0.001460347; 63.93999863,-9.78e-05; 63.95000076,-0.001373652;
              63.95999908,0.000568213; 63.97000122,0.00135025; 63.97999954,
              0.001339482; 63.99000168,0.001001272; 64,-0.002549376;
              64.01000214,-0.000617728; 64.01999664,-0.000556473; 64.02999878,
              0.002768134; 64.04000092,0.002575835; 64.05000305,-0.000809724;
              64.05999756,0.000183579; 64.06999969,0.001920611; 64.08000183,-0.000578097;
              64.08999634,-0.000503575; 64.09999847,-0.000652847; 64.11000061,
              0.001428886; 64.12000275,-0.000274392; 64.12999725,0.001324139;
              64.13999939,-0.00021362; 64.15000153,0.000579457; 64.16000366,-0.000592886;
              64.16999817,0.000594817; 64.18000031,-2.09e-05; 64.19000244,
              0.00175698; 64.19999695,0.000198018; 64.20999908,0.000427015;
              64.22000122,-0.001339882; 64.23000336,0.001397123; 64.23999786,-0.000206015;
              64.25,-0.000473551; 64.26000214,-0.000939499; 64.26999664,-0.00026354;
              64.27999878,-0.002003232; 64.29000092,0.000831453; 64.30000305,
              0.001098478; 64.30999756,0.00315067; 64.31999969,0.000579478;
              64.33000183,0.000160157; 64.33999634,0.001080689; 64.34999847,-0.001655521;
              64.36000061,0.00184544; 64.37000275,0.000316135; 64.37999725,
              0.000676746; 64.38999939,-0.002045821; 64.40000153,-0.001177642;
              64.41000366,0.000552899; 64.41999817,-2.18e-05; 64.43000031,-0.000810254;
              64.44000244,0.000601317; 64.44999695,-0.000413859; 64.45999908,
              0.000494383; 64.47000122,0.00073105; 64.48000336,0.000586063;
              64.48999786,-0.001437856; 64.5,-3.59e-06; 64.51000214,-0.000649306;
              64.51999664,0.000178685; 64.52999878,0.000270855; 64.54000092,-0.001101019;
              64.55000305,0.001820763; 64.55999756,0.000103093; 64.56999969,
              0.001077551; 64.58000183,0.001831086; 64.58999634,-0.000230709;
              64.59999847,0.001000471; 64.61000061,-0.000695725; 64.62000275,-0.000295778;
              64.62999725,0.000562112; 64.63999939,-0.001010787; 64.65000153,
              0.000576474; 64.66000366,-0.000997112; 64.66999817,-0.000758116;
              64.68000031,-0.000661978; 64.69000244,0.000318026; 64.69999695,
              0.00083724; 64.70999908,-0.00072067; 64.72000122,0.00039117;
              64.73000336,-4.83e-05; 64.73999786,-0.000921997; 64.75,
              0.001279239; 64.76000214,-6.43e-05; 64.76999664,0.000790275;
              64.77999878,0.000503243; 64.79000092,-0.000515256; 64.80000305,
              0.000851203; 64.80999756,-0.000679828; 64.81999969,0.000204266;
              64.83000183,-0.000375198; 64.83999634,0.001132193; 64.84999847,-0.001186938;
              64.86000061,0.002215544; 64.87000275,0.000192323; 64.87999725,-0.00027204;
              64.88999939,0.000848403; 64.90000153,4.74e-05; 64.91000366,
              0.001408814; 64.91999817,-0.000555965; 64.93000031,0.00062903;
              64.94000244,-0.000216371; 64.94999695,0.000358032; 64.95999908,
              0.001699395; 64.97000122,-0.001446797; 64.98000336,0.000277597;
              64.98999786,0.001306968; 65,0.000848352; 65.01000214,-0.000134805;
              65.01999664,-0.001251427; 65.02999878,0.000780221; 65.04000092,-0.000950394;
              65.05000305,0.001046761; 65.05999756,0.000264531; 65.06999969,
              0.001082442; 65.08000183,-0.000858012; 65.08999634,-0.002180464;
              65.09999847,0.001632791; 65.11000061,0.00011694; 65.12000275,
              0.001524504; 65.12999725,0.000172423; 65.13999939,0.000783395;
              65.15000153,0.000802759; 65.16000366,0.000420809; 65.16999817,
              0.001146698; 65.18000031,-0.001987965; 65.19000244,0.000186597;
              65.19999695,0.00121719; 65.20999908,0.000169347; 65.22000122,-0.000618892;
              65.23000336,-0.000217364; 65.23999786,0.001666351; 65.25,-0.000635276;
              65.26000214,-0.00050403; 65.26999664,0.00108774; 65.27999878,
              0.000403372; 65.29000092,-8.07e-05; 65.30000305,-1.63e-06;
              65.30999756,-0.000788093; 65.31999969,0.000884982; 65.33000183,-0.002240699;
              65.33999634,-0.001348642; 65.34999847,0.000928442; 65.36000061,
              4.55e-05; 65.37000275,-0.000316722; 65.37999725,0.000309672;
              65.38999939,0.000381218; 65.40000153,0.000106376; 65.41000366,-0.000966789;
              65.41999817,0.000944333; 65.43000031,0.001858045; 65.44000244,-0.000842949;
              65.44999695,0.000381392; 65.45999908,0.000627954; 65.47000122,
              0.000309322; 65.48000336,0.000362816; 65.48999786,-0.00057202;
              65.5,-0.000205809; 65.51000214,0.000464728; 65.51999664,-0.000641222;
              65.52999878,-0.000403239; 65.54000092,-0.001033495; 65.55000305,-0.001258694;
              65.55999756,-0.000726791; 65.56999969,-0.000662491; 65.58000183,-0.002025669;
              65.58999634,-0.000225083; 65.59999847,-0.002852804; 65.61000061,
              0.000309459; 65.62000275,-0.000409776; 65.62999725,0.000880631;
              65.63999939,-3.37e-05; 65.65000153,-0.000997126; 65.66000366,-8.91e-05;
              65.66999817,0.000431262; 65.68000031,-0.000209427; 65.69000244,-0.001175868;
              65.69999695,0.001242269; 65.70999908,-0.000593814; 65.72000122,-0.000560387;
              65.73000336,0.000225829; 65.73999786,0.000624054; 65.75,
              0.00141753; 65.76000214,0.000576349; 65.76999664,-0.001212166;
              65.77999878,-0.000326456; 65.79000092,0.001678096; 65.80000305,-0.000665978;
              65.80999756,-0.001271503; 65.81999969,0.000353031; 65.83000183,
              7.4e-05; 65.83999634,0.000158753; 65.84999847,2.89e-06;
              65.86000061,-0.000304399; 65.87000275,-0.000901543; 65.87999725,
              0.000371266; 65.88999939,-0.000792917; 65.90000153,0.001770059;
              65.91000366,-0.001132916; 65.91999817,0.001606931; 65.93000031,
              0.00110305; 65.94000244,-0.001038067; 65.94999695,0.000288281;
              65.95999908,0.000735404; 65.97000122,0.000167998; 65.98000336,-0.000169004;
              65.98999786,0.001456906; 66,-0.00037386; 66.01000214,-0.000323745;
              66.01999664,0.000511113; 66.02999878,0.000993469; 66.04000092,
              0.00026059; 66.05000305,-6.64e-05; 66.05999756,-0.000661407;
              66.06999969,-0.001466691; 66.08000183,-0.000894792; 66.08999634,
              0.000899743; 66.09999847,-0.00114385; 66.11000061,-9.56e-05;
              66.12000275,-0.000457806; 66.12999725,-0.001287534; 66.13999939,
              9.37e-05; 66.15000153,0.000245151; 66.16000366,0.000136833;
              66.16999817,0.000341948; 66.18000031,-0.000591658; 66.19000244,
              0.000259053; 66.19999695,2.66e-05; 66.20999908,-0.000551058;
              66.22000122,-0.000236938; 66.23000336,0.000625217; 66.23999786,
              0.000859095; 66.25,0.001506053; 66.26000214,-0.000202129;
              66.26999664,0.00065376; 66.27999878,-0.001475287; 66.29000092,
              0.00103865; 66.30000305,-0.002344137; 66.30999756,-0.000300519;
              66.31999969,5.7e-05; 66.33000183,-0.000968476; 66.33999634,-0.000874648;
              66.34999847,0.000148094; 66.36000061,-4.17e-05; 66.37000275,
              0.000223442; 66.37999725,-0.00034902; 66.38999939,0.001101283;
              66.40000153,0.000778766; 66.41000366,0.000198974; 66.41999817,-0.000322893;
              66.43000031,2.47e-06; 66.44000244,0.001309891; 66.44999695,
              0.00018506; 66.45999908,0.000194553; 66.47000122,0.000598246;
              66.48000336,-8.15e-05; 66.48999786,-0.000114894; 66.5,8.28e-05;
              66.51000214,-3.96e-05; 66.51999664,0.000303288; 66.52999878,-0.001535482;
              66.54000092,0.001064008; 66.55000305,-1.52e-05; 66.55999756,
              0.00047782; 66.56999969,-0.000233366; 66.58000183,-0.001397129;
              66.58999634,0.000473199; 66.59999847,0.001453467; 66.61000061,-0.00196436;
              66.62000275,-0.000771502; 66.62999725,-0.001754719; 66.63999939,-0.000145904;
              66.65000153,0.000145378; 66.66000366,-0.000212144; 66.66999817,
              0.001246772; 66.68000031,-0.00091919; 66.69000244,-0.000615779;
              66.69999695,-0.000218603; 66.70999908,0.000808908; 66.72000122,
              0.002165913; 66.73000336,-8.78e-05; 66.73999786,0.000240871;
              66.75,-0.001427768; 66.76000214,-0.000757356; 66.76999664,
              0.000441413; 66.77999878,0.000736649; 66.79000092,-0.000407194;
              66.80000305,-0.000940314; 66.80999756,-0.000907215; 66.81999969,
              0.000581407; 66.83000183,0.000672028; 66.83999634,-0.001591427;
              66.84999847,-0.000264843; 66.86000061,-0.000734177; 66.87000275,-0.000659045;
              66.87999725,0.000357043; 66.88999939,0.00065094; 66.90000153,
              4.67e-05; 66.91000366,-0.000402908; 66.91999817,-0.002212393;
              66.93000031,0.002586279; 66.94000244,-0.000244289; 66.94999695,-0.000512335;
              66.95999908,0.00061726; 66.97000122,-0.000107193; 66.98000336,
              0.000790763; 66.98999786,-0.000833056; 67,0.000179752;
              67.01000214,0.001172139; 67.01999664,0.00129073; 67.02999878,
              0.002564394; 67.04000092,0.000125916; 67.05000305,0.000475774;
              67.05999756,-0.000449862; 67.06999969,-0.00025371; 67.08000183,-0.001238475;
              67.08999634,0.002482561; 67.09999847,-0.000353161; 67.11000061,
              0.000842626; 67.12000275,0.000315622; 67.12999725,-0.001127168;
              67.13999939,-0.001125328; 67.15000153,0.000753808; 67.16000366,
              0.000320387; 67.16999817,-0.000332745; 67.18000031,-0.000960342;
              67.19000244,0.000326739; 67.19999695,-0.000331252; 67.20999908,-0.001435403;
              67.22000122,-0.000681235; 67.23000336,-9.04e-05; 67.23999786,-0.000380553;
              67.25,-0.000317229; 67.26000214,0.001251672; 67.26999664,-0.001098484;
              67.27999878,-0.000135937; 67.29000092,-0.000587181; 67.30000305,-0.001694942;
              67.30999756,-0.000499766; 67.31999969,-0.001604236; 67.33000183,-0.002463327;
              67.33999634,-0.000809842; 67.34999847,0.000292795; 67.36000061,-0.001153537;
              67.37000275,0.001251305; 67.37999725,0.000596252; 67.38999939,-0.001090442;
              67.40000153,0.001183399; 67.41000366,-0.000477596; 67.41999817,-0.001463465;
              67.43000031,-0.00023826; 67.44000244,0.001520298; 67.44999695,-0.000685547;
              67.45999908,0.000270111; 67.47000122,0.000550331; 67.48000336,
              0.001229147; 67.48999786,-0.001288434; 67.5,-0.001564116;
              67.51000214,0.000544828; 67.51999664,-0.002618413; 67.52999878,-0.001066342;
              67.54000092,-0.000270891; 67.55000305,-0.000524716; 67.55999756,-0.000329325;
              67.56999969,-0.000313027; 67.58000183,-0.00052938; 67.58999634,
              0.000227646; 67.59999847,0.000673335; 67.61000061,-0.000317787;
              67.62000275,-0.001256987; 67.62999725,0.000712155; 67.63999939,-2.31e-05;
              67.65000153,1.38e-05; 67.66000366,-0.001288755; 67.66999817,
              0.000235187; 67.68000031,-0.00138923; 67.69000244,0.000779527;
              67.69999695,0.000239546; 67.70999908,-0.000577071; 67.72000122,
              0.000342984; 67.73000336,-0.000222383; 67.73999786,-0.000358759;
              67.75,0.000600988; 67.76000214,-0.00093824; 67.76999664,
              0.001340691; 67.77999878,-0.001882206; 67.79000092,-0.001798984;
              67.80000305,-0.001449986; 67.80999756,0.000403054; 67.81999969,
              0.001710672; 67.83000183,-0.000201187; 67.83999634,-0.00101842;
              67.84999847,-0.000784958; 67.86000061,0.000579507; 67.87000275,-0.000406831;
              67.87999725,0.001202628; 67.88999939,0.000199752; 67.90000153,
              0.00128744; 67.91000366,0.000401951; 67.91999817,0.001795538;
              67.93000031,0.00072996; 67.94000244,0.000182648; 67.94999695,
              0.000494618; 67.95999908,-0.001175155; 67.97000122,-0.001230693;
              67.98000336,0.000196955; 67.98999786,-1.93e-05; 68,-0.001776525;
              68.01000214,0.000569934; 68.01999664,-0.002235375; 68.02999878,
              0.000672764; 68.04000092,-0.001177375; 68.05000305,-0.0015327;
              68.05999756,0.001117412; 68.06999969,-1.8e-05; 68.08000183,-2.85e-05;
              68.08999634,-0.000571964; 68.09999847,-0.001264953; 68.11000061,
              0.000937053; 68.12000275,0.002182248; 68.12999725,0.002001591;
              68.13999939,-3.87e-05; 68.15000153,-0.000378545; 68.16000366,-4.94e-05;
              68.16999817,0.000168163; 68.18000031,0.000311962; 68.19000244,-0.000796919;
              68.19999695,0.000260502; 68.20999908,-0.001773244; 68.22000122,
              0.001037139; 68.23000336,-0.001475511; 68.23999786,0.000188071;
              68.25,0.000382331; 68.26000214,0.001500647; 68.26999664,
              0.000779685; 68.27999878,0.002605031; 68.29000092,0.000266566;
              68.30000305,0.000195879; 68.30999756,0.000855908; 68.31999969,
              0.000155641; 68.33000183,0.001892893; 68.33999634,-0.000628154;
              68.34999847,0.000484669; 68.36000061,-0.000193132; 68.37000275,-0.000561914;
              68.37999725,0.001442079; 68.38999939,0.000724935; 68.40000153,-0.001879686;
              68.41000366,0.001329878; 68.41999817,0.000468135; 68.43000031,
              3.39e-05; 68.44000244,-0.001029791; 68.44999695,-0.00047141;
              68.45999908,0.000710635; 68.47000122,-0.00079678; 68.48000336,-0.001298139;
              68.48999786,-0.001376368; 68.5,0.000366292; 68.51000214,-0.000683905;
              68.51999664,0.000708275; 68.52999878,-0.000612282; 68.54000092,-0.000926897;
              68.55000305,0.000354308; 68.55999756,0.002026807; 68.56999969,
              0.000118815; 68.58000183,-0.000765398; 68.58999634,0.000347191;
              68.59999847,0.000854966; 68.61000061,-0.000255379; 68.62000275,-0.000569756;
              68.62999725,0.001382669; 68.63999939,0.000527783; 68.65000153,
              0.001349811; 68.66000366,0.000914592; 68.66999817,-0.000663881;
              68.68000031,-0.000616538; 68.69000244,0.000965371; 68.69999695,
              5.56e-05; 68.70999908,0.000156971; 68.72000122,-0.000150881;
              68.73000336,0.001302012; 68.73999786,0.000292239; 68.75,
              0.000556873; 68.76000214,-0.000633611; 68.76999664,0.000682139;
              68.77999878,-0.000285962; 68.79000092,0.002345735; 68.80000305,-0.00012239;
              68.80999756,0.000781772; 68.81999969,0.000773376; 68.83000183,
              0.000496455; 68.83999634,0.001072056; 68.84999847,-0.000556439;
              68.86000061,0.000394649; 68.87000275,0.000534934; 68.87999725,-0.000910074;
              68.88999939,-0.00033123; 68.90000153,0.001102369; 68.91000366,-0.000743457;
              68.91999817,0.001722108; 68.93000031,6.78e-06; 68.94000244,
              5.77e-05; 68.94999695,-0.001125917; 68.95999908,0.001028029;
              68.97000122,6.92e-05; 68.98000336,0.000280917; 68.98999786,
              0.000937315; 69,-0.000237733; 69.01000214,-0.001230507;
              69.01999664,-0.00039237; 69.02999878,-0.001328698; 69.04000092,-0.000532807;
              69.05000305,-0.00177734; 69.05999756,-0.000525342; 69.06999969,-0.000594074;
              69.08000183,0.001723241; 69.08999634,0.000250149; 69.09999847,-0.000725091;
              69.11000061,5.51e-05; 69.12000275,-0.000926551; 69.12999725,-0.000641806;
              69.13999939,-0.00018945; 69.15000153,0.00053331; 69.16000366,
              9.43e-05; 69.16999817,-0.002280975; 69.18000031,-0.000863708;
              69.19000244,-0.000785264; 69.19999695,0.000742614; 69.20999908,-3.44e-05;
              69.22000122,-9.25e-05; 69.23000336,0.001330915; 69.23999786,
              0.000316141; 69.25,0.000264108; 69.26000214,0.000562573;
              69.26999664,0.001930569; 69.27999878,-0.00163324; 69.29000092,
              0.00127845; 69.30000305,-0.000543137; 69.30999756,-0.000317528;
              69.31999969,0.000979259; 69.33000183,-0.000437481; 69.33999634,-0.000490906;
              69.34999847,0.001428302; 69.36000061,0.001556204; 69.37000275,
              0.001031224; 69.37999725,0.001204978; 69.38999939,0.001408067;
              69.40000153,0.00145158; 69.41000366,-0.00232827; 69.41999817,
              0.000568779; 69.43000031,-0.000599318; 69.44000244,0.00226643;
              69.44999695,-0.001216802; 69.45999908,0.001404931; 69.47000122,
              0.0011417; 69.48000336,-1.46e-07; 69.48999786,-0.000230598; 69.5,
              -0.000141424; 69.51000214,-0.000727608; 69.51999664,4.48e-05;
              69.52999878,-0.002219012; 69.54000092,0.000124702; 69.55000305,
              0.001814492; 69.55999756,-0.000265216; 69.56999969,0.000395663;
              69.58000183,-0.000386488; 69.58999634,-0.000292058; 69.59999847,-0.001364187;
              69.61000061,-0.000283771; 69.62000275,-0.000464299; 69.62999725,-0.000510924;
              69.63999939,-0.001855042; 69.65000153,0.001854892; 69.66000366,-0.001487357;
              69.66999817,-0.000344522; 69.68000031,-0.002012291; 69.69000244,
              0.000664177; 69.69999695,0.000639712; 69.70999908,-0.000242622;
              69.72000122,-0.000310293; 69.73000336,-0.001187974; 69.73999786,
              0.000983865; 69.75,0.001545951; 69.76000214,0.000975061;
              69.76999664,0.000661248; 69.77999878,-0.001528603; 69.79000092,
              0.000298089; 69.80000305,-0.000365019; 69.80999756,0.000928173;
              69.81999969,-0.00045714; 69.83000183,-0.001231035; 69.83999634,-0.000426053;
              69.84999847,0.00046164; 69.86000061,0.001308159; 69.87000275,
              0.001823832; 69.87999725,0.000968838; 69.88999939,0.000374708;
              69.90000153,-0.000173603; 69.91000366,-0.001214031; 69.91999817,
              0.000668568; 69.93000031,-0.000996222; 69.94000244,0.000471604;
              69.94999695,-0.000634448; 69.95999908,7.56e-07; 69.97000122,-0.000472269;
              69.98000336,-0.001119429; 69.98999786,-0.000816885; 70,
              0.000248585; 70.01000214,-7.01e-05; 70.01999664,0.001764822;
              70.02999878,-0.000923503; 70.04000092,0.000925761; 70.05000305,
              0.001404347; 70.05999756,0.001277204; 70.06999969,0.000890917;
              70.08000183,-0.00055797; 70.08999634,0.002110854; 70.09999847,
              0.001247641; 70.11000061,-3.79e-05; 70.12000275,-0.000540057;
              70.12999725,0.000815615; 70.13999939,-0.001269192; 70.15000153,
              0.001459216; 70.16000366,0.000351929; 70.16999817,0.001322596;
              70.18000031,0.00092926; 70.19000244,0.000739869; 70.19999695,-0.000183157;
              70.20999908,-0.000954944; 70.22000122,0.001880058; 70.23000336,-0.001927534;
              70.23999786,-6.14e-05; 70.25,0.001628112; 70.26000214,-0.000228725;
              70.26999664,-0.000144691; 70.27999878,0.000443859; 70.29000092,-1.69e-05;
              70.30000305,-0.000523988; 70.30999756,-0.001138769; 70.31999969,-0.001761655;
              70.33000183,0.001350196; 70.33999634,-0.000279911; 70.34999847,
              0.000286264; 70.36000061,0.000120561; 70.37000275,-0.00130092;
              70.37999725,0.001338023; 70.38999939,-0.001102395; 70.40000153,
              0.000946884; 70.41000366,-0.001677418; 70.41999817,0.001727793;
              70.43000031,-8.82e-05; 70.44000244,-5.14e-05; 70.44999695,-0.000324237;
              70.45999908,-0.001109539; 70.47000122,-0.000750325; 70.48000336,
              0.002134249; 70.48999786,-0.000572855; 70.5,0.000163593;
              70.51000214,0.00082531; 70.51999664,0.000165133; 70.52999878,
              0.000685931; 70.54000092,-0.000864108; 70.55000305,7.18e-05;
              70.55999756,-0.001533868; 70.56999969,-0.000820928; 70.58000183,-0.000272497;
              70.58999634,0.001515085; 70.59999847,-0.00018205; 70.61000061,
              0.000742076; 70.62000275,0.001754483; 70.62999725,-0.000119172;
              70.63999939,0.002030681; 70.65000153,0.001904076; 70.66000366,
              0.001856438; 70.66999817,-0.001506501; 70.68000031,-7.01e-05;
              70.69000244,0.001423363; 70.69999695,0.000113516; 70.70999908,
              0.000650305; 70.72000122,-9.79e-05; 70.73000336,-0.000667348;
              70.73999786,-0.000156644; 70.75,-0.000784; 70.76000214,
              0.000241527; 70.76999664,-0.002463046; 70.77999878,-0.000990838;
              70.79000092,0.000468496; 70.80000305,0.000286243; 70.80999756,-0.000893712;
              70.81999969,0.00179504; 70.83000183,0.001297221; 70.83999634,-0.000920645;
              70.84999847,-0.000487652; 70.86000061,0.001065228; 70.87000275,-6.51e-05;
              70.87999725,0.000472987; 70.88999939,7.1e-05; 70.90000153,
              1.53e-05; 70.91000366,-0.000978232; 70.91999817,-0.000108032;
              70.93000031,0.000916212; 70.94000244,-0.001084069; 70.94999695,-0.001034374;
              70.95999908,-0.001161337; 70.97000122,0.000160072; 70.98000336,
              0.00012887; 70.98999786,-0.001170569; 71,0.001144844; 71.01000214,
              -0.000892054; 71.01999664,0.000610248; 71.02999878,0.000449986;
              71.04000092,0.002200722; 71.05000305,-0.000446949; 71.05999756,
              0.001165148; 71.06999969,-0.00039748; 71.08000183,0.000667483;
              71.08999634,-0.001073194; 71.09999847,0.000284422; 71.11000061,
              0.000453504; 71.12000275,-0.000714519; 71.12999725,0.001825886;
              71.13999939,-0.000330662; 71.15000153,-0.000975491; 71.16000366,-0.00173421;
              71.16999817,0.000868842; 71.18000031,-0.000453966; 71.19000244,
              0.001136922; 71.19999695,0.000115056; 71.20999908,0.001751336;
              71.22000122,-0.001149805; 71.23000336,0.000654843; 71.23999786,
              0.000526528; 71.25,0.001480779; 71.26000214,-0.000806701;
              71.26999664,0.000874118; 71.27999878,-0.001220165; 71.29000092,
              0.000803321; 71.30000305,-0.000915257; 71.30999756,-0.001384763;
              71.31999969,-0.001070212; 71.33000183,-0.000321629; 71.33999634,
              0.000931081; 71.34999847,0.002027117; 71.36000061,-6.19e-05;
              71.37000275,-0.000960984; 71.37999725,-0.000726022; 71.38999939,-0.000349247;
              71.40000153,3.87e-05; 71.41000366,-0.000416881; 71.41999817,
              0.001119916; 71.43000031,0.000392815; 71.44000244,0.000889946;
              71.44999695,-0.000576295; 71.45999908,0.000415179; 71.47000122,
              0.000118769; 71.48000336,0.000256644; 71.48999786,0.000716046;
              71.5,-0.001607301; 71.51000214,0.0014025; 71.51999664,-0.00095653;
              71.52999878,-0.001318186; 71.54000092,0.000126703; 71.55000305,-0.000110984;
              71.55999756,-0.001213859; 71.56999969,0.000555992; 71.58000183,
              0.000846592; 71.58999634,0.000894165; 71.59999847,0.001282398;
              71.61000061,-0.000367456; 71.62000275,-0.000775741; 71.62999725,-0.000967873;
              71.63999939,0.000506178; 71.65000153,0.000152867; 71.66000366,-0.000922538;
              71.66999817,0.00250023; 71.68000031,0.000271858; 71.69000244,
              0.00097501; 71.69999695,0.000440089; 71.70999908,-0.000345488;
              71.72000122,-0.000455666; 71.73000336,0.001051538; 71.73999786,-0.001228342;
              71.75,0.000825339; 71.76000214,-0.000618113; 71.76999664,-0.001766013;
              71.77999878,3.02e-05; 71.79000092,-0.000402401; 71.80000305,
              0.001952648; 71.80999756,0.001264754; 71.81999969,-0.000692604;
              71.83000183,-0.000208361; 71.83999634,-0.001020661; 71.84999847,
              0.000224635; 71.86000061,-0.000925329; 71.87000275,-1.28e-05;
              71.87999725,6.19e-05; 71.88999939,-9.58e-05; 71.90000153,-0.002092562;
              71.91000366,-0.000716735; 71.91999817,0.000296829; 71.93000031,
              0.001986815; 71.94000244,0.002062142; 71.94999695,-0.000385479;
              71.95999908,5.4e-05; 71.97000122,0.00049223; 71.98000336,-0.000670724;
              71.98999786,0.00055524; 72,-0.000812264; 72.01000214,-0.000952323;
              72.01999664,0.000249374; 72.02999878,0.000402038; 72.04000092,
              0.001371366; 72.05000305,0.000500321; 72.05999756,0.001813171;
              72.06999969,0.000348689; 72.08000183,-0.000122593; 72.08999634,
              0.000292945; 72.09999847,0.000685777; 72.11000061,-0.000612827;
              72.12000275,0.001879918; 72.12999725,-0.000665133; 72.13999939,-0.000371725;
              72.15000153,0.000470759; 72.16000366,-0.000706306; 72.16999817,-0.00043398;
              72.18000031,-0.001133758; 72.19000244,0.000442748; 72.19999695,
              0.001367335; 72.20999908,-0.001711263; 72.22000122,0.000520443;
              72.23000336,-0.000693681; 72.23999786,-0.000316702; 72.25,-0.00091185;
              72.26000214,6.7e-05; 72.26999664,-0.000146145; 72.27999878,
              0.000913931; 72.29000092,0.000515672; 72.30000305,-0.001320548;
              72.30999756,-0.000551113; 72.31999969,0.000204704; 72.33000183,
              0.000737527; 72.33999634,0.001584899; 72.34999847,-0.000100975;
              72.36000061,0.001501683; 72.37000275,-0.000212264; 72.37999725,-0.000482185;
              72.38999939,-0.000457774; 72.40000153,0.000581473; 72.41000366,-0.000593784;
              72.41999817,0.001878342; 72.43000031,0.000695832; 72.44000244,
              0.001219322; 72.44999695,0.000191583; 72.45999908,-0.001381554;
              72.47000122,0.000343119; 72.48000336,-0.00071082; 72.48999786,-0.000311744;
              72.5,0.001255542; 72.51000214,8.65e-05; 72.51999664,-0.000287277;
              72.52999878,3.62e-06; 72.54000092,0.001139778; 72.55000305,-0.000340119;
              72.55999756,-0.000209927; 72.56999969,8.46e-05; 72.58000183,-0.000274875;
              72.58999634,-0.000189293; 72.59999847,-0.00194147; 72.61000061,-5e-05;
              72.62000275,-0.001099241; 72.62999725,0.001929416; 72.63999939,-0.001123669;
              72.65000153,3.57e-05; 72.66000366,-9.04e-05; 72.66999817,
              0.000306978; 72.68000031,2.45e-05; 72.69000244,-0.001220997;
              72.69999695,-0.001245752; 72.70999908,0.000579775; 72.72000122,-0.001060111;
              72.73000336,-0.001325815; 72.73999786,0.000149671; 72.75,
              0.000290847; 72.76000214,-0.000498954; 72.76999664,-0.001013168;
              72.77999878,2.83e-05; 72.79000092,0.000626791; 72.80000305,
              0.000642369; 72.80999756,0.000473545; 72.81999969,8.11e-05;
              72.83000183,-0.001138636; 72.83999634,0.000687533; 72.84999847,
              0.00124047; 72.86000061,0.000764895; 72.87000275,0.000360211;
              72.87999725,-0.001013457; 72.88999939,0.001664404; 72.90000153,-0.000351272;
              72.91000366,-0.001653805; 72.91999817,0.000437006; 72.93000031,-0.000361703;
              72.94000244,-0.000514277; 72.94999695,-0.000268476; 72.95999908,-0.000171905;
              72.97000122,-0.000319614; 72.98000336,-0.000689639; 72.98999786,
              0.000842146; 73,0.001640782; 73.01000214,-0.001857838;
              73.01999664,-0.001403039; 73.02999878,0.000304778; 73.04000092,-1.36e-05;
              73.05000305,0.000384514; 73.05999756,0.00105692; 73.06999969,-0.001027905;
              73.08000183,0.000265208; 73.08999634,-0.000458667; 73.09999847,-0.00089329;
              73.11000061,-0.000613779; 73.12000275,-0.001086964; 73.12999725,-0.000867671;
              73.13999939,0.000696115; 73.15000153,0.000267658; 73.16000366,
              2.39e-05; 73.16999817,0.000178316; 73.18000031,0.000243908;
              73.19000244,-0.000750489; 73.19999695,0.000274141; 73.20999908,
              0.000386138; 73.22000122,0.001677275; 73.23000336,-0.001081538;
              73.23999786,0.001267196; 73.25,-0.000444147; 73.26000214,-0.002018207;
              73.26999664,-0.002032359; 73.27999878,0.000201489; 73.29000092,
              0.00056316; 73.30000305,0.000774165; 73.30999756,-0.000104067;
              73.31999969,0.000553062; 73.33000183,-0.000124755; 73.33999634,
              0.001214225; 73.34999847,0.000952348; 73.36000061,-0.000664384;
              73.37000275,3.4e-05; 73.37999725,0.000904112; 73.38999939,-0.000932733;
              73.40000153,-0.001230809; 73.41000366,-0.000876683; 73.41999817,
              0.000538362; 73.43000031,-0.000286383; 73.44000244,-3.28e-05;
              73.44999695,-0.001032114; 73.45999908,0.00147168; 73.47000122,-0.000161282;
              73.48000336,-0.00024711; 73.48999786,-3.14e-05; 73.5,4.51e-05;
              73.51000214,-0.000129466; 73.51999664,0.000610404; 73.52999878,-0.00025853;
              73.54000092,0.000192775; 73.55000305,-0.000671431; 73.55999756,-7.43e-05;
              73.56999969,0.000247947; 73.58000183,-0.000686496; 73.58999634,-0.001005588;
              73.59999847,-0.000901309; 73.61000061,-0.001227646; 73.62000275,-0.000219254;
              73.62999725,-9.39e-05; 73.63999939,0.000748715; 73.65000153,
              0.001027804; 73.66000366,9.36e-05; 73.66999817,0.000661411;
              73.68000031,0.000416193; 73.69000244,0.000160352; 73.69999695,-0.000328316;
              73.70999908,-0.001390016; 73.72000122,-0.000121875; 73.73000336,-0.001384269;
              73.73999786,-0.00106033; 73.75,-0.000485348; 73.76000214,
              0.00116674; 73.76999664,0.001102914; 73.77999878,8.41e-06;
              73.79000092,-0.000101708; 73.80000305,0.00136114; 73.80999756,-0.001671734;
              73.81999969,-0.000166847; 73.83000183,-0.000753771; 73.83999634,
              0.000367848; 73.84999847,0.000386034; 73.86000061,0.000273155;
              73.87000275,0.001497702; 73.87999725,-0.0006785; 73.88999939,
              0.001152931; 73.90000153,-0.001082258; 73.91000366,-0.000711315;
              73.91999817,-0.000534038; 73.93000031,0.000612875; 73.94000244,
              0.001417674; 73.94999695,9.17e-06; 73.95999908,0.000225528;
              73.97000122,2.05e-05; 73.98000336,0.000814141; 73.98999786,-0.000226696;
              74,0.00139583; 74.01000214,0.001177312; 74.01999664,0.001046305;
              74.02999878,0.000616571; 74.04000092,0.000553735; 74.05000305,
              0.000914421; 74.05999756,0.000607101; 74.06999969,-0.000663368;
              74.08000183,-0.000949808; 74.08999634,0.000807668; 74.09999847,
              0.002352363; 74.11000061,0.001423721; 74.12000275,-0.000964591;
              74.12999725,4.72e-05; 74.13999939,-0.000363062; 74.15000153,
              0.000534674; 74.16000366,-4.85e-05; 74.16999817,0.000383597;
              74.18000031,0.00076529; 74.19000244,0.000218296; 74.19999695,-0.002401658;
              74.20999908,0.000519188; 74.22000122,-0.000269692; 74.23000336,
              0.000790324; 74.23999786,0.000492468; 74.25,-0.000172114;
              74.26000214,-0.000246382; 74.26999664,-2.73e-05; 74.27999878,
              0.000587503; 74.29000092,0.000422792; 74.30000305,-0.000962732;
              74.30999756,-0.000192704; 74.31999969,0.000320625; 74.33000183,
              0.000524582; 74.33999634,-0.000561937; 74.34999847,0.000904125;
              74.36000061,0.001553229; 74.37000275,0.00092066; 74.37999725,
              0.001147533; 74.38999939,-0.001511697; 74.40000153,0.001263478;
              74.41000366,0.000216971; 74.41999817,-7.28e-05; 74.43000031,
              0.000531088; 74.44000244,-0.00055253; 74.44999695,-0.000960959;
              74.45999908,0.000676006; 74.47000122,0.000708008; 74.48000336,
              0.001089504; 74.48999786,-0.00072969; 74.5,-0.000225421;
              74.51000214,-0.001337234; 74.51999664,0.001469687; 74.52999878,
              0.001549778; 74.54000092,-0.000329292; 74.55000305,0.002166591;
              74.55999756,0.001596363; 74.56999969,0.000892727; 74.58000183,
              0.000301916; 74.58999634,-0.001128957; 74.59999847,0.00082703;
              74.61000061,-0.001278882; 74.62000275,-0.000190772; 74.62999725,
              0.0011576; 74.63999939,-0.000452093; 74.65000153,-0.000203878;
              74.66000366,0.002274816; 74.66999817,0.000910069; 74.68000031,-0.001187164;
              74.69000244,0.001341663; 74.69999695,0.000998745; 74.70999908,
              0.000720691; 74.72000122,-0.001109991; 74.73000336,0.001236335;
              74.73999786,-0.000494332; 74.75,-0.001066892; 74.76000214,
              0.001754744; 74.76999664,-0.000373485; 74.77999878,-0.001739913;
              74.79000092,-0.000505137; 74.80000305,0.001203755; 74.80999756,-0.000816389;
              74.81999969,-0.001136986; 74.83000183,-0.000949722; 74.83999634,-0.001489758;
              74.84999847,8.34e-05; 74.86000061,-0.000951277; 74.87000275,-0.000308005;
              74.87999725,4.74e-06; 74.88999939,0.001227767; 74.90000153,
              0.00066684; 74.91000366,-0.001873051; 74.91999817,0.000514036;
              74.93000031,-0.001072376; 74.94000244,-0.000386138; 74.94999695,-0.000678889;
              74.95999908,-0.000360024; 74.97000122,-0.000264492; 74.98000336,-0.000430916;
              74.98999786,0.000647444; 75,-0.001037899; 75.01000214,0.00067432;
              75.01999664,0.002140893; 75.02999878,0.000563087; 75.04000092,-6.03e-05;
              75.05000305,-0.000227057; 75.05999756,-0.000394285; 75.06999969,-9.41e-05;
              75.08000183,0.001234651; 75.08999634,9.15e-05; 75.09999847,
              0.00074854; 75.11000061,2.6e-05; 75.12000275,0.001649618;
              75.12999725,-0.000121311; 75.13999939,1.55e-05; 75.15000153,-0.000116491;
              75.16000366,0.000898552; 75.16999817,0.000751284; 75.18000031,-0.001399613;
              75.19000244,-0.000475372; 75.19999695,-0.000732065; 75.20999908,-2.24e-05;
              75.22000122,-0.000921183; 75.23000336,0.001189967; 75.23999786,
              0.001572379; 75.25,0.001557208; 75.26000214,0.000771194;
              75.26999664,0.001460533; 75.27999878,-0.000878015; 75.29000092,-4.57e-05;
              75.30000305,0.000528134; 75.30999756,0.002147618; 75.31999969,
              0.000429132; 75.33000183,-0.000168223; 75.33999634,-9.56e-05;
              75.34999847,7.23e-06; 75.36000061,-0.000257443; 75.37000275,-0.000346106;
              75.37999725,-0.001269972; 75.38999939,0.001561828; 75.40000153,
              0.000548471; 75.41000366,0.000339622; 75.41999817,0.000133894;
              75.43000031,-0.000275956; 75.44000244,0.001041748; 75.44999695,-0.000821754;
              75.45999908,1.15e-05; 75.47000122,0.000554461; 75.48000336,-0.000277327;
              75.48999786,0.000554949; 75.5,0.000226494; 75.51000214,0.00088734;
              75.51999664,-0.000788097; 75.52999878,-0.000580148; 75.54000092,
              0.000238335; 75.55000305,-0.000594353; 75.55999756,-0.002069858;
              75.56999969,0.000902552; 75.58000183,-0.000657902; 75.58999634,
              0.000584866; 75.59999847,0.000612156; 75.61000061,-0.001437131;
              75.62000275,-8.6e-05; 75.62999725,0.000840424; 75.63999939,
              0.00103242; 75.65000153,-0.002160697; 75.66000366,0.000429634;
              75.66999817,0.001090462; 75.68000031,0.000506558; 75.69000244,-0.000766005;
              75.69999695,0.000231271; 75.70999908,-0.002320491; 75.72000122,
              0.000892512; 75.73000336,2.45e-05; 75.73999786,-0.000426314;
              75.75,-0.001417108; 75.76000214,0.001055567; 75.76999664,-0.000591979;
              75.77999878,0.000288081; 75.79000092,0.000711621; 75.80000305,-0.000281413;
              75.80999756,-0.00094902; 75.81999969,-0.000353305; 75.83000183,
              0.000263915; 75.83999634,0.001646979; 75.84999847,0.000420176;
              75.86000061,0.00079896; 75.87000275,0.000649842; 75.87999725,
              0.001775147; 75.88999939,0.000265929; 75.90000153,0.001719735;
              75.91000366,-0.000346664; 75.91999817,-0.000728943; 75.93000031,-0.001431217;
              75.94000244,2.26e-05; 75.94999695,-0.001193057; 75.95999908,
              0.001222497; 75.97000122,0.001873362; 75.98000336,-0.000655613;
              75.98999786,-0.000882236; 76,0.000753284; 76.01000214,-0.000123587;
              76.01999664,1.82e-05; 76.02999878,0.000613256; 76.04000092,
              5.3e-05; 76.05000305,0.001268017; 76.05999756,-0.00013566;
              76.06999969,-0.001819963; 76.08000183,6.11e-05; 76.08999634,
              0.000658418; 76.09999847,0.000793592; 76.11000061,0.0010618;
              76.12000275,0.00115854; 76.12999725,0.001687877; 76.13999939,-0.000608861;
              76.15000153,0.00068725; 76.16000366,0.000253394; 76.16999817,-0.000201899;
              76.18000031,-0.000202603; 76.19000244,-5.71e-05; 76.19999695,-0.000607621;
              76.20999908,-0.000756813; 76.22000122,-0.000767341; 76.23000336,-0.000364333;
              76.23999786,0.000269183; 76.25,-0.000122928; 76.26000214,-0.001039405;
              76.26999664,0.000295821; 76.27999878,-0.000246462; 76.29000092,
              0.000114411; 76.30000305,-9.03e-05; 76.30999756,0.000396004;
              76.31999969,-0.000452993; 76.33000183,0.001344606; 76.33999634,
              0.00093701; 76.34999847,0.001186209; 76.36000061,-0.00029105;
              76.37000275,0.001073586; 76.37999725,-2.83e-05; 76.38999939,-0.000379425;
              76.40000153,-0.000446387; 76.41000366,0.000894416; 76.41999817,-0.001035296;
              76.43000031,0.001800875; 76.44000244,-0.000448409; 76.44999695,-0.001278136;
              76.45999908,0.000295919; 76.47000122,0.001088687; 76.48000336,-0.000318641;
              76.48999786,-0.000554793; 76.5,-0.000800986; 76.51000214,
              0.001529385; 76.51999664,-0.000396559; 76.52999878,0.00032301;
              76.54000092,0.000295726; 76.55000305,1.37e-06; 76.55999756,-0.000536938;
              76.56999969,-0.000930971; 76.58000183,-0.001070557; 76.58999634,
              0.000315146; 76.59999847,0.0001665; 76.61000061,-0.002155047;
              76.62000275,0.001762304; 76.62999725,-0.001704387; 76.63999939,
              0.000807169; 76.65000153,0.00014437; 76.66000366,-0.001563467;
              76.66999817,-0.000451081; 76.68000031,-0.00172713; 76.69000244,-0.001984058;
              76.69999695,0.000589724; 76.70999908,-0.000749119; 76.72000122,-0.00026212;
              76.73000336,-0.000612812; 76.73999786,0.000849663; 76.75,
              0.000521758; 76.76000214,-0.000677269; 76.76999664,-0.000975582;
              76.77999878,-2.6e-05; 76.79000092,0.000570691; 76.80000305,
              0.0007449; 76.80999756,-0.000932524; 76.81999969,0.001147407;
              76.83000183,-0.000367309; 76.83999634,-0.000889843; 76.84999847,
              0.000568155; 76.86000061,0.000982203; 76.87000275,0.000769657;
              76.87999725,-0.000975352; 76.88999939,0.000236976; 76.90000153,-0.000181664;
              76.91000366,-0.000411898; 76.91999817,0.000427572; 76.93000031,-3.58e-06;
              76.94000244,0.00017752; 76.94999695,0.001183014; 76.95999908,-0.000838974;
              76.97000122,-0.001688284; 76.98000336,0.000463421; 76.98999786,
              0.001602786; 77,0.00085591; 77.01000214,0.001683175; 77.01999664,
              -0.001240043; 77.02999878,-0.000229285; 77.04000092,0.000831259;
              77.05000305,-0.000209996; 77.05999756,0.000327444; 77.06999969,-0.000640817;
              77.08000183,-0.000150763; 77.08999634,0.001113894; 77.09999847,
              0.00060447; 77.11000061,0.000261314; 77.12000275,-0.001512061;
              77.12999725,-0.000151499; 77.13999939,-0.000121958; 77.15000153,
              0.000815768; 77.16000366,-0.000300502; 77.16999817,-0.00091528;
              77.18000031,-3.12e-05; 77.19000244,-0.000926987; 77.19999695,
              0.000174763; 77.20999908,-0.000848398; 77.22000122,-3.75e-05;
              77.23000336,-0.000593494; 77.23999786,-0.00031881; 77.25,-0.001244208;
              77.26000214,-4.85e-05; 77.26999664,-0.000301624; 77.27999878,-0.00058905;
              77.29000092,-0.000498207; 77.30000305,-0.001814606; 77.30999756,
              0.00255634; 77.31999969,-2.5e-05; 77.33000183,0.000573428;
              77.33999634,0.001434076; 77.34999847,0.000320201; 77.36000061,
              0.000169812; 77.37000275,-0.00058844; 77.37999725,-0.00064031;
              77.38999939,-9.65e-05; 77.40000153,-0.000410606; 77.41000366,
              0.000177801; 77.41999817,0.001356583; 77.43000031,-0.001122099;
              77.44000244,0.001207432; 77.44999695,0.000390512; 77.45999908,
              0.000837642; 77.47000122,0.000832329; 77.48000336,-0.000102401;
              77.48999786,-0.000932106; 77.5,-0.000606669; 77.51000214,-0.000387894;
              77.51999664,-0.000778381; 77.52999878,-0.000242988; 77.54000092,
              0.000898686; 77.55000305,-0.000719459; 77.55999756,-0.001581478;
              77.56999969,0.000442824; 77.58000183,0.001113655; 77.58999634,
              0.00044311; 77.59999847,-0.000580362; 77.61000061,0.000775909;
              77.62000275,-0.000354363; 77.62999725,-0.001635689; 77.63999939,-0.002008181;
              77.65000153,0.000339885; 77.66000366,0.002140024; 77.66999817,-0.001502501;
              77.68000031,-5.04e-05; 77.69000244,-0.000575192; 77.69999695,-0.00057041;
              77.70999908,1.76e-05; 77.72000122,-0.001567258; 77.73000336,
              0.001004403; 77.73999786,0.000287198; 77.75,0.000941502;
              77.76000214,2.35e-05; 77.76999664,-0.00139401; 77.77999878,
              0.001252934; 77.79000092,0.002293287; 77.80000305,0.001238273;
              77.80999756,0.001286815; 77.81999969,-0.000773761; 77.83000183,-0.00251844;
              77.83999634,0.000373221; 77.84999847,0.00055276; 77.86000061,-0.000667903;
              77.87000275,0.001899538; 77.87999725,0.00014694; 77.88999939,
              5.79e-05; 77.90000153,7.8e-05; 77.91000366,0.000492979;
              77.91999817,7.63e-05; 77.93000031,-0.000131784; 77.94000244,-0.000916295;
              77.94999695,-4.3e-05; 77.95999908,0.000960517; 77.97000122,-0.00048755;
              77.98000336,-0.000108196; 77.98999786,-0.001490444; 78,-5.87e-05;
              78.01000214,-5.92e-05; 78.01999664,-0.000451606; 78.02999878,
              5.59e-05; 78.04000092,0.000319401; 78.05000305,6.71e-05;
              78.05999756,0.001944829; 78.06999969,0.00197593; 78.08000183,
              0.000981067; 78.08999634,-0.001711633; 78.09999847,-6.67e-06;
              78.11000061,0.002100158; 78.12000275,-0.001105193; 78.12999725,
              0.000876819; 78.13999939,-0.000586531; 78.15000153,0.000196231;
              78.16000366,0.000580224; 78.16999817,-0.000552064; 78.18000031,-3.07e-06;
              78.19000244,-0.000938836; 78.19999695,3.2e-05; 78.20999908,
              0.000561616; 78.22000122,0.000980202; 78.23000336,0.00078572;
              78.23999786,-0.000231783; 78.25,-5.19e-05; 78.26000214,-0.001468246;
              78.26999664,0.000809142; 78.27999878,-0.00285031; 78.29000092,-0.002315523;
              78.30000305,-0.000459621; 78.30999756,0.000359155; 78.31999969,
              0.000578845; 78.33000183,0.000207355; 78.33999634,0.000139304;
              78.34999847,-0.000589902; 78.36000061,0.000519725; 78.37000275,
              7.06e-05; 78.37999725,-0.000112206; 78.38999939,-0.000180273;
              78.40000153,0.001042299; 78.41000366,-0.002117622; 78.41999817,-0.000324011;
              78.43000031,0.001402658; 78.44000244,-0.001265012; 78.44999695,-0.001112551;
              78.45999908,0.000224332; 78.47000122,0.000849423; 78.48000336,
              3.2e-06; 78.48999786,-0.000225338; 78.5,-0.000844547; 78.51000214,
              0.00039968; 78.51999664,0.000566806; 78.52999878,0.001527448;
              78.54000092,-0.000627366; 78.55000305,0.001531183; 78.55999756,
              0.001193079; 78.56999969,-0.001642721; 78.58000183,-0.00059657;
              78.58999634,-0.000322363; 78.59999847,0.000349341; 78.61000061,
              0.000373919; 78.62000275,-0.000757914; 78.62999725,0.000875416;
              78.63999939,-0.000464026; 78.65000153,0.00054314; 78.66000366,-0.000516489;
              78.66999817,0.002111337; 78.68000031,-0.000821241; 78.69000244,-0.000498625;
              78.69999695,-0.000191579; 78.70999908,-0.001915799; 78.72000122,-0.000690413;
              78.73000336,0.001349929; 78.73999786,0.001098825; 78.75,
              0.000706166; 78.76000214,-0.001050119; 78.76999664,-8.82e-05;
              78.77999878,0.000129508; 78.79000092,0.000126188; 78.80000305,-0.000847747;
              78.80999756,-0.001342258; 78.81999969,-0.000677354; 78.83000183,-0.000731263;
              78.83999634,0.001601532; 78.84999847,-0.000993337; 78.86000061,
              0.00084847; 78.87000275,-1.57e-05; 78.87999725,0.000162333;
              78.88999939,-0.000180632; 78.90000153,0.000455456; 78.91000366,
              0.001065714; 78.91999817,0.001465569; 78.93000031,-0.000158183;
              78.94000244,0.001706911; 78.94999695,-0.000968611; 78.95999908,-0.000465607;
              78.97000122,0.000532709; 78.98000336,-0.000986729; 78.98999786,-0.000514545;
              79,-0.000854313; 79.01000214,0.001312691; 79.01999664,-0.000363349;
              79.02999878,0.001219243; 79.04000092,0.001281821; 79.05000305,
              0.000779025; 79.05999756,-0.000150945; 79.06999969,-0.000861091;
              79.08000183,0.001353811; 79.08999634,0.00070966; 79.09999847,
              0.000169254; 79.11000061,-0.002400643; 79.12000275,0.001736904;
              79.12999725,0.000797903; 79.13999939,-0.001387794; 79.15000153,-0.001584963;
              79.16000366,0.000515853; 79.16999817,-9.72e-05; 79.18000031,-0.000566377;
              79.19000244,0.00162072; 79.19999695,-0.000360788; 79.20999908,-0.000721589;
              79.22000122,-0.001817277; 79.23000336,-0.000802899; 79.23999786,-0.001274206;
              79.25,0.000832964; 79.26000214,-0.000336389; 79.26999664,-0.001178591;
              79.27999878,-0.001200988; 79.29000092,0.000473273; 79.30000305,-0.00056907;
              79.30999756,0.000902344; 79.31999969,0.001212156; 79.33000183,-1.36e-05;
              79.33999634,0.000731158; 79.34999847,0.000210157; 79.36000061,
              0.00072511; 79.37000275,-0.000439458; 79.37999725,0.001010885;
              79.38999939,0.000819185; 79.40000153,0.001008355; 79.41000366,
              0.002713862; 79.41999817,0.000350319; 79.43000031,-0.00194939;
              79.44000244,-0.000555748; 79.44999695,-0.001697325; 79.45999908,
              0.000591027; 79.47000122,-0.00055572; 79.48000336,-0.00030813;
              79.48999786,0.001680679; 79.5,-0.000790371; 79.51000214,
              0.001157633; 79.51999664,-0.000847451; 79.52999878,0.000407377;
              79.54000092,0.001700921; 79.55000305,0.00059249; 79.55999756,
              0.000465913; 79.56999969,0.000493941; 79.58000183,-0.000564369;
              79.58999634,-0.002042677; 79.59999847,0.000466586; 79.61000061,-0.000109212;
              79.62000275,-0.000956058; 79.62999725,0.00249382; 79.63999939,-0.001541891;
              79.65000153,-0.000537712; 79.66000366,-0.000120669; 79.66999817,-0.001263176;
              79.68000031,-0.000591809; 79.69000244,3.95e-05; 79.69999695,
              0.000756847; 79.70999908,0.000469583; 79.72000122,-0.0013785;
              79.73000336,-0.000442545; 79.73999786,0.000859884; 79.75,
              0.000495171; 79.76000214,0.000116482; 79.76999664,0.000483593;
              79.77999878,-0.000399184; 79.79000092,-0.000332186; 79.80000305,-0.001603459;
              79.80999756,0.000483533; 79.81999969,-0.0002138; 79.83000183,
              0.000330963; 79.83999634,0.000986639; 79.84999847,0.000254675;
              79.86000061,0.000318056; 79.87000275,-0.000170498; 79.87999725,
              0.000937277; 79.88999939,0.00025941; 79.90000153,0.00186781;
              79.91000366,-0.000475499; 79.91999817,-0.001828703; 79.93000031,
              0.001085018; 79.94000244,0.000524192; 79.94999695,0.001087829;
              79.95999908,0.000109797; 79.97000122,0.000712174; 79.98000336,
              0.00109751; 79.98999786,0.000484458; 80,-0.001919582; 80.01000214,
              -0.000778866; 80.01999664,-0.000554722; 80.02999878,0.001104926;
              80.04000092,0.001052843; 80.05000305,-0.000121048; 80.05999756,
              0.003240132; 80.06999969,-0.000431169; 80.08000183,0.000814766;
              80.08999634,-0.001084989; 80.09999847,0.000144706; 80.11000061,-0.001453205;
              80.12000275,0.001418444; 80.12999725,0.000454627; 80.13999939,-0.001886985;
              80.15000153,0.00066865; 80.16000366,-0.000399814; 80.16999817,
              0.000352546; 80.18000031,-0.000437272; 80.19000244,0.001212139;
              80.19999695,0.000897966; 80.20999908,0.000268098; 80.22000122,-0.00116535;
              80.23000336,-0.000287718; 80.23999786,0.000831698; 80.25,-0.00135702;
              80.26000214,-0.000841804; 80.26999664,-0.00047543; 80.27999878,-7.74e-05;
              80.29000092,0.000794143; 80.30000305,0.000216584; 80.30999756,
              0.000188159; 80.31999969,1.52e-05; 80.33000183,-0.000771148;
              80.33999634,-3.58e-05; 80.34999847,0.000571203; 80.36000061,-0.000831558;
              80.37000275,0.001463556; 80.37999725,-0.002625715; 80.38999939,
              0.000443653; 80.40000153,0.003095697; 80.41000366,-0.000396786;
              80.41999817,-0.001127383; 80.43000031,0.000398584; 80.44000244,-3.5e-05;
              80.44999695,-9.26e-05; 80.45999908,-0.001077128; 80.47000122,
              0.000196661; 80.48000336,0.001154862; 80.48999786,-0.000939359;
              80.5,-0.000883994; 80.51000214,-0.001386619; 80.51999664,-0.000118483;
              80.52999878,0.000234507; 80.54000092,7.56e-05; 80.55000305,
              0.000531304; 80.55999756,-0.000829031; 80.56999969,0.001736033;
              80.58000183,0.001165323; 80.58999634,-0.000973192; 80.59999847,-0.002100523;
              80.61000061,0.000380672; 80.62000275,0.001113982; 80.62999725,
              0.000389305; 80.63999939,0.000481054; 80.65000153,0.001141427;
              80.66000366,0.00024352; 80.66999817,5.09e-05; 80.68000031,
              0.001411115; 80.69000244,-0.001737973; 80.69999695,0.000579184;
              80.70999908,-0.001074553; 80.72000122,-0.000629918; 80.73000336,
              0.000881726; 80.73999786,-4.14e-05; 80.75,0.001037682;
              80.76000214,-0.000151921; 80.76999664,0.000228977; 80.77999878,-0.000521886;
              80.79000092,0.00101944; 80.80000305,0.001212464; 80.80999756,
              0.001326262; 80.81999969,0.001143383; 80.83000183,-0.001762829;
              80.83999634,0.002499353; 80.84999847,0.000860328; 80.86000061,-0.001035919;
              80.87000275,-0.000429083; 80.87999725,0.0007649; 80.88999939,-0.000582654;
              80.90000153,-0.000642161; 80.91000366,-0.001305583; 80.91999817,
              0.000332574; 80.93000031,-0.000686155; 80.94000244,-0.001336678;
              80.94999695,0.000198687; 80.95999908,0.000972105; 80.97000122,
              0.000511016; 80.98000336,-0.000127535; 80.98999786,-0.000169288;
              81,-0.001227413; 81.01000214,0.000530205; 81.01999664,-0.000575086;
              81.02999878,-5.89e-06; 81.04000092,0.000625794; 81.05000305,-0.001335425;
              81.05999756,-0.000911237; 81.06999969,-0.000342312; 81.08000183,-0.001338905;
              81.08999634,0.001124614; 81.09999847,0.001014189; 81.11000061,
              0.000243247; 81.12000275,-0.001871394; 81.12999725,-0.000538722;
              81.13999939,-0.00199117; 81.15000153,0.00043488; 81.16000366,-0.001441479;
              81.16999817,-0.000467272; 81.18000031,-0.001464902; 81.19000244,-0.00114125;
              81.19999695,0.001644017; 81.20999908,0.00131956; 81.22000122,
              0.001090265; 81.23000336,-0.000586848; 81.23999786,0.000838812;
              81.25,0.000310342; 81.26000214,0.001738702; 81.26999664,-0.000970622;
              81.27999878,-0.001984942; 81.29000092,0.001390931; 81.30000305,
              0.000572964; 81.30999756,-0.001707753; 81.31999969,0.000397429;
              81.33000183,-0.000274141; 81.33999634,-1.77e-05; 81.34999847,
              0.000680145; 81.36000061,-0.001783809; 81.37000275,0.000296696;
              81.37999725,0.000102241; 81.38999939,0.000190871; 81.40000153,-0.001007354;
              81.41000366,-0.00043279; 81.41999817,-0.00069962; 81.43000031,
              8.15e-05; 81.44000244,0.000502971; 81.44999695,0.000536152;
              81.45999908,-0.000802469; 81.47000122,0.000578264; 81.48000336,-0.000657481;
              81.48999786,0.00204272; 81.5,7.48e-05; 81.51000214,0.000959997;
              81.51999664,0.000879771; 81.52999878,-0.001070188; 81.54000092,-0.000400825;
              81.55000305,-0.000223819; 81.55999756,-0.001469286; 81.56999969,-0.000216601;
              81.58000183,0.000853832; 81.58999634,0.000153237; 81.59999847,-0.000556518;
              81.61000061,-0.001435776; 81.62000275,0.000859692; 81.62999725,
              0.00117067; 81.63999939,-0.000466578; 81.65000153,5.45e-05;
              81.66000366,-0.000370277; 81.66999817,0.001390185; 81.68000031,
              0.000763428; 81.69000244,-0.000891788; 81.69999695,0.001277613;
              81.70999908,0.001313474; 81.72000122,0.002049303; 81.73000336,-0.000145881;
              81.73999786,0.000519788; 81.75,-0.000405868; 81.76000214,-0.000692858;
              81.76999664,-0.000157536; 81.77999878,0.000201451; 81.79000092,-0.000476649;
              81.80000305,0.000488031; 81.80999756,-0.00253363; 81.81999969,-0.001484187;
              81.83000183,0.000429596; 81.83999634,0.001648128; 81.84999847,-0.000801755;
              81.86000061,-0.000926786; 81.87000275,-0.001067738; 81.87999725,-0.001202942;
              81.88999939,0.001225035; 81.90000153,-0.000297159; 81.91000366,-0.001056615;
              81.91999817,-0.001406596; 81.93000031,0.000207598; 81.94000244,
              0.001651555; 81.94999695,0.001186857; 81.95999908,-0.000135182;
              81.97000122,2.09e-05; 81.98000336,0.001295879; 81.98999786,-7.81e-05;
              82,-0.000475638; 82.01000214,0.001132951; 82.01999664,-0.001490233;
              82.02999878,0.000318053; 82.04000092,0.000524607; 82.05000305,
              0.00160731; 82.05999756,0.000415673; 82.06999969,0.000714321;
              82.08000183,-0.000922984; 82.08999634,0.001113942; 82.09999847,
              0.00034637; 82.11000061,0.002067425; 82.12000275,-0.001088661;
              82.12999725,-0.000425653; 82.13999939,-0.000572182; 82.15000153,
              0.000233999; 82.16000366,0.001392432; 82.16999817,-0.000166299;
              82.18000031,-4.33e-05; 82.19000244,0.00048457; 82.19999695,-0.000134464;
              82.20999908,-7.17e-05; 82.22000122,-0.000495005; 82.23000336,-0.002247378;
              82.23999786,-0.000606712; 82.25,-0.000122545; 82.26000214,
              0.000541277; 82.26999664,0.000315232; 82.27999878,-0.000737471;
              82.29000092,-0.001076282; 82.30000305,0.0009774; 82.30999756,
              0.000761419; 82.31999969,0.001263639; 82.33000183,0.000915297;
              82.33999634,-0.000119465; 82.34999847,-0.000656481; 82.36000061,
              0.000859361; 82.37000275,-0.00074149; 82.37999725,-0.001002621;
              82.38999939,-0.000655398; 82.40000153,-0.000928801; 82.41000366,
              0.000843956; 82.41999817,-0.000428063; 82.43000031,0.000295544;
              82.44000244,-0.000679876; 82.44999695,-0.000553581; 82.45999908,-0.002359811;
              82.47000122,-0.001497866; 82.48000336,0.000521212; 82.48999786,
              0.000487496; 82.5,-0.000436028; 82.51000214,0.00177779;
              82.51999664,-0.001337608; 82.52999878,0.000658654; 82.54000092,-0.0008664;
              82.55000305,-0.000486942; 82.55999756,5.77e-06; 82.56999969,-0.002608271;
              82.58000183,-0.000102735; 82.58999634,-0.000207451; 82.59999847,-0.000373951;
              82.61000061,-0.001221784; 82.62000275,0.000156788; 82.62999725,-0.00049808;
              82.63999939,-6.39e-05; 82.65000153,-0.000573871; 82.66000366,-0.000196639;
              82.66999817,-0.000313323; 82.68000031,-0.001097018; 82.69000244,-0.001571779;
              82.69999695,-0.002059424; 82.70999908,-0.000614714; 82.72000122,-0.00063364;
              82.73000336,0.000514735; 82.73999786,0.001277967; 82.75,-0.000899351;
              82.76000214,0.000416298; 82.76999664,-0.00040792; 82.77999878,-6.74e-05;
              82.79000092,0.001826954; 82.80000305,-9.37e-05; 82.80999756,
              0.00015389; 82.81999969,-0.002230315; 82.83000183,-3.66e-05;
              82.83999634,0.001544894; 82.84999847,0.00100765; 82.86000061,
              0.002445205; 82.87000275,-0.00023832; 82.87999725,0.001737248;
              82.88999939,0.00161307; 82.90000153,0.000495426; 82.91000366,
              0.001129604; 82.91999817,0.0003844; 82.93000031,0.000552825;
              82.94000244,-0.000961015; 82.94999695,-0.000868136; 82.95999908,
              0.001672848; 82.97000122,-0.00138412; 82.98000336,3.02e-05;
              82.98999786,0.001845549; 83,0.001101493; 83.01000214,-0.001054596;
              83.01999664,0.000580246; 83.02999878,-0.000649236; 83.04000092,-0.000262136;
              83.05000305,0.000592707; 83.05999756,-0.00014783; 83.06999969,
              0.001206712; 83.08000183,-0.00042456; 83.08999634,-0.000582209;
              83.09999847,-0.000380679; 83.11000061,0.001351384; 83.12000275,
              0.000265429; 83.12999725,0.000589536; 83.13999939,-0.001227425;
              83.15000153,-0.001745516; 83.16000366,0.000982361; 83.16999817,-0.000818577;
              83.18000031,0.002084255; 83.19000244,0.000121299; 83.19999695,
              0.001383398; 83.20999908,0.00048518; 83.22000122,-0.000829448;
              83.23000336,0.001310775; 83.23999786,0.000337839; 83.25,
              0.001197116; 83.26000214,0.001353285; 83.26999664,0.001810373;
              83.27999878,-0.000294729; 83.29000092,-0.000537398; 83.30000305,
              0.000865479; 83.30999756,-0.000360356; 83.31999969,-0.000369666;
              83.33000183,-0.000657503; 83.33999634,-0.001072965; 83.34999847,
              0.00033312; 83.36000061,0.00047565; 83.37000275,0.001282903;
              83.37999725,0.000567266; 83.38999939,-0.00054258; 83.40000153,
              0.000462718; 83.41000366,0.001412078; 83.41999817,0.000538862;
              83.43000031,0.001358327; 83.44000244,0.000169837; 83.44999695,-0.000480194;
              83.45999908,-0.000879636; 83.47000122,-0.000464214; 83.48000336,
              0.000488736; 83.48999786,-0.00021386; 83.5,0.000933291;
              83.51000214,0.001308976; 83.51999664,0.000591507; 83.52999878,-0.001979785;
              83.54000092,-0.000724402; 83.55000305,0.000109567; 83.55999756,
              0.000962341; 83.56999969,0.001169336; 83.58000183,-2.46e-05;
              83.58999634,0.0003933; 83.59999847,0.001338095; 83.61000061,-0.000413017;
              83.62000275,0.000855613; 83.62999725,0.001131068; 83.63999939,
              0.000405394; 83.65000153,-0.001766616; 83.66000366,-0.000288963;
              83.66999817,-0.000553088; 83.68000031,0.000585406; 83.69000244,-0.000155466;
              83.69999695,-0.000600436; 83.70999908,-0.002050419; 83.72000122,-0.001864233;
              83.73000336,-0.000171676; 83.73999786,0.00053247; 83.75,-0.000928493;
              83.76000214,-0.000353394; 83.76999664,-0.000109861; 83.77999878,-0.001743432;
              83.79000092,0.000269239; 83.80000305,0.001778478; 83.80999756,-0.001213311;
              83.81999969,0.000670598; 83.83000183,-0.000763752; 83.83999634,
              0.00044307; 83.84999847,0.000553658; 83.86000061,-0.000612337;
              83.87000275,-0.00061772; 83.87999725,-0.000190056; 83.88999939,-0.001021772;
              83.90000153,0.002176543; 83.91000366,-0.001114699; 83.91999817,-0.000107398;
              83.93000031,-0.001338762; 83.94000244,-0.000166161; 83.94999695,-0.000671486;
              83.95999908,-0.000159229; 83.97000122,0.000338248; 83.98000336,-0.002238888;
              83.98999786,0.000444937; 84,0.000225703; 84.01000214,0.001316185;
              84.01999664,-0.000254763; 84.02999878,-0.000152087; 84.04000092,-0.000636063;
              84.05000305,-0.0002187; 84.05999756,-0.001262565; 84.06999969,-0.001213158;
              84.08000183,-0.001278227; 84.08999634,-0.000165431; 84.09999847,-0.001675626;
              84.11000061,0.002335502; 84.12000275,-0.001105706; 84.12999725,-0.000720332;
              84.13999939,-0.000709111; 84.15000153,-0.000282597; 84.16000366,-0.001566375;
              84.16999817,-0.000732144; 84.18000031,0.001949499; 84.19000244,
              0.000140774; 84.19999695,0.001275631; 84.20999908,0.000255642;
              84.22000122,0.000704766; 84.23000336,1.07e-05; 84.23999786,-0.000905758;
              84.25,-0.000689457; 84.26000214,0.000182771; 84.26999664,-0.000706841;
              84.27999878,-9.38e-06; 84.29000092,0.001621723; 84.30000305,
              0.000697083; 84.30999756,-0.001000388; 84.31999969,-0.000120473;
              84.33000183,-0.000606271; 84.33999634,0.001142584; 84.34999847,-0.001346571;
              84.36000061,-0.000602634; 84.37000275,-0.000549455; 84.37999725,-0.000234235;
              84.38999939,0.001747393; 84.40000153,0.00148858; 84.41000366,-0.001515917;
              84.41999817,-0.001575326; 84.43000031,-0.001120996; 84.44000244,-0.00016059;
              84.44999695,0.000856042; 84.45999908,0.000451974; 84.47000122,
              0.0001434; 84.48000336,-0.000207545; 84.48999786,0.0006485; 84.5,
              0.000725206; 84.51000214,-0.00039279; 84.51999664,0.000531615;
              84.52999878,-0.001155659; 84.54000092,-0.000324793; 84.55000305,-0.001725041;
              84.55999756,0.001257655; 84.56999969,0.001000992; 84.58000183,
              0.000979617; 84.58999634,-0.000894535; 84.59999847,0.000231365;
              84.61000061,-0.000272271; 84.62000275,-0.000643697; 84.62999725,-0.001585926;
              84.63999939,0.000288805; 84.65000153,-0.000928833; 84.66000366,
              0.000864511; 84.66999817,5.96e-05; 84.68000031,-0.000196354;
              84.69000244,-0.000306938; 84.69999695,8.51e-05; 84.70999908,-0.000298837;
              84.72000122,0.000650737; 84.73000336,-0.000340766; 84.73999786,-0.000680427;
              84.75,-0.000410725; 84.76000214,0.000769949; 84.76999664,
              0.000156654; 84.77999878,0.000194381; 84.79000092,-0.000814797;
              84.80000305,-0.001092338; 84.80999756,0.000754208; 84.81999969,-8.46e-05;
              84.83000183,-0.001251423; 84.83999634,-0.000989721; 84.84999847,-0.00072608;
              84.86000061,-0.000486841; 84.87000275,0.001156211; 84.87999725,-1.79e-06;
              84.88999939,-0.001142819; 84.90000153,0.000879123; 84.91000366,-0.000759069;
              84.91999817,-0.000507978; 84.93000031,0.001179723; 84.94000244,
              0.000476901; 84.94999695,0.000994442; 84.95999908,-0.000565007;
              84.97000122,-0.000901282; 84.98000336,-0.000299627; 84.98999786,-0.001651797;
              85,0.000827045; 85.01000214,0.000261723; 85.01999664,-0.001176461;
              85.02999878,-5.63e-05; 85.04000092,-0.00056357; 85.05000305,-0.000373692;
              85.05999756,0.000273786; 85.06999969,-0.000164013; 85.08000183,-0.000376985;
              85.08999634,-0.000524888; 85.09999847,0.001672424; 85.11000061,-0.002044497;
              85.12000275,8.94e-05; 85.12999725,0.001306845; 85.13999939,-0.000693566;
              85.15000153,0.001287061; 85.16000366,0.000169543; 85.16999817,-0.000934223;
              85.18000031,-0.000641802; 85.19000244,-0.00049982; 85.19999695,-0.0007102;
              85.20999908,-0.000789925; 85.22000122,-0.0004049; 85.23000336,
              0.000462627; 85.23999786,0.000327815; 85.25,0.002481829;
              85.26000214,0.00094819; 85.26999664,-0.000451015; 85.27999878,-0.000196473;
              85.29000092,0.000761465; 85.30000305,-0.001225515; 85.30999756,
              0.000800143; 85.31999969,-0.000657823; 85.33000183,0.000428638;
              85.33999634,-9.51e-05; 85.34999847,-0.001135617; 85.36000061,
              0.000160385; 85.37000275,-0.001459573; 85.37999725,0.001808321;
              85.38999939,-0.000774631; 85.40000153,0.001728678; 85.41000366,-0.000136885;
              85.41999817,0.000431465; 85.43000031,8.12e-05; 85.44000244,
              0.000375076; 85.44999695,0.000199191; 85.45999908,-0.00292293;
              85.47000122,0.000539567; 85.48000336,-0.001562939; 85.48999786,
              0.000494494; 85.5,0.001684789; 85.51000214,-0.00014901;
              85.51999664,-0.001484198; 85.52999878,-0.001343516; 85.54000092,
              0.000307402; 85.55000305,-4.25e-05; 85.55999756,0.000655454;
              85.56999969,-0.000348742; 85.58000183,0.00126852; 85.58999634,-0.000676154;
              85.59999847,-0.001207659; 85.61000061,7.99e-05; 85.62000275,
              0.000990239; 85.62999725,0.000944719; 85.63999939,0.000106285;
              85.65000153,0.000883993; 85.66000366,0.000787524; 85.66999817,-0.000137573;
              85.68000031,0.001142464; 85.69000244,0.002421646; 85.69999695,
              0.000145012; 85.70999908,0.000380983; 85.72000122,-0.002006806;
              85.73000336,0.001090658; 85.73999786,-0.000746633; 85.75,
              0.000630682; 85.76000214,0.000900279; 85.76999664,0.000100217;
              85.77999878,-0.001452742; 85.79000092,-6.66e-05; 85.80000305,-0.000322982;
              85.80999756,-0.000293828; 85.81999969,-0.000434402; 85.83000183,
              0.002360744; 85.83999634,0.00072974; 85.84999847,0.000338;
              85.86000061,-0.001885843; 85.87000275,-0.001278641; 85.87999725,-0.00079158;
              85.88999939,-0.00059171; 85.90000153,0.000198782; 85.91000366,-7.24e-05;
              85.91999817,-0.000644633; 85.93000031,0.001315859; 85.94000244,-0.000233438;
              85.94999695,0.000574452; 85.95999908,-0.001423623; 85.97000122,
              0.000359578; 85.98000336,-0.000745144; 85.98999786,-0.000877996;
              86,6.9e-05; 86.01000214,7.22e-05; 86.01999664,-0.000480548;
              86.02999878,0.001504329; 86.04000092,0.000732386; 86.05000305,
              0.000513659; 86.05999756,0.000754567; 86.06999969,0.000892483;
              86.08000183,-1.13e-05; 86.08999634,0.000131972; 86.09999847,
              8.35e-05; 86.11000061,0.000738874; 86.12000275,0.000432304;
              86.12999725,-0.001377672; 86.13999939,-0.001723577; 86.15000153,-0.001217163;
              86.16000366,-0.00080477; 86.16999817,0.001150615; 86.18000031,
              0.000784456; 86.19000244,0.000347519; 86.19999695,0.00128241;
              86.20999908,6.65e-06; 86.22000122,9.89e-05; 86.23000336,
              0.000873629; 86.23999786,0.000544191; 86.25,0.000772363;
              86.26000214,-9.12e-06; 86.26999664,0.000834495; 86.27999878,
              0.000547203; 86.29000092,0.00053163; 86.30000305,-0.000117306;
              86.30999756,-0.001013256; 86.31999969,-0.000158568; 86.33000183,-0.001169154;
              86.33999634,8.94e-05; 86.34999847,-0.000227711; 86.36000061,-0.000401552;
              86.37000275,-0.001120745; 86.37999725,-0.000126151; 86.38999939,
              0.000290597; 86.40000153,0.000488215; 86.41000366,-0.001499769;
              86.41999817,-0.000253628; 86.43000031,-0.000662031; 86.44000244,
              0.000735144; 86.44999695,0.000800909; 86.45999908,0.00248808;
              86.47000122,0.00012338; 86.48000336,0.000205101; 86.48999786,
              0.000765072; 86.5,0.000287413; 86.51000214,0.001887948;
              86.51999664,-0.001734771; 86.52999878,-0.000465207; 86.54000092,
              0.000205898; 86.55000305,0.000734761; 86.55999756,0.00115301;
              86.56999969,-0.000783485; 86.58000183,-0.001176421; 86.58999634,-0.000350394;
              86.59999847,0.000843989; 86.61000061,0.000729451; 86.62000275,-0.00012568;
              86.62999725,-0.001146497; 86.63999939,0.000671403; 86.65000153,
              0.00077147; 86.66000366,-0.000294612; 86.66999817,0.000452168;
              86.68000031,-0.000553957; 86.69000244,0.000329941; 86.69999695,-6.34e-05;
              86.70999908,0.000694442; 86.72000122,0.001459172; 86.73000336,-0.000957905;
              86.73999786,-0.000274028; 86.75,-0.000598768; 86.76000214,-0.000113287;
              86.76999664,0.001165848; 86.77999878,0.001237541; 86.79000092,
              0.00152421; 86.80000305,-0.000995072; 86.80999756,-0.000266465;
              86.81999969,0.000157534; 86.83000183,0.000431894; 86.83999634,-0.000945196;
              86.84999847,0.000643608; 86.86000061,-0.001053368; 86.87000275,-0.000445025;
              86.87999725,-0.002621271; 86.88999939,0.001868855; 86.90000153,
              0.000984763; 86.91000366,-0.001038298; 86.91999817,-0.000485782;
              86.93000031,-0.000772205; 86.94000244,0.000397652; 86.94999695,
              0.000201721; 86.95999908,-0.001183107; 86.97000122,0.000997476;
              86.98000336,-8.82e-05; 86.98999786,-0.000618303; 87,-0.001364474;
              87.01000214,0.001120085; 87.01999664,-0.000217912; 87.02999878,-0.00022747;
              87.04000092,-0.000540436; 87.05000305,0.001640435; 87.05999756,
              0.000156442; 87.06999969,0.00111102; 87.08000183,-0.000668886;
              87.08999634,-0.000498737; 87.09999847,-0.002379174; 87.11000061,-0.000446246;
              87.12000275,0.000149549; 87.12999725,0.00177262; 87.13999939,
              0.000214267; 87.15000153,0.00098423; 87.16000366,0.000924866;
              87.16999817,-0.001868098; 87.18000031,-5.83e-05; 87.19000244,-0.000693368;
              87.19999695,0.000324337; 87.20999908,-7.28e-05; 87.22000122,
              0.001655443; 87.23000336,0.00218531; 87.23999786,0.000314577;
              87.25,-0.000280129; 87.26000214,9.26e-05; 87.26999664,0.000635618;
              87.27999878,0.000608562; 87.29000092,8.27e-05; 87.30000305,-0.001533116;
              87.30999756,-0.000675742; 87.31999969,0.000640861; 87.33000183,-0.00014492;
              87.33999634,0.001831362; 87.34999847,0.000626191; 87.36000061,-0.000703384;
              87.37000275,-0.001557272; 87.37999725,0.000514729; 87.38999939,-0.00049489;
              87.40000153,0.000593277; 87.41000366,-3.55e-05; 87.41999817,-0.000302691;
              87.43000031,-0.001644076; 87.44000244,0.001468781; 87.44999695,
              9.25e-05; 87.45999908,0.000261377; 87.47000122,-0.00047604;
              87.48000336,-0.000247118; 87.48999786,0.000656501; 87.5,-0.001051273;
              87.51000214,0.000635551; 87.51999664,0.001201526; 87.52999878,
              0.001164164; 87.54000092,0.000347038; 87.55000305,0.000151403;
              87.55999756,0.000780542; 87.56999969,0.001799933; 87.58000183,-0.000547272;
              87.58999634,0.001123713; 87.59999847,0.000114893; 87.61000061,
              0.000607116; 87.62000275,0.000426775; 87.62999725,0.000134547;
              87.63999939,-0.001043298; 87.65000153,-0.001149121; 87.66000366,-0.000720382;
              87.66999817,-0.00110552; 87.68000031,0.000591379; 87.69000244,
              0.000962125; 87.69999695,0.000371545; 87.70999908,0.000688125;
              87.72000122,0.000509414; 87.73000336,-0.000107012; 87.73999786,-0.001103722;
              87.75,-0.000190063; 87.76000214,-0.000776498; 87.76999664,-0.0006776;
              87.77999878,-0.000743266; 87.79000092,0.001373258; 87.80000305,
              0.000797771; 87.80999756,-0.00131245; 87.81999969,-0.000768463;
              87.83000183,-0.001919606; 87.83999634,-0.000664943; 87.84999847,-0.001503044;
              87.86000061,0.002230363; 87.87000275,0.001375137; 87.87999725,-0.000938475;
              87.88999939,0.001522665; 87.90000153,-0.000694387; 87.91000366,-0.000327789;
              87.91999817,-0.000436566; 87.93000031,-0.000943523; 87.94000244,
              0.000798287; 87.94999695,-0.000558548; 87.95999908,0.000941023;
              87.97000122,-0.000625143; 87.98000336,0.000131852; 87.98999786,-0.000729638;
              88,0.001128861; 88.01000214,-0.00027731; 88.01999664,0.000569647;
              88.02999878,-0.001156224; 88.04000092,8.39e-06; 88.05000305,-0.00021979;
              88.05999756,0.000655729; 88.06999969,0.000105919; 88.08000183,-0.001391754;
              88.08999634,0.000650206; 88.09999847,-0.000411746; 88.11000061,-0.001454762;
              88.12000275,-0.000141637; 88.12999725,-9.74e-05; 88.13999939,-0.001892657;
              88.15000153,-0.000184458; 88.16000366,-0.00098555; 88.16999817,-0.00223944;
              88.18000031,-0.002082109; 88.19000244,0.000404705; 88.19999695,-0.000383996;
              88.20999908,0.001585097; 88.22000122,-0.000219936; 88.23000336,-0.000882144;
              88.23999786,2.63e-05; 88.25,0.000135002; 88.26000214,-0.000960602;
              88.26999664,0.000282205; 88.27999878,-0.000249157; 88.29000092,-0.00040416;
              88.30000305,0.000259729; 88.30999756,-0.001411591; 88.31999969,-0.000495772;
              88.33000183,0.001006732; 88.33999634,-0.000148278; 88.34999847,
              0.000869487; 88.36000061,-5.48e-05; 88.37000275,-0.001718522;
              88.37999725,-0.001751467; 88.38999939,-0.001338623; 88.40000153,
              0.002405666; 88.41000366,-0.000567228; 88.41999817,-0.000597998;
              88.43000031,-0.00084729; 88.44000244,0.000629622; 88.44999695,-0.001641166;
              88.45999908,-7.75e-05; 88.47000122,-6.26e-05; 88.48000336,-0.000661983;
              88.48999786,-0.001021626; 88.5,-0.001660498; 88.51000214,-0.000784844;
              88.51999664,-2.5e-05; 88.52999878,0.001377419; 88.54000092,
              0.000935257; 88.55000305,0.001634056; 88.55999756,-0.000387291;
              88.56999969,-0.000234275; 88.58000183,-0.000365251; 88.58999634,
              0.000239254; 88.59999847,0.000137086; 88.61000061,0.000551439;
              88.62000275,-0.001415221; 88.62999725,-0.00058247; 88.63999939,
              0.000158127; 88.65000153,0.000355381; 88.66000366,-0.000835657;
              88.66999817,-0.001054163; 88.68000031,-0.000971229; 88.69000244,-0.000326348;
              88.69999695,-0.00119666; 88.70999908,0.001498596; 88.72000122,
              0.00079384; 88.73000336,0.001087776; 88.73999786,0.00061267;
              88.75,-0.000165269; 88.76000214,-0.002331299; 88.76999664,
              0.001730629; 88.77999878,-0.000321454; 88.79000092,-0.001917112;
              88.80000305,0.001089877; 88.80999756,0.001032867; 88.81999969,-0.001158249;
              88.83000183,-0.000590389; 88.83999634,0.000406904; 88.84999847,
              4e-07; 88.86000061,0.000146386; 88.87000275,0.000404966;
              88.87999725,-0.002304293; 88.88999939,0.000563839; 88.90000153,
              0.000532077; 88.91000366,-0.000881364; 88.91999817,0.000139824;
              88.93000031,0.00017931; 88.94000244,0.001341599; 88.94999695,-0.000455346;
              88.95999908,-0.002035935; 88.97000122,-0.001893467; 88.98000336,-0.000782197;
              88.98999786,-0.000340762; 89,0.000503809; 89.01000214,0.000174542;
              89.01999664,-0.000748353; 89.02999878,0.002673835; 89.04000092,-0.001138507;
              89.05000305,-0.002534377; 89.05999756,0.000103303; 89.06999969,
              0.001027356; 89.08000183,-0.001428274; 89.08999634,0.000619846;
              89.09999847,0.000585562; 89.11000061,0.000397632; 89.12000275,-0.001268805;
              89.12999725,0.002712198; 89.13999939,-0.000667525; 89.15000153,
              0.000454389; 89.16000366,-0.001197646; 89.16999817,-0.001601816;
              89.18000031,0.000495254; 89.19000244,0.00057149; 89.19999695,
              0.000644368; 89.20999908,-0.000183678; 89.22000122,4.06e-05;
              89.23000336,3.17e-05; 89.23999786,0.001326457; 89.25,-0.001138609;
              89.26000214,-0.000320899; 89.26999664,0.000701628; 89.27999878,-0.0007165;
              89.29000092,0.000517217; 89.30000305,-0.001794714; 89.30999756,-0.001705847;
              89.31999969,-0.00104525; 89.33000183,-0.000180272; 89.33999634,
              0.000280554; 89.34999847,-0.00068868; 89.36000061,0.000842989;
              89.37000275,-6.29e-05; 89.37999725,-0.000350877; 89.38999939,
              0.000803616; 89.40000153,0.000766394; 89.41000366,0.000452044;
              89.41999817,-0.00107545; 89.43000031,0.001691922; 89.44000244,-0.000897395;
              89.44999695,-0.001903693; 89.45999908,0.000124248; 89.47000122,-0.001108885;
              89.48000336,-0.001139518; 89.48999786,0.001244528; 89.5,
              0.000708386; 89.51000214,0.000778246; 89.51999664,0.000786751;
              89.52999878,-0.001360768; 89.54000092,-0.001136195; 89.55000305,-3.73e-05;
              89.55999756,0.00046282; 89.56999969,5.14e-05; 89.58000183,
              0.001618933; 89.58999634,0.000489673; 89.59999847,0.000959636;
              89.61000061,-0.00014481; 89.62000275,0.000117089; 89.62999725,
              0.000258577; 89.63999939,0.001503182; 89.65000153,-0.001908284;
              89.66000366,-0.001354674; 89.66999817,-0.000673998; 89.68000031,
              0.000635806; 89.69000244,0.000962359; 89.69999695,-0.00101056;
              89.70999908,0.000310862; 89.72000122,0.001222723; 89.73000336,
              0.00012545; 89.73999786,-0.000588455; 89.75,0.000618391;
              89.76000214,-0.001059652; 89.76999664,0.000985455; 89.77999878,
              0.000796086; 89.79000092,0.000580081; 89.80000305,0.003119908;
              89.80999756,0.000499426; 89.81999969,-0.000877185; 89.83000183,
              0.000540728; 89.83999634,-0.00197686; 89.84999847,0.000762677;
              89.86000061,-0.000205135; 89.87000275,-0.000986365; 89.87999725,
              0.001376728; 89.88999939,-0.000286081; 89.90000153,-0.002353689;
              89.91000366,0.000538233; 89.91999817,9.14e-05; 89.93000031,-0.000565293;
              89.94000244,0.001931991; 89.94999695,0.001316453; 89.95999908,-0.000661673;
              89.97000122,-1.84e-05; 89.98000336,-0.000650246; 89.98999786,-0.000889535;
              90,-0.0006165; 90.01000214,0.000626682; 90.01999664,-0.001540567;
              90.02999878,-0.000639249; 90.04000092,-0.000858643; 90.05000305,
              0.000812788; 90.05999756,-0.001001374; 90.06999969,-0.000631857;
              90.08000183,-0.000167863; 90.08999634,0.0005217; 90.09999847,-0.000739794;
              90.11000061,-0.000242647; 90.12000275,0.000108077; 90.12999725,-0.000191639;
              90.13999939,-0.001193811; 90.15000153,-0.000363522; 90.16000366,-0.000411862;
              90.16999817,0.000303516; 90.18000031,-0.000232054; 90.19000244,-0.000482936;
              90.19999695,0.000216518; 90.20999908,0.000810025; 90.22000122,-0.002048118;
              90.23000336,0.000589465; 90.23999786,0.000788634; 90.25,
              0.002031974; 90.26000214,0.000411345; 90.26999664,-8.23e-05;
              90.27999878,0.000640125; 90.29000092,-0.000668137; 90.30000305,
              0.000374199; 90.30999756,-4.23e-05; 90.31999969,0.000774214;
              90.33000183,0.000573373; 90.33999634,-0.001137249; 90.34999847,
              0.001259791; 90.36000061,-8.47e-05; 90.37000275,0.001747157;
              90.37999725,0.000383525; 90.38999939,0.000296373; 90.40000153,-0.000120042;
              90.41000366,-0.00045995; 90.41999817,0.001378186; 90.43000031,-0.000585399;
              90.44000244,-0.000575365; 90.44999695,-0.00021818; 90.45999908,-0.000405592;
              90.47000122,-0.000715178; 90.48000336,0.001103273; 90.48999786,-0.002963738;
              90.5,0.000381335; 90.51000214,0.000427746; 90.51999664,-0.000530199;
              90.52999878,0.00108739; 90.54000092,0.002010122; 90.55000305,-0.000385512;
              90.55999756,-0.000531053; 90.56999969,-0.000480625; 90.58000183,
              0.001099029; 90.58999634,-0.000728688; 90.59999847,-0.001405163;
              90.61000061,0.000816213; 90.62000275,-0.001037288; 90.62999725,
              0.001386246; 90.63999939,-0.000274449; 90.65000153,0.000985437;
              90.66000366,0.000951259; 90.66999817,-0.002124334; 90.68000031,-0.000683187;
              90.69000244,0.001024485; 90.69999695,0.00013611; 90.70999908,-0.000549496;
              90.72000122,-0.000802056; 90.73000336,-0.000953769; 90.73999786,
              0.00211237; 90.75,0.001244991; 90.76000214,-0.000217769;
              90.76999664,0.00279034; 90.77999878,-0.000924302; 90.79000092,-0.000735768;
              90.80000305,0.000550928; 90.80999756,0.00062458; 90.81999969,-0.000280309;
              90.83000183,0.00014171; 90.83999634,0.000672541; 90.84999847,
              0.00120886; 90.86000061,-0.000208009; 90.87000275,-0.000882878;
              90.87999725,-0.000749862; 90.88999939,0.000444044; 90.90000153,-0.00096399;
              90.91000366,0.00123494; 90.91999817,-0.000228278; 90.93000031,-0.001644811;
              90.94000244,0.001648076; 90.94999695,-0.000628645; 90.95999908,
              0.002014611; 90.97000122,0.000791301; 90.98000336,-0.001542334;
              90.98999786,-0.000510349; 91,-0.001885005; 91.01000214,6.2e-05;
              91.01999664,0.002071406; 91.02999878,0.001420059; 91.04000092,
              5.12e-05; 91.05000305,-0.00118685; 91.05999756,-7.24e-05;
              91.06999969,-0.001210394; 91.08000183,-0.001506924; 91.08999634,
              0.000489809; 91.09999847,-0.000560399; 91.11000061,-0.000424705;
              91.12000275,0.000225514; 91.12999725,-0.001232308; 91.13999939,
              0.000399551; 91.15000153,0.000772585; 91.16000366,0.000248578;
              91.16999817,-0.000541013; 91.18000031,-0.001116344; 91.19000244,
              0.001047012; 91.19999695,0.000696156; 91.20999908,-0.000754842;
              91.22000122,-0.002924059; 91.23000336,0.000495927; 91.23999786,
              0.0004089; 91.25,3.61e-05; 91.26000214,-0.001366697; 91.26999664,
              6.06e-05; 91.27999878,0.000271307; 91.29000092,0.001136419;
              91.30000305,0.001368262; 91.30999756,0.000836736; 91.31999969,
              0.000363812; 91.33000183,0.000773253; 91.33999634,0.001956653;
              91.34999847,0.000799075; 91.36000061,-0.001034841; 91.37000275,-0.00062294;
              91.37999725,0.001409605; 91.38999939,0.000628626; 91.40000153,
              0.000551099; 91.41000366,-0.000529009; 91.41999817,-0.000666357;
              91.43000031,0.000814232; 91.44000244,-0.002679834; 91.44999695,
              1.16e-05; 91.45999908,0.000429673; 91.47000122,0.002357615;
              91.48000336,0.002142808; 91.48999786,-0.000551196; 91.5,-0.001259355;
              91.51000214,-0.000487171; 91.51999664,-0.000174586; 91.52999878,
              0.00105999; 91.54000092,-0.001640908; 91.55000305,0.00027006;
              91.55999756,-0.001135914; 91.56999969,0.000569775; 91.58000183,
              0.001337232; 91.58999634,0.000405415; 91.59999847,0.001380338;
              91.61000061,0.002001677; 91.62000275,0.000537958; 91.62999725,-7.97e-05;
              91.63999939,-0.001875901; 91.65000153,-0.001635855; 91.66000366,
              0.001181743; 91.66999817,0.000122484; 91.68000031,9.03e-05;
              91.69000244,0.001771038; 91.69999695,-0.000223866; 91.70999908,-0.000946909;
              91.72000122,0.001117283; 91.73000336,-0.002031046; 91.73999786,-0.001101247;
              91.75,0.001002165; 91.76000214,0.001236043; 91.76999664,
              0.001370264; 91.77999878,-0.000331471; 91.79000092,0.000465145;
              91.80000305,-0.000121318; 91.80999756,-0.001731388; 91.81999969,-0.001076468;
              91.83000183,0.002227415; 91.83999634,0.000859829; 91.84999847,-0.000257862;
              91.86000061,-0.000194001; 91.87000275,-0.000269335; 91.87999725,-0.000132759;
              91.88999939,-0.001366505; 91.90000153,-0.000240475; 91.91000366,-0.000238699;
              91.91999817,-0.000727319; 91.93000031,-0.00057351; 91.94000244,
              0.000388437; 91.94999695,0.00049812; 91.95999908,0.000210107;
              91.97000122,-0.000401582; 91.98000336,5.54e-05; 91.98999786,
              0.001142761; 92,0.000763746; 92.01000214,0.001008697; 92.01999664,
              0.000897274; 92.02999878,0.000671687; 92.04000092,0.000683212;
              92.05000305,-0.000355038; 92.05999756,0.002618645; 92.06999969,-0.000579482;
              92.08000183,0.000770633; 92.08999634,7.65e-05; 92.09999847,-0.001423508;
              92.11000061,-0.000359513; 92.12000275,-0.001056032; 92.12999725,
              0.000938329; 92.13999939,-0.001195908; 92.15000153,-0.002318935;
              92.16000366,0.000404924; 92.16999817,0.000438555; 92.18000031,
              0.00147697; 92.19000244,-0.001195124; 92.19999695,-0.000279146;
              92.20999908,-0.00080871; 92.22000122,-0.000408189; 92.23000336,-0.000189049;
              92.23999786,-0.001403845; 92.25,-0.000222869; 92.26000214,
              0.00078179; 92.26999664,-0.000489916; 92.27999878,0.000298536;
              92.29000092,0.001315402; 92.30000305,0.001442803; 92.30999756,
              0.001625499; 92.31999969,-0.000221992; 92.33000183,0.000300533;
              92.33999634,0.000293326; 92.34999847,-0.000253251; 92.36000061,-0.001116711;
              92.37000275,0.001520852; 92.37999725,0.001069106; 92.38999939,-0.001069315;
              92.40000153,-0.000301862; 92.41000366,0.001109582; 92.41999817,
              0.000618514; 92.43000031,0.000409022; 92.44000244,0.000748704;
              92.44999695,-0.001076182; 92.45999908,-0.000996645; 92.47000122,
              0.000912025; 92.48000336,-0.000428425; 92.48999786,0.002159298;
              92.5,6.92e-05; 92.51000214,-0.003399537; 92.51999664,-0.002776761;
              92.52999878,-0.000973859; 92.54000092,-0.000687738; 92.55000305,
              1.16e-05; 92.55999756,-0.000415064; 92.56999969,0.000262257;
              92.58000183,0.000239934; 92.58999634,-0.002486799; 92.59999847,
              0.000189426; 92.61000061,0.001258069; 92.62000275,-0.000499182;
              92.62999725,5.12e-05; 92.63999939,-0.000348846; 92.65000153,
              0.000357215; 92.66000366,-0.000580643; 92.66999817,0.000286519;
              92.68000031,-0.000669688; 92.69000244,-0.001860956; 92.69999695,-0.000751433;
              92.70999908,-0.000527183; 92.72000122,0.000740543; 92.73000336,
              0.001002194; 92.73999786,-0.00097214; 92.75,-7.63e-05;
              92.76000214,-0.001404787; 92.76999664,0.001928514; 92.77999878,
              0.001058124; 92.79000092,0.001084501; 92.80000305,0.000887256;
              92.80999756,-0.000620225; 92.81999969,-0.000154217; 92.83000183,-0.0010059;
              92.83999634,0.00086979; 92.84999847,0.000593438; 92.86000061,-0.001138393;
              92.87000275,0.00119416; 92.87999725,-7.67e-05; 92.88999939,
              0.00020405; 92.90000153,0.000394359; 92.91000366,-0.000141197;
              92.91999817,0.000606943; 92.93000031,0.000333039; 92.94000244,
              0.00130038; 92.94999695,0.000461699; 92.95999908,0.000577525;
              92.97000122,-0.000611386; 92.98000336,0.000814714; 92.98999786,-0.001050392;
              93,0.001225883; 93.01000214,0.000603192; 93.01999664,0.00021482;
              93.02999878,0.000192566; 93.04000092,-0.001060554; 93.05000305,-0.000359042;
              93.05999756,-0.000991353; 93.06999969,-0.000164448; 93.08000183,-0.001329324;
              93.08999634,0.000410266; 93.09999847,0.00080726; 93.11000061,
              0.000150073; 93.12000275,0.00036825; 93.12999725,-0.000420659;
              93.13999939,-0.000534455; 93.15000153,-0.00133843; 93.16000366,
              0.000152939; 93.16999817,-9.01e-05; 93.18000031,0.001454596;
              93.19000244,0.001647301; 93.19999695,-0.001260739; 93.20999908,-0.000189283;
              93.22000122,0.0005897; 93.23000336,7.23e-05; 93.23999786,-0.000559417;
              93.25,-0.000209146; 93.26000214,0.001305921; 93.26999664,-0.000313085;
              93.27999878,0.000169166; 93.29000092,-0.000452535; 93.30000305,-0.000285779;
              93.30999756,0.00099612; 93.31999969,0.001041113; 93.33000183,
              0.001163963; 93.33999634,-0.002162809; 93.34999847,0.00046245;
              93.36000061,0.001155395; 93.37000275,0.000469608; 93.37999725,
              0.000621219; 93.38999939,-0.000635229; 93.40000153,-0.000768069;
              93.41000366,-0.000259244; 93.41999817,-0.000240249; 93.43000031,
              0.00048481; 93.44000244,-0.00121104; 93.44999695,-0.001721238;
              93.45999908,-0.001122029; 93.47000122,0.000754556; 93.48000336,
              0.000256637; 93.48999786,0.001368574; 93.5,-7.87e-05; 93.51000214,
              0.001135529; 93.51999664,-0.000613485; 93.52999878,-5.84e-06;
              93.54000092,-0.000346911; 93.55000305,-0.000655605; 93.55999756,-0.000555549;
              93.56999969,0.000525767; 93.58000183,-0.001020007; 93.58999634,
              7.97e-05; 93.59999847,-8.87e-05; 93.61000061,-0.001162125;
              93.62000275,-0.000754255; 93.62999725,-0.000445523; 93.63999939,
              0.000232075; 93.65000153,0.000907222; 93.66000366,-0.000146975;
              93.66999817,0.000663754; 93.68000031,-6.94e-06; 93.69000244,-0.000689112;
              93.69999695,-0.000803929; 93.70999908,0.000305373; 93.72000122,-0.000675205;
              93.73000336,-0.000548585; 93.73999786,0.000766783; 93.75,-0.002154304;
              93.76000214,-0.001482193; 93.76999664,0.000572211; 93.77999878,
              0.000705998; 93.79000092,-0.000701775; 93.80000305,-0.000178998;
              93.80999756,-0.000201144; 93.81999969,-0.001209866; 93.83000183,
              0.001507568; 93.83999634,-0.001427111; 93.84999847,-0.001420949;
              93.86000061,0.00033898; 93.87000275,-0.000642038; 93.87999725,
              0.000333814; 93.88999939,-0.001180547; 93.90000153,-0.000825552;
              93.91000366,-4.21e-05; 93.91999817,0.001114501; 93.93000031,
              3.08e-05; 93.94000244,0.000267272; 93.94999695,0.000650444;
              93.95999908,-0.000105813; 93.97000122,-0.001453572; 93.98000336,-0.000440259;
              93.98999786,0.000593253; 94,0.001472109; 94.01000214,-0.000906461;
              94.01999664,0.001736551; 94.02999878,-0.00131211; 94.04000092,-0.000771939;
              94.05000305,0.000522323; 94.05999756,-8.42e-05; 94.06999969,
              0.001114784; 94.08000183,0.000447411; 94.08999634,-0.000655015;
              94.09999847,0.000288525; 94.11000061,-0.001101277; 94.12000275,-0.00051775;
              94.12999725,-0.001315973; 94.13999939,0.000522058; 94.15000153,-0.001778753;
              94.16000366,-0.000290347; 94.16999817,0.001745574; 94.18000031,-0.000397376;
              94.19000244,-0.001922579; 94.19999695,-0.00113014; 94.20999908,
              0.001428181; 94.22000122,0.000835814; 94.23000336,0.000476388;
              94.23999786,0.000554072; 94.25,-0.000130244; 94.26000214,-0.001211566;
              94.26999664,0.0006548; 94.27999878,-0.001226048; 94.29000092,-0.001012243;
              94.30000305,0.001012672; 94.30999756,0.001380727; 94.31999969,
              0.001917328; 94.33000183,3.4e-06; 94.33999634,-0.002560943;
              94.34999847,0.001098461; 94.36000061,-0.000636088; 94.37000275,-0.000931798;
              94.37999725,0.000222189; 94.38999939,-0.001018926; 94.40000153,-0.001378499;
              94.41000366,-0.000299743; 94.41999817,-0.000552815; 94.43000031,-0.000137507;
              94.44000244,-0.000188042; 94.44999695,-0.000601743; 94.45999908,
              0.000115912; 94.47000122,-0.000474443; 94.48000336,-0.001620075;
              94.48999786,0.000506031; 94.5,-0.000720499; 94.51000214,-2.74e-05;
              94.51999664,-0.000827003; 94.52999878,-0.001807854; 94.54000092,
              0.000936619; 94.55000305,-0.001421205; 94.55999756,-0.000195207;
              94.56999969,0.001286552; 94.58000183,0.000194522; 94.58999634,
              0.000524281; 94.59999847,0.002619498; 94.61000061,0.000593291;
              94.62000275,0.000658942; 94.62999725,0.001161062; 94.63999939,
              0.001275713; 94.65000153,-0.000917205; 94.66000366,-0.000200023;
              94.66999817,-0.000592226; 94.68000031,0.001335844; 94.69000244,-0.001991344;
              94.69999695,-5.1e-06; 94.70999908,-3.43e-05; 94.72000122,-0.001399371;
              94.73000336,-0.001448397; 94.73999786,0.000965248; 94.75,-2.85e-05;
              94.76000214,0.000449895; 94.76999664,-0.000205096; 94.77999878,-0.000205324;
              94.79000092,0.000117405; 94.80000305,-0.001222856; 94.80999756,-0.00162935;
              94.81999969,0.000226343; 94.83000183,-3.14e-05; 94.83999634,-0.000803777;
              94.84999847,0.000250263; 94.86000061,-0.000364767; 94.87000275,
              0.00197756; 94.87999725,0.000469684; 94.88999939,0.000717144;
              94.90000153,-0.000974914; 94.91000366,-0.000534217; 94.91999817,
              0.000619696; 94.93000031,-4.49e-06; 94.94000244,0.001149563;
              94.94999695,0.001327463; 94.95999908,-0.000325801; 94.97000122,-0.000430787;
              94.98000336,-0.000841466; 94.98999786,0.001070256; 95,0.000339604;
              95.01000214,0.002410059; 95.01999664,0.000860511; 95.02999878,
              0.001442995; 95.04000092,-0.001083708; 95.05000305,1.23e-05;
              95.05999756,-0.000248258; 95.06999969,-0.000859619; 95.08000183,
              0.00077217; 95.08999634,-0.000325771; 95.09999847,0.00020763;
              95.11000061,0.00052578; 95.12000275,-0.003317112; 95.12999725,
              0.000407342; 95.13999939,-0.001259848; 95.15000153,0.000834532;
              95.16000366,-0.000567678; 95.16999817,0.000490399; 95.18000031,
              0.000827666; 95.19000244,0.00030758; 95.19999695,-0.000170065;
              95.20999908,0.000182516; 95.22000122,-0.00113562; 95.23000336,
              0.000979718; 95.23999786,0.000385527; 95.25,-0.000681484;
              95.26000214,-0.001931232; 95.26999664,0.000445928; 95.27999878,
              0.001577155; 95.29000092,0.001155679; 95.30000305,-0.000335984;
              95.30999756,0.000482491; 95.31999969,0.001587162; 95.33000183,
              0.001553833; 95.33999634,0.000159292; 95.34999847,0.001028978;
              95.36000061,-0.000196784; 95.37000275,2.42e-05; 95.37999725,-0.000503414;
              95.38999939,-0.001594725; 95.40000153,0.002101437; 95.41000366,
              0.000873975; 95.41999817,0.000446493; 95.43000031,-0.001350233;
              95.44000244,0.000292109; 95.44999695,0.000948874; 95.45999908,
              0.001655876; 95.47000122,0.000928428; 95.48000336,-0.000313673;
              95.48999786,-0.000364662; 95.5,-0.001531856; 95.51000214,-0.001303998;
              95.51999664,0.001066131; 95.52999878,-0.000918202; 95.54000092,
              0.00193258; 95.55000305,-0.000791757; 95.55999756,-0.00260355;
              95.56999969,0.000239661; 95.58000183,-0.000683433; 95.58999634,
              0.000626302; 95.59999847,-0.002440897; 95.61000061,-0.000441672;
              95.62000275,0.000266854; 95.62999725,5.75e-05; 95.63999939,
              0.001093181; 95.65000153,0.000289983; 95.66000366,0.00018813;
              95.66999817,-0.000423494; 95.68000031,-0.001472082; 95.69000244,-0.000979351;
              95.69999695,0.000208534; 95.70999908,-8.47e-05; 95.72000122,
              9.6e-05; 95.73000336,0.001143086; 95.73999786,-4.5e-05; 95.75,
              0.000182266; 95.76000214,0.001781575; 95.76999664,-0.000632206;
              95.77999878,0.001251579; 95.79000092,-0.002036663; 95.80000305,-0.001128183;
              95.80999756,8.74e-06; 95.81999969,-0.000116806; 95.83000183,-0.000517668;
              95.83999634,-8.35e-05; 95.84999847,0.002357737; 95.86000061,-0.000874627;
              95.87000275,-8.21e-05; 95.87999725,-0.000391432; 95.88999939,-0.00035781;
              95.90000153,0.000796035; 95.91000366,-0.000780117; 95.91999817,
              0.000182934; 95.93000031,-0.001176874; 95.94000244,0.001761385;
              95.94999695,0.001056617; 95.95999908,5.01e-05; 95.97000122,
              0.002151105; 95.98000336,0.001021695; 95.98999786,-0.001751986;
              96,0.001546398; 96.01000214,0.001563678; 96.01999664,0.001078872;
              96.02999878,0.001208428; 96.04000092,0.001021694; 96.05000305,-0.001024501;
              96.05999756,-0.000835118; 96.06999969,-0.0017736; 96.08000183,-0.0020468;
              96.08999634,0.000181865; 96.09999847,0.000569896; 96.11000061,
              0.001822342; 96.12000275,-0.001096869; 96.12999725,0.000458991;
              96.13999939,-0.000704428; 96.15000153,-0.000172042; 96.16000366,-0.000305601;
              96.16999817,-0.000163594; 96.18000031,-0.001053102; 96.19000244,
              0.001274557; 96.19999695,-0.000766578; 96.20999908,0.002427686;
              96.22000122,0.001803367; 96.23000336,-0.000389603; 96.23999786,
              0.000431218; 96.25,-0.000596617; 96.26000214,0.000562833;
              96.26999664,0.001363709; 96.27999878,0.000428362; 96.29000092,
              0.000188802; 96.30000305,-5.18e-05; 96.30999756,-0.000123754;
              96.31999969,0.001051199; 96.33000183,-3.05e-05; 96.33999634,
              0.001360804; 96.34999847,0.00158154; 96.36000061,0.001688454;
              96.37000275,-0.00068698; 96.37999725,-0.000236136; 96.38999939,-0.001256626;
              96.40000153,-0.000733168; 96.41000366,-0.002154039; 96.41999817,-0.000456012;
              96.43000031,0.000512082; 96.44000244,0.000793062; 96.44999695,
              0.002321068; 96.45999908,0.001366085; 96.47000122,-0.001654827;
              96.48000336,0.00085357; 96.48999786,-0.001012236; 96.5,-0.001303746;
              96.51000214,-0.001031397; 96.51999664,0.001465928; 96.52999878,-9.96e-05;
              96.54000092,-0.000360269; 96.55000305,0.000817628; 96.55999756,
              0.001209532; 96.56999969,-0.00185962; 96.58000183,-0.000794248;
              96.58999634,-0.001481285; 96.59999847,0.00133424; 96.61000061,
              0.000158634; 96.62000275,0.000909123; 96.62999725,0.000838024;
              96.63999939,0.001337774; 96.65000153,0.000897003; 96.66000366,
              0.000218558; 96.66999817,0.00028472; 96.68000031,-0.000266228;
              96.69000244,0.000527227; 96.69999695,-0.002632361; 96.70999908,
              8.46e-05; 96.72000122,-0.001125385; 96.73000336,0.000681253;
              96.73999786,1.34e-06; 96.75,-0.000391144; 96.76000214,4.8e-05;
              96.76999664,0.000954554; 96.77999878,0.000323021; 96.79000092,
              0.001947811; 96.80000305,0.001707097; 96.80999756,-0.000752528;
              96.81999969,-0.001094911; 96.83000183,0.000271422; 96.83999634,
              0.000106502; 96.84999847,0.001656296; 96.86000061,-0.000376995;
              96.87000275,-0.000388263; 96.87999725,0.000241819; 96.88999939,-0.000705184;
              96.90000153,-7.27e-05; 96.91000366,0.000363103; 96.91999817,-0.001861194;
              96.93000031,0.000566884; 96.94000244,0.001543896; 96.94999695,-0.0011567;
              96.95999908,0.000122888; 96.97000122,-0.001284937; 96.98000336,-0.000621044;
              96.98999786,0.000613676; 97,0.001356965; 97.01000214,-0.000128962;
              97.01999664,-0.000575662; 97.02999878,0.000595411; 97.04000092,
              0.000145596; 97.05000305,0.000907863; 97.05999756,0.000475972;
              97.06999969,0.0005642; 97.08000183,0.000719644; 97.08999634,
              0.000608415; 97.09999847,-0.00103839; 97.11000061,-0.000400431;
              97.12000275,-0.000500004; 97.12999725,0.001464456; 97.13999939,-0.001192648;
              97.15000153,-0.000873278; 97.16000366,0.001056081; 97.16999817,
              0.001998141; 97.18000031,0.001030315; 97.19000244,3.29e-05;
              97.19999695,-0.00118827; 97.20999908,0.000103134; 97.22000122,-0.00122826;
              97.23000336,-0.000910643; 97.23999786,0.000772672; 97.25,
              0.001169306; 97.26000214,0.000315203; 97.26999664,-0.000245217;
              97.27999878,-0.000210721; 97.29000092,0.000445461; 97.30000305,
              0.00018821; 97.30999756,0.000806495; 97.31999969,0.000551073;
              97.33000183,0.000911891; 97.33999634,-0.00116072; 97.34999847,
              0.001041299; 97.36000061,0.000544358; 97.37000275,0.000375872;
              97.37999725,0.000488564; 97.38999939,0.000661543; 97.40000153,-0.000272412;
              97.41000366,-0.00042122; 97.41999817,-0.00098349; 97.43000031,-0.000281132;
              97.44000244,-0.002969067; 97.44999695,-0.000669254; 97.45999908,-0.001172633;
              97.47000122,0.000439647; 97.48000336,3.05e-05; 97.48999786,-3.94e-05;
              97.5,0.000178168; 97.51000214,0.001018467; 97.51999664,-0.001764665;
              97.52999878,-0.000153781; 97.54000092,0.001964709; 97.55000305,-0.000614073;
              97.55999756,-0.000229375; 97.56999969,0.001297441; 97.58000183,-0.000831061;
              97.58999634,0.000818487; 97.59999847,-0.000993006; 97.61000061,-0.000793948;
              97.62000275,0.001013625; 97.62999725,0.000910015; 97.63999939,
              0.000298173; 97.65000153,-0.000333896; 97.66000366,0.00038171;
              97.66999817,0.000499757; 97.68000031,0.000103814; 97.69000244,-0.001548232;
              97.69999695,0.001638211; 97.70999908,0.002982546; 97.72000122,-0.000402141;
              97.73000336,-0.001754296; 97.73999786,0.001252165; 97.75,-0.002703682;
              97.76000214,-0.000422634; 97.76999664,0.001306258; 97.77999878,
              0.000904499; 97.79000092,0.000474445; 97.80000305,0.000159965;
              97.80999756,-0.001735006; 97.81999969,0.000166093; 97.83000183,
              9.75e-05; 97.83999634,-0.00076256; 97.84999847,-0.000371923;
              97.86000061,-0.000692057; 97.87000275,0.000143882; 97.87999725,-0.000349236;
              97.88999939,0.000525319; 97.90000153,-0.001260891; 97.91000366,
              0.000717274; 97.91999817,0.001088283; 97.93000031,0.000576223;
              97.94000244,0.001392103; 97.94999695,9.47e-05; 97.95999908,-0.001857634;
              97.97000122,3.63e-05; 97.98000336,0.001566662; 97.98999786,
              0.000803493; 98,-0.000429483; 98.01000214,-0.000423113;
              98.01999664,-0.000870109; 98.02999878,-0.000945279; 98.04000092,-0.000867062;
              98.05000305,0.001417258; 98.05999756,8.13e-05; 98.06999969,-0.001628893;
              98.08000183,-0.000208959; 98.08999634,-0.000395428; 98.09999847,
              0.00051976; 98.11000061,-0.000176975; 98.12000275,-0.000872472;
              98.12999725,0.00208004; 98.13999939,-0.0003962; 98.15000153,
              0.000637561; 98.16000366,-0.000704992; 98.16999817,0.000867671;
              98.18000031,0.001941477; 98.19000244,-0.000619598; 98.19999695,-0.0014705;
              98.20999908,-0.000345207; 98.22000122,-0.002169094; 98.23000336,
              0.000987956; 98.23999786,-0.001615176; 98.25,2.8e-05; 98.26000214,
              0.00076669; 98.26999664,-0.000884608; 98.27999878,-0.001039101;
              98.29000092,-0.000429746; 98.30000305,-0.001397355; 98.30999756,-3.74e-05;
              98.31999969,0.000354399; 98.33000183,-0.000194049; 98.33999634,-0.000118263;
              98.34999847,-0.000958997; 98.36000061,-0.001062858; 98.37000275,-0.000704141;
              98.37999725,0.000481097; 98.38999939,-0.000562224; 98.40000153,-0.000240086;
              98.41000366,-0.000569065; 98.41999817,-0.001291293; 98.43000031,
              0.00035485; 98.44000244,0.000742044; 98.44999695,-0.001067259;
              98.45999908,-0.001176319; 98.47000122,0.000343772; 98.48000336,
              0.001216565; 98.48999786,0.001036968; 98.5,-0.000810107;
              98.51000214,0.000335918; 98.51999664,-0.000860646; 98.52999878,
              0.000294304; 98.54000092,0.000134426; 98.55000305,-0.002592319;
              98.55999756,-0.000729008; 98.56999969,-0.001254699; 98.58000183,
              7.45e-05; 98.58999634,-0.000637734; 98.59999847,0.001779515;
              98.61000061,-0.000434808; 98.62000275,0.000722533; 98.62999725,-0.001077035;
              98.63999939,-4.08e-05; 98.65000153,0.000490368; 98.66000366,-0.000456259;
              98.66999817,-0.000142748; 98.68000031,0.000593119; 98.69000244,
              0.00087991; 98.69999695,-7.66e-05; 98.70999908,0.001131398;
              98.72000122,0.000925177; 98.73000336,-0.000578934; 98.73999786,-0.000790234;
              98.75,9.82e-05; 98.76000214,-0.00011388; 98.76999664,0.000126665;
              98.77999878,-0.000983072; 98.79000092,7.78e-06; 98.80000305,
              0.000280052; 98.80999756,-0.002467967; 98.81999969,0.000257002;
              98.83000183,0.000233981; 98.83999634,-0.000630196; 98.84999847,-0.000835633;
              98.86000061,-0.00063246; 98.87000275,9.08e-05; 98.87999725,-0.00050193;
              98.88999939,-0.001194; 98.90000153,0.000790698; 98.91000366,
              0.000629435; 98.91999817,-9.74e-05; 98.93000031,0.000278704;
              98.94000244,0.000125854; 98.94999695,0.000251236; 98.95999908,
              0.000592315; 98.97000122,-0.001183583; 98.98000336,-0.000693473;
              98.98999786,0.000529699; 99,-0.000895663; 99.01000214,-0.000455998;
              99.01999664,-0.001013486; 99.02999878,0.001187845; 99.04000092,-0.000189369;
              99.05000305,-0.000146566; 99.05999756,-0.000157616; 99.06999969,
              0.000853273; 99.08000183,0.000410211; 99.08999634,0.001553491;
              99.09999847,0.000868444; 99.11000061,-0.000555891; 99.12000275,
              0.000515976; 99.12999725,-0.000193634; 99.13999939,-0.000460749;
              99.15000153,0.000632207; 99.16000366,-0.000693642; 99.16999817,
              0.0008453; 99.18000031,0.001846104; 99.19000244,0.000581015;
              99.19999695,0.00054669; 99.20999908,0.000331577; 99.22000122,-0.00085693;
              99.23000336,-0.000155003; 99.23999786,0.00024483; 99.25,
              0.001375294; 99.26000214,0.001258731; 99.26999664,9.7e-05;
              99.27999878,0.000417298; 99.29000092,-0.00099067; 99.30000305,
              0.000408477; 99.30999756,0.001113792; 99.31999969,0.000865795;
              99.33000183,-0.000868609; 99.33999634,0.001403298; 99.34999847,-0.001092227;
              99.36000061,-0.000636994; 99.37000275,0.001429887; 99.37999725,
              0.000741774; 99.38999939,0.000785375; 99.40000153,-0.000930754;
              99.41000366,0.000119194; 99.41999817,-4.59e-05; 99.43000031,-0.000430699;
              99.44000244,0.000428278; 99.44999695,0.000394114; 99.45999908,-0.000231981;
              99.47000122,0.001094428; 99.48000336,-0.001734729; 99.48999786,-7.32e-05;
              99.5,0.000553781; 99.51000214,-0.001221225; 99.51999664,-0.001009286;
              99.52999878,0.001942432; 99.54000092,-0.002194556; 99.55000305,
              2.1e-05; 99.55999756,-0.000141974; 99.56999969,-0.000584803;
              99.58000183,-0.000669314; 99.58999634,-0.001691399; 99.59999847,
              0.000153431; 99.61000061,0.000272669; 99.62000275,0.000155873;
              99.62999725,-0.000966898; 99.63999939,0.000419374; 99.65000153,-0.000682546;
              99.66000366,-0.002951375; 99.66999817,-0.0004372; 99.68000031,
              0.000626242; 99.69000244,-0.001153432; 99.69999695,0.000555383;
              99.70999908,0.000127267; 99.72000122,0.001060234; 99.73000336,
              0.000630504; 99.73999786,-0.000159521; 99.75,-0.000240236;
              99.76000214,-0.001454176; 99.76999664,0.001444385; 99.77999878,
              0.000196641; 99.79000092,3.16e-05; 99.80000305,0.000747476;
              99.80999756,0.000837024; 99.81999969,6.58e-05; 99.83000183,
              0.000347264; 99.83999634,0.002183668; 99.84999847,-0.00138666;
              99.86000061,0.002092937; 99.87000275,-0.000695796; 99.87999725,-0.000340262;
              99.88999939,0.001680971; 99.90000153,-0.000478754; 99.91000366,
              2.14e-05; 99.91999817,0.002463107; 99.93000031,-0.000228319;
              99.94000244,-0.001018227; 99.94999695,0.002187984; 99.95999908,
              0.00047527; 99.97000122,0.001703811; 99.98000336,-0.00093156;
              99.98999786,-0.00012426; 100,-0.00012426], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{42,108},{52,118}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-97,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-97,-10},
                {-50,-10},{-50,4},{-42,4}},color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-97,-38},
                {-50,-38},{-50,-50},{-42,-50}},
                                           color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-97,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-97,
                -110},{-50,-110},{-50,-96},{-42,-96}},
                                                 color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=5,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_v3_table;

      model MPCAppliedEnergyLinearized_v3
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.25,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCSysIdentification
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCSysIdentification
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.000000000000001,
                                       samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(PV.Qref, AddU3.y) annotation (Line(points={{-42,-56},{-54,-56},{-54,-50},
                {-59,-50}}, color={0,0,127}));
          annotation(Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_v3;

      model MPCAppliedEnergyLinearized_v3_table
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=10,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,28})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCSysIdentification
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCSysIdentification
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,0;
              0.51,0; 5,0], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-122,6},{-102,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              0; 0.51,0; 5,0], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-122,-20},{-102,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              0; 0.51,0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-122,-48},{-102,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              0; 0.51,0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-122,-94},{-102,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              0; 0.51,0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-122,-120},{-102,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,24},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,32},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-101,16},{-42,16}},color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-101,
                -10},{-50,-10},{-50,4},{-42,4}},
                                           color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-101,-84},{-42,-84}},color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-101,
                -110},{-50,-110},{-50,-96},{-42,-96}},
                                                 color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.Qref) annotation (Line(points={{-101,
                -38},{-50,-38},{-50,-56},{-42,-56}}, color={0,0,127}));
          annotation(Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=5,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_v3_table;

      model MPCAppliedEnergyOriginal_v3_table_MPC_VALIDATION
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.25,
          rc_enabled=true,
          t_rc=25)          if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=10000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0;
              0.050000001,0; 0.100000001,0; 0.150000006,0; 0.200000003,0; 0.25,
              0; 0.300000012,0; 0.349999994,0; 0.400000006,0; 0.449999988,0;
              0.5,0.01; 0.550000012,0.01; 0.600000024,0.01; 0.649999976,0.01;
              0.699999988,0.01; 0.75,0.01; 0.800000012,0.01; 0.850000024,0.01;
              0.899999976,0.01; 0.949999988,0.01; 1,0; 1.049999952,0;
              1.100000024,0; 1.149999976,0; 1.200000048,0; 1.25,0; 1.299999952,
              0; 1.350000024,0; 1.399999976,0; 1.450000048,0; 1.5,0.006979671;
              1.549999952,0.006979671; 1.600000024,0.006979671; 1.649999976,
              0.006979671; 1.700000048,0.006979671; 1.75,0.006979671;
              1.799999952,0.006979671; 1.850000024,0.006979671; 1.899999976,
              0.006979671; 1.950000048,0.006979671; 2,0.006578095; 2.049999952,
              0.006578095; 2.099999905,0.006578095; 2.150000095,0.006578095;
              2.200000048,0.006578095; 2.25,0.006578095; 2.299999952,
              0.006578095; 2.349999905,0.006578095; 2.400000095,0.006578095;
              2.450000048,0.006578095; 2.5,0.005259184; 2.549999952,0.005259184;
              2.599999905,0.005259184; 2.650000095,0.005259184; 2.700000048,
              0.005259184; 2.75,0.005259184; 2.799999952,0.005259184;
              2.849999905,0.005259184; 2.900000095,0.005259184; 2.950000048,
              0.005259184; 3,0.003216859; 3.049999952,0.003216859; 3.099999905,
              0.003216859; 3.150000095,0.003216859; 3.200000048,0.003216859;
              3.25,0.003216859; 3.299999952,0.003216859; 3.349999905,
              0.003216859; 3.400000095,0.003216859; 3.450000048,0.003216859;
              3.5,0.002799044; 3.549999952,0.002799044; 3.599999905,0.002799044;
              3.650000095,0.002799044; 3.700000048,0.002799044; 3.75,
              0.002799044; 3.799999952,0.002799044; 3.849999905,0.002799044;
              3.900000095,0.002799044; 3.950000048,0.002799044; 4,0.002500352;
              4.050000191,0.002500352; 4.099999905,0.002500352; 4.150000095,
              0.002500352; 4.199999809,0.002500352; 4.25,0.002500352;
              4.300000191,0.002500352; 4.349999905,0.002500352; 4.400000095,
              0.002500352; 4.449999809,0.002500352; 4.5,0.002663964;
              4.550000191,0.002663964; 4.599999905,0.002663964; 4.650000095,
              0.002663964; 4.699999809,0.002663964; 4.75,0.002663964;
              4.800000191,0.002663964; 4.849999905,0.002663964; 4.900000095,
              0.002663964; 4.949999809,0.002663964; 5,0.001583872; 5.050000191,
              0.001583872; 5.099999905,0.001583872; 5.150000095,0.001583872;
              5.199999809,0.001583872; 5.25,0.001583872; 5.300000191,
              0.001583872; 5.349999905,0.001583872; 5.400000095,0.001583872;
              5.449999809,0.001583872; 5.5,-0.001397191; 5.550000191,-0.001397191;
              5.599999905,-0.001397191; 5.650000095,-0.001397191; 5.699999809,-0.001397191;
              5.75,-0.001397191; 5.800000191,-0.001397191; 5.849999905,-0.001397191;
              5.900000095,-0.001397191; 5.949999809,-0.001397191; 6,-0.003940787;
              6.050000191,-0.003940787; 6.099999905,-0.003940787; 6.150000095,-0.003940787;
              6.199999809,-0.003940787; 6.25,-0.003940787; 6.300000191,-0.003940787;
              6.349999905,-0.003940787; 6.400000095,-0.003940787; 6.449999809,-0.003940787;
              6.5,-0.002774879; 6.550000191,-0.002774879; 6.599999905,-0.002774879;
              6.650000095,-0.002774879; 6.699999809,-0.002774879; 6.75,-0.002774879;
              6.800000191,-0.002774879; 6.849999905,-0.002774879; 6.900000095,-0.002774879;
              6.949999809,-0.002774879; 7,-0.001740124; 7.050000191,-0.001740124;
              7.099999905,-0.001740124; 7.150000095,-0.001740124; 7.199999809,-0.001740124;
              7.25,-0.001740124; 7.300000191,-0.001740124; 7.349999905,-0.001740124;
              7.400000095,-0.001740124; 7.449999809,-0.001740124; 7.5,-0.001106275;
              7.550000191,-0.001106275; 7.599999905,-0.001106275; 7.650000095,-0.001106275;
              7.699999809,-0.001106275; 7.75,-0.001106275; 7.800000191,-0.001106275;
              7.849999905,-0.001106275; 7.900000095,-0.001106275; 7.949999809,-0.001106275;
              8,-0.000921298; 8.050000191,-0.000921298; 8.100000381,-0.000921298;
              8.149999619,-0.000921298; 8.199999809,-0.000921298; 8.25,-0.000921298;
              8.300000191,-0.000921298; 8.350000381,-0.000921298; 8.399999619,-0.000921298;
              8.449999809,-0.000921298; 8.5,-0.001505656; 8.550000191,-0.001505656;
              8.600000381,-0.001505656; 8.649999619,-0.001505656; 8.699999809,-0.001505656;
              8.75,-0.001505656; 8.800000191,-0.001505656; 8.850000381,-0.001505656;
              8.899999619,-0.001505656; 8.949999809,-0.001505656; 9,0.000871301;
              9.050000191,0.000871301; 9.100000381,0.000871301; 9.149999619,
              0.000871301; 9.199999809,0.000871301; 9.25,0.000871301;
              9.300000191,0.000871301; 9.350000381,0.000871301; 9.399999619,
              0.000871301; 9.449999809,0.000871301; 9.5,0.000757448;
              9.550000191,0.000757448; 9.600000381,0.000757448; 9.649999619,
              0.000757448; 9.699999809,0.000757448; 9.75,0.000757448;
              9.800000191,0.000757448; 9.850000381,0.000757448; 9.899999619,
              0.000757448; 9.949999809,0.000757448; 10,0.000319342; 10.05000019,
              0.000319342; 10.10000038,0.000319342; 10.14999962,0.000319342;
              10.19999981,0.000319342; 10.25,0.000319342; 10.30000019,
              0.000319342; 10.35000038,0.000319342; 10.39999962,0.000319342;
              10.44999981,0.000319342; 10.5,-0.001591731; 10.55000019,-0.001591731;
              10.60000038,-0.001591731; 10.64999962,-0.001591731; 10.69999981,-0.001591731;
              10.75,-0.001591731; 10.80000019,-0.001591731; 10.85000038,-0.001591731;
              10.89999962,-0.001591731; 10.94999981,-0.001591731; 11,-0.004083962;
              11.05000019,-0.004083962; 11.10000038,-0.004083962; 11.14999962,-0.004083962;
              11.19999981,-0.004083962; 11.25,-0.004083962; 11.30000019,-0.004083962;
              11.35000038,-0.004083962; 11.39999962,-0.004083962; 11.44999981,-0.004083962;
              11.5,-0.002886071; 11.55000019,-0.002886071; 11.60000038,-0.002886071;
              11.64999962,-0.002886071; 11.69999981,-0.002886071; 11.75,-0.002886071;
              11.80000019,-0.002886071; 11.85000038,-0.002886071; 11.89999962,-0.002886071;
              11.94999981,-0.002886071; 12,-0.002740391; 12.05000019,-0.002740391;
              12.10000038,-0.002740391; 12.14999962,-0.002740391; 12.19999981,-0.002740391;
              12.25,-0.002740391; 12.30000019,-0.002740391; 12.35000038,-0.002740391;
              12.39999962,-0.002740391; 12.44999981,-0.002740391; 12.5,-0.000736131;
              12.55000019,-0.000736131; 12.60000038,-0.000736131; 12.64999962,-0.000736131;
              12.69999981,-0.000736131; 12.75,-0.000736131; 12.80000019,-0.000736131;
              12.85000038,-0.000736131; 12.89999962,-0.000736131; 12.94999981,-0.000736131;
              13,-0.000747331; 13.05000019,-0.000747331; 13.10000038,-0.000747331;
              13.14999962,-0.000747331; 13.19999981,-0.000747331; 13.25,-0.000747331;
              13.30000019,-0.000747331; 13.35000038,-0.000747331; 13.39999962,-0.000747331;
              13.44999981,-0.000747331; 13.5,0.000846611; 13.55000019,
              0.000846611; 13.60000038,0.000846611; 13.64999962,0.000846611;
              13.69999981,0.000846611; 13.75,0.000846611; 13.80000019,
              0.000846611; 13.85000038,0.000846611; 13.89999962,0.000846611;
              13.94999981,0.000846611; 14,0.000590457; 14.05000019,0.000590457;
              14.10000038,0.000590457; 14.14999962,0.000590457; 14.19999981,
              0.000590457; 14.25,0.000590457; 14.30000019,0.000590457;
              14.35000038,0.000590457; 14.39999962,0.000590457; 14.44999981,
              0.000590457; 14.5,0.000548866; 14.55000019,0.000548866;
              14.60000038,0.000548866; 14.64999962,0.000548866; 14.69999981,
              0.000548866; 14.75,0.000548866; 14.80000019,0.000548866;
              14.85000038,0.000548866; 14.89999962,0.000548866; 14.94999981,
              0.000548866; 15,0.000660827; 15.05000019,0.000660827; 15.10000038,
              0.000660827; 15.14999962,0.000660827; 15.19999981,0.000660827;
              15.25,0.000660827; 15.30000019,0.000660827; 15.35000038,
              0.000660827; 15.39999962,0.000660827; 15.44999981,0.000660827;
              15.5,-0.002519297; 15.55000019,-0.002519297; 15.60000038,-0.002519297;
              15.64999962,-0.002519297; 15.69999981,-0.002519297; 15.75,-0.002519297;
              15.80000019,-0.002519297; 15.85000038,-0.002519297; 15.89999962,-0.002519297;
              15.94999981,-0.002519297; 16,-0.001481672; 16.04999924,-0.001481672;
              16.10000038,-0.001481672; 16.14999962,-0.001481672; 16.20000076,-0.001481672;
              16.25,-0.001481672; 16.29999924,-0.001481672; 16.35000038,-0.001481672;
              16.39999962,-0.001481672; 16.45000076,-0.001481672; 16.5,-0.001151894;
              16.54999924,-0.001151894; 16.60000038,-0.001151894; 16.64999962,-0.001151894;
              16.70000076,-0.001151894; 16.75,-0.001151894; 16.79999924,-0.001151894;
              16.85000038,-0.001151894; 16.89999962,-0.001151894; 16.95000076,-0.001151894;
              17,-0.001890792; 17.04999924,-0.001890792; 17.10000038,-0.001890792;
              17.14999962,-0.001890792; 17.20000076,-0.001890792; 17.25,-0.001890792;
              17.29999924,-0.001890792; 17.35000038,-0.001890792; 17.39999962,-0.001890792;
              17.45000076,-0.001890792; 17.5,-0.000297096; 17.54999924,-0.000297096;
              17.60000038,-0.000297096; 17.64999962,-0.000297096; 17.70000076,-0.000297096;
              17.75,-0.000297096; 17.79999924,-0.000297096; 17.85000038,-0.000297096;
              17.89999962,-0.000297096; 17.95000076,-0.000297096; 18,-0.001010394;
              18.04999924,-0.001010394; 18.10000038,-0.001010394; 18.14999962,-0.001010394;
              18.20000076,-0.001010394; 18.25,-0.001010394; 18.29999924,-0.001010394;
              18.35000038,-0.001010394; 18.39999962,-0.001010394; 18.45000076,-0.001010394;
              18.5,-0.001340985; 18.54999924,-0.001340985; 18.60000038,-0.001340985;
              18.64999962,-0.001340985; 18.70000076,-0.001340985; 18.75,-0.001340985;
              18.79999924,-0.001340985; 18.85000038,-0.001340985; 18.89999962,-0.001340985;
              18.95000076,-0.001340985; 19,0.000683754; 19.04999924,0.000683754;
              19.10000038,0.000683754; 19.14999962,0.000683754; 19.20000076,
              0.000683754; 19.25,0.000683754; 19.29999924,0.000683754;
              19.35000038,0.000683754; 19.39999962,0.000683754; 19.45000076,
              0.000683754; 19.5,-0.000638372; 19.54999924,-0.000638372;
              19.60000038,-0.000638372; 19.64999962,-0.000638372; 19.70000076,-0.000638372;
              19.75,-0.000638372; 19.79999924,-0.000638372; 19.85000038,-0.000638372;
              19.89999962,-0.000638372; 19.95000076,-0.000638372; 20,
              0.000170364; 20.04999924,0.000170364; 20.10000038,0.000170364;
              20.14999962,0.000170364; 20.20000076,0.000170364; 20.25,
              0.000170364; 20.29999924,0.000170364; 20.35000038,0.000170364;
              20.39999962,0.000170364; 20.45000076,0.000170364; 20.5,-0.000438603;
              20.54999924,-0.000438603; 20.60000038,-0.000438603; 20.64999962,-0.000438603;
              20.70000076,-0.000438603; 20.75,-0.000438603; 20.79999924,-0.000438603;
              20.85000038,-0.000438603; 20.89999962,-0.000438603; 20.95000076,-0.000438603;
              21,-0.001208057; 21.04999924,-0.001208057; 21.10000038,-0.001208057;
              21.14999962,-0.001208057; 21.20000076,-0.001208057; 21.25,-0.001208057;
              21.29999924,-0.001208057; 21.35000038,-0.001208057; 21.39999962,-0.001208057;
              21.45000076,-0.001208057; 21.5,-0.003107232; 21.54999924,-0.003107232;
              21.60000038,-0.003107232; 21.64999962,-0.003107232; 21.70000076,-0.003107232;
              21.75,-0.003107232; 21.79999924,-0.003107232; 21.85000038,-0.003107232;
              21.89999962,-0.003107232; 21.95000076,-0.003107232; 22,-0.003834293;
              22.04999924,-0.003834293; 22.10000038,-0.003834293; 22.14999962,-0.003834293;
              22.20000076,-0.003834293; 22.25,-0.003834293; 22.29999924,-0.003834293;
              22.35000038,-0.003834293; 22.39999962,-0.003834293; 22.45000076,-0.003834293;
              22.5,-3.59e-05; 22.54999924,-3.59e-05; 22.60000038,-3.59e-05;
              22.64999962,-3.59e-05; 22.70000076,-3.59e-05; 22.75,-3.59e-05;
              22.79999924,-3.59e-05; 22.85000038,-3.59e-05; 22.89999962,-3.59e-05;
              22.95000076,-3.59e-05; 23,-0.001330576; 23.04999924,-0.001330576;
              23.10000038,-0.001330576; 23.14999962,-0.001330576; 23.20000076,-0.001330576;
              23.25,-0.001330576; 23.29999924,-0.001330576; 23.35000038,-0.001330576;
              23.39999962,-0.001330576; 23.45000076,-0.001330576; 23.5,-0.000609061;
              23.54999924,-0.000609061; 23.60000038,-0.000609061; 23.64999962,-0.000609061;
              23.70000076,-0.000609061; 23.75,-0.000609061; 23.79999924,-0.000609061;
              23.85000038,-0.000609061; 23.89999962,-0.000609061; 23.95000076,-0.000609061;
              24,-0.00363456; 24.04999924,-0.00363456; 24.10000038,-0.00363456;
              24.14999962,-0.00363456; 24.20000076,-0.00363456; 24.25,-0.00363456;
              24.29999924,-0.00363456; 24.35000038,-0.00363456; 24.39999962,-0.00363456;
              24.45000076,-0.00363456; 24.5,-0.007322825; 24.54999924,-0.007322825;
              24.60000038,-0.007322825; 24.64999962,-0.007322825; 24.70000076,-0.007322825;
              24.75,-0.007322825; 24.79999924,-0.007322825; 24.85000038,-0.007322825;
              24.89999962,-0.007322825; 24.95000076,-0.007322825],
                            smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,6},{-98,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0;
              0.050000001,0; 0.100000001,0; 0.150000006,0; 0.200000003,0; 0.25,
              0; 0.300000012,0; 0.349999994,0; 0.400000006,0; 0.449999988,0;
              0.5,0.039479299; 0.550000012,0.039479299; 0.600000024,0.039479299;
              0.649999976,0.039479299; 0.699999988,0.039479299; 0.75,
              0.039479299; 0.800000012,0.039479299; 0.850000024,0.039479299;
              0.899999976,0.039479299; 0.949999988,0.039479299; 1,0.004240661;
              1.049999952,0.004240661; 1.100000024,0.004240661; 1.149999976,
              0.004240661; 1.200000048,0.004240661; 1.25,0.004240661;
              1.299999952,0.004240661; 1.350000024,0.004240661; 1.399999976,
              0.004240661; 1.450000048,0.004240661; 1.5,0.018930107;
              1.549999952,0.018930107; 1.600000024,0.018930107; 1.649999976,
              0.018930107; 1.700000048,0.018930107; 1.75,0.018930107;
              1.799999952,0.018930107; 1.850000024,0.018930107; 1.899999976,
              0.018930107; 1.950000048,0.018930107; 2,0.018080297; 2.049999952,
              0.018080297; 2.099999905,0.018080297; 2.150000095,0.018080297;
              2.200000048,0.018080297; 2.25,0.018080297; 2.299999952,
              0.018080297; 2.349999905,0.018080297; 2.400000095,0.018080297;
              2.450000048,0.018080297; 2.5,0.009237513; 2.549999952,0.009237513;
              2.599999905,0.009237513; 2.650000095,0.009237513; 2.700000048,
              0.009237513; 2.75,0.009237513; 2.799999952,0.009237513;
              2.849999905,0.009237513; 2.900000095,0.009237513; 2.950000048,
              0.009237513; 3,0.008058742; 3.049999952,0.008058742; 3.099999905,
              0.008058742; 3.150000095,0.008058742; 3.200000048,0.008058742;
              3.25,0.008058742; 3.299999952,0.008058742; 3.349999905,
              0.008058742; 3.400000095,0.008058742; 3.450000048,0.008058742;
              3.5,0.006079217; 3.549999952,0.006079217; 3.599999905,0.006079217;
              3.650000095,0.006079217; 3.700000048,0.006079217; 3.75,
              0.006079217; 3.799999952,0.006079217; 3.849999905,0.006079217;
              3.900000095,0.006079217; 3.950000048,0.006079217; 4,0.003117141;
              4.050000191,0.003117141; 4.099999905,0.003117141; 4.150000095,
              0.003117141; 4.199999809,0.003117141; 4.25,0.003117141;
              4.300000191,0.003117141; 4.349999905,0.003117141; 4.400000095,
              0.003117141; 4.449999809,0.003117141; 4.5,0.006557214;
              4.550000191,0.006557214; 4.599999905,0.006557214; 4.650000095,
              0.006557214; 4.699999809,0.006557214; 4.75,0.006557214;
              4.800000191,0.006557214; 4.849999905,0.006557214; 4.900000095,
              0.006557214; 4.949999809,0.006557214; 5,0.006903498; 5.050000191,
              0.006903498; 5.099999905,0.006903498; 5.150000095,0.006903498;
              5.199999809,0.006903498; 5.25,0.006903498; 5.300000191,
              0.006903498; 5.349999905,0.006903498; 5.400000095,0.006903498;
              5.449999809,0.006903498; 5.5,0.003928924; 5.550000191,0.003928924;
              5.599999905,0.003928924; 5.650000095,0.003928924; 5.699999809,
              0.003928924; 5.75,0.003928924; 5.800000191,0.003928924;
              5.849999905,0.003928924; 5.900000095,0.003928924; 5.949999809,
              0.003928924; 6,0.002360596; 6.050000191,0.002360596; 6.099999905,
              0.002360596; 6.150000095,0.002360596; 6.199999809,0.002360596;
              6.25,0.002360596; 6.300000191,0.002360596; 6.349999905,
              0.002360596; 6.400000095,0.002360596; 6.449999809,0.002360596;
              6.5,0.003746401; 6.550000191,0.003746401; 6.599999905,0.003746401;
              6.650000095,0.003746401; 6.699999809,0.003746401; 6.75,
              0.003746401; 6.800000191,0.003746401; 6.849999905,0.003746401;
              6.900000095,0.003746401; 6.949999809,0.003746401; 7,0.007249906;
              7.050000191,0.007249906; 7.099999905,0.007249906; 7.150000095,
              0.007249906; 7.199999809,0.007249906; 7.25,0.007249906;
              7.300000191,0.007249906; 7.349999905,0.007249906; 7.400000095,
              0.007249906; 7.449999809,0.007249906; 7.5,0.00476628; 7.550000191,
              0.00476628; 7.599999905,0.00476628; 7.650000095,0.00476628;
              7.699999809,0.00476628; 7.75,0.00476628; 7.800000191,0.00476628;
              7.849999905,0.00476628; 7.900000095,0.00476628; 7.949999809,
              0.00476628; 8,0.006369866; 8.050000191,0.006369866; 8.100000381,
              0.006369866; 8.149999619,0.006369866; 8.199999809,0.006369866;
              8.25,0.006369866; 8.300000191,0.006369866; 8.350000381,
              0.006369866; 8.399999619,0.006369866; 8.449999809,0.006369866;
              8.5,0.005313287; 8.550000191,0.005313287; 8.600000381,0.005313287;
              8.649999619,0.005313287; 8.699999809,0.005313287; 8.75,
              0.005313287; 8.800000191,0.005313287; 8.850000381,0.005313287;
              8.899999619,0.005313287; 8.949999809,0.005313287; 9,0.006434385;
              9.050000191,0.006434385; 9.100000381,0.006434385; 9.149999619,
              0.006434385; 9.199999809,0.006434385; 9.25,0.006434385;
              9.300000191,0.006434385; 9.350000381,0.006434385; 9.399999619,
              0.006434385; 9.449999809,0.006434385; 9.5,0.007800864;
              9.550000191,0.007800864; 9.600000381,0.007800864; 9.649999619,
              0.007800864; 9.699999809,0.007800864; 9.75,0.007800864;
              9.800000191,0.007800864; 9.850000381,0.007800864; 9.899999619,
              0.007800864; 9.949999809,0.007800864; 10,0.008329803; 10.05000019,
              0.008329803; 10.10000038,0.008329803; 10.14999962,0.008329803;
              10.19999981,0.008329803; 10.25,0.008329803; 10.30000019,
              0.008329803; 10.35000038,0.008329803; 10.39999962,0.008329803;
              10.44999981,0.008329803; 10.5,0.003823658; 10.55000019,
              0.003823658; 10.60000038,0.003823658; 10.64999962,0.003823658;
              10.69999981,0.003823658; 10.75,0.003823658; 10.80000019,
              0.003823658; 10.85000038,0.003823658; 10.89999962,0.003823658;
              10.94999981,0.003823658; 11,0.001100936; 11.05000019,0.001100936;
              11.10000038,0.001100936; 11.14999962,0.001100936; 11.19999981,
              0.001100936; 11.25,0.001100936; 11.30000019,0.001100936;
              11.35000038,0.001100936; 11.39999962,0.001100936; 11.44999981,
              0.001100936; 11.5,0.002817231; 11.55000019,0.002817231;
              11.60000038,0.002817231; 11.64999962,0.002817231; 11.69999981,
              0.002817231; 11.75,0.002817231; 11.80000019,0.002817231;
              11.85000038,0.002817231; 11.89999962,0.002817231; 11.94999981,
              0.002817231; 12,0.000788975; 12.05000019,0.000788975; 12.10000038,
              0.000788975; 12.14999962,0.000788975; 12.19999981,0.000788975;
              12.25,0.000788975; 12.30000019,0.000788975; 12.35000038,
              0.000788975; 12.39999962,0.000788975; 12.44999981,0.000788975;
              12.5,0.001640537; 12.55000019,0.001640537; 12.60000038,
              0.001640537; 12.64999962,0.001640537; 12.69999981,0.001640537;
              12.75,0.001640537; 12.80000019,0.001640537; 12.85000038,
              0.001640537; 12.89999962,0.001640537; 12.94999981,0.001640537; 13,
              0.005081387; 13.05000019,0.005081387; 13.10000038,0.005081387;
              13.14999962,0.005081387; 13.19999981,0.005081387; 13.25,
              0.005081387; 13.30000019,0.005081387; 13.35000038,0.005081387;
              13.39999962,0.005081387; 13.44999981,0.005081387; 13.5,
              0.007993834; 13.55000019,0.007993834; 13.60000038,0.007993834;
              13.64999962,0.007993834; 13.69999981,0.007993834; 13.75,
              0.007993834; 13.80000019,0.007993834; 13.85000038,0.007993834;
              13.89999962,0.007993834; 13.94999981,0.007993834; 14,0.008253201;
              14.05000019,0.008253201; 14.10000038,0.008253201; 14.14999962,
              0.008253201; 14.19999981,0.008253201; 14.25,0.008253201;
              14.30000019,0.008253201; 14.35000038,0.008253201; 14.39999962,
              0.008253201; 14.44999981,0.008253201; 14.5,0.00786843;
              14.55000019,0.00786843; 14.60000038,0.00786843; 14.64999962,
              0.00786843; 14.69999981,0.00786843; 14.75,0.00786843; 14.80000019,
              0.00786843; 14.85000038,0.00786843; 14.89999962,0.00786843;
              14.94999981,0.00786843; 15,0.008297134; 15.05000019,0.008297134;
              15.10000038,0.008297134; 15.14999962,0.008297134; 15.19999981,
              0.008297134; 15.25,0.008297134; 15.30000019,0.008297134;
              15.35000038,0.008297134; 15.39999962,0.008297134; 15.44999981,
              0.008297134; 15.5,0.002721096; 15.55000019,0.002721096;
              15.60000038,0.002721096; 15.64999962,0.002721096; 15.69999981,
              0.002721096; 15.75,0.002721096; 15.80000019,0.002721096;
              15.85000038,0.002721096; 15.89999962,0.002721096; 15.94999981,
              0.002721096; 16,0.003111672; 16.04999924,0.003111672; 16.10000038,
              0.003111672; 16.14999962,0.003111672; 16.20000076,0.003111672;
              16.25,0.003111672; 16.29999924,0.003111672; 16.35000038,
              0.003111672; 16.39999962,0.003111672; 16.45000076,0.003111672;
              16.5,0.004070795; 16.54999924,0.004070795; 16.60000038,
              0.004070795; 16.64999962,0.004070795; 16.70000076,0.004070795;
              16.75,0.004070795; 16.79999924,0.004070795; 16.85000038,
              0.004070795; 16.89999962,0.004070795; 16.95000076,0.004070795; 17,
              0.001930692; 17.04999924,0.001930692; 17.10000038,0.001930692;
              17.14999962,0.001930692; 17.20000076,0.001930692; 17.25,
              0.001930692; 17.29999924,0.001930692; 17.35000038,0.001930692;
              17.39999962,0.001930692; 17.45000076,0.001930692; 17.5,
              0.007811387; 17.54999924,0.007811387; 17.60000038,0.007811387;
              17.64999962,0.007811387; 17.70000076,0.007811387; 17.75,
              0.007811387; 17.79999924,0.007811387; 17.85000038,0.007811387;
              17.89999962,0.007811387; 17.95000076,0.007811387; 18,0.005553185;
              18.04999924,0.005553185; 18.10000038,0.005553185; 18.14999962,
              0.005553185; 18.20000076,0.005553185; 18.25,0.005553185;
              18.29999924,0.005553185; 18.35000038,0.005553185; 18.39999962,
              0.005553185; 18.45000076,0.005553185; 18.5,0.005197222;
              18.54999924,0.005197222; 18.60000038,0.005197222; 18.64999962,
              0.005197222; 18.70000076,0.005197222; 18.75,0.005197222;
              18.79999924,0.005197222; 18.85000038,0.005197222; 18.89999962,
              0.005197222; 18.95000076,0.005197222; 19,0.009617693; 19.04999924,
              0.009617693; 19.10000038,0.009617693; 19.14999962,0.009617693;
              19.20000076,0.009617693; 19.25,0.009617693; 19.29999924,
              0.009617693; 19.35000038,0.009617693; 19.39999962,0.009617693;
              19.45000076,0.009617693; 19.5,0.009360617; 19.54999924,
              0.009360617; 19.60000038,0.009360617; 19.64999962,0.009360617;
              19.70000076,0.009360617; 19.75,0.009360617; 19.79999924,
              0.009360617; 19.85000038,0.009360617; 19.89999962,0.009360617;
              19.95000076,0.009360617; 20,0.00829367; 20.04999924,0.00829367;
              20.10000038,0.00829367; 20.14999962,0.00829367; 20.20000076,
              0.00829367; 20.25,0.00829367; 20.29999924,0.00829367; 20.35000038,
              0.00829367; 20.39999962,0.00829367; 20.45000076,0.00829367; 20.5,
              0.009764855; 20.54999924,0.009764855; 20.60000038,0.009764855;
              20.64999962,0.009764855; 20.70000076,0.009764855; 20.75,
              0.009764855; 20.79999924,0.009764855; 20.85000038,0.009764855;
              20.89999962,0.009764855; 20.95000076,0.009764855; 21,0.009144737;
              21.04999924,0.009144737; 21.10000038,0.009144737; 21.14999962,
              0.009144737; 21.20000076,0.009144737; 21.25,0.009144737;
              21.29999924,0.009144737; 21.35000038,0.009144737; 21.39999962,
              0.009144737; 21.45000076,0.009144737; 21.5,0.004933753;
              21.54999924,0.004933753; 21.60000038,0.004933753; 21.64999962,
              0.004933753; 21.70000076,0.004933753; 21.75,0.004933753;
              21.79999924,0.004933753; 21.85000038,0.004933753; 21.89999962,
              0.004933753; 21.95000076,0.004933753; 22,0.00847112; 22.04999924,
              0.00847112; 22.10000038,0.00847112; 22.14999962,0.00847112;
              22.20000076,0.00847112; 22.25,0.00847112; 22.29999924,0.00847112;
              22.35000038,0.00847112; 22.39999962,0.00847112; 22.45000076,
              0.00847112; 22.5,0.00998426; 22.54999924,0.00998426; 22.60000038,
              0.00998426; 22.64999962,0.00998426; 22.70000076,0.00998426; 22.75,
              0.00998426; 22.79999924,0.00998426; 22.85000038,0.00998426;
              22.89999962,0.00998426; 22.95000076,0.00998426; 23,0.004856287;
              23.04999924,0.004856287; 23.10000038,0.004856287; 23.14999962,
              0.004856287; 23.20000076,0.004856287; 23.25,0.004856287;
              23.29999924,0.004856287; 23.35000038,0.004856287; 23.39999962,
              0.004856287; 23.45000076,0.004856287; 23.5,0.00791057;
              23.54999924,0.00791057; 23.60000038,0.00791057; 23.64999962,
              0.00791057; 23.70000076,0.00791057; 23.75,0.00791057; 23.79999924,
              0.00791057; 23.85000038,0.00791057; 23.89999962,0.00791057;
              23.95000076,0.00791057; 24,0.00213982; 24.04999924,0.00213982;
              24.10000038,0.00213982; 24.14999962,0.00213982; 24.20000076,
              0.00213982; 24.25,0.00213982; 24.29999924,0.00213982; 24.35000038,
              0.00213982; 24.39999962,0.00213982; 24.45000076,0.00213982; 24.5,
              -0.005248163; 24.54999924,-0.005248163; 24.60000038,-0.005248163;
              24.64999962,-0.005248163; 24.70000076,-0.005248163; 24.75,-0.005248163;
              24.79999924,-0.005248163; 24.85000038,-0.005248163; 24.89999962,-0.005248163;
              24.95000076,-0.005248163],
                               smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-20},{-98,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0;
              0.050000001,0; 0.100000001,0; 0.150000006,0; 0.200000003,0; 0.25,
              0; 0.300000012,0; 0.349999994,0; 0.400000006,0; 0.449999988,0;
              0.5,0.000272799; 0.550000012,0.000272799; 0.600000024,0.000272799;
              0.649999976,0.000272799; 0.699999988,0.000272799; 0.75,
              0.000272799; 0.800000012,0.000272799; 0.850000024,0.000272799;
              0.899999976,0.000272799; 0.949999988,0.000272799; 1,0.000557385;
              1.049999952,0.000557385; 1.100000024,0.000557385; 1.149999976,
              0.000557385; 1.200000048,0.000557385; 1.25,0.000557385;
              1.299999952,0.000557385; 1.350000024,0.000557385; 1.399999976,
              0.000557385; 1.450000048,0.000557385; 1.5,0.000642212;
              1.549999952,0.000642212; 1.600000024,0.000642212; 1.649999976,
              0.000642212; 1.700000048,0.000642212; 1.75,0.000642212;
              1.799999952,0.000642212; 1.850000024,0.000642212; 1.899999976,
              0.000642212; 1.950000048,0.000642212; 2,0.000593596; 2.049999952,
              0.000593596; 2.099999905,0.000593596; 2.150000095,0.000593596;
              2.200000048,0.000593596; 2.25,0.000593596; 2.299999952,
              0.000593596; 2.349999905,0.000593596; 2.400000095,0.000593596;
              2.450000048,0.000593596; 2.5,0.000552152; 2.549999952,0.000552152;
              2.599999905,0.000552152; 2.650000095,0.000552152; 2.700000048,
              0.000552152; 2.75,0.000552152; 2.799999952,0.000552152;
              2.849999905,0.000552152; 2.900000095,0.000552152; 2.950000048,
              0.000552152; 3,0.000473099; 3.049999952,0.000473099; 3.099999905,
              0.000473099; 3.150000095,0.000473099; 3.200000048,0.000473099;
              3.25,0.000473099; 3.299999952,0.000473099; 3.349999905,
              0.000473099; 3.400000095,0.000473099; 3.450000048,0.000473099;
              3.5,0.000428188; 3.549999952,0.000428188; 3.599999905,0.000428188;
              3.650000095,0.000428188; 3.700000048,0.000428188; 3.75,
              0.000428188; 3.799999952,0.000428188; 3.849999905,0.000428188;
              3.900000095,0.000428188; 3.950000048,0.000428188; 4,0.000348862;
              4.050000191,0.000348862; 4.099999905,0.000348862; 4.150000095,
              0.000348862; 4.199999809,0.000348862; 4.25,0.000348862;
              4.300000191,0.000348862; 4.349999905,0.000348862; 4.400000095,
              0.000348862; 4.449999809,0.000348862; 4.5,0.000245205;
              4.550000191,0.000245205; 4.599999905,0.000245205; 4.650000095,
              0.000245205; 4.699999809,0.000245205; 4.75,0.000245205;
              4.800000191,0.000245205; 4.849999905,0.000245205; 4.900000095,
              0.000245205; 4.949999809,0.000245205; 5,0.00015742; 5.050000191,
              0.00015742; 5.099999905,0.00015742; 5.150000095,0.00015742;
              5.199999809,0.00015742; 5.25,0.00015742; 5.300000191,0.00015742;
              5.349999905,0.00015742; 5.400000095,0.00015742; 5.449999809,
              0.00015742; 5.5,7.73e-05; 5.550000191,7.73e-05; 5.599999905,
              7.73e-05; 5.650000095,7.73e-05; 5.699999809,7.73e-05; 5.75,
              7.73e-05; 5.800000191,7.73e-05; 5.849999905,7.73e-05; 5.900000095,
              7.73e-05; 5.949999809,7.73e-05; 6,2.88e-05; 6.050000191,2.88e-05;
              6.099999905,2.88e-05; 6.150000095,2.88e-05; 6.199999809,2.88e-05;
              6.25,2.88e-05; 6.300000191,2.88e-05; 6.349999905,2.88e-05;
              6.400000095,2.88e-05; 6.449999809,2.88e-05; 6.5,6.11e-05;
              6.550000191,6.11e-05; 6.599999905,6.11e-05; 6.650000095,6.11e-05;
              6.699999809,6.11e-05; 6.75,6.11e-05; 6.800000191,6.11e-05;
              6.849999905,6.11e-05; 6.900000095,6.11e-05; 6.949999809,6.11e-05;
              7,9.5e-05; 7.050000191,9.5e-05; 7.099999905,9.5e-05; 7.150000095,
              9.5e-05; 7.199999809,9.5e-05; 7.25,9.5e-05; 7.300000191,9.5e-05;
              7.349999905,9.5e-05; 7.400000095,9.5e-05; 7.449999809,9.5e-05;
              7.5,0.000114072; 7.550000191,0.000114072; 7.599999905,0.000114072;
              7.650000095,0.000114072; 7.699999809,0.000114072; 7.75,
              0.000114072; 7.800000191,0.000114072; 7.849999905,0.000114072;
              7.900000095,0.000114072; 7.949999809,0.000114072; 8,0.000115416;
              8.050000191,0.000115416; 8.100000381,0.000115416; 8.149999619,
              0.000115416; 8.199999809,0.000115416; 8.25,0.000115416;
              8.300000191,0.000115416; 8.350000381,0.000115416; 8.399999619,
              0.000115416; 8.449999809,0.000115416; 8.5,0.000147507;
              8.550000191,0.000147507; 8.600000381,0.000147507; 8.649999619,
              0.000147507; 8.699999809,0.000147507; 8.75,0.000147507;
              8.800000191,0.000147507; 8.850000381,0.000147507; 8.899999619,
              0.000147507; 8.949999809,0.000147507; 9,0.000221503; 9.050000191,
              0.000221503; 9.100000381,0.000221503; 9.149999619,0.000221503;
              9.199999809,0.000221503; 9.25,0.000221503; 9.300000191,
              0.000221503; 9.350000381,0.000221503; 9.399999619,0.000221503;
              9.449999809,0.000221503; 9.5,0.000187926; 9.550000191,0.000187926;
              9.600000381,0.000187926; 9.649999619,0.000187926; 9.699999809,
              0.000187926; 9.75,0.000187926; 9.800000191,0.000187926;
              9.850000381,0.000187926; 9.899999619,0.000187926; 9.949999809,
              0.000187926; 10,7.41e-05; 10.05000019,7.41e-05; 10.10000038,
              7.41e-05; 10.14999962,7.41e-05; 10.19999981,7.41e-05; 10.25,
              7.41e-05; 10.30000019,7.41e-05; 10.35000038,7.41e-05; 10.39999962,
              7.41e-05; 10.44999981,7.41e-05; 10.5,3.02e-05; 10.55000019,
              3.02e-05; 10.60000038,3.02e-05; 10.64999962,3.02e-05; 10.69999981,
              3.02e-05; 10.75,3.02e-05; 10.80000019,3.02e-05; 10.85000038,
              3.02e-05; 10.89999962,3.02e-05; 10.94999981,3.02e-05; 11,1.25e-06;
              11.05000019,1.25e-06; 11.10000038,1.25e-06; 11.14999962,1.25e-06;
              11.19999981,1.25e-06; 11.25,1.25e-06; 11.30000019,1.25e-06;
              11.35000038,1.25e-06; 11.39999962,1.25e-06; 11.44999981,1.25e-06;
              11.5,7.31e-05; 11.55000019,7.31e-05; 11.60000038,7.31e-05;
              11.64999962,7.31e-05; 11.69999981,7.31e-05; 11.75,7.31e-05;
              11.80000019,7.31e-05; 11.85000038,7.31e-05; 11.89999962,7.31e-05;
              11.94999981,7.31e-05; 12,8.8e-05; 12.05000019,8.8e-05;
              12.10000038,8.8e-05; 12.14999962,8.8e-05; 12.19999981,8.8e-05;
              12.25,8.8e-05; 12.30000019,8.8e-05; 12.35000038,8.8e-05;
              12.39999962,8.8e-05; 12.44999981,8.8e-05; 12.5,0.000124956;
              12.55000019,0.000124956; 12.60000038,0.000124956; 12.64999962,
              0.000124956; 12.69999981,0.000124956; 12.75,0.000124956;
              12.80000019,0.000124956; 12.85000038,0.000124956; 12.89999962,
              0.000124956; 12.94999981,0.000124956; 13,0.000119798; 13.05000019,
              0.000119798; 13.10000038,0.000119798; 13.14999962,0.000119798;
              13.19999981,0.000119798; 13.25,0.000119798; 13.30000019,
              0.000119798; 13.35000038,0.000119798; 13.39999962,0.000119798;
              13.44999981,0.000119798; 13.5,0.000218918; 13.55000019,
              0.000218918; 13.60000038,0.000218918; 13.64999962,0.000218918;
              13.69999981,0.000218918; 13.75,0.000218918; 13.80000019,
              0.000218918; 13.85000038,0.000218918; 13.89999962,0.000218918;
              13.94999981,0.000218918; 14,0.000228575; 14.05000019,0.000228575;
              14.10000038,0.000228575; 14.14999962,0.000228575; 14.19999981,
              0.000228575; 14.25,0.000228575; 14.30000019,0.000228575;
              14.35000038,0.000228575; 14.39999962,0.000228575; 14.44999981,
              0.000228575; 14.5,0.000198163; 14.55000019,0.000198163;
              14.60000038,0.000198163; 14.64999962,0.000198163; 14.69999981,
              0.000198163; 14.75,0.000198163; 14.80000019,0.000198163;
              14.85000038,0.000198163; 14.89999962,0.000198163; 14.94999981,
              0.000198163; 15,0.000191682; 15.05000019,0.000191682; 15.10000038,
              0.000191682; 15.14999962,0.000191682; 15.19999981,0.000191682;
              15.25,0.000191682; 15.30000019,0.000191682; 15.35000038,
              0.000191682; 15.39999962,0.000191682; 15.44999981,0.000191682;
              15.5,9.39e-05; 15.55000019,9.39e-05; 15.60000038,9.39e-05;
              15.64999962,9.39e-05; 15.69999981,9.39e-05; 15.75,9.39e-05;
              15.80000019,9.39e-05; 15.85000038,9.39e-05; 15.89999962,9.39e-05;
              15.94999981,9.39e-05; 16,0.000119106; 16.04999924,0.000119106;
              16.10000038,0.000119106; 16.14999962,0.000119106; 16.20000076,
              0.000119106; 16.25,0.000119106; 16.29999924,0.000119106;
              16.35000038,0.000119106; 16.39999962,0.000119106; 16.45000076,
              0.000119106; 16.5,0.000156966; 16.54999924,0.000156966;
              16.60000038,0.000156966; 16.64999962,0.000156966; 16.70000076,
              0.000156966; 16.75,0.000156966; 16.79999924,0.000156966;
              16.85000038,0.000156966; 16.89999962,0.000156966; 16.95000076,
              0.000156966; 17,0.000108959; 17.04999924,0.000108959; 17.10000038,
              0.000108959; 17.14999962,0.000108959; 17.20000076,0.000108959;
              17.25,0.000108959; 17.29999924,0.000108959; 17.35000038,
              0.000108959; 17.39999962,0.000108959; 17.45000076,0.000108959;
              17.5,0.000125187; 17.54999924,0.000125187; 17.60000038,
              0.000125187; 17.64999962,0.000125187; 17.70000076,0.000125187;
              17.75,0.000125187; 17.79999924,0.000125187; 17.85000038,
              0.000125187; 17.89999962,0.000125187; 17.95000076,0.000125187; 18,
              0.000125419; 18.04999924,0.000125419; 18.10000038,0.000125419;
              18.14999962,0.000125419; 18.20000076,0.000125419; 18.25,
              0.000125419; 18.29999924,0.000125419; 18.35000038,0.000125419;
              18.39999962,0.000125419; 18.45000076,0.000125419; 18.5,7.53e-05;
              18.54999924,7.53e-05; 18.60000038,7.53e-05; 18.64999962,7.53e-05;
              18.70000076,7.53e-05; 18.75,7.53e-05; 18.79999924,7.53e-05;
              18.85000038,7.53e-05; 18.89999962,7.53e-05; 18.95000076,7.53e-05;
              19,0.000112457; 19.04999924,0.000112457; 19.10000038,0.000112457;
              19.14999962,0.000112457; 19.20000076,0.000112457; 19.25,
              0.000112457; 19.29999924,0.000112457; 19.35000038,0.000112457;
              19.39999962,0.000112457; 19.45000076,0.000112457; 19.5,7.67e-05;
              19.54999924,7.67e-05; 19.60000038,7.67e-05; 19.64999962,7.67e-05;
              19.70000076,7.67e-05; 19.75,7.67e-05; 19.79999924,7.67e-05;
              19.85000038,7.67e-05; 19.89999962,7.67e-05; 19.95000076,7.67e-05;
              20,6.57e-05; 20.04999924,6.57e-05; 20.10000038,6.57e-05;
              20.14999962,6.57e-05; 20.20000076,6.57e-05; 20.25,6.57e-05;
              20.29999924,6.57e-05; 20.35000038,6.57e-05; 20.39999962,6.57e-05;
              20.45000076,6.57e-05; 20.5,1.32e-05; 20.54999924,1.32e-05;
              20.60000038,1.32e-05; 20.64999962,1.32e-05; 20.70000076,1.32e-05;
              20.75,1.32e-05; 20.79999924,1.32e-05; 20.85000038,1.32e-05;
              20.89999962,1.32e-05; 20.95000076,1.32e-05; 21,-2.51e-06;
              21.04999924,-2.51e-06; 21.10000038,-2.51e-06; 21.14999962,-2.51e-06;
              21.20000076,-2.51e-06; 21.25,-2.51e-06; 21.29999924,-2.51e-06;
              21.35000038,-2.51e-06; 21.39999962,-2.51e-06; 21.45000076,-2.51e-06;
              21.5,-4.86e-05; 21.54999924,-4.86e-05; 21.60000038,-4.86e-05;
              21.64999962,-4.86e-05; 21.70000076,-4.86e-05; 21.75,-4.86e-05;
              21.79999924,-4.86e-05; 21.85000038,-4.86e-05; 21.89999962,-4.86e-05;
              21.95000076,-4.86e-05; 22,-9.11e-05; 22.04999924,-9.11e-05;
              22.10000038,-9.11e-05; 22.14999962,-9.11e-05; 22.20000076,-9.11e-05;
              22.25,-9.11e-05; 22.29999924,-9.11e-05; 22.35000038,-9.11e-05;
              22.39999962,-9.11e-05; 22.45000076,-9.11e-05; 22.5,2.13e-05;
              22.54999924,2.13e-05; 22.60000038,2.13e-05; 22.64999962,2.13e-05;
              22.70000076,2.13e-05; 22.75,2.13e-05; 22.79999924,2.13e-05;
              22.85000038,2.13e-05; 22.89999962,2.13e-05; 22.95000076,2.13e-05;
              23,-5.28e-05; 23.04999924,-5.28e-05; 23.10000038,-5.28e-05;
              23.14999962,-5.28e-05; 23.20000076,-5.28e-05; 23.25,-5.28e-05;
              23.29999924,-5.28e-05; 23.35000038,-5.28e-05; 23.39999962,-5.28e-05;
              23.45000076,-5.28e-05; 23.5,-0.000102887; 23.54999924,-0.000102887;
              23.60000038,-0.000102887; 23.64999962,-0.000102887; 23.70000076,-0.000102887;
              23.75,-0.000102887; 23.79999924,-0.000102887; 23.85000038,-0.000102887;
              23.89999962,-0.000102887; 23.95000076,-0.000102887; 24,-0.000117753;
              24.04999924,-0.000117753; 24.10000038,-0.000117753; 24.14999962,-0.000117753;
              24.20000076,-0.000117753; 24.25,-0.000117753; 24.29999924,-0.000117753;
              24.35000038,-0.000117753; 24.39999962,-0.000117753; 24.45000076,-0.000117753;
              24.5,-0.000144514; 24.54999924,-0.000144514; 24.60000038,-0.000144514;
              24.64999962,-0.000144514; 24.70000076,-0.000144514; 24.75,-0.000144514;
              24.79999924,-0.000144514; 24.85000038,-0.000144514; 24.89999962,-0.000144514;
              24.95000076,-0.000144514],
                                   smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-48},{-98,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0;
              0.050000001,0; 0.100000001,0; 0.150000006,0; 0.200000003,0; 0.25,
              0; 0.300000012,0; 0.349999994,0; 0.400000006,0; 0.449999988,0;
              0.5,0.041380635; 0.550000012,0.041380635; 0.600000024,0.041380635;
              0.649999976,0.041380635; 0.699999988,0.041380635; 0.75,
              0.041380635; 0.800000012,0.041380635; 0.850000024,0.041380635;
              0.899999976,0.041380635; 0.949999988,0.041380635; 1,0.028239205;
              1.049999952,0.028239205; 1.100000024,0.028239205; 1.149999976,
              0.028239205; 1.200000048,0.028239205; 1.25,0.028239205;
              1.299999952,0.028239205; 1.350000024,0.028239205; 1.399999976,
              0.028239205; 1.450000048,0.028239205; 1.5,0.0317556; 1.549999952,
              0.0317556; 1.600000024,0.0317556; 1.649999976,0.0317556;
              1.700000048,0.0317556; 1.75,0.0317556; 1.799999952,0.0317556;
              1.850000024,0.0317556; 1.899999976,0.0317556; 1.950000048,
              0.0317556; 2,0.03041422; 2.049999952,0.03041422; 2.099999905,
              0.03041422; 2.150000095,0.03041422; 2.200000048,0.03041422; 2.25,
              0.03041422; 2.299999952,0.03041422; 2.349999905,0.03041422;
              2.400000095,0.03041422; 2.450000048,0.03041422; 2.5,0.030264955;
              2.549999952,0.030264955; 2.599999905,0.030264955; 2.650000095,
              0.030264955; 2.700000048,0.030264955; 2.75,0.030264955;
              2.799999952,0.030264955; 2.849999905,0.030264955; 2.900000095,
              0.030264955; 2.950000048,0.030264955; 3,0.030688376; 3.049999952,
              0.030688376; 3.099999905,0.030688376; 3.150000095,0.030688376;
              3.200000048,0.030688376; 3.25,0.030688376; 3.299999952,
              0.030688376; 3.349999905,0.030688376; 3.400000095,0.030688376;
              3.450000048,0.030688376; 3.5,0.031330681; 3.549999952,0.031330681;
              3.599999905,0.031330681; 3.650000095,0.031330681; 3.700000048,
              0.031330681; 3.75,0.031330681; 3.799999952,0.031330681;
              3.849999905,0.031330681; 3.900000095,0.031330681; 3.950000048,
              0.031330681; 4,0.03073627; 4.050000191,0.03073627; 4.099999905,
              0.03073627; 4.150000095,0.03073627; 4.199999809,0.03073627; 4.25,
              0.03073627; 4.300000191,0.03073627; 4.349999905,0.03073627;
              4.400000095,0.03073627; 4.449999809,0.03073627; 4.5,0.030349479;
              4.550000191,0.030349479; 4.599999905,0.030349479; 4.650000095,
              0.030349479; 4.699999809,0.030349479; 4.75,0.030349479;
              4.800000191,0.030349479; 4.849999905,0.030349479; 4.900000095,
              0.030349479; 4.949999809,0.030349479; 5,0.029948144; 5.050000191,
              0.029948144; 5.099999905,0.029948144; 5.150000095,0.029948144;
              5.199999809,0.029948144; 5.25,0.029948144; 5.300000191,
              0.029948144; 5.349999905,0.029948144; 5.400000095,0.029948144;
              5.449999809,0.029948144; 5.5,0.029782504; 5.550000191,0.029782504;
              5.599999905,0.029782504; 5.650000095,0.029782504; 5.699999809,
              0.029782504; 5.75,0.029782504; 5.800000191,0.029782504;
              5.849999905,0.029782504; 5.900000095,0.029782504; 5.949999809,
              0.029782504; 6,0.030041751; 6.050000191,0.030041751; 6.099999905,
              0.030041751; 6.150000095,0.030041751; 6.199999809,0.030041751;
              6.25,0.030041751; 6.300000191,0.030041751; 6.349999905,
              0.030041751; 6.400000095,0.030041751; 6.449999809,0.030041751;
              6.5,0.030463432; 6.550000191,0.030463432; 6.599999905,0.030463432;
              6.650000095,0.030463432; 6.699999809,0.030463432; 6.75,
              0.030463432; 6.800000191,0.030463432; 6.849999905,0.030463432;
              6.900000095,0.030463432; 6.949999809,0.030463432; 7,0.03102169;
              7.050000191,0.03102169; 7.099999905,0.03102169; 7.150000095,
              0.03102169; 7.199999809,0.03102169; 7.25,0.03102169; 7.300000191,
              0.03102169; 7.349999905,0.03102169; 7.400000095,0.03102169;
              7.449999809,0.03102169; 7.5,0.029889058; 7.550000191,0.029889058;
              7.599999905,0.029889058; 7.650000095,0.029889058; 7.699999809,
              0.029889058; 7.75,0.029889058; 7.800000191,0.029889058;
              7.849999905,0.029889058; 7.900000095,0.029889058; 7.949999809,
              0.029889058; 8,0.030183835; 8.050000191,0.030183835; 8.100000381,
              0.030183835; 8.149999619,0.030183835; 8.199999809,0.030183835;
              8.25,0.030183835; 8.300000191,0.030183835; 8.350000381,
              0.030183835; 8.399999619,0.030183835; 8.449999809,0.030183835;
              8.5,0.030517358; 8.550000191,0.030517358; 8.600000381,0.030517358;
              8.649999619,0.030517358; 8.699999809,0.030517358; 8.75,
              0.030517358; 8.800000191,0.030517358; 8.850000381,0.030517358;
              8.899999619,0.030517358; 8.949999809,0.030517358; 9,0.031419185;
              9.050000191,0.031419185; 9.100000381,0.031419185; 9.149999619,
              0.031419185; 9.199999809,0.031419185; 9.25,0.031419185;
              9.300000191,0.031419185; 9.350000381,0.031419185; 9.399999619,
              0.031419185; 9.449999809,0.031419185; 9.5,0.030528216;
              9.550000191,0.030528216; 9.600000381,0.030528216; 9.649999619,
              0.030528216; 9.699999809,0.030528216; 9.75,0.030528216;
              9.800000191,0.030528216; 9.850000381,0.030528216; 9.899999619,
              0.030528216; 9.949999809,0.030528216; 10,0.029505973; 10.05000019,
              0.029505973; 10.10000038,0.029505973; 10.14999962,0.029505973;
              10.19999981,0.029505973; 10.25,0.029505973; 10.30000019,
              0.029505973; 10.35000038,0.029505973; 10.39999962,0.029505973;
              10.44999981,0.029505973; 10.5,0.029320604; 10.55000019,
              0.029320604; 10.60000038,0.029320604; 10.64999962,0.029320604;
              10.69999981,0.029320604; 10.75,0.029320604; 10.80000019,
              0.029320604; 10.85000038,0.029320604; 10.89999962,0.029320604;
              10.94999981,0.029320604; 11,0.02957819; 11.05000019,0.02957819;
              11.10000038,0.02957819; 11.14999962,0.02957819; 11.19999981,
              0.02957819; 11.25,0.02957819; 11.30000019,0.02957819; 11.35000038,
              0.02957819; 11.39999962,0.02957819; 11.44999981,0.02957819; 11.5,
              0.03082629; 11.55000019,0.03082629; 11.60000038,0.03082629;
              11.64999962,0.03082629; 11.69999981,0.03082629; 11.75,0.03082629;
              11.80000019,0.03082629; 11.85000038,0.03082629; 11.89999962,
              0.03082629; 11.94999981,0.03082629; 12,0.030404534; 12.05000019,
              0.030404534; 12.10000038,0.030404534; 12.14999962,0.030404534;
              12.19999981,0.030404534; 12.25,0.030404534; 12.30000019,
              0.030404534; 12.35000038,0.030404534; 12.39999962,0.030404534;
              12.44999981,0.030404534; 12.5,0.030172375; 12.55000019,
              0.030172375; 12.60000038,0.030172375; 12.64999962,0.030172375;
              12.69999981,0.030172375; 12.75,0.030172375; 12.80000019,
              0.030172375; 12.85000038,0.030172375; 12.89999962,0.030172375;
              12.94999981,0.030172375; 13,0.02993655; 13.05000019,0.02993655;
              13.10000038,0.02993655; 13.14999962,0.02993655; 13.19999981,
              0.02993655; 13.25,0.02993655; 13.30000019,0.02993655; 13.35000038,
              0.02993655; 13.39999962,0.02993655; 13.44999981,0.02993655; 13.5,
              0.031176081; 13.55000019,0.031176081; 13.60000038,0.031176081;
              13.64999962,0.031176081; 13.69999981,0.031176081; 13.75,
              0.031176081; 13.80000019,0.031176081; 13.85000038,0.031176081;
              13.89999962,0.031176081; 13.94999981,0.031176081; 14,0.030447168;
              14.05000019,0.030447168; 14.10000038,0.030447168; 14.14999962,
              0.030447168; 14.19999981,0.030447168; 14.25,0.030447168;
              14.30000019,0.030447168; 14.35000038,0.030447168; 14.39999962,
              0.030447168; 14.44999981,0.030447168; 14.5,0.030129561;
              14.55000019,0.030129561; 14.60000038,0.030129561; 14.64999962,
              0.030129561; 14.69999981,0.030129561; 14.75,0.030129561;
              14.80000019,0.030129561; 14.85000038,0.030129561; 14.89999962,
              0.030129561; 14.94999981,0.030129561; 15,0.03062154; 15.05000019,
              0.03062154; 15.10000038,0.03062154; 15.14999962,0.03062154;
              15.19999981,0.03062154; 15.25,0.03062154; 15.30000019,0.03062154;
              15.35000038,0.03062154; 15.39999962,0.03062154; 15.44999981,
              0.03062154; 15.5,0.029339195; 15.55000019,0.029339195;
              15.60000038,0.029339195; 15.64999962,0.029339195; 15.69999981,
              0.029339195; 15.75,0.029339195; 15.80000019,0.029339195;
              15.85000038,0.029339195; 15.89999962,0.029339195; 15.94999981,
              0.029339195; 16,0.030604287; 16.04999924,0.030604287; 16.10000038,
              0.030604287; 16.14999962,0.030604287; 16.20000076,0.030604287;
              16.25,0.030604287; 16.29999924,0.030604287; 16.35000038,
              0.030604287; 16.39999962,0.030604287; 16.45000076,0.030604287;
              16.5,0.030593322; 16.54999924,0.030593322; 16.60000038,
              0.030593322; 16.64999962,0.030593322; 16.70000076,0.030593322;
              16.75,0.030593322; 16.79999924,0.030593322; 16.85000038,
              0.030593322; 16.89999962,0.030593322; 16.95000076,0.030593322; 17,
              0.0295333; 17.04999924,0.0295333; 17.10000038,0.0295333;
              17.14999962,0.0295333; 17.20000076,0.0295333; 17.25,0.0295333;
              17.29999924,0.0295333; 17.35000038,0.0295333; 17.39999962,
              0.0295333; 17.45000076,0.0295333; 17.5,0.030582129; 17.54999924,
              0.030582129; 17.60000038,0.030582129; 17.64999962,0.030582129;
              17.70000076,0.030582129; 17.75,0.030582129; 17.79999924,
              0.030582129; 17.85000038,0.030582129; 17.89999962,0.030582129;
              17.95000076,0.030582129; 18,0.030332746; 18.04999924,0.030332746;
              18.10000038,0.030332746; 18.14999962,0.030332746; 18.20000076,
              0.030332746; 18.25,0.030332746; 18.29999924,0.030332746;
              18.35000038,0.030332746; 18.39999962,0.030332746; 18.45000076,
              0.030332746; 18.5,0.029603798; 18.54999924,0.029603798;
              18.60000038,0.029603798; 18.64999962,0.029603798; 18.70000076,
              0.029603798; 18.75,0.029603798; 18.79999924,0.029603798;
              18.85000038,0.029603798; 18.89999962,0.029603798; 18.95000076,
              0.029603798; 19,0.031163913; 19.04999924,0.031163913; 19.10000038,
              0.031163913; 19.14999962,0.031163913; 19.20000076,0.031163913;
              19.25,0.031163913; 19.29999924,0.031163913; 19.35000038,
              0.031163913; 19.39999962,0.031163913; 19.45000076,0.031163913;
              19.5,0.030333161; 19.54999924,0.030333161; 19.60000038,
              0.030333161; 19.64999962,0.030333161; 19.70000076,0.030333161;
              19.75,0.030333161; 19.79999924,0.030333161; 19.85000038,
              0.030333161; 19.89999962,0.030333161; 19.95000076,0.030333161; 20,
              0.030218463; 20.04999924,0.030218463; 20.10000038,0.030218463;
              20.14999962,0.030218463; 20.20000076,0.030218463; 20.25,
              0.030218463; 20.29999924,0.030218463; 20.35000038,0.030218463;
              20.39999962,0.030218463; 20.45000076,0.030218463; 20.5,
              0.029791832; 20.54999924,0.029791832; 20.60000038,0.029791832;
              20.64999962,0.029791832; 20.70000076,0.029791832; 20.75,
              0.029791832; 20.79999924,0.029791832; 20.85000038,0.029791832;
              20.89999962,0.029791832; 20.95000076,0.029791832; 21,0.030366998;
              21.04999924,0.030366998; 21.10000038,0.030366998; 21.14999962,
              0.030366998; 21.20000076,0.030366998; 21.25,0.030366998;
              21.29999924,0.030366998; 21.35000038,0.030366998; 21.39999962,
              0.030366998; 21.45000076,0.030366998; 21.5,0.029985349;
              21.54999924,0.029985349; 21.60000038,0.029985349; 21.64999962,
              0.029985349; 21.70000076,0.029985349; 21.75,0.029985349;
              21.79999924,0.029985349; 21.85000038,0.029985349; 21.89999962,
              0.029985349; 21.95000076,0.029985349; 22,0.030725466; 22.04999924,
              0.030725466; 22.10000038,0.030725466; 22.14999962,0.030725466;
              22.20000076,0.030725466; 22.25,0.030725466; 22.29999924,
              0.030725466; 22.35000038,0.030725466; 22.39999962,0.030725466;
              22.45000076,0.030725466; 22.5,0.032134707; 22.54999924,
              0.032134707; 22.60000038,0.032134707; 22.64999962,0.032134707;
              22.70000076,0.032134707; 22.75,0.032134707; 22.79999924,
              0.032134707; 22.85000038,0.032134707; 22.89999962,0.032134707;
              22.95000076,0.032134707; 23,0.029531973; 23.04999924,0.029531973;
              23.10000038,0.029531973; 23.14999962,0.029531973; 23.20000076,
              0.029531973; 23.25,0.029531973; 23.29999924,0.029531973;
              23.35000038,0.029531973; 23.39999962,0.029531973; 23.45000076,
              0.029531973; 23.5,0.03021401; 23.54999924,0.03021401; 23.60000038,
              0.03021401; 23.64999962,0.03021401; 23.70000076,0.03021401; 23.75,
              0.03021401; 23.79999924,0.03021401; 23.85000038,0.03021401;
              23.89999962,0.03021401; 23.95000076,0.03021401; 24,0.029669723;
              24.04999924,0.029669723; 24.10000038,0.029669723; 24.14999962,
              0.029669723; 24.20000076,0.029669723; 24.25,0.029669723;
              24.29999924,0.029669723; 24.35000038,0.029669723; 24.39999962,
              0.029669723; 24.45000076,0.029669723; 24.5,0.029677873;
              24.54999924,0.029677873; 24.60000038,0.029677873; 24.64999962,
              0.029677873; 24.70000076,0.029677873; 24.75,0.029677873;
              24.79999924,0.029677873; 24.85000038,0.029677873; 24.89999962,
              0.029677873; 24.95000076,0.029677873],
                                   smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-94},{-98,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0;
              0.050000001,0; 0.100000001,0; 0.150000006,0; 0.200000003,0; 0.25,
              0; 0.300000012,0; 0.349999994,0; 0.400000006,0; 0.449999988,0;
              0.5,0.013286441; 0.550000012,0.013286441; 0.600000024,0.013286441;
              0.649999976,0.013286441; 0.699999988,0.013286441; 0.75,
              0.013286441; 0.800000012,0.013286441; 0.850000024,0.013286441;
              0.899999976,0.013286441; 0.949999988,0.013286441; 1,0.007342828;
              1.049999952,0.007342828; 1.100000024,0.007342828; 1.149999976,
              0.007342828; 1.200000048,0.007342828; 1.25,0.007342828;
              1.299999952,0.007342828; 1.350000024,0.007342828; 1.399999976,
              0.007342828; 1.450000048,0.007342828; 1.5,0.008311774;
              1.549999952,0.008311774; 1.600000024,0.008311774; 1.649999976,
              0.008311774; 1.700000048,0.008311774; 1.75,0.008311774;
              1.799999952,0.008311774; 1.850000024,0.008311774; 1.899999976,
              0.008311774; 1.950000048,0.008311774; 2,0.007650253; 2.049999952,
              0.007650253; 2.099999905,0.007650253; 2.150000095,0.007650253;
              2.200000048,0.007650253; 2.25,0.007650253; 2.299999952,
              0.007650253; 2.349999905,0.007650253; 2.400000095,0.007650253;
              2.450000048,0.007650253; 2.5,0.007355643; 2.549999952,0.007355643;
              2.599999905,0.007355643; 2.650000095,0.007355643; 2.700000048,
              0.007355643; 2.75,0.007355643; 2.799999952,0.007355643;
              2.849999905,0.007355643; 2.900000095,0.007355643; 2.950000048,
              0.007355643; 3,0.007522727; 3.049999952,0.007522727; 3.099999905,
              0.007522727; 3.150000095,0.007522727; 3.200000048,0.007522727;
              3.25,0.007522727; 3.299999952,0.007522727; 3.349999905,
              0.007522727; 3.400000095,0.007522727; 3.450000048,0.007522727;
              3.5,0.007860523; 3.549999952,0.007860523; 3.599999905,0.007860523;
              3.650000095,0.007860523; 3.700000048,0.007860523; 3.75,
              0.007860523; 3.799999952,0.007860523; 3.849999905,0.007860523;
              3.900000095,0.007860523; 3.950000048,0.007860523; 4,0.007787525;
              4.050000191,0.007787525; 4.099999905,0.007787525; 4.150000095,
              0.007787525; 4.199999809,0.007787525; 4.25,0.007787525;
              4.300000191,0.007787525; 4.349999905,0.007787525; 4.400000095,
              0.007787525; 4.449999809,0.007787525; 4.5,0.008016131;
              4.550000191,0.008016131; 4.599999905,0.008016131; 4.650000095,
              0.008016131; 4.699999809,0.008016131; 4.75,0.008016131;
              4.800000191,0.008016131; 4.849999905,0.008016131; 4.900000095,
              0.008016131; 4.949999809,0.008016131; 5,0.008155288; 5.050000191,
              0.008155288; 5.099999905,0.008155288; 5.150000095,0.008155288;
              5.199999809,0.008155288; 5.25,0.008155288; 5.300000191,
              0.008155288; 5.349999905,0.008155288; 5.400000095,0.008155288;
              5.449999809,0.008155288; 5.5,0.008235336; 5.550000191,0.008235336;
              5.599999905,0.008235336; 5.650000095,0.008235336; 5.699999809,
              0.008235336; 5.75,0.008235336; 5.800000191,0.008235336;
              5.849999905,0.008235336; 5.900000095,0.008235336; 5.949999809,
              0.008235336; 6,0.008483801; 6.050000191,0.008483801; 6.099999905,
              0.008483801; 6.150000095,0.008483801; 6.199999809,0.008483801;
              6.25,0.008483801; 6.300000191,0.008483801; 6.349999905,
              0.008483801; 6.400000095,0.008483801; 6.449999809,0.008483801;
              6.5,0.008681627; 6.550000191,0.008681627; 6.599999905,0.008681627;
              6.650000095,0.008681627; 6.699999809,0.008681627; 6.75,
              0.008681627; 6.800000191,0.008681627; 6.849999905,0.008681627;
              6.900000095,0.008681627; 6.949999809,0.008681627; 7,0.008986911;
              7.050000191,0.008986911; 7.099999905,0.008986911; 7.150000095,
              0.008986911; 7.199999809,0.008986911; 7.25,0.008986911;
              7.300000191,0.008986911; 7.349999905,0.008986911; 7.400000095,
              0.008986911; 7.449999809,0.008986911; 7.5,0.008678786;
              7.550000191,0.008678786; 7.599999905,0.008678786; 7.650000095,
              0.008678786; 7.699999809,0.008678786; 7.75,0.008678786;
              7.800000191,0.008678786; 7.849999905,0.008678786; 7.900000095,
              0.008678786; 7.949999809,0.008678786; 8,0.008660382; 8.050000191,
              0.008660382; 8.100000381,0.008660382; 8.149999619,0.008660382;
              8.199999809,0.008660382; 8.25,0.008660382; 8.300000191,
              0.008660382; 8.350000381,0.008660382; 8.399999619,0.008660382;
              8.449999809,0.008660382; 8.5,0.008575299; 8.550000191,0.008575299;
              8.600000381,0.008575299; 8.649999619,0.008575299; 8.699999809,
              0.008575299; 8.75,0.008575299; 8.800000191,0.008575299;
              8.850000381,0.008575299; 8.899999619,0.008575299; 8.949999809,
              0.008575299; 9,0.008640343; 9.050000191,0.008640343; 9.100000381,
              0.008640343; 9.149999619,0.008640343; 9.199999809,0.008640343;
              9.25,0.008640343; 9.300000191,0.008640343; 9.350000381,
              0.008640343; 9.399999619,0.008640343; 9.449999809,0.008640343;
              9.5,0.008491599; 9.550000191,0.008491599; 9.600000381,0.008491599;
              9.649999619,0.008491599; 9.699999809,0.008491599; 9.75,
              0.008491599; 9.800000191,0.008491599; 9.850000381,0.008491599;
              9.899999619,0.008491599; 9.949999809,0.008491599; 10,0.008362272;
              10.05000019,0.008362272; 10.10000038,0.008362272; 10.14999962,
              0.008362272; 10.19999981,0.008362272; 10.25,0.008362272;
              10.30000019,0.008362272; 10.35000038,0.008362272; 10.39999962,
              0.008362272; 10.44999981,0.008362272; 10.5,0.008292021;
              10.55000019,0.008292021; 10.60000038,0.008292021; 10.64999962,
              0.008292021; 10.69999981,0.008292021; 10.75,0.008292021;
              10.80000019,0.008292021; 10.85000038,0.008292021; 10.89999962,
              0.008292021; 10.94999981,0.008292021; 11,0.008401381; 11.05000019,
              0.008401381; 11.10000038,0.008401381; 11.14999962,0.008401381;
              11.19999981,0.008401381; 11.25,0.008401381; 11.30000019,
              0.008401381; 11.35000038,0.008401381; 11.39999962,0.008401381;
              11.44999981,0.008401381; 11.5,0.008774977; 11.55000019,
              0.008774977; 11.60000038,0.008774977; 11.64999962,0.008774977;
              11.69999981,0.008774977; 11.75,0.008774977; 11.80000019,
              0.008774977; 11.85000038,0.008774977; 11.89999962,0.008774977;
              11.94999981,0.008774977; 12,0.00872104; 12.05000019,0.00872104;
              12.10000038,0.00872104; 12.14999962,0.00872104; 12.19999981,
              0.00872104; 12.25,0.00872104; 12.30000019,0.00872104; 12.35000038,
              0.00872104; 12.39999962,0.00872104; 12.44999981,0.00872104; 12.5,
              0.008606014; 12.55000019,0.008606014; 12.60000038,0.008606014;
              12.64999962,0.008606014; 12.69999981,0.008606014; 12.75,
              0.008606014; 12.80000019,0.008606014; 12.85000038,0.008606014;
              12.89999962,0.008606014; 12.94999981,0.008606014; 13,0.008627537;
              13.05000019,0.008627537; 13.10000038,0.008627537; 13.14999962,
              0.008627537; 13.19999981,0.008627537; 13.25,0.008627537;
              13.30000019,0.008627537; 13.35000038,0.008627537; 13.39999962,
              0.008627537; 13.44999981,0.008627537; 13.5,0.008893947;
              13.55000019,0.008893947; 13.60000038,0.008893947; 13.64999962,
              0.008893947; 13.69999981,0.008893947; 13.75,0.008893947;
              13.80000019,0.008893947; 13.85000038,0.008893947; 13.89999962,
              0.008893947; 13.94999981,0.008893947; 14,0.00851211; 14.05000019,
              0.00851211; 14.10000038,0.00851211; 14.14999962,0.00851211;
              14.19999981,0.00851211; 14.25,0.00851211; 14.30000019,0.00851211;
              14.35000038,0.00851211; 14.39999962,0.00851211; 14.44999981,
              0.00851211; 14.5,0.008355474; 14.55000019,0.008355474;
              14.60000038,0.008355474; 14.64999962,0.008355474; 14.69999981,
              0.008355474; 14.75,0.008355474; 14.80000019,0.008355474;
              14.85000038,0.008355474; 14.89999962,0.008355474; 14.94999981,
              0.008355474; 15,0.008497255; 15.05000019,0.008497255; 15.10000038,
              0.008497255; 15.14999962,0.008497255; 15.19999981,0.008497255;
              15.25,0.008497255; 15.30000019,0.008497255; 15.35000038,
              0.008497255; 15.39999962,0.008497255; 15.44999981,0.008497255;
              15.5,0.008171031; 15.55000019,0.008171031; 15.60000038,
              0.008171031; 15.64999962,0.008171031; 15.69999981,0.008171031;
              15.75,0.008171031; 15.80000019,0.008171031; 15.85000038,
              0.008171031; 15.89999962,0.008171031; 15.94999981,0.008171031; 16,
              0.008496992; 16.04999924,0.008496992; 16.10000038,0.008496992;
              16.14999962,0.008496992; 16.20000076,0.008496992; 16.25,
              0.008496992; 16.29999924,0.008496992; 16.35000038,0.008496992;
              16.39999962,0.008496992; 16.45000076,0.008496992; 16.5,
              0.008559971; 16.54999924,0.008559971; 16.60000038,0.008559971;
              16.64999962,0.008559971; 16.70000076,0.008559971; 16.75,
              0.008559971; 16.79999924,0.008559971; 16.85000038,0.008559971;
              16.89999962,0.008559971; 16.95000076,0.008559971; 17,0.008510846;
              17.04999924,0.008510846; 17.10000038,0.008510846; 17.14999962,
              0.008510846; 17.20000076,0.008510846; 17.25,0.008510846;
              17.29999924,0.008510846; 17.35000038,0.008510846; 17.39999962,
              0.008510846; 17.45000076,0.008510846; 17.5,0.008784083;
              17.54999924,0.008784083; 17.60000038,0.008784083; 17.64999962,
              0.008784083; 17.70000076,0.008784083; 17.75,0.008784083;
              17.79999924,0.008784083; 17.85000038,0.008784083; 17.89999962,
              0.008784083; 17.95000076,0.008784083; 18,0.008654389; 18.04999924,
              0.008654389; 18.10000038,0.008654389; 18.14999962,0.008654389;
              18.20000076,0.008654389; 18.25,0.008654389; 18.29999924,
              0.008654389; 18.35000038,0.008654389; 18.39999962,0.008654389;
              18.45000076,0.008654389; 18.5,0.008451059; 18.54999924,
              0.008451059; 18.60000038,0.008451059; 18.64999962,0.008451059;
              18.70000076,0.008451059; 18.75,0.008451059; 18.79999924,
              0.008451059; 18.85000038,0.008451059; 18.89999962,0.008451059;
              18.95000076,0.008451059; 19,0.008867701; 19.04999924,0.008867701;
              19.10000038,0.008867701; 19.14999962,0.008867701; 19.20000076,
              0.008867701; 19.25,0.008867701; 19.29999924,0.008867701;
              19.35000038,0.008867701; 19.39999962,0.008867701; 19.45000076,
              0.008867701; 19.5,0.008638144; 19.54999924,0.008638144;
              19.60000038,0.008638144; 19.64999962,0.008638144; 19.70000076,
              0.008638144; 19.75,0.008638144; 19.79999924,0.008638144;
              19.85000038,0.008638144; 19.89999962,0.008638144; 19.95000076,
              0.008638144; 20,0.008705883; 20.04999924,0.008705883; 20.10000038,
              0.008705883; 20.14999962,0.008705883; 20.20000076,0.008705883;
              20.25,0.008705883; 20.29999924,0.008705883; 20.35000038,
              0.008705883; 20.39999962,0.008705883; 20.45000076,0.008705883;
              20.5,0.008555175; 20.54999924,0.008555175; 20.60000038,
              0.008555175; 20.64999962,0.008555175; 20.70000076,0.008555175;
              20.75,0.008555175; 20.79999924,0.008555175; 20.85000038,
              0.008555175; 20.89999962,0.008555175; 20.95000076,0.008555175; 21,
              0.008697053; 21.04999924,0.008697053; 21.10000038,0.008697053;
              21.14999962,0.008697053; 21.20000076,0.008697053; 21.25,
              0.008697053; 21.29999924,0.008697053; 21.35000038,0.008697053;
              21.39999962,0.008697053; 21.45000076,0.008697053; 21.5,
              0.008607334; 21.54999924,0.008607334; 21.60000038,0.008607334;
              21.64999962,0.008607334; 21.70000076,0.008607334; 21.75,
              0.008607334; 21.79999924,0.008607334; 21.85000038,0.008607334;
              21.89999962,0.008607334; 21.95000076,0.008607334; 22,0.009137741;
              22.04999924,0.009137741; 22.10000038,0.009137741; 22.14999962,
              0.009137741; 22.20000076,0.009137741; 22.25,0.009137741;
              22.29999924,0.009137741; 22.35000038,0.009137741; 22.39999962,
              0.009137741; 22.45000076,0.009137741; 22.5,0.009380125;
              22.54999924,0.009380125; 22.60000038,0.009380125; 22.64999962,
              0.009380125; 22.70000076,0.009380125; 22.75,0.009380125;
              22.79999924,0.009380125; 22.85000038,0.009380125; 22.89999962,
              0.009380125; 22.95000076,0.009380125; 23,0.00864288; 23.04999924,
              0.00864288; 23.10000038,0.00864288; 23.14999962,0.00864288;
              23.20000076,0.00864288; 23.25,0.00864288; 23.29999924,0.00864288;
              23.35000038,0.00864288; 23.39999962,0.00864288; 23.45000076,
              0.00864288; 23.5,0.008914943; 23.54999924,0.008914943;
              23.60000038,0.008914943; 23.64999962,0.008914943; 23.70000076,
              0.008914943; 23.75,0.008914943; 23.79999924,0.008914943;
              23.85000038,0.008914943; 23.89999962,0.008914943; 23.95000076,
              0.008914943; 24,0.008585902; 24.04999924,0.008585902; 24.10000038,
              0.008585902; 24.14999962,0.008585902; 24.20000076,0.008585902;
              24.25,0.008585902; 24.29999924,0.008585902; 24.35000038,
              0.008585902; 24.39999962,0.008585902; 24.45000076,0.008585902;
              24.5,0.008598457; 24.54999924,0.008598457; 24.60000038,
              0.008598457; 24.64999962,0.008598457; 24.70000076,0.008598457;
              24.75,0.008598457; 24.79999924,0.008598457; 24.85000038,
              0.008598457; 24.89999962,0.008598457; 24.95000076,0.008598457],
                                   smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-120},{-98,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-97,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-97,-10},
                {-50,-10},{-50,4},{-42,4}},color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-97,-38},
                {-50,-38},{-50,-50},{-42,-50}},
                                           color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-97,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-97,
                -110},{-50,-110},{-50,-96},{-42,-96}},
                                                 color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_v3_table_MPC_VALIDATION;

      model MPCAppliedEnergyOriginal_v3_FILTERED
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.25,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
                  Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(
          enableNoise=true,
          useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-44,102},{-24,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0.01,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0005, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{64,-18},{76,-6}})));
        Modelica.Blocks.Sources.RealExpression OUT1_pre(y=G2.gen.w)
          annotation (Placement(transformation(extent={{140,100},{160,120}})));
        Modelica.Blocks.Sources.RealExpression OUT2_pre(y=G2.gen.delta)
          annotation (Placement(transformation(extent={{140,80},{160,100}})));
        Modelica.Blocks.Sources.RealExpression OUT3_pre(y=G2.gen.Epq)
          annotation (Placement(transformation(extent={{140,60},{160,80}})));
        Modelica.Blocks.Sources.RealExpression OUT4_pre(y=G2.gen.PSIkd)
          annotation (Placement(transformation(extent={{140,40},{160,60}})));
        Modelica.Blocks.Sources.RealExpression OUT5_pre(y=G2.gen.PSIppq)
          annotation (Placement(transformation(extent={{140,20},{160,40}})));
        Modelica.Blocks.Sources.RealExpression OUT6_pre(y=G2.sEXSMPC.simpleLagLim.state)
          annotation (Placement(transformation(extent={{140,0},{160,20}})));
        Modelica.Blocks.Sources.RealExpression OUT7_pre(y=G2.sEXSMPC.leadLag.TF.x_scaled[1])
          annotation (Placement(transformation(extent={{140,-20},{160,0}})));
        Modelica.Blocks.Sources.RealExpression OUT8_pre(y=G2.gASTMPC.simpleLagLim.state)
          annotation (Placement(transformation(extent={{140,-40},{160,-20}})));
        Modelica.Blocks.Sources.RealExpression OUT9_pre(y=G2.gASTMPC.simpleLag.state)
          annotation (Placement(transformation(extent={{140,-60},{160,-40}})));
        Modelica.Blocks.Sources.RealExpression OUT10_pre(y=G2.gASTMPC.simpleLag1.state)
          annotation (Placement(transformation(extent={{140,-80},{160,-60}})));
        Modelica.Blocks.Sources.RealExpression OUT11_pre(y=Bus6.v)
          annotation (Placement(transformation(extent={{140,-100},{160,-80}})));
        Modelica.Blocks.Sources.RealExpression OUT12_pre(y=PV.rEGCA1_1.Pgen)
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));
        Modelica.Blocks.Sources.RealExpression OUT13_pre(y=PV.rEGCA1_1.Qgen)
          annotation (Placement(transformation(extent={{140,-140},{160,-120}})));
        Modelica.Blocks.Sources.RealExpression OUT14_pre(y=PV.rEGCA1_1.p.ir)
          annotation (Placement(transformation(extent={{260,100},{280,120}})));
        Modelica.Blocks.Sources.RealExpression OUT15_pre(y=PV.rEGCA1_1.p.ii)
          annotation (Placement(transformation(extent={{260,80},{280,100}})));
        Modelica.Blocks.Sources.RealExpression OUT16_pre(y=Bus8.v)
          annotation (Placement(transformation(extent={{260,60},{280,80}})));
        Modelica.Blocks.Sources.RealExpression OUT17_pre(y=BESS.rEGCA1_1.Pgen)
          annotation (Placement(transformation(extent={{260,40},{280,60}})));
        Modelica.Blocks.Sources.RealExpression OUT18_pre(y=BESS.rEGCA1_1.Qgen)
          annotation (Placement(transformation(extent={{260,20},{280,40}})));
        Modelica.Blocks.Sources.RealExpression OUT19_pre(y=BESS.rEGCA1_1.p.ir)
          annotation (Placement(transformation(extent={{260,0},{280,20}})));
        Modelica.Blocks.Sources.RealExpression OUT20_pre(y=BESS.rEGCA1_1.p.ii)
          annotation (Placement(transformation(extent={{260,-20},{280,0}})));
        Modelica.Blocks.Sources.RealExpression OUT21_pre(y=Bus10.v)
          annotation (Placement(transformation(extent={{260,-40},{280,-20}})));
        Modelica.Blocks.Sources.RealExpression OUT22_pre(y=Load2.P)
          annotation (Placement(transformation(extent={{260,-60},{280,-40}})));
        Modelica.Blocks.Sources.RealExpression OUT23_pre(y=Load2.Q)
          annotation (Placement(transformation(extent={{260,-80},{280,-60}})));
        Modelica.Blocks.Sources.RealExpression OUT24_pre(y=Bus5.v)
          annotation (Placement(transformation(extent={{260,-100},{280,-80}})));
        Modelica.Blocks.Sources.RealExpression OUT25_pre(y=Bus5.angle)
          annotation (Placement(transformation(extent={{260,-120},{280,-100}})));
        NonElectrical.Continuous.SimpleLag simpleLag(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.bus.V5)
          annotation (Placement(transformation(extent={{300,-100},{320,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24 "Connector of Real output signal"
          annotation (Placement(transformation(extent={{340,-100},{360,-80}})));
        NonElectrical.Continuous.SimpleLag simpleLag1(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.bus.A5)
          annotation (Placement(transformation(extent={{300,-120},{320,-100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25 "Connector of Real output signal"
          annotation (Placement(transformation(extent={{340,-120},{360,-100}})));
        NonElectrical.Continuous.SimpleLag simpleLag2(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.loads.QL2/100000000)
          annotation (Placement(transformation(extent={{300,-80},{320,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23 "Connector of Real output signal"
          annotation (Placement(transformation(extent={{340,-80},{360,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{220,100},{240,120}})));
        NonElectrical.Continuous.SimpleLag simpleLag3(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.bus.V10)
          annotation (Placement(transformation(extent={{300,-40},{320,-20}})));
        NonElectrical.Continuous.SimpleLag simpleLag4(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.loads.PL2/100000000)
          annotation (Placement(transformation(extent={{300,-60},{320,-40}})));
        NonElectrical.Continuous.SimpleLag simpleLag5(
          K=1,
          T=0.1,
          y_start=0.02)
          annotation (Placement(transformation(extent={{300,-20},{320,0}})));
        NonElectrical.Continuous.SimpleLag simpleLag6(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.machines.QBESS/100000000)
          annotation (Placement(transformation(extent={{300,22},{320,42}})));
        NonElectrical.Continuous.SimpleLag simpleLag7(
          K=1,
          T=0.1,
          y_start=0.01)
          annotation (Placement(transformation(extent={{300,0},{320,20}})));
        NonElectrical.Continuous.SimpleLag simpleLag8(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.machines.PBESS/100000000)
          annotation (Placement(transformation(extent={{300,42},{320,62}})));
        NonElectrical.Continuous.SimpleLag simpleLag9(
          K=1,
          T=0.1,
          y_start=0.0089)
          annotation (Placement(transformation(extent={{300,82},{320,102}})));
        NonElectrical.Continuous.SimpleLag simpleLag10(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.bus.V8)
          annotation (Placement(transformation(extent={{300,62},{320,82}})));
        NonElectrical.Continuous.SimpleLag simpleLag11(
          K=1,
          T=0.1,
          y_start=-0.0199)
          annotation (Placement(transformation(extent={{300,102},{320,122}})));
        NonElectrical.Continuous.SimpleLag simpleLag12(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.bus.V6)
          annotation (Placement(transformation(extent={{180,-100},{200,-80}})));
        NonElectrical.Continuous.SimpleLag simpleLag13(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.machines.PPV/100000000)
          annotation (Placement(transformation(extent={{180,-120},{200,-100}})));
        NonElectrical.Continuous.SimpleLag simpleLag14(
          K=1,
          T=0.1,
          y_start=0.3)
          annotation (Placement(transformation(extent={{180,-80},{200,-60}})));
        NonElectrical.Continuous.SimpleLag simpleLag15(
          K=1,
          T=0.1,
          y_start=0.3)
          annotation (Placement(transformation(extent={{180,-40},{200,-20}})));
        NonElectrical.Continuous.SimpleLag simpleLag16(
          K=1,
          T=0.1,
          y_start=0.3)
          annotation (Placement(transformation(extent={{180,-60},{200,-40}})));
        NonElectrical.Continuous.SimpleLag simpleLag17(
          K=1,
          T=0.1,
          y_start=0.024)
          annotation (Placement(transformation(extent={{180,-20},{200,0}})));
        NonElectrical.Continuous.SimpleLag simpleLag18(
          K=1,
          T=0.1,
          y_start=0.417)
          annotation (Placement(transformation(extent={{180,20},{200,40}})));
        NonElectrical.Continuous.SimpleLag simpleLag19(
          K=1,
          T=0.1,
          y_start=1.187)
          annotation (Placement(transformation(extent={{180,0},{200,20}})));
        NonElectrical.Continuous.SimpleLag simpleLag20(
          K=1,
          T=0.1,
          y_start=0.908)
          annotation (Placement(transformation(extent={{180,40},{200,60}})));
        NonElectrical.Continuous.SimpleLag simpleLag21(
          K=1,
          T=0.1,
          y_start=0.4735)
          annotation (Placement(transformation(extent={{180,80},{200,100}})));
        NonElectrical.Continuous.SimpleLag simpleLag22(
          K=1,
          T=0.1,
          y_start=0.925)
          annotation (Placement(transformation(extent={{180,60},{200,80}})));
        NonElectrical.Continuous.SimpleLag simpleLag23(
          K=1,
          T=0.1,
          y_start=G2.gen.w0)
          annotation (Placement(transformation(extent={{180,100},{200,120}})));
        NonElectrical.Continuous.SimpleLag simpleLag24(
          K=1,
          T=0.1,
          y_start=powerFlow.powerflow.machines.QPV/100000000)
          annotation (Placement(transformation(extent={{180,-140},{200,-120}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{220,80},{240,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{220,60},{240,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{220,40},{240,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{220,20},{240,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{220,0},{240,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{220,-20},{240,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{220,-40},{240,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{220,-60},{240,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{220,-80},{240,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{220,-100},{240,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{220,-120},{240,-100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{220,-140},{240,-120}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{340,100},{360,120}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{340,80},{360,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{340,60},{360,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{340,40},{360,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{340,20},{360,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{340,0},{360,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{340,-20},{360,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{340,-40},{360,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{340,-60},{360,-40}})));
      equation

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(add.u2, sine.y) annotation (Line(points={{83.2,-16.4},{83.2,-22},
                {80.5,-22},{80.5,-31}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{76.54,
                -12.06},{79.87,-12.06},{79.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(simpleLag.y, OUT24)
          annotation (Line(points={{321,-90},{350,-90}}, color={0,0,127}));
        connect(OUT24_pre.y, simpleLag.u)
          annotation (Line(points={{281,-90},{298,-90}}, color={0,0,127}));
        connect(OUT25_pre.y, simpleLag1.u)
          annotation (Line(points={{281,-110},{298,-110}}, color={0,0,127}));
        connect(simpleLag1.y, OUT25)
          annotation (Line(points={{321,-110},{350,-110}}, color={0,0,127}));
        connect(OUT23_pre.y, simpleLag2.u)
          annotation (Line(points={{281,-70},{298,-70}}, color={0,0,127}));
        connect(simpleLag2.y, OUT23)
          annotation (Line(points={{321,-70},{350,-70}}, color={0,0,127}));
        connect(OUT1_pre.y, simpleLag23.u)
          annotation (Line(points={{161,110},{178,110}}, color={0,0,127}));
        connect(OUT2_pre.y, simpleLag21.u)
          annotation (Line(points={{161,90},{178,90}}, color={0,0,127}));
        connect(OUT3_pre.y, simpleLag22.u)
          annotation (Line(points={{161,70},{178,70}}, color={0,0,127}));
        connect(OUT4_pre.y, simpleLag20.u)
          annotation (Line(points={{161,50},{178,50}}, color={0,0,127}));
        connect(OUT5_pre.y, simpleLag18.u)
          annotation (Line(points={{161,30},{178,30}}, color={0,0,127}));
        connect(OUT6_pre.y, simpleLag19.u)
          annotation (Line(points={{161,10},{178,10}}, color={0,0,127}));
        connect(OUT7_pre.y, simpleLag17.u)
          annotation (Line(points={{161,-10},{178,-10}}, color={0,0,127}));
        connect(OUT8_pre.y, simpleLag15.u)
          annotation (Line(points={{161,-30},{178,-30}}, color={0,0,127}));
        connect(OUT9_pre.y, simpleLag16.u)
          annotation (Line(points={{161,-50},{178,-50}}, color={0,0,127}));
        connect(OUT10_pre.y, simpleLag14.u)
          annotation (Line(points={{161,-70},{178,-70}}, color={0,0,127}));
        connect(OUT11_pre.y, simpleLag12.u)
          annotation (Line(points={{161,-90},{178,-90}}, color={0,0,127}));
        connect(OUT12_pre.y, simpleLag13.u)
          annotation (Line(points={{161,-110},{178,-110}}, color={0,0,127}));
        connect(simpleLag23.y, OUT1)
          annotation (Line(points={{201,110},{230,110}}, color={0,0,127}));
        connect(simpleLag21.y, OUT2)
          annotation (Line(points={{201,90},{230,90}}, color={0,0,127}));
        connect(simpleLag22.y, OUT3)
          annotation (Line(points={{201,70},{230,70}}, color={0,0,127}));
        connect(simpleLag20.y, OUT4)
          annotation (Line(points={{201,50},{230,50}}, color={0,0,127}));
        connect(simpleLag18.y, OUT5)
          annotation (Line(points={{201,30},{230,30}}, color={0,0,127}));
        connect(simpleLag19.y, OUT6)
          annotation (Line(points={{201,10},{230,10}}, color={0,0,127}));
        connect(simpleLag17.y, OUT7)
          annotation (Line(points={{201,-10},{230,-10}}, color={0,0,127}));
        connect(simpleLag15.y, OUT8)
          annotation (Line(points={{201,-30},{230,-30}}, color={0,0,127}));
        connect(simpleLag16.y, OUT9)
          annotation (Line(points={{201,-50},{230,-50}}, color={0,0,127}));
        connect(simpleLag14.y, OUT10)
          annotation (Line(points={{201,-70},{230,-70}}, color={0,0,127}));
        connect(simpleLag12.y, OUT11)
          annotation (Line(points={{201,-90},{230,-90}}, color={0,0,127}));
        connect(simpleLag13.y, OUT12)
          annotation (Line(points={{201,-110},{230,-110}}, color={0,0,127}));
        connect(simpleLag24.y, OUT13)
          annotation (Line(points={{201,-130},{230,-130}}, color={0,0,127}));
        connect(OUT14_pre.y, simpleLag11.u)
          annotation (Line(points={{281,110},{290,110},{290,112},{298,112}},
                                                         color={0,0,127}));
        connect(OUT15_pre.y, simpleLag9.u)
          annotation (Line(points={{281,90},{290,90},{290,92},{298,92}},
                                                       color={0,0,127}));
        connect(OUT16_pre.y, simpleLag10.u)
          annotation (Line(points={{281,70},{290,70},{290,72},{298,72}},
                                                       color={0,0,127}));
        connect(OUT17_pre.y, simpleLag8.u)
          annotation (Line(points={{281,50},{290,50},{290,52},{298,52}},
                                                       color={0,0,127}));
        connect(OUT18_pre.y, simpleLag6.u)
          annotation (Line(points={{281,30},{290,30},{290,32},{298,32}},
                                                       color={0,0,127}));
        connect(OUT19_pre.y, simpleLag7.u)
          annotation (Line(points={{281,10},{298,10}}, color={0,0,127}));
        connect(OUT20_pre.y, simpleLag5.u)
          annotation (Line(points={{281,-10},{298,-10}}, color={0,0,127}));
        connect(OUT21_pre.y, simpleLag3.u)
          annotation (Line(points={{281,-30},{298,-30}}, color={0,0,127}));
        connect(OUT22_pre.y, simpleLag4.u)
          annotation (Line(points={{281,-50},{298,-50}}, color={0,0,127}));
        connect(simpleLag11.y, OUT14)
          annotation (Line(points={{321,112},{336,112},{336,110},{350,110}},
                                                         color={0,0,127}));
        connect(simpleLag9.y, OUT15)
          annotation (Line(points={{321,92},{336,92},{336,90},{350,90}},
                                                       color={0,0,127}));
        connect(simpleLag10.y, OUT16)
          annotation (Line(points={{321,72},{336,72},{336,70},{350,70}},
                                                       color={0,0,127}));
        connect(simpleLag8.y, OUT17)
          annotation (Line(points={{321,52},{336,52},{336,50},{350,50}},
                                                       color={0,0,127}));
        connect(simpleLag6.y, OUT18)
          annotation (Line(points={{321,32},{336,32},{336,30},{350,30}},
                                                       color={0,0,127}));
        connect(simpleLag7.y, OUT19)
          annotation (Line(points={{321,10},{350,10}}, color={0,0,127}));
        connect(simpleLag5.y, OUT20)
          annotation (Line(points={{321,-10},{350,-10}}, color={0,0,127}));
        connect(simpleLag3.y, OUT21)
          annotation (Line(points={{321,-30},{350,-30}}, color={0,0,127}));
        connect(simpleLag4.y, OUT22)
          annotation (Line(points={{321,-50},{350,-50}}, color={0,0,127}));
        connect(OUT13_pre.y, simpleLag24.u)
          annotation (Line(points={{161,-130},{178,-130}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_v3_FILTERED;

      model MPCAppliedEnergyOriginal_v3_table2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.25,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=10000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0005, samplePeriod=0.5)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.05,
              0; 0.1,0; 0.15,0; 0.2,0; 0.25,0; 0.3,0; 0.35,0; 0.4,0; 0.45,0;
              0.5,0.01; 0.55,0.01; 0.6,0.01; 0.65,0.01; 0.7,0.01; 0.75,0.01;
              0.8,0.01; 0.85,0.01; 0.9,0.01; 0.95,0.01; 1,-1.04e-17; 1.05,-1.04e-17;
              1.1,-1.04e-17; 1.15,-1.04e-17; 1.2,-1.04e-17; 1.25,-1.04e-17; 1.3,
              -1.04e-17; 1.35,-1.04e-17; 1.4,-1.04e-17; 1.45,-1.04e-17; 1.5,
              0.004488376; 1.55,0.004488376; 1.6,0.004488376; 1.65,0.004488376;
              1.7,0.004488376; 1.75,0.004488376; 1.8,0.004488376; 1.85,
              0.004488376; 1.9,0.004488376; 1.95,0.004488376; 2,-0.002329448;
              2.05,-0.002329448; 2.1,-0.002329448; 2.15,-0.002329448; 2.2,-0.002329448;
              2.25,-0.002329448; 2.3,-0.002329448; 2.35,-0.002329448; 2.4,-0.002329448;
              2.45,-0.002329448; 2.5,-0.012329448; 2.55,-0.012329448; 2.6,-0.012329448;
              2.65,-0.012329448; 2.7,-0.012329448; 2.75,-0.012329448; 2.8,-0.012329448;
              2.85,-0.012329448; 2.9,-0.012329448; 2.95,-0.012329448; 3,-0.014514317;
              3.05,-0.014514317; 3.1,-0.014514317; 3.15,-0.014514317; 3.2,-0.014514317;
              3.25,-0.014514317; 3.3,-0.014514317; 3.35,-0.014514317; 3.4,-0.014514317;
              3.45,-0.014514317; 3.5,-0.010585831; 3.55,-0.010585831; 3.6,-0.010585831;
              3.65,-0.010585831; 3.7,-0.010585831; 3.75,-0.010585831; 3.8,-0.010585831;
              3.85,-0.010585831; 3.9,-0.010585831; 3.95,-0.010585831; 4,-0.006506519;
              4.05,-0.006506519; 4.1,-0.006506519; 4.15,-0.006506519; 4.2,-0.006506519;
              4.25,-0.006506519; 4.3,-0.006506519; 4.35,-0.006506519; 4.4,-0.006506519;
              4.45,-0.006506519; 4.5,-0.006398531; 4.55,-0.006398531; 4.6,-0.006398531;
              4.65,-0.006398531; 4.7,-0.006398531; 4.75,-0.006398531; 4.8,-0.006398531;
              4.85,-0.006398531; 4.9,-0.006398531; 4.95,-0.006398531; 5,-0.006293446;
              5.05,-0.006293446; 5.1,-0.006293446; 5.15,-0.006293446; 5.2,-0.006293446;
              5.25,-0.006293446; 5.3,-0.006293446; 5.35,-0.006293446; 5.4,-0.006293446;
              5.45,-0.006293446; 5.5,-0.005793967; 5.55,-0.005793967; 5.6,-0.005793967;
              5.65,-0.005793967; 5.7,-0.005793967; 5.75,-0.005793967; 5.8,-0.005793967;
              5.85,-0.005793967; 5.9,-0.005793967; 5.95,-0.005793967; 6,-0.00728154;
              6.05,-0.00728154; 6.1,-0.00728154; 6.15,-0.00728154; 6.2,-0.00728154;
              6.25,-0.00728154; 6.3,-0.00728154; 6.35,-0.00728154; 6.4,-0.00728154;
              6.45,-0.00728154; 6.5,-0.007750384; 6.55,-0.007750384; 6.6,-0.007750384;
              6.65,-0.007750384; 6.7,-0.007750384; 6.75,-0.007750384; 6.8,-0.007750384;
              6.85,-0.007750384; 6.9,-0.007750384; 6.95,-0.007750384; 7,-0.00728214;
              7.05,-0.00728214; 7.1,-0.00728214; 7.15,-0.00728214; 7.2,-0.00728214;
              7.25,-0.00728214; 7.3,-0.00728214; 7.35,-0.00728214; 7.4,-0.00728214;
              7.45,-0.00728214; 7.5,-0.006937751; 7.55,-0.006937751; 7.6,-0.006937751;
              7.65,-0.006937751; 7.7,-0.006937751; 7.75,-0.006937751; 7.8,-0.006937751;
              7.85,-0.006937751; 7.9,-0.006937751; 7.95,-0.006937751; 8,-0.007068493;
              8.05,-0.007068493; 8.1,-0.007068493; 8.15,-0.007068493; 8.2,-0.007068493;
              8.25,-0.007068493; 8.3,-0.007068493; 8.35,-0.007068493; 8.4,-0.007068493;
              8.45,-0.007068493; 8.5,-0.006849029; 8.55,-0.006849029; 8.6,-0.006849029;
              8.65,-0.006849029; 8.7,-0.006849029; 8.75,-0.006849029; 8.8,-0.006849029;
              8.85,-0.006849029; 8.9,-0.006849029; 8.95,-0.006849029; 9,-0.006733866;
              9.05,-0.006733866; 9.1,-0.006733866; 9.15,-0.006733866; 9.2,-0.006733866;
              9.25,-0.006733866; 9.3,-0.006733866; 9.35,-0.006733866; 9.4,-0.006733866;
              9.45,-0.006733866; 9.5,-0.006920145; 9.55,-0.006920145; 9.6,-0.006920145;
              9.65,-0.006920145; 9.7,-0.006920145; 9.75,-0.006920145; 9.8,-0.006920145;
              9.85,-0.006920145; 9.9,-0.006920145; 9.95,-0.006920145; 10,-0.006967495;
              10.05,-0.006967495; 10.1,-0.006967495; 10.15,-0.006967495; 10.2,-0.006967495;
              10.25,-0.006967495; 10.3,-0.006967495; 10.35,-0.006967495; 10.4,-0.006967495;
              10.45,-0.006967495; 10.5,-0.007319607; 10.55,-0.007319607; 10.6,-0.007319607;
              10.65,-0.007319607; 10.7,-0.007319607; 10.75,-0.007319607; 10.8,-0.007319607;
              10.85,-0.007319607; 10.9,-0.007319607; 10.95,-0.007319607; 11,-0.006241438;
              11.05,-0.006241438; 11.1,-0.006241438; 11.15,-0.006241438; 11.2,-0.006241438;
              11.25,-0.006241438; 11.3,-0.006241438; 11.35,-0.006241438; 11.4,-0.006241438;
              11.45,-0.006241438; 11.5,-0.006733863; 11.55,-0.006733863; 11.6,-0.006733863;
              11.65,-0.006733863; 11.7,-0.006733863; 11.75,-0.006733863; 11.8,-0.006733863;
              11.85,-0.006733863; 11.9,-0.006733863; 11.95,-0.006733863; 12,-0.006929221;
              12.05,-0.006929221; 12.1,-0.006929221; 12.15,-0.006929221; 12.2,-0.006929221;
              12.25,-0.006929221; 12.3,-0.006929221; 12.35,-0.006929221; 12.4,-0.006929221;
              12.45,-0.006929221; 12.5,-0.007243467; 12.55,-0.007243467; 12.6,-0.007243467;
              12.65,-0.007243467; 12.7,-0.007243467; 12.75,-0.007243467; 12.8,-0.007243467;
              12.85,-0.007243467; 12.9,-0.007243467; 12.95,-0.007243467; 13,-0.006759761;
              13.05,-0.006759761; 13.1,-0.006759761; 13.15,-0.006759761; 13.2,-0.006759761;
              13.25,-0.006759761; 13.3,-0.006759761; 13.35,-0.006759761; 13.4,-0.006759761;
              13.45,-0.006759761; 13.5,-0.006518669; 13.55,-0.006518669; 13.6,-0.006518669;
              13.65,-0.006518669; 13.7,-0.006518669; 13.75,-0.006518669; 13.8,-0.006518669;
              13.85,-0.006518669; 13.9,-0.006518669; 13.95,-0.006518669; 14,-0.007114783;
              14.05,-0.007114783; 14.1,-0.007114783; 14.15,-0.007114783; 14.2,-0.007114783;
              14.25,-0.007114783; 14.3,-0.007114783; 14.35,-0.007114783; 14.4,-0.007114783;
              14.45,-0.007114783; 14.5,-0.006357554; 14.55,-0.006357554; 14.6,-0.006357554;
              14.65,-0.006357554; 14.7,-0.006357554; 14.75,-0.006357554; 14.8,-0.006357554;
              14.85,-0.006357554; 14.9,-0.006357554; 14.95,-0.006357554; 15,-0.006912727;
              15.05,-0.006912727; 15.1,-0.006912727; 15.15,-0.006912727; 15.2,-0.006912727;
              15.25,-0.006912727; 15.3,-0.006912727; 15.35,-0.006912727; 15.4,-0.006912727;
              15.45,-0.006912727; 15.5,-0.007070268; 15.55,-0.007070268; 15.6,-0.007070268;
              15.65,-0.007070268; 15.7,-0.007070268; 15.75,-0.007070268; 15.8,-0.007070268;
              15.85,-0.007070268; 15.9,-0.007070268; 15.95,-0.007070268; 16,-0.006488459;
              16.05,-0.006488459; 16.1,-0.006488459; 16.15,-0.006488459; 16.2,-0.006488459;
              16.25,-0.006488459; 16.3,-0.006488459; 16.35,-0.006488459; 16.4,-0.006488459;
              16.45,-0.006488459; 16.5,-0.007239766; 16.55,-0.007239766; 16.6,-0.007239766;
              16.65,-0.007239766; 16.7,-0.007239766; 16.75,-0.007239766; 16.8,-0.007239766;
              16.85,-0.007239766; 16.9,-0.007239766; 16.95,-0.007239766; 17,-0.006438473;
              17.05,-0.006438473; 17.1,-0.006438473; 17.15,-0.006438473; 17.2,-0.006438473;
              17.25,-0.006438473; 17.3,-0.006438473; 17.35,-0.006438473; 17.4,-0.006438473;
              17.45,-0.006438473; 17.5,-0.00545192; 17.55,-0.00545192; 17.6,-0.00545192;
              17.65,-0.00545192; 17.7,-0.00545192; 17.75,-0.00545192; 17.8,-0.00545192;
              17.85,-0.00545192; 17.9,-0.00545192; 17.95,-0.00545192; 18,-0.007044034;
              18.05,-0.007044034; 18.1,-0.007044034; 18.15,-0.007044034; 18.2,-0.007044034;
              18.25,-0.007044034; 18.3,-0.007044034; 18.35,-0.007044034; 18.4,-0.007044034;
              18.45,-0.007044034; 18.5,-0.007253637; 18.55,-0.007253637; 18.6,-0.007253637;
              18.65,-0.007253637; 18.7,-0.007253637; 18.75,-0.007253637; 18.8,-0.007253637;
              18.85,-0.007253637; 18.9,-0.007253637; 18.95,-0.007253637; 19,-0.006346125;
              19.05,-0.006346125; 19.1,-0.006346125; 19.15,-0.006346125; 19.2,-0.006346125;
              19.25,-0.006346125; 19.3,-0.006346125; 19.35,-0.006346125; 19.4,-0.006346125;
              19.45,-0.006346125; 19.5,-0.006450081; 19.55,-0.006450081; 19.6,-0.006450081;
              19.65,-0.006450081; 19.7,-0.006450081; 19.75,-0.006450081; 19.8,-0.006450081;
              19.85,-0.006450081; 19.9,-0.006450081; 19.95,-0.006450081; 20,-0.006823293;
              20.05,-0.006823293; 20.1,-0.006823293; 20.15,-0.006823293; 20.2,-0.006823293;
              20.25,-0.006823293; 20.3,-0.006823293; 20.35,-0.006823293; 20.4,-0.006823293;
              20.45,-0.006823293; 20.5,-0.006536683; 20.55,-0.006536683; 20.6,-0.006536683;
              20.65,-0.006536683; 20.7,-0.006536683; 20.75,-0.006536683; 20.8,-0.006536683;
              20.85,-0.006536683; 20.9,-0.006536683; 20.95,-0.006536683; 21,-0.006448028;
              21.05,-0.006448028; 21.1,-0.006448028; 21.15,-0.006448028; 21.2,-0.006448028;
              21.25,-0.006448028; 21.3,-0.006448028; 21.35,-0.006448028; 21.4,-0.006448028;
              21.45,-0.006448028; 21.5,-0.006209843; 21.55,-0.006209843; 21.6,-0.006209843;
              21.65,-0.006209843; 21.7,-0.006209843; 21.75,-0.006209843; 21.8,-0.006209843;
              21.85,-0.006209843; 21.9,-0.006209843; 21.95,-0.006209843; 22,-0.00685509;
              22.05,-0.00685509; 22.1,-0.00685509; 22.15,-0.00685509; 22.2,-0.00685509;
              22.25,-0.00685509; 22.3,-0.00685509; 22.35,-0.00685509; 22.4,-0.00685509;
              22.45,-0.00685509; 22.5,-0.006865477; 22.55,-0.006865477; 22.6,-0.006865477;
              22.65,-0.006865477; 22.7,-0.006865477; 22.75,-0.006865477; 22.8,-0.006865477;
              22.85,-0.006865477; 22.9,-0.006865477; 22.95,-0.006865477; 23,-0.006472626;
              23.05,-0.006472626; 23.1,-0.006472626; 23.15,-0.006472626; 23.2,-0.006472626;
              23.25,-0.006472626; 23.3,-0.006472626; 23.35,-0.006472626; 23.4,-0.006472626;
              23.45,-0.006472626; 23.5,-0.006391133; 23.55,-0.006391133; 23.6,-0.006391133;
              23.65,-0.006391133; 23.7,-0.006391133; 23.75,-0.006391133; 23.8,-0.006391133;
              23.85,-0.006391133; 23.9,-0.006391133; 23.95,-0.006391133; 24,-0.006392239;
              24.05,-0.006392239; 24.1,-0.006392239; 24.15,-0.006392239; 24.2,-0.006392239;
              24.25,-0.006392239; 24.3,-0.006392239; 24.35,-0.006392239; 24.4,-0.006392239;
              24.45,-0.006392239; 24.5,-0.006867714; 24.55,-0.006867714; 24.6,-0.006867714;
              24.65,-0.006867714; 24.7,-0.006867714; 24.75,-0.006867714; 24.8,-0.006867714;
              24.85,-0.006867714; 24.9,-0.006867714; 24.95,-0.006867714; 25,-0.006823374;
              25.05,-0.006823374; 25.1,-0.006823374; 25.15,-0.006823374; 25.2,-0.006823374;
              25.25,-0.006823374; 25.3,-0.006823374; 25.35,-0.006823374; 25.4,-0.006823374;
              25.45,-0.006823374; 25.5,-0.006009897; 25.55,-0.006009897; 25.6,-0.006009897;
              25.65,-0.006009897; 25.7,-0.006009897; 25.75,-0.006009897; 25.8,-0.006009897;
              25.85,-0.006009897; 25.9,-0.006009897; 25.95,-0.006009897; 26,-0.006333667;
              26.05,-0.006333667; 26.1,-0.006333667; 26.15,-0.006333667; 26.2,-0.006333667;
              26.25,-0.006333667; 26.3,-0.006333667; 26.35,-0.006333667; 26.4,-0.006333667;
              26.45,-0.006333667; 26.5,-0.006696298; 26.55,-0.006696298; 26.6,-0.006696298;
              26.65,-0.006696298; 26.7,-0.006696298; 26.75,-0.006696298; 26.8,-0.006696298;
              26.85,-0.006696298; 26.9,-0.006696298; 26.95,-0.006696298; 27,-0.006943603;
              27.05,-0.006943603; 27.1,-0.006943603; 27.15,-0.006943603; 27.2,-0.006943603;
              27.25,-0.006943603; 27.3,-0.006943603; 27.35,-0.006943603; 27.4,-0.006943603;
              27.45,-0.006943603; 27.5,-0.006168182; 27.55,-0.006168182; 27.6,-0.006168182;
              27.65,-0.006168182; 27.7,-0.006168182; 27.75,-0.006168182; 27.8,-0.006168182;
              27.85,-0.006168182; 27.9,-0.006168182; 27.95,-0.006168182; 28,-0.0063413;
              28.05,-0.0063413; 28.1,-0.0063413; 28.15,-0.0063413; 28.2,-0.0063413;
              28.25,-0.0063413; 28.3,-0.0063413; 28.35,-0.0063413; 28.4,-0.0063413;
              28.45,-0.0063413; 28.5,-0.006600291; 28.55,-0.006600291; 28.6,-0.006600291;
              28.65,-0.006600291; 28.7,-0.006600291; 28.75,-0.006600291; 28.8,-0.006600291;
              28.85,-0.006600291; 28.9,-0.006600291; 28.95,-0.006600291; 29,-0.006216423;
              29.05,-0.006216423; 29.1,-0.006216423; 29.15,-0.006216423; 29.2,-0.006216423;
              29.25,-0.006216423; 29.3,-0.006216423; 29.35,-0.006216423; 29.4,-0.006216423;
              29.45,-0.006216423; 29.5,-0.00666277; 29.55,-0.00666277; 29.6,-0.00666277;
              29.65,-0.00666277; 29.7,-0.00666277; 29.75,-0.00666277; 29.8,-0.00666277;
              29.85,-0.00666277; 29.9,-0.00666277; 29.95,-0.00666277],
                            smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,6},{-98,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.05,
              0; 0.1,0; 0.15,0; 0.2,0; 0.25,0; 0.3,0; 0.35,0; 0.4,0; 0.45,0;
              0.5,-0.012603557; 0.55,-0.012603557; 0.6,-0.012603557; 0.65,-0.012603557;
              0.7,-0.012603557; 0.75,-0.012603557; 0.8,-0.012603557; 0.85,-0.012603557;
              0.9,-0.012603557; 0.95,-0.012603557; 1,0.033965278; 1.05,
              0.033965278; 1.1,0.033965278; 1.15,0.033965278; 1.2,0.033965278;
              1.25,0.033965278; 1.3,0.033965278; 1.35,0.033965278; 1.4,
              0.033965278; 1.45,0.033965278; 1.5,-0.000966554; 1.55,-0.000966554;
              1.6,-0.000966554; 1.65,-0.000966554; 1.7,-0.000966554; 1.75,-0.000966554;
              1.8,-0.000966554; 1.85,-0.000966554; 1.9,-0.000966554; 1.95,-0.000966554;
              2,0.013541623; 2.05,0.013541623; 2.1,0.013541623; 2.15,
              0.013541623; 2.2,0.013541623; 2.25,0.013541623; 2.3,0.013541623;
              2.35,0.013541623; 2.4,0.013541623; 2.45,0.013541623; 2.5,
              0.028782156; 2.55,0.028782156; 2.6,0.028782156; 2.65,0.028782156;
              2.7,0.028782156; 2.75,0.028782156; 2.8,0.028782156; 2.85,
              0.028782156; 2.9,0.028782156; 2.95,0.028782156; 3,0.028093969;
              3.05,0.028093969; 3.1,0.028093969; 3.15,0.028093969; 3.2,
              0.028093969; 3.25,0.028093969; 3.3,0.028093969; 3.35,0.028093969;
              3.4,0.028093969; 3.45,0.028093969; 3.5,0.024613429; 3.55,
              0.024613429; 3.6,0.024613429; 3.65,0.024613429; 3.7,0.024613429;
              3.75,0.024613429; 3.8,0.024613429; 3.85,0.024613429; 3.9,
              0.024613429; 3.95,0.024613429; 4,0.019653565; 4.05,0.019653565;
              4.1,0.019653565; 4.15,0.019653565; 4.2,0.019653565; 4.25,
              0.019653565; 4.3,0.019653565; 4.35,0.019653565; 4.4,0.019653565;
              4.45,0.019653565; 4.5,0.021738245; 4.55,0.021738245; 4.6,
              0.021738245; 4.65,0.021738245; 4.7,0.021738245; 4.75,0.021738245;
              4.8,0.021738245; 4.85,0.021738245; 4.9,0.021738245; 4.95,
              0.021738245; 5,0.021408614; 5.05,0.021408614; 5.1,0.021408614;
              5.15,0.021408614; 5.2,0.021408614; 5.25,0.021408614; 5.3,
              0.021408614; 5.35,0.021408614; 5.4,0.021408614; 5.45,0.021408614;
              5.5,0.020227747; 5.55,0.020227747; 5.6,0.020227747; 5.65,
              0.020227747; 5.7,0.020227747; 5.75,0.020227747; 5.8,0.020227747;
              5.85,0.020227747; 5.9,0.020227747; 5.95,0.020227747; 6,
              0.022996948; 6.05,0.022996948; 6.1,0.022996948; 6.15,0.022996948;
              6.2,0.022996948; 6.25,0.022996948; 6.3,0.022996948; 6.35,
              0.022996948; 6.4,0.022996948; 6.45,0.022996948; 6.5,0.022693178;
              6.55,0.022693178; 6.6,0.022693178; 6.65,0.022693178; 6.7,
              0.022693178; 6.75,0.022693178; 6.8,0.022693178; 6.85,0.022693178;
              6.9,0.022693178; 6.95,0.022693178; 7,0.021754221; 7.05,
              0.021754221; 7.1,0.021754221; 7.15,0.021754221; 7.2,0.021754221;
              7.25,0.021754221; 7.3,0.021754221; 7.35,0.021754221; 7.4,
              0.021754221; 7.45,0.021754221; 7.5,0.021278889; 7.55,0.021278889;
              7.6,0.021278889; 7.65,0.021278889; 7.7,0.021278889; 7.75,
              0.021278889; 7.8,0.021278889; 7.85,0.021278889; 7.9,0.021278889;
              7.95,0.021278889; 8,0.022011179; 8.05,0.022011179; 8.1,
              0.022011179; 8.15,0.022011179; 8.2,0.022011179; 8.25,0.022011179;
              8.3,0.022011179; 8.35,0.022011179; 8.4,0.022011179; 8.45,
              0.022011179; 8.5,0.021610506; 8.55,0.021610506; 8.6,0.021610506;
              8.65,0.021610506; 8.7,0.021610506; 8.75,0.021610506; 8.8,
              0.021610506; 8.85,0.021610506; 8.9,0.021610506; 8.95,0.021610506;
              9,0.021801169; 9.05,0.021801169; 9.1,0.021801169; 9.15,
              0.021801169; 9.2,0.021801169; 9.25,0.021801169; 9.3,0.021801169;
              9.35,0.021801169; 9.4,0.021801169; 9.45,0.021801169; 9.5,
              0.022253704; 9.55,0.022253704; 9.6,0.022253704; 9.65,0.022253704;
              9.7,0.022253704; 9.75,0.022253704; 9.8,0.022253704; 9.85,
              0.022253704; 9.9,0.022253704; 9.95,0.022253704; 10,0.021275863;
              10.05,0.021275863; 10.1,0.021275863; 10.15,0.021275863; 10.2,
              0.021275863; 10.25,0.021275863; 10.3,0.021275863; 10.35,
              0.021275863; 10.4,0.021275863; 10.45,0.021275863; 10.5,
              0.023070457; 10.55,0.023070457; 10.6,0.023070457; 10.65,
              0.023070457; 10.7,0.023070457; 10.75,0.023070457; 10.8,
              0.023070457; 10.85,0.023070457; 10.9,0.023070457; 10.95,
              0.023070457; 11,0.020162159; 11.05,0.020162159; 11.1,0.020162159;
              11.15,0.020162159; 11.2,0.020162159; 11.25,0.020162159; 11.3,
              0.020162159; 11.35,0.020162159; 11.4,0.020162159; 11.45,
              0.020162159; 11.5,0.022338244; 11.55,0.022338244; 11.6,
              0.022338244; 11.65,0.022338244; 11.7,0.022338244; 11.75,
              0.022338244; 11.8,0.022338244; 11.85,0.022338244; 11.9,
              0.022338244; 11.95,0.022338244; 12,0.021550929; 12.05,0.021550929;
              12.1,0.021550929; 12.15,0.021550929; 12.2,0.021550929; 12.25,
              0.021550929; 12.3,0.021550929; 12.35,0.021550929; 12.4,
              0.021550929; 12.45,0.021550929; 12.5,0.022559802; 12.55,
              0.022559802; 12.6,0.022559802; 12.65,0.022559802; 12.7,
              0.022559802; 12.75,0.022559802; 12.8,0.022559802; 12.85,
              0.022559802; 12.9,0.022559802; 12.95,0.022559802; 13,0.021248046;
              13.05,0.021248046; 13.1,0.021248046; 13.15,0.021248046; 13.2,
              0.021248046; 13.25,0.021248046; 13.3,0.021248046; 13.35,
              0.021248046; 13.4,0.021248046; 13.45,0.021248046; 13.5,
              0.020770281; 13.55,0.020770281; 13.6,0.020770281; 13.65,
              0.020770281; 13.7,0.020770281; 13.75,0.020770281; 13.8,
              0.020770281; 13.85,0.020770281; 13.9,0.020770281; 13.95,
              0.020770281; 14,0.023049819; 14.05,0.023049819; 14.1,0.023049819;
              14.15,0.023049819; 14.2,0.023049819; 14.25,0.023049819; 14.3,
              0.023049819; 14.35,0.023049819; 14.4,0.023049819; 14.45,
              0.023049819; 14.5,0.020688478; 14.55,0.020688478; 14.6,
              0.020688478; 14.65,0.020688478; 14.7,0.020688478; 14.75,
              0.020688478; 14.8,0.020688478; 14.85,0.020688478; 14.9,
              0.020688478; 14.95,0.020688478; 15,0.022425081; 15.05,0.022425081;
              15.1,0.022425081; 15.15,0.022425081; 15.2,0.022425081; 15.25,
              0.022425081; 15.3,0.022425081; 15.35,0.022425081; 15.4,
              0.022425081; 15.45,0.022425081; 15.5,0.022361785; 15.55,
              0.022361785; 15.6,0.022361785; 15.65,0.022361785; 15.7,
              0.022361785; 15.75,0.022361785; 15.8,0.022361785; 15.85,
              0.022361785; 15.9,0.022361785; 15.95,0.022361785; 16,0.020075307;
              16.05,0.020075307; 16.1,0.020075307; 16.15,0.020075307; 16.2,
              0.020075307; 16.25,0.020075307; 16.3,0.020075307; 16.35,
              0.020075307; 16.4,0.020075307; 16.45,0.020075307; 16.5,
              0.022957191; 16.55,0.022957191; 16.6,0.022957191; 16.65,
              0.022957191; 16.7,0.022957191; 16.75,0.022957191; 16.8,
              0.022957191; 16.85,0.022957191; 16.9,0.022957191; 16.95,
              0.022957191; 17,0.021627801; 17.05,0.021627801; 17.1,0.021627801;
              17.15,0.021627801; 17.2,0.021627801; 17.25,0.021627801; 17.3,
              0.021627801; 17.35,0.021627801; 17.4,0.021627801; 17.45,
              0.021627801; 17.5,0.021160227; 17.55,0.021160227; 17.6,
              0.021160227; 17.65,0.021160227; 17.7,0.021160227; 17.75,
              0.021160227; 17.8,0.021160227; 17.85,0.021160227; 17.9,
              0.021160227; 17.95,0.021160227; 18,0.024730173; 18.05,0.024730173;
              18.1,0.024730173; 18.15,0.024730173; 18.2,0.024730173; 18.25,
              0.024730173; 18.3,0.024730173; 18.35,0.024730173; 18.4,
              0.024730173; 18.45,0.024730173; 18.5,0.024412563; 18.55,
              0.024412563; 18.6,0.024412563; 18.65,0.024412563; 18.7,
              0.024412563; 18.75,0.024412563; 18.8,0.024412563; 18.85,
              0.024412563; 18.9,0.024412563; 18.95,0.024412563; 19,0.022523746;
              19.05,0.022523746; 19.1,0.022523746; 19.15,0.022523746; 19.2,
              0.022523746; 19.25,0.022523746; 19.3,0.022523746; 19.35,
              0.022523746; 19.4,0.022523746; 19.45,0.022523746; 19.5,
              0.022721588; 19.55,0.022721588; 19.6,0.022721588; 19.65,
              0.022721588; 19.7,0.022721588; 19.75,0.022721588; 19.8,
              0.022721588; 19.85,0.022721588; 19.9,0.022721588; 19.95,
              0.022721588; 20,0.023108637; 20.05,0.023108637; 20.1,0.023108637;
              20.15,0.023108637; 20.2,0.023108637; 20.25,0.023108637; 20.3,
              0.023108637; 20.35,0.023108637; 20.4,0.023108637; 20.45,
              0.023108637; 20.5,0.022146191; 20.55,0.022146191; 20.6,
              0.022146191; 20.65,0.022146191; 20.7,0.022146191; 20.75,
              0.022146191; 20.8,0.022146191; 20.85,0.022146191; 20.9,
              0.022146191; 20.95,0.022146191; 21,0.022977006; 21.05,0.022977006;
              21.1,0.022977006; 21.15,0.022977006; 21.2,0.022977006; 21.25,
              0.022977006; 21.3,0.022977006; 21.35,0.022977006; 21.4,
              0.022977006; 21.45,0.022977006; 21.5,0.022374987; 21.55,
              0.022374987; 21.6,0.022374987; 21.65,0.022374987; 21.7,
              0.022374987; 21.75,0.022374987; 21.8,0.022374987; 21.85,
              0.022374987; 21.9,0.022374987; 21.95,0.022374987; 22,0.023745572;
              22.05,0.023745572; 22.1,0.023745572; 22.15,0.023745572; 22.2,
              0.023745572; 22.25,0.023745572; 22.3,0.023745572; 22.35,
              0.023745572; 22.4,0.023745572; 22.45,0.023745572; 22.5,
              0.023186283; 22.55,0.023186283; 22.6,0.023186283; 22.65,
              0.023186283; 22.7,0.023186283; 22.75,0.023186283; 22.8,
              0.023186283; 22.85,0.023186283; 22.9,0.023186283; 22.95,
              0.023186283; 23,0.022480311; 23.05,0.022480311; 23.1,0.022480311;
              23.15,0.022480311; 23.2,0.022480311; 23.25,0.022480311; 23.3,
              0.022480311; 23.35,0.022480311; 23.4,0.022480311; 23.45,
              0.022480311; 23.5,0.022783919; 23.55,0.022783919; 23.6,
              0.022783919; 23.65,0.022783919; 23.7,0.022783919; 23.75,
              0.022783919; 23.8,0.022783919; 23.85,0.022783919; 23.9,
              0.022783919; 23.95,0.022783919; 24,0.022377338; 24.05,0.022377338;
              24.1,0.022377338; 24.15,0.022377338; 24.2,0.022377338; 24.25,
              0.022377338; 24.3,0.022377338; 24.35,0.022377338; 24.4,
              0.022377338; 24.45,0.022377338; 24.5,0.023089534; 24.55,
              0.023089534; 24.6,0.023089534; 24.65,0.023089534; 24.7,
              0.023089534; 24.75,0.023089534; 24.8,0.023089534; 24.85,
              0.023089534; 24.9,0.023089534; 24.95,0.023089534; 25,0.023319041;
              25.05,0.023319041; 25.1,0.023319041; 25.15,0.023319041; 25.2,
              0.023319041; 25.25,0.023319041; 25.3,0.023319041; 25.35,
              0.023319041; 25.4,0.023319041; 25.45,0.023319041; 25.5,
              0.022040089; 25.55,0.022040089; 25.6,0.022040089; 25.65,
              0.022040089; 25.7,0.022040089; 25.75,0.022040089; 25.8,
              0.022040089; 25.85,0.022040089; 25.9,0.022040089; 25.95,
              0.022040089; 26,0.023547979; 26.05,0.023547979; 26.1,0.023547979;
              26.15,0.023547979; 26.2,0.023547979; 26.25,0.023547979; 26.3,
              0.023547979; 26.35,0.023547979; 26.4,0.023547979; 26.45,
              0.023547979; 26.5,0.02338953; 26.55,0.02338953; 26.6,0.02338953;
              26.65,0.02338953; 26.7,0.02338953; 26.75,0.02338953; 26.8,
              0.02338953; 26.85,0.02338953; 26.9,0.02338953; 26.95,0.02338953;
              27,0.024333157; 27.05,0.024333157; 27.1,0.024333157; 27.15,
              0.024333157; 27.2,0.024333157; 27.25,0.024333157; 27.3,
              0.024333157; 27.35,0.024333157; 27.4,0.024333157; 27.45,
              0.024333157; 27.5,0.022271112; 27.55,0.022271112; 27.6,
              0.022271112; 27.65,0.022271112; 27.7,0.022271112; 27.75,
              0.022271112; 27.8,0.022271112; 27.85,0.022271112; 27.9,
              0.022271112; 27.95,0.022271112; 28,0.023245648; 28.05,0.023245648;
              28.1,0.023245648; 28.15,0.023245648; 28.2,0.023245648; 28.25,
              0.023245648; 28.3,0.023245648; 28.35,0.023245648; 28.4,
              0.023245648; 28.45,0.023245648; 28.5,0.023935995; 28.55,
              0.023935995; 28.6,0.023935995; 28.65,0.023935995; 28.7,
              0.023935995; 28.75,0.023935995; 28.8,0.023935995; 28.85,
              0.023935995; 28.9,0.023935995; 28.95,0.023935995; 29,0.022833077;
              29.05,0.022833077; 29.1,0.022833077; 29.15,0.022833077; 29.2,
              0.022833077; 29.25,0.022833077; 29.3,0.022833077; 29.35,
              0.022833077; 29.4,0.022833077; 29.45,0.022833077; 29.5,
              0.024282357; 29.55,0.024282357; 29.6,0.024282357; 29.65,
              0.024282357; 29.7,0.024282357; 29.75,0.024282357; 29.8,
              0.024282357; 29.85,0.024282357; 29.9,0.024282357; 29.95,
              0.024282357],    smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-20},{-98,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.05,
              0; 0.1,0; 0.15,0; 0.2,0; 0.25,0; 0.3,0; 0.35,0; 0.4,0; 0.45,0;
              0.5,0.000428053; 0.55,0.000428053; 0.6,0.000428053; 0.65,
              0.000428053; 0.7,0.000428053; 0.75,0.000428053; 0.8,0.000428053;
              0.85,0.000428053; 0.9,0.000428053; 0.95,0.000428053; 1,
              0.005014011; 1.05,0.005014011; 1.1,0.005014011; 1.15,0.005014011;
              1.2,0.005014011; 1.25,0.005014011; 1.3,0.005014011; 1.35,
              0.005014011; 1.4,0.005014011; 1.45,0.005014011; 1.5,0.004269204;
              1.55,0.004269204; 1.6,0.004269204; 1.65,0.004269204; 1.7,
              0.004269204; 1.75,0.004269204; 1.8,0.004269204; 1.85,0.004269204;
              1.9,0.004269204; 1.95,0.004269204; 2,0.004336122; 2.05,
              0.004336122; 2.1,0.004336122; 2.15,0.004336122; 2.2,0.004336122;
              2.25,0.004336122; 2.3,0.004336122; 2.35,0.004336122; 2.4,
              0.004336122; 2.45,0.004336122; 2.5,0.004350494; 2.55,0.004350494;
              2.6,0.004350494; 2.65,0.004350494; 2.7,0.004350494; 2.75,
              0.004350494; 2.8,0.004350494; 2.85,0.004350494; 2.9,0.004350494;
              2.95,0.004350494; 3,0.004263978; 3.05,0.004263978; 3.1,
              0.004263978; 3.15,0.004263978; 3.2,0.004263978; 3.25,0.004263978;
              3.3,0.004263978; 3.35,0.004263978; 3.4,0.004263978; 3.45,
              0.004263978; 3.5,0.004120982; 3.55,0.004120982; 3.6,0.004120982;
              3.65,0.004120982; 3.7,0.004120982; 3.75,0.004120982; 3.8,
              0.004120982; 3.85,0.004120982; 3.9,0.004120982; 3.95,0.004120982;
              4,0.004251013; 4.05,0.004251013; 4.1,0.004251013; 4.15,
              0.004251013; 4.2,0.004251013; 4.25,0.004251013; 4.3,0.004251013;
              4.35,0.004251013; 4.4,0.004251013; 4.45,0.004251013; 4.5,
              0.004324927; 4.55,0.004324927; 4.6,0.004324927; 4.65,0.004324927;
              4.7,0.004324927; 4.75,0.004324927; 4.8,0.004324927; 4.85,
              0.004324927; 4.9,0.004324927; 4.95,0.004324927; 5,0.004242477;
              5.05,0.004242477; 5.1,0.004242477; 5.15,0.004242477; 5.2,
              0.004242477; 5.25,0.004242477; 5.3,0.004242477; 5.35,0.004242477;
              5.4,0.004242477; 5.45,0.004242477; 5.5,0.004313862; 5.55,
              0.004313862; 5.6,0.004313862; 5.65,0.004313862; 5.7,0.004313862;
              5.75,0.004313862; 5.8,0.004313862; 5.85,0.004313862; 5.9,
              0.004313862; 5.95,0.004313862; 6,0.004369775; 6.05,0.004369775;
              6.1,0.004369775; 6.15,0.004369775; 6.2,0.004369775; 6.25,
              0.004369775; 6.3,0.004369775; 6.35,0.004369775; 6.4,0.004369775;
              6.45,0.004369775; 6.5,0.00434518; 6.55,0.00434518; 6.6,0.00434518;
              6.65,0.00434518; 6.7,0.00434518; 6.75,0.00434518; 6.8,0.00434518;
              6.85,0.00434518; 6.9,0.00434518; 6.95,0.00434518; 7,0.004311876;
              7.05,0.004311876; 7.1,0.004311876; 7.15,0.004311876; 7.2,
              0.004311876; 7.25,0.004311876; 7.3,0.004311876; 7.35,0.004311876;
              7.4,0.004311876; 7.45,0.004311876; 7.5,0.004329771; 7.55,
              0.004329771; 7.6,0.004329771; 7.65,0.004329771; 7.7,0.004329771;
              7.75,0.004329771; 7.8,0.004329771; 7.85,0.004329771; 7.9,
              0.004329771; 7.95,0.004329771; 8,0.004310735; 8.05,0.004310735;
              8.1,0.004310735; 8.15,0.004310735; 8.2,0.004310735; 8.25,
              0.004310735; 8.3,0.004310735; 8.35,0.004310735; 8.4,0.004310735;
              8.45,0.004310735; 8.5,0.004287819; 8.55,0.004287819; 8.6,
              0.004287819; 8.65,0.004287819; 8.7,0.004287819; 8.75,0.004287819;
              8.8,0.004287819; 8.85,0.004287819; 8.9,0.004287819; 8.95,
              0.004287819; 9,0.004300494; 9.05,0.004300494; 9.1,0.004300494;
              9.15,0.004300494; 9.2,0.004300494; 9.25,0.004300494; 9.3,
              0.004300494; 9.35,0.004300494; 9.4,0.004300494; 9.45,0.004300494;
              9.5,0.004320474; 9.55,0.004320474; 9.6,0.004320474; 9.65,
              0.004320474; 9.7,0.004320474; 9.75,0.004320474; 9.8,0.004320474;
              9.85,0.004320474; 9.9,0.004320474; 9.95,0.004320474; 10,
              0.004409649; 10.05,0.004409649; 10.1,0.004409649; 10.15,
              0.004409649; 10.2,0.004409649; 10.25,0.004409649; 10.3,
              0.004409649; 10.35,0.004409649; 10.4,0.004409649; 10.45,
              0.004409649; 10.5,0.004303296; 10.55,0.004303296; 10.6,
              0.004303296; 10.65,0.004303296; 10.7,0.004303296; 10.75,
              0.004303296; 10.8,0.004303296; 10.85,0.004303296; 10.9,
              0.004303296; 10.95,0.004303296; 11,0.004296905; 11.05,0.004296905;
              11.1,0.004296905; 11.15,0.004296905; 11.2,0.004296905; 11.25,
              0.004296905; 11.3,0.004296905; 11.35,0.004296905; 11.4,
              0.004296905; 11.45,0.004296905; 11.5,0.004305678; 11.55,
              0.004305678; 11.6,0.004305678; 11.65,0.004305678; 11.7,
              0.004305678; 11.75,0.004305678; 11.8,0.004305678; 11.85,
              0.004305678; 11.9,0.004305678; 11.95,0.004305678; 12,0.004371727;
              12.05,0.004371727; 12.1,0.004371727; 12.15,0.004371727; 12.2,
              0.004371727; 12.25,0.004371727; 12.3,0.004371727; 12.35,
              0.004371727; 12.4,0.004371727; 12.45,0.004371727; 12.5,
              0.004345934; 12.55,0.004345934; 12.6,0.004345934; 12.65,
              0.004345934; 12.7,0.004345934; 12.75,0.004345934; 12.8,
              0.004345934; 12.85,0.004345934; 12.9,0.004345934; 12.95,
              0.004345934; 13,0.004303866; 13.05,0.004303866; 13.1,0.004303866;
              13.15,0.004303866; 13.2,0.004303866; 13.25,0.004303866; 13.3,
              0.004303866; 13.35,0.004303866; 13.4,0.004303866; 13.45,
              0.004303866; 13.5,0.004364422; 13.55,0.004364422; 13.6,
              0.004364422; 13.65,0.004364422; 13.7,0.004364422; 13.75,
              0.004364422; 13.8,0.004364422; 13.85,0.004364422; 13.9,
              0.004364422; 13.95,0.004364422; 14,0.004283816; 14.05,0.004283816;
              14.1,0.004283816; 14.15,0.004283816; 14.2,0.004283816; 14.25,
              0.004283816; 14.3,0.004283816; 14.35,0.004283816; 14.4,
              0.004283816; 14.45,0.004283816; 14.5,0.004316218; 14.55,
              0.004316218; 14.6,0.004316218; 14.65,0.004316218; 14.7,
              0.004316218; 14.75,0.004316218; 14.8,0.004316218; 14.85,
              0.004316218; 14.9,0.004316218; 14.95,0.004316218; 15,0.004354097;
              15.05,0.004354097; 15.1,0.004354097; 15.15,0.004354097; 15.2,
              0.004354097; 15.25,0.004354097; 15.3,0.004354097; 15.35,
              0.004354097; 15.4,0.004354097; 15.45,0.004354097; 15.5,
              0.004314715; 15.55,0.004314715; 15.6,0.004314715; 15.65,
              0.004314715; 15.7,0.004314715; 15.75,0.004314715; 15.8,
              0.004314715; 15.85,0.004314715; 15.9,0.004314715; 15.95,
              0.004314715; 16,0.004430038; 16.05,0.004430038; 16.1,0.004430038;
              16.15,0.004430038; 16.2,0.004430038; 16.25,0.004430038; 16.3,
              0.004430038; 16.35,0.004430038; 16.4,0.004430038; 16.45,
              0.004430038; 16.5,0.004343889; 16.55,0.004343889; 16.6,
              0.004343889; 16.65,0.004343889; 16.7,0.004343889; 16.75,
              0.004343889; 16.8,0.004343889; 16.85,0.004343889; 16.9,
              0.004343889; 16.95,0.004343889; 17,0.004156364; 17.05,0.004156364;
              17.1,0.004156364; 17.15,0.004156364; 17.2,0.004156364; 17.25,
              0.004156364; 17.3,0.004156364; 17.35,0.004156364; 17.4,
              0.004156364; 17.45,0.004156364; 17.5,0.00424241; 17.55,0.00424241;
              17.6,0.00424241; 17.65,0.00424241; 17.7,0.00424241; 17.75,
              0.00424241; 17.8,0.00424241; 17.85,0.00424241; 17.9,0.00424241;
              17.95,0.00424241; 18,0.0043276; 18.05,0.0043276; 18.1,0.0043276;
              18.15,0.0043276; 18.2,0.0043276; 18.25,0.0043276; 18.3,0.0043276;
              18.35,0.0043276; 18.4,0.0043276; 18.45,0.0043276; 18.5,
              0.004287859; 18.55,0.004287859; 18.6,0.004287859; 18.65,
              0.004287859; 18.7,0.004287859; 18.75,0.004287859; 18.8,
              0.004287859; 18.85,0.004287859; 18.9,0.004287859; 18.95,
              0.004287859; 19,0.004300262; 19.05,0.004300262; 19.1,0.004300262;
              19.15,0.004300262; 19.2,0.004300262; 19.25,0.004300262; 19.3,
              0.004300262; 19.35,0.004300262; 19.4,0.004300262; 19.45,
              0.004300262; 19.5,0.004356305; 19.55,0.004356305; 19.6,
              0.004356305; 19.65,0.004356305; 19.7,0.004356305; 19.75,
              0.004356305; 19.8,0.004356305; 19.85,0.004356305; 19.9,
              0.004356305; 19.95,0.004356305; 20,0.004335398; 20.05,0.004335398;
              20.1,0.004335398; 20.15,0.004335398; 20.2,0.004335398; 20.25,
              0.004335398; 20.3,0.004335398; 20.35,0.004335398; 20.4,
              0.004335398; 20.45,0.004335398; 20.5,0.004302061; 20.55,
              0.004302061; 20.6,0.004302061; 20.65,0.004302061; 20.7,
              0.004302061; 20.75,0.004302061; 20.8,0.004302061; 20.85,
              0.004302061; 20.9,0.004302061; 20.95,0.004302061; 21,0.004239784;
              21.05,0.004239784; 21.1,0.004239784; 21.15,0.004239784; 21.2,
              0.004239784; 21.25,0.004239784; 21.3,0.004239784; 21.35,
              0.004239784; 21.4,0.004239784; 21.45,0.004239784; 21.5,
              0.004294108; 21.55,0.004294108; 21.6,0.004294108; 21.65,
              0.004294108; 21.7,0.004294108; 21.75,0.004294108; 21.8,
              0.004294108; 21.85,0.004294108; 21.9,0.004294108; 21.95,
              0.004294108; 22,0.004338792; 22.05,0.004338792; 22.1,0.004338792;
              22.15,0.004338792; 22.2,0.004338792; 22.25,0.004338792; 22.3,
              0.004338792; 22.35,0.004338792; 22.4,0.004338792; 22.45,
              0.004338792; 22.5,0.004322469; 22.55,0.004322469; 22.6,
              0.004322469; 22.65,0.004322469; 22.7,0.004322469; 22.75,
              0.004322469; 22.8,0.004322469; 22.85,0.004322469; 22.9,
              0.004322469; 22.95,0.004322469; 23,0.004299018; 23.05,0.004299018;
              23.1,0.004299018; 23.15,0.004299018; 23.2,0.004299018; 23.25,
              0.004299018; 23.3,0.004299018; 23.35,0.004299018; 23.4,
              0.004299018; 23.45,0.004299018; 23.5,0.004275143; 23.55,
              0.004275143; 23.6,0.004275143; 23.65,0.004275143; 23.7,
              0.004275143; 23.75,0.004275143; 23.8,0.004275143; 23.85,
              0.004275143; 23.9,0.004275143; 23.95,0.004275143; 24,0.004330886;
              24.05,0.004330886; 24.1,0.004330886; 24.15,0.004330886; 24.2,
              0.004330886; 24.25,0.004330886; 24.3,0.004330886; 24.35,
              0.004330886; 24.4,0.004330886; 24.45,0.004330886; 24.5,
              0.004362594; 24.55,0.004362594; 24.6,0.004362594; 24.65,
              0.004362594; 24.7,0.004362594; 24.75,0.004362594; 24.8,
              0.004362594; 24.85,0.004362594; 24.9,0.004362594; 24.95,
              0.004362594; 25,0.004263688; 25.05,0.004263688; 25.1,0.004263688;
              25.15,0.004263688; 25.2,0.004263688; 25.25,0.004263688; 25.3,
              0.004263688; 25.35,0.004263688; 25.4,0.004263688; 25.45,
              0.004263688; 25.5,0.004241662; 25.55,0.004241662; 25.6,
              0.004241662; 25.65,0.004241662; 25.7,0.004241662; 25.75,
              0.004241662; 25.8,0.004241662; 25.85,0.004241662; 25.9,
              0.004241662; 25.95,0.004241662; 26,0.004272785; 26.05,0.004272785;
              26.1,0.004272785; 26.15,0.004272785; 26.2,0.004272785; 26.25,
              0.004272785; 26.3,0.004272785; 26.35,0.004272785; 26.4,
              0.004272785; 26.45,0.004272785; 26.5,0.004348279; 26.55,
              0.004348279; 26.6,0.004348279; 26.65,0.004348279; 26.7,
              0.004348279; 26.75,0.004348279; 26.8,0.004348279; 26.85,
              0.004348279; 26.9,0.004348279; 26.95,0.004348279; 27,0.004292812;
              27.05,0.004292812; 27.1,0.004292812; 27.15,0.004292812; 27.2,
              0.004292812; 27.25,0.004292812; 27.3,0.004292812; 27.35,
              0.004292812; 27.4,0.004292812; 27.45,0.004292812; 27.5,
              0.004285857; 27.55,0.004285857; 27.6,0.004285857; 27.65,
              0.004285857; 27.7,0.004285857; 27.75,0.004285857; 27.8,
              0.004285857; 27.85,0.004285857; 27.9,0.004285857; 27.95,
              0.004285857; 28,0.004302115; 28.05,0.004302115; 28.1,0.004302115;
              28.15,0.004302115; 28.2,0.004302115; 28.25,0.004302115; 28.3,
              0.004302115; 28.35,0.004302115; 28.4,0.004302115; 28.45,
              0.004302115; 28.5,0.004254055; 28.55,0.004254055; 28.6,
              0.004254055; 28.65,0.004254055; 28.7,0.004254055; 28.75,
              0.004254055; 28.8,0.004254055; 28.85,0.004254055; 28.9,
              0.004254055; 28.95,0.004254055; 29,0.004296627; 29.05,0.004296627;
              29.1,0.004296627; 29.15,0.004296627; 29.2,0.004296627; 29.25,
              0.004296627; 29.3,0.004296627; 29.35,0.004296627; 29.4,
              0.004296627; 29.45,0.004296627; 29.5,0.004295999; 29.55,
              0.004295999; 29.6,0.004295999; 29.65,0.004295999; 29.7,
              0.004295999; 29.75,0.004295999; 29.8,0.004295999; 29.85,
              0.004295999; 29.9,0.004295999; 29.95,0.004295999],
                                   smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-48},{-98,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.05,
              0; 0.1,0; 0.15,0; 0.2,0; 0.25,0; 0.3,0; 0.35,0; 0.4,0; 0.45,0;
              0.5,0.05779623; 0.55,0.05779623; 0.6,0.05779623; 0.65,0.05779623;
              0.7,0.05779623; 0.75,0.05779623; 0.8,0.05779623; 0.85,0.05779623;
              0.9,0.05779623; 0.95,0.05779623; 1,0.025402062; 1.05,0.025402062;
              1.1,0.025402062; 1.15,0.025402062; 1.2,0.025402062; 1.25,
              0.025402062; 1.3,0.025402062; 1.35,0.025402062; 1.4,0.025402062;
              1.45,0.025402062; 1.5,0.0239384; 1.55,0.0239384; 1.6,0.0239384;
              1.65,0.0239384; 1.7,0.0239384; 1.75,0.0239384; 1.8,0.0239384;
              1.85,0.0239384; 1.9,0.0239384; 1.95,0.0239384; 2,0.031033265;
              2.05,0.031033265; 2.1,0.031033265; 2.15,0.031033265; 2.2,
              0.031033265; 2.25,0.031033265; 2.3,0.031033265; 2.35,0.031033265;
              2.4,0.031033265; 2.45,0.031033265; 2.5,0.032111688; 2.55,
              0.032111688; 2.6,0.032111688; 2.65,0.032111688; 2.7,0.032111688;
              2.75,0.032111688; 2.8,0.032111688; 2.85,0.032111688; 2.9,
              0.032111688; 2.95,0.032111688; 3,0.031846812; 3.05,0.031846812;
              3.1,0.031846812; 3.15,0.031846812; 3.2,0.031846812; 3.25,
              0.031846812; 3.3,0.031846812; 3.35,0.031846812; 3.4,0.031846812;
              3.45,0.031846812; 3.5,0.029404518; 3.55,0.029404518; 3.6,
              0.029404518; 3.65,0.029404518; 3.7,0.029404518; 3.75,0.029404518;
              3.8,0.029404518; 3.85,0.029404518; 3.9,0.029404518; 3.95,
              0.029404518; 4,0.032924225; 4.05,0.032924225; 4.1,0.032924225;
              4.15,0.032924225; 4.2,0.032924225; 4.25,0.032924225; 4.3,
              0.032924225; 4.35,0.032924225; 4.4,0.032924225; 4.45,0.032924225;
              4.5,0.031795159; 4.55,0.031795159; 4.6,0.031795159; 4.65,
              0.031795159; 4.7,0.031795159; 4.75,0.031795159; 4.8,0.031795159;
              4.85,0.031795159; 4.9,0.031795159; 4.95,0.031795159; 5,
              0.029489062; 5.05,0.029489062; 5.1,0.029489062; 5.15,0.029489062;
              5.2,0.029489062; 5.25,0.029489062; 5.3,0.029489062; 5.35,
              0.029489062; 5.4,0.029489062; 5.45,0.029489062; 5.5,0.03202839;
              5.55,0.03202839; 5.6,0.03202839; 5.65,0.03202839; 5.7,0.03202839;
              5.75,0.03202839; 5.8,0.03202839; 5.85,0.03202839; 5.9,0.03202839;
              5.95,0.03202839; 6,0.03217054; 6.05,0.03217054; 6.1,0.03217054;
              6.15,0.03217054; 6.2,0.03217054; 6.25,0.03217054; 6.3,0.03217054;
              6.35,0.03217054; 6.4,0.03217054; 6.45,0.03217054; 6.5,0.03153408;
              6.55,0.03153408; 6.6,0.03153408; 6.65,0.03153408; 6.7,0.03153408;
              6.75,0.03153408; 6.8,0.03153408; 6.85,0.03153408; 6.9,0.03153408;
              6.95,0.03153408; 7,0.031230675; 7.05,0.031230675; 7.1,0.031230675;
              7.15,0.031230675; 7.2,0.031230675; 7.25,0.031230675; 7.3,
              0.031230675; 7.35,0.031230675; 7.4,0.031230675; 7.45,0.031230675;
              7.5,0.031876197; 7.55,0.031876197; 7.6,0.031876197; 7.65,
              0.031876197; 7.7,0.031876197; 7.75,0.031876197; 7.8,0.031876197;
              7.85,0.031876197; 7.9,0.031876197; 7.95,0.031876197; 8,
              0.031099273; 8.05,0.031099273; 8.1,0.031099273; 8.15,0.031099273;
              8.2,0.031099273; 8.25,0.031099273; 8.3,0.031099273; 8.35,
              0.031099273; 8.4,0.031099273; 8.45,0.031099273; 8.5,0.030914552;
              8.55,0.030914552; 8.6,0.030914552; 8.65,0.030914552; 8.7,
              0.030914552; 8.75,0.030914552; 8.8,0.030914552; 8.85,0.030914552;
              8.9,0.030914552; 8.95,0.030914552; 9,0.031311402; 9.05,
              0.031311402; 9.1,0.031311402; 9.15,0.031311402; 9.2,0.031311402;
              9.25,0.031311402; 9.3,0.031311402; 9.35,0.031311402; 9.4,
              0.031311402; 9.45,0.031311402; 9.5,0.03153336; 9.55,0.03153336;
              9.6,0.03153336; 9.65,0.03153336; 9.7,0.03153336; 9.75,0.03153336;
              9.8,0.03153336; 9.85,0.03153336; 9.9,0.03153336; 9.95,0.03153336;
              10,0.033336482; 10.05,0.033336482; 10.1,0.033336482; 10.15,
              0.033336482; 10.2,0.033336482; 10.25,0.033336482; 10.3,
              0.033336482; 10.35,0.033336482; 10.4,0.033336482; 10.45,
              0.033336482; 10.5,0.029900293; 10.55,0.029900293; 10.6,
              0.029900293; 10.65,0.029900293; 10.7,0.029900293; 10.75,
              0.029900293; 10.8,0.029900293; 10.85,0.029900293; 10.9,
              0.029900293; 10.95,0.029900293; 11,0.03143806; 11.05,0.03143806;
              11.1,0.03143806; 11.15,0.03143806; 11.2,0.03143806; 11.25,
              0.03143806; 11.3,0.03143806; 11.35,0.03143806; 11.4,0.03143806;
              11.45,0.03143806; 11.5,0.031116016; 11.55,0.031116016; 11.6,
              0.031116016; 11.65,0.031116016; 11.7,0.031116016; 11.75,
              0.031116016; 11.8,0.031116016; 11.85,0.031116016; 11.9,
              0.031116016; 11.95,0.031116016; 12,0.032699593; 12.05,0.032699593;
              12.1,0.032699593; 12.15,0.032699593; 12.2,0.032699593; 12.25,
              0.032699593; 12.3,0.032699593; 12.35,0.032699593; 12.4,
              0.032699593; 12.45,0.032699593; 12.5,0.031265672; 12.55,
              0.031265672; 12.6,0.031265672; 12.65,0.031265672; 12.7,
              0.031265672; 12.75,0.031265672; 12.8,0.031265672; 12.85,
              0.031265672; 12.9,0.031265672; 12.95,0.031265672; 13,0.030961455;
              13.05,0.030961455; 13.1,0.030961455; 13.15,0.030961455; 13.2,
              0.030961455; 13.25,0.030961455; 13.3,0.030961455; 13.35,
              0.030961455; 13.4,0.030961455; 13.45,0.030961455; 13.5,
              0.032566303; 13.55,0.032566303; 13.6,0.032566303; 13.65,
              0.032566303; 13.7,0.032566303; 13.75,0.032566303; 13.8,
              0.032566303; 13.85,0.032566303; 13.9,0.032566303; 13.95,
              0.032566303; 14,0.029929337; 14.05,0.029929337; 14.1,0.029929337;
              14.15,0.029929337; 14.2,0.029929337; 14.25,0.029929337; 14.3,
              0.029929337; 14.35,0.029929337; 14.4,0.029929337; 14.45,
              0.029929337; 14.5,0.031939957; 14.55,0.031939957; 14.6,
              0.031939957; 14.65,0.031939957; 14.7,0.031939957; 14.75,
              0.031939957; 14.8,0.031939957; 14.85,0.031939957; 14.9,
              0.031939957; 14.95,0.031939957; 15,0.03192042; 15.05,0.03192042;
              15.1,0.03192042; 15.15,0.03192042; 15.2,0.03192042; 15.25,
              0.03192042; 15.3,0.03192042; 15.35,0.03192042; 15.4,0.03192042;
              15.45,0.03192042; 15.5,0.030911269; 15.55,0.030911269; 15.6,
              0.030911269; 15.65,0.030911269; 15.7,0.030911269; 15.75,
              0.030911269; 15.8,0.030911269; 15.85,0.030911269; 15.9,
              0.030911269; 15.95,0.030911269; 16,0.033964928; 16.05,0.033964928;
              16.1,0.033964928; 16.15,0.033964928; 16.2,0.033964928; 16.25,
              0.033964928; 16.3,0.033964928; 16.35,0.033964928; 16.4,
              0.033964928; 16.45,0.033964928; 16.5,0.030407066; 16.55,
              0.030407066; 16.6,0.030407066; 16.65,0.030407066; 16.7,
              0.030407066; 16.75,0.030407066; 16.8,0.030407066; 16.85,
              0.030407066; 16.9,0.030407066; 16.95,0.030407066; 17,0.027939896;
              17.05,0.027939896; 17.1,0.027939896; 17.15,0.027939896; 17.2,
              0.027939896; 17.25,0.027939896; 17.3,0.027939896; 17.35,
              0.027939896; 17.4,0.027939896; 17.45,0.027939896; 17.5,
              0.031475677; 17.55,0.031475677; 17.6,0.031475677; 17.65,
              0.031475677; 17.7,0.031475677; 17.75,0.031475677; 17.8,
              0.031475677; 17.85,0.031475677; 17.9,0.031475677; 17.95,
              0.031475677; 18,0.031780131; 18.05,0.031780131; 18.1,0.031780131;
              18.15,0.031780131; 18.2,0.031780131; 18.25,0.031780131; 18.3,
              0.031780131; 18.35,0.031780131; 18.4,0.031780131; 18.45,
              0.031780131; 18.5,0.030438885; 18.55,0.030438885; 18.6,
              0.030438885; 18.65,0.030438885; 18.7,0.030438885; 18.75,
              0.030438885; 18.8,0.030438885; 18.85,0.030438885; 18.9,
              0.030438885; 18.95,0.030438885; 19,0.031300357; 19.05,0.031300357;
              19.1,0.031300357; 19.15,0.031300357; 19.2,0.031300357; 19.25,
              0.031300357; 19.3,0.031300357; 19.35,0.031300357; 19.4,
              0.031300357; 19.45,0.031300357; 19.5,0.032127842; 19.55,
              0.032127842; 19.6,0.032127842; 19.65,0.032127842; 19.7,
              0.032127842; 19.75,0.032127842; 19.8,0.032127842; 19.85,
              0.032127842; 19.9,0.032127842; 19.95,0.032127842; 20,0.031121561;
              20.05,0.031121561; 20.1,0.031121561; 20.15,0.031121561; 20.2,
              0.031121561; 20.25,0.031121561; 20.3,0.031121561; 20.35,
              0.031121561; 20.4,0.031121561; 20.45,0.031121561; 20.5,
              0.030859901; 20.55,0.030859901; 20.6,0.030859901; 20.65,
              0.030859901; 20.7,0.030859901; 20.75,0.030859901; 20.8,
              0.030859901; 20.85,0.030859901; 20.9,0.030859901; 20.95,
              0.030859901; 21,0.029727631; 21.05,0.029727631; 21.1,0.029727631;
              21.15,0.029727631; 21.2,0.029727631; 21.25,0.029727631; 21.3,
              0.029727631; 21.35,0.029727631; 21.4,0.029727631; 21.45,
              0.029727631; 21.5,0.031614634; 21.55,0.031614634; 21.6,
              0.031614634; 21.65,0.031614634; 21.7,0.031614634; 21.75,
              0.031614634; 21.8,0.031614634; 21.85,0.031614634; 21.9,
              0.031614634; 21.95,0.031614634; 22,0.031705376; 22.05,0.031705376;
              22.1,0.031705376; 22.15,0.031705376; 22.2,0.031705376; 22.25,
              0.031705376; 22.3,0.031705376; 22.35,0.031705376; 22.4,
              0.031705376; 22.45,0.031705376; 22.5,0.031116083; 22.55,
              0.031116083; 22.6,0.031116083; 22.65,0.031116083; 22.7,
              0.031116083; 22.75,0.031116083; 22.8,0.031116083; 22.85,
              0.031116083; 22.9,0.031116083; 22.95,0.031116083; 23,0.030852795;
              23.05,0.030852795; 23.1,0.030852795; 23.15,0.030852795; 23.2,
              0.030852795; 23.25,0.030852795; 23.3,0.030852795; 23.35,
              0.030852795; 23.4,0.030852795; 23.45,0.030852795; 23.5,
              0.030506034; 23.55,0.030506034; 23.6,0.030506034; 23.65,
              0.030506034; 23.7,0.030506034; 23.75,0.030506034; 23.8,
              0.030506034; 23.85,0.030506034; 23.9,0.030506034; 23.95,
              0.030506034; 24,0.031976448; 24.05,0.031976448; 24.1,0.031976448;
              24.15,0.031976448; 24.2,0.031976448; 24.25,0.031976448; 24.3,
              0.031976448; 24.35,0.031976448; 24.4,0.031976448; 24.45,
              0.031976448; 24.5,0.031920149; 24.55,0.031920149; 24.6,
              0.031920149; 24.65,0.031920149; 24.7,0.031920149; 24.75,
              0.031920149; 24.8,0.031920149; 24.85,0.031920149; 24.9,
              0.031920149; 24.95,0.031920149; 25,0.029613529; 25.05,0.029613529;
              25.1,0.029613529; 25.15,0.029613529; 25.2,0.029613529; 25.25,
              0.029613529; 25.3,0.029613529; 25.35,0.029613529; 25.4,
              0.029613529; 25.45,0.029613529; 25.5,0.030363768; 25.55,
              0.030363768; 25.6,0.030363768; 25.65,0.030363768; 25.7,
              0.030363768; 25.75,0.030363768; 25.8,0.030363768; 25.85,
              0.030363768; 25.9,0.030363768; 25.95,0.030363768; 26,0.030875033;
              26.05,0.030875033; 26.1,0.030875033; 26.15,0.030875033; 26.2,
              0.030875033; 26.25,0.030875033; 26.3,0.030875033; 26.35,
              0.030875033; 26.4,0.030875033; 26.45,0.030875033; 26.5,
              0.032251441; 26.55,0.032251441; 26.6,0.032251441; 26.65,
              0.032251441; 26.7,0.032251441; 26.75,0.032251441; 26.8,
              0.032251441; 26.85,0.032251441; 26.9,0.032251441; 26.95,
              0.032251441; 27,0.030175352; 27.05,0.030175352; 27.1,0.030175352;
              27.15,0.030175352; 27.2,0.030175352; 27.25,0.030175352; 27.3,
              0.030175352; 27.35,0.030175352; 27.4,0.030175352; 27.45,
              0.030175352; 27.5,0.030981009; 27.55,0.030981009; 27.6,
              0.030981009; 27.65,0.030981009; 27.7,0.030981009; 27.75,
              0.030981009; 27.8,0.030981009; 27.85,0.030981009; 27.9,
              0.030981009; 27.95,0.030981009; 28,0.031060598; 28.05,0.031060598;
              28.1,0.031060598; 28.15,0.031060598; 28.2,0.031060598; 28.25,
              0.031060598; 28.3,0.031060598; 28.35,0.031060598; 28.4,
              0.031060598; 28.45,0.031060598; 28.5,0.029918533; 28.55,
              0.029918533; 28.6,0.029918533; 28.65,0.029918533; 28.7,
              0.029918533; 28.75,0.029918533; 28.8,0.029918533; 28.85,
              0.029918533; 28.9,0.029918533; 28.95,0.029918533; 29,0.031481994;
              29.05,0.031481994; 29.1,0.031481994; 29.15,0.031481994; 29.2,
              0.031481994; 29.25,0.031481994; 29.3,0.031481994; 29.35,
              0.031481994; 29.4,0.031481994; 29.45,0.031481994; 29.5,
              0.030717462; 29.55,0.030717462; 29.6,0.030717462; 29.65,
              0.030717462; 29.7,0.030717462; 29.75,0.030717462; 29.8,
              0.030717462; 29.85,0.030717462; 29.9,0.030717462; 29.95,
              0.030717462],        smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-94},{-98,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.05,
              0; 0.1,0; 0.15,0; 0.2,0; 0.25,0; 0.3,0; 0.35,0; 0.4,0; 0.45,0;
              0.5,0.016433602; 0.55,0.016433602; 0.6,0.016433602; 0.65,
              0.016433602; 0.7,0.016433602; 0.75,0.016433602; 0.8,0.016433602;
              0.85,0.016433602; 0.9,0.016433602; 0.95,0.016433602; 1,
              0.001180323; 1.05,0.001180323; 1.1,0.001180323; 1.15,0.001180323;
              1.2,0.001180323; 1.25,0.001180323; 1.3,0.001180323; 1.35,
              0.001180323; 1.4,0.001180323; 1.45,0.001180323; 1.5,0.001148433;
              1.55,0.001148433; 1.6,0.001148433; 1.65,0.001148433; 1.7,
              0.001148433; 1.75,0.001148433; 1.8,0.001148433; 1.85,0.001148433;
              1.9,0.001148433; 1.95,0.001148433; 2,0.001749612; 2.05,
              0.001749612; 2.1,0.001749612; 2.15,0.001749612; 2.2,0.001749612;
              2.25,0.001749612; 2.3,0.001749612; 2.35,0.001749612; 2.4,
              0.001749612; 2.45,0.001749612; 2.5,0.001760823; 2.55,0.001760823;
              2.6,0.001760823; 2.65,0.001760823; 2.7,0.001760823; 2.75,
              0.001760823; 2.8,0.001760823; 2.85,0.001760823; 2.9,0.001760823;
              2.95,0.001760823; 3,0.002452975; 3.05,0.002452975; 3.1,
              0.002452975; 3.15,0.002452975; 3.2,0.002452975; 3.25,0.002452975;
              3.3,0.002452975; 3.35,0.002452975; 3.4,0.002452975; 3.45,
              0.002452975; 3.5,0.002726732; 3.55,0.002726732; 3.6,0.002726732;
              3.65,0.002726732; 3.7,0.002726732; 3.75,0.002726732; 3.8,
              0.002726732; 3.85,0.002726732; 3.9,0.002726732; 3.95,0.002726732;
              4,0.003852596; 4.05,0.003852596; 4.1,0.003852596; 4.15,
              0.003852596; 4.2,0.003852596; 4.25,0.003852596; 4.3,0.003852596;
              4.35,0.003852596; 4.4,0.003852596; 4.45,0.003852596; 4.5,
              0.003318655; 4.55,0.003318655; 4.6,0.003318655; 4.65,0.003318655;
              4.7,0.003318655; 4.75,0.003318655; 4.8,0.003318655; 4.85,
              0.003318655; 4.9,0.003318655; 4.95,0.003318655; 5,0.002726848;
              5.05,0.002726848; 5.1,0.002726848; 5.15,0.002726848; 5.2,
              0.002726848; 5.25,0.002726848; 5.3,0.002726848; 5.35,0.002726848;
              5.4,0.002726848; 5.45,0.002726848; 5.5,0.003174004; 5.55,
              0.003174004; 5.6,0.003174004; 5.65,0.003174004; 5.7,0.003174004;
              5.75,0.003174004; 5.8,0.003174004; 5.85,0.003174004; 5.9,
              0.003174004; 5.95,0.003174004; 6,0.002927458; 6.05,0.002927458;
              6.1,0.002927458; 6.15,0.002927458; 6.2,0.002927458; 6.25,
              0.002927458; 6.3,0.002927458; 6.35,0.002927458; 6.4,0.002927458;
              6.45,0.002927458; 6.5,0.002778706; 6.55,0.002778706; 6.6,
              0.002778706; 6.65,0.002778706; 6.7,0.002778706; 6.75,0.002778706;
              6.8,0.002778706; 6.85,0.002778706; 6.9,0.002778706; 6.95,
              0.002778706; 7,0.002805746; 7.05,0.002805746; 7.1,0.002805746;
              7.15,0.002805746; 7.2,0.002805746; 7.25,0.002805746; 7.3,
              0.002805746; 7.35,0.002805746; 7.4,0.002805746; 7.45,0.002805746;
              7.5,0.002989569; 7.55,0.002989569; 7.6,0.002989569; 7.65,
              0.002989569; 7.7,0.002989569; 7.75,0.002989569; 7.8,0.002989569;
              7.85,0.002989569; 7.9,0.002989569; 7.95,0.002989569; 8,
              0.002819607; 8.05,0.002819607; 8.1,0.002819607; 8.15,0.002819607;
              8.2,0.002819607; 8.25,0.002819607; 8.3,0.002819607; 8.35,
              0.002819607; 8.4,0.002819607; 8.45,0.002819607; 8.5,0.002845652;
              8.55,0.002845652; 8.6,0.002845652; 8.65,0.002845652; 8.7,
              0.002845652; 8.75,0.002845652; 8.8,0.002845652; 8.85,0.002845652;
              8.9,0.002845652; 8.95,0.002845652; 9,0.002932563; 9.05,
              0.002932563; 9.1,0.002932563; 9.15,0.002932563; 9.2,0.002932563;
              9.25,0.002932563; 9.3,0.002932563; 9.35,0.002932563; 9.4,
              0.002932563; 9.45,0.002932563; 9.5,0.002936716; 9.55,0.002936716;
              9.6,0.002936716; 9.65,0.002936716; 9.7,0.002936716; 9.75,
              0.002936716; 9.8,0.002936716; 9.85,0.002936716; 9.9,0.002936716;
              9.95,0.002936716; 10,0.003237101; 10.05,0.003237101; 10.1,
              0.003237101; 10.15,0.003237101; 10.2,0.003237101; 10.25,
              0.003237101; 10.3,0.003237101; 10.35,0.003237101; 10.4,
              0.003237101; 10.45,0.003237101; 10.5,0.002447014; 10.55,
              0.002447014; 10.6,0.002447014; 10.65,0.002447014; 10.7,
              0.002447014; 10.75,0.002447014; 10.8,0.002447014; 10.85,
              0.002447014; 10.9,0.002447014; 10.95,0.002447014; 11,0.002974532;
              11.05,0.002974532; 11.1,0.002974532; 11.15,0.002974532; 11.2,
              0.002974532; 11.25,0.002974532; 11.3,0.002974532; 11.35,
              0.002974532; 11.4,0.002974532; 11.45,0.002974532; 11.5,
              0.002826518; 11.55,0.002826518; 11.6,0.002826518; 11.65,
              0.002826518; 11.7,0.002826518; 11.75,0.002826518; 11.8,
              0.002826518; 11.85,0.002826518; 11.9,0.002826518; 11.95,
              0.002826518; 12,0.003145805; 12.05,0.003145805; 12.1,0.003145805;
              12.15,0.003145805; 12.2,0.003145805; 12.25,0.003145805; 12.3,
              0.003145805; 12.35,0.003145805; 12.4,0.003145805; 12.45,
              0.003145805; 12.5,0.002762071; 12.55,0.002762071; 12.6,
              0.002762071; 12.65,0.002762071; 12.7,0.002762071; 12.75,
              0.002762071; 12.8,0.002762071; 12.85,0.002762071; 12.9,
              0.002762071; 12.95,0.002762071; 13,0.002800813; 13.05,0.002800813;
              13.1,0.002800813; 13.15,0.002800813; 13.2,0.002800813; 13.25,
              0.002800813; 13.3,0.002800813; 13.35,0.002800813; 13.4,
              0.002800813; 13.45,0.002800813; 13.5,0.003124214; 13.55,
              0.003124214; 13.6,0.003124214; 13.65,0.003124214; 13.7,
              0.003124214; 13.75,0.003124214; 13.8,0.003124214; 13.85,
              0.003124214; 13.9,0.003124214; 13.95,0.003124214; 14,0.002517827;
              14.05,0.002517827; 14.1,0.002517827; 14.15,0.002517827; 14.2,
              0.002517827; 14.25,0.002517827; 14.3,0.002517827; 14.35,
              0.002517827; 14.4,0.002517827; 14.45,0.002517827; 14.5,
              0.003085943; 14.55,0.003085943; 14.6,0.003085943; 14.65,
              0.003085943; 14.7,0.003085943; 14.75,0.003085943; 14.8,
              0.003085943; 14.85,0.003085943; 14.9,0.003085943; 14.95,
              0.003085943; 15,0.002949414; 15.05,0.002949414; 15.1,0.002949414;
              15.15,0.002949414; 15.2,0.002949414; 15.25,0.002949414; 15.3,
              0.002949414; 15.35,0.002949414; 15.4,0.002949414; 15.45,
              0.002949414; 15.5,0.002752604; 15.55,0.002752604; 15.6,
              0.002752604; 15.65,0.002752604; 15.7,0.002752604; 15.75,
              0.002752604; 15.8,0.002752604; 15.85,0.002752604; 15.9,
              0.002752604; 15.95,0.002752604; 16,0.003383744; 16.05,0.003383744;
              16.1,0.003383744; 16.15,0.003383744; 16.2,0.003383744; 16.25,
              0.003383744; 16.3,0.003383744; 16.35,0.003383744; 16.4,
              0.003383744; 16.45,0.003383744; 16.5,0.002485506; 16.55,
              0.002485506; 16.6,0.002485506; 16.65,0.002485506; 16.7,
              0.002485506; 16.75,0.002485506; 16.8,0.002485506; 16.85,
              0.002485506; 16.9,0.002485506; 16.95,0.002485506; 17,0.002283357;
              17.05,0.002283357; 17.1,0.002283357; 17.15,0.002283357; 17.2,
              0.002283357; 17.25,0.002283357; 17.3,0.002283357; 17.35,
              0.002283357; 17.4,0.002283357; 17.45,0.002283357; 17.5,
              0.003174278; 17.55,0.003174278; 17.6,0.003174278; 17.65,
              0.003174278; 17.7,0.003174278; 17.75,0.003174278; 17.8,
              0.003174278; 17.85,0.003174278; 17.9,0.003174278; 17.95,
              0.003174278; 18,0.003011166; 18.05,0.003011166; 18.1,0.003011166;
              18.15,0.003011166; 18.2,0.003011166; 18.25,0.003011166; 18.3,
              0.003011166; 18.35,0.003011166; 18.4,0.003011166; 18.45,
              0.003011166; 18.5,0.002726948; 18.55,0.002726948; 18.6,
              0.002726948; 18.65,0.002726948; 18.7,0.002726948; 18.75,
              0.002726948; 18.8,0.002726948; 18.85,0.002726948; 18.9,
              0.002726948; 18.95,0.002726948; 19,0.002969975; 19.05,0.002969975;
              19.1,0.002969975; 19.15,0.002969975; 19.2,0.002969975; 19.25,
              0.002969975; 19.3,0.002969975; 19.35,0.002969975; 19.4,
              0.002969975; 19.45,0.002969975; 19.5,0.003042256; 19.55,
              0.003042256; 19.6,0.003042256; 19.65,0.003042256; 19.7,
              0.003042256; 19.75,0.003042256; 19.8,0.003042256; 19.85,
              0.003042256; 19.9,0.003042256; 19.95,0.003042256; 20,0.002768111;
              20.05,0.002768111; 20.1,0.002768111; 20.15,0.002768111; 20.2,
              0.002768111; 20.25,0.002768111; 20.3,0.002768111; 20.35,
              0.002768111; 20.4,0.002768111; 20.45,0.002768111; 20.5,
              0.002782242; 20.55,0.002782242; 20.6,0.002782242; 20.65,
              0.002782242; 20.7,0.002782242; 20.75,0.002782242; 20.8,
              0.002782242; 20.85,0.002782242; 20.9,0.002782242; 20.95,
              0.002782242; 21,0.002606085; 21.05,0.002606085; 21.1,0.002606085;
              21.15,0.002606085; 21.2,0.002606085; 21.25,0.002606085; 21.3,
              0.002606085; 21.35,0.002606085; 21.4,0.002606085; 21.45,
              0.002606085; 21.5,0.003062441; 21.55,0.003062441; 21.6,
              0.003062441; 21.65,0.003062441; 21.7,0.003062441; 21.75,
              0.003062441; 21.8,0.003062441; 21.85,0.003062441; 21.9,
              0.003062441; 21.95,0.003062441; 22,0.002955774; 22.05,0.002955774;
              22.1,0.002955774; 22.15,0.002955774; 22.2,0.002955774; 22.25,
              0.002955774; 22.3,0.002955774; 22.35,0.002955774; 22.4,
              0.002955774; 22.45,0.002955774; 22.5,0.002824636; 22.55,
              0.002824636; 22.6,0.002824636; 22.65,0.002824636; 22.7,
              0.002824636; 22.75,0.002824636; 22.8,0.002824636; 22.85,
              0.002824636; 22.9,0.002824636; 22.95,0.002824636; 23,0.002807662;
              23.05,0.002807662; 23.1,0.002807662; 23.15,0.002807662; 23.2,
              0.002807662; 23.25,0.002807662; 23.3,0.002807662; 23.35,
              0.002807662; 23.4,0.002807662; 23.45,0.002807662; 23.5,
              0.002761244; 23.55,0.002761244; 23.6,0.002761244; 23.65,
              0.002761244; 23.7,0.002761244; 23.75,0.002761244; 23.8,
              0.002761244; 23.85,0.002761244; 23.9,0.002761244; 23.95,
              0.002761244; 24,0.003063291; 24.05,0.003063291; 24.1,0.003063291;
              24.15,0.003063291; 24.2,0.003063291; 24.25,0.003063291; 24.3,
              0.003063291; 24.35,0.003063291; 24.4,0.003063291; 24.45,
              0.003063291; 24.5,0.002941485; 24.55,0.002941485; 24.6,
              0.002941485; 24.65,0.002941485; 24.7,0.002941485; 24.75,
              0.002941485; 24.8,0.002941485; 24.85,0.002941485; 24.9,
              0.002941485; 24.95,0.002941485; 25,0.002507183; 25.05,0.002507183;
              25.1,0.002507183; 25.15,0.002507183; 25.2,0.002507183; 25.25,
              0.002507183; 25.3,0.002507183; 25.35,0.002507183; 25.4,
              0.002507183; 25.45,0.002507183; 25.5,0.002826389; 25.55,
              0.002826389; 25.6,0.002826389; 25.65,0.002826389; 25.7,
              0.002826389; 25.75,0.002826389; 25.8,0.002826389; 25.85,
              0.002826389; 25.9,0.002826389; 25.95,0.002826389; 26,0.002892385;
              26.05,0.002892385; 26.1,0.002892385; 26.15,0.002892385; 26.2,
              0.002892385; 26.25,0.002892385; 26.3,0.002892385; 26.35,
              0.002892385; 26.4,0.002892385; 26.45,0.002892385; 26.5,
              0.003113336; 26.55,0.003113336; 26.6,0.003113336; 26.65,
              0.003113336; 26.7,0.003113336; 26.75,0.003113336; 26.8,
              0.003113336; 26.85,0.003113336; 26.9,0.003113336; 26.95,
              0.003113336; 27,0.002615768; 27.05,0.002615768; 27.1,0.002615768;
              27.15,0.002615768; 27.2,0.002615768; 27.25,0.002615768; 27.3,
              0.002615768; 27.35,0.002615768; 27.4,0.002615768; 27.45,
              0.002615768; 27.5,0.002902618; 27.55,0.002902618; 27.6,
              0.002902618; 27.65,0.002902618; 27.7,0.002902618; 27.75,
              0.002902618; 27.8,0.002902618; 27.85,0.002902618; 27.9,
              0.002902618; 27.95,0.002902618; 28,0.002861402; 28.05,0.002861402;
              28.1,0.002861402; 28.15,0.002861402; 28.2,0.002861402; 28.25,
              0.002861402; 28.3,0.002861402; 28.35,0.002861402; 28.4,
              0.002861402; 28.45,0.002861402; 28.5,0.002643035; 28.55,
              0.002643035; 28.6,0.002643035; 28.65,0.002643035; 28.7,
              0.002643035; 28.75,0.002643035; 28.8,0.002643035; 28.85,
              0.002643035; 28.9,0.002643035; 28.95,0.002643035; 29,0.003026269;
              29.05,0.003026269; 29.1,0.003026269; 29.15,0.003026269; 29.2,
              0.003026269; 29.25,0.003026269; 29.3,0.003026269; 29.35,
              0.003026269; 29.4,0.003026269; 29.45,0.003026269; 29.5,
              0.002777441; 29.55,0.002777441; 29.6,0.002777441; 29.65,
              0.002777441; 29.7,0.002777441; 29.75,0.002777441; 29.8,
              0.002777441; 29.85,0.002777441; 29.9,0.002777441; 29.95,
              0.002777441],        smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-118,-120},{-98,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = Bus6.v;

      OUT12 =PV.rEGCA1_1.Pgen;
      OUT13 =PV.rEGCA1_1.Qgen;
      OUT14 =PV.rEGCA1_1.p.ir;
      OUT15 =PV.rEGCA1_1.p.ii;
      OUT16 = Bus8.v;

      OUT17 =BESS.rEGCA1_1.Pgen;
      OUT18 =BESS.rEGCA1_1.Qgen;
      OUT19 =BESS.rEGCA1_1.p.ir;
      OUT20 =BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;

      OUT22 = Load2.P;
      OUT23 = Load2.Q;

      OUT24 = Bus5.v;
      OUT25 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-97,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-97,-10},
                {-50,-10},{-50,4},{-42,4}},color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-97,-38},
                {-50,-38},{-50,-50},{-42,-50}},
                                           color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-97,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-97,
                -110},{-50,-110},{-50,-96},{-42,-96}},
                                                 color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=30,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_v3_table2;
    end Testing_Kalman_Filter_State_Estimation;
  end Luigi_Vanfretti_Special_Package;
  extends Modelica.Icons.ExamplesPackage;

  package GenerationUnits "Package containing generators for MPC studies"
    model REGCA1_OBSERVABILITY
      "Renewable energy generator/converter model A"
      extends Electrical.Renewables.PSSE.InverterInterface.BaseClasses.BaseREGC;
      Modelica.Blocks.Sources.RealExpression Vt(y=VT)
        annotation (Placement(transformation(extent={{-130,40},{-110,60}})));
      Modelica.Blocks.Math.Add add(k2=-1)
        annotation (Placement(transformation(extent={{-90,20},{-70,40}})));
      Modelica.Blocks.Sources.Constant Vo_limit(k=Volim)
        annotation (Placement(transformation(extent={{-130,14},{-110,34}})));
      Modelica.Blocks.Nonlinear.Limiter min_limiter(uMax=Modelica.Constants.inf,
          uMin=0) annotation (Placement(transformation(extent={{-30,20},{-10,40}})));
      Modelica.Blocks.Math.Add add1(k2=-1)
        annotation (Placement(transformation(extent={{78,78},{98,98}})));
      Modelica.Blocks.Nonlinear.Limiter IOLIM(uMax=Modelica.Constants.inf,
                                                        uMin=Iolim)
        annotation (Placement(transformation(extent={{112,78},{132,98}})));
      OpenIPSL.Electrical.Renewables.PSSE.InverterInterface.BaseClasses.LVACM LVACM(lvpnt0=
            lvpnt0, lvpnt1=lvpnt1)
        annotation (Placement(transformation(extent={{62,-80},{82,-60}})));
      OpenIPSL.Electrical.Renewables.PSSE.InverterInterface.BaseClasses.LVPL LVPL(
        Brkpt=Brkpt,
        Lvpl1=Lvpl1,
        Zerox=Zerox)
        annotation (Placement(transformation(extent={{10,-80},{-10,-60}})));
      Modelica.Blocks.Math.Product IP
        annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
    public
      Modelica.Blocks.Math.Gain KHV(k=Khv)
        annotation (Placement(transformation(extent={{-60,20},{-40,40}})));
      Modelica.Blocks.Logical.Switch switch1 annotation (Placement(
            transformation(
            extent={{10,-10},{-10,10}},
            origin={-80,-90})));
      Modelica.Blocks.Sources.BooleanConstant Lvplsw_logic(k=Lvplsw)
        annotation (Placement(transformation(extent={{-30,-100},{-50,-80}})));
      Modelica.Blocks.Sources.RealExpression Terminal_Voltage1(y=VT)   annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            origin={34,-100})));
      Modelica.Blocks.Sources.RealExpression LowerLimit(y=-Modelica.Constants.inf)
        annotation (Placement(transformation(extent={{-80,-70},{-60,-50}})));
      Modelica.Blocks.Math.Gain gain(k=-1)
        annotation (Placement(transformation(extent={{-120,70},{-100,90}})));
      Modelica.Blocks.Sources.RealExpression Constant(y=Modelica.Constants.inf)
        annotation (Placement(transformation(extent={{-30,-124},{-50,-104}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{-20,-40},{0,-20}})));
      Modelica.Blocks.Continuous.FirstOrder Delay_Iq(
        T=Tg,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=Iq0)
        annotation (Placement(transformation(extent={{-88,70},{-68,90}})));
      Modelica.Blocks.Continuous.FirstOrder Vt_sensor(
        T=Tfltr,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=v_0)
        annotation (Placement(transformation(extent={{44,-80},{24,-60}})));
      Modelica.Blocks.Continuous.FirstOrder Delay_Ip(
        T=Tg,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=Ip0)
        annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
    equation
      [IP.y; IOLIM.y] = -[cos(delta), sin(delta); -sin(delta), cos(delta)]*[p.ir/CoB; p.ii/CoB];
      V_t = VT;
      Pgen = -(1/CoB)*(p.vr*p.ir + p.vi*p.ii);
      Qgen = -(1/CoB)*(p.vi*p.ir - p.vr*p.ii);
      IQ0 = Iq0;
      IP0 = Ip0;
      V_0 = v_0;
      p_0 = p0;
      q_0 = q0;

      connect(add.y,KHV. u)
        annotation (Line(points={{-69,30},{-62,30}},
                                                  color={0,0,127}));
      connect(LVACM.y,IP. u2) annotation (Line(points={{83,-70},{90,-70},{90,-36},{98,
              -36}},             color={0,0,127}));
      connect(switch1.u1,LVPL. y)
        annotation (Line(points={{-68,-82},{-56,-82},{-56,-70},{-11,-70}},
                                                               color={0,0,127}));
      connect(Lvplsw_logic.y,switch1. u2) annotation (Line(points={{-51,-90},{-68,-90}},
                                    color={255,0,255}));
      connect(KHV.y,min_limiter. u)
        annotation (Line(points={{-39,30},{-32,30}},
                                                   color={0,0,127}));
      connect(Vt.y,add. u1) annotation (Line(points={{-109,50},{-94,50},{-94,36},{-92,
              36}}, color={0,0,127}));
      connect(Vo_limit.y,add. u2)
        annotation (Line(points={{-109,24},{-92,24}},color={0,0,127}));
      connect(Terminal_Voltage1.y,LVACM. Vt) annotation (Line(points={{45,-100},{54,-100},{54,-70},{60,-70}},
                                         color={0,0,127}));
      connect(gain.u, Iqcmd) annotation (Line(points={{-122,80},{-134,80},{-134,80},
              {-160,80}}, color={0,0,127}));
      connect(Constant.y, switch1.u3) annotation (Line(points={{-51,-114},{-62,-114},
              {-62,-98},{-68,-98}}, color={0,0,127}));
      connect(LowerLimit.y, variableLimiter.limit2) annotation (Line(points={{-59,
              -60},{-28,-60},{-28,-38},{-22,-38}}, color={0,0,127}));
      connect(variableLimiter.limit1, switch1.y) annotation (Line(points={{-22,-22},
              {-26,-22},{-26,-4},{-124,-4},{-124,-90},{-91,-90}}, color={0,0,127}));
      connect(add1.y, IOLIM.u)
        annotation (Line(points={{99,88},{110,88}}, color={0,0,127}));
      connect(min_limiter.y, add1.u2) annotation (Line(points={{-9,30},{68,30},{
              68,82},{76,82}}, color={0,0,127}));
      connect(variableLimiter.y, IP.u1) annotation (Line(points={{1,-30},{88,-30},{88,
              -24},{98,-24}}, color={0,0,127}));
      connect(gain.y, Delay_Iq.u)
        annotation (Line(points={{-99,80},{-90,80}}, color={0,0,127}));
      connect(Delay_Iq.y, add1.u1) annotation (Line(points={{-67,80},{40,80},{40,94},
              {76,94}}, color={0,0,127}));
      connect(LVPL.V, Vt_sensor.y)
        annotation (Line(points={{12,-70},{23,-70}}, color={0,0,127}));
      connect(Vt_sensor.u, LVACM.Vt)
        annotation (Line(points={{46,-70},{60,-70}}, color={0,0,127}));
      connect(Delay_Ip.y, variableLimiter.u)
        annotation (Line(points={{-59,-30},{-22,-30}}, color={0,0,127}));
      connect(Delay_Ip.u, Ipcmd) annotation (Line(points={{-82,-30},{-106,-30},{-106,
              -80},{-160,-80}}, color={0,0,127}));
      annotation (Icon(graphics={Text(
              extent={{-82,70},{98,-70}},
              textColor={0,0,255},
              textString="REGCA")}), Documentation(info="<html>
<p>The REGCA1 component is used to represent the renewable source (inverter) interface with the grid. It takes in as input the real current command
(Ipcmd) and the reactive current command (Iqcmd) from the electrical controller, and outputs real (Ip) and reactive (Iq) injected currents to the grid through
OpenIPSL's proprietary pwpin connector.</p>
<p>In order to properly initialize all the components that form the renewable energy source, the REGC_A component has five initialization outputs, which its constant output originates from the
starting power flow: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0). This method reduces repetitiveness of initialization calculation, being calculated once at the REGCA1 component.</p>
<p>The connection with other components requires a closed loop through terminal voltage variable (V_t), and active and reactive power generation (Pgen and Qgen).</p>
<p>The modelling of such devices is based, mainly, on the following reference:</p>
<ul>
<li><p>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>.</p>
</li>
</ul>
</html>"));
    end REGCA1_OBSERVABILITY;

    model GASTMPC_THERMAL "GAST - Gas Turbine-Governor"
      extends Icons.VerifiedModel;
      extends Electrical.Controls.PSSE.TG.BaseClasses.BaseGovernor;
      parameter Types.PerUnit R=0.05 "Speed droop gain";
      parameter Types.Time T_1=0.4 "Valve response time constant";
      parameter Types.Time T_2=0.1 "Turbine response time constant";
      parameter Types.Time T_3=3.0 "Load limit response time constant";
      parameter Types.PerUnit AT=0.9 "Ambient temperature load limit";
      parameter Types.PerUnit K_T=2.0 "Load-limited feedback path adjustment gain";
      parameter Types.PerUnit V_MAX=0.1 "Operational control high limit on fuel valve opening";
      parameter Types.PerUnit V_MIN=0.025 "Low output control limit on fuel valve opening";
      parameter Types.PerUnit D_turb=0.0 "Turbine damping";
      Modelica.Blocks.Math.Add add(k1=-1)
        annotation (Placement(transformation(extent={{-80,16},{-60,-4}})));
      Modelica.Blocks.Math.Add add1(k2=-1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={40,-50})));
      Modelica.Blocks.Math.Add add2(k2=+1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-20,-56})));
      Modelica.Blocks.Math.Add add3(k1=-1)
        annotation (Placement(transformation(extent={{120,-10},{140,10}})));
      Modelica.Blocks.Math.Gain gDturb(k=D_turb)
        annotation (Placement(transformation(extent={{-40,29},{-20,50}})));
      Modelica.Blocks.Math.Gain gKt(k=K_T) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-50})));
      Modelica.Blocks.Math.Gain g1_R(k=1/R) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            origin={-110,0})));
      NonElectrical.Logical.LV_GATE lV_Gate
        annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));
      Modelica.Blocks.Sources.Constant const(k=AT)
        annotation (Placement(transformation(extent={{90,-80},{70,-60}})));
      NonElectrical.Continuous.SimpleLag    simpleLagLim(
        K=1,
        T=T_1,
        y_start=pm0) annotation (Placement(transformation(extent={{0,-10},{20,10}})));
      Modelica.Blocks.Interfaces.RealInput PMECHControllable annotation (Placement(
            transformation(extent={{-260,110},{-220,150}}), iconTransformation(
            extent={{-20,-20},{20,20}},
            rotation=90,
            origin={0,-120})));
      Modelica.Blocks.Math.Add add4(k1=+1)
        annotation (Placement(transformation(extent={{-180,120},{-160,100}})));
      Modelica.Blocks.Interfaces.RealOutput TF2_out
        "Connector of Real output signal" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={68,-210}), iconTransformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={90,110})));
      Modelica.Blocks.Nonlinear.Limiter limiter(uMax=V_MAX, uMin=V_MIN)
        annotation (Placement(transformation(extent={{32,-10},{52,10}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=T_2,
        y_start=pm0)
        annotation (Placement(transformation(extent={{70,-10},{90,10}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=T_3,
        y_start=pm0)
        annotation (Placement(transformation(extent={{100,-42},{80,-22}})));
    protected
      parameter Types.PerUnit pm0(fixed=false);
    initial algorithm
      pm0 := PMECH0;
    equation
      connect(gDturb.y, add3.u1) annotation (Line(
          points={{-19,39.5},{100,39.5},{100,6},{118,6}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(g1_R.y, add.u1) annotation (Line(
          points={{-99,0},{-82,0}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(add1.y, gKt.u) annotation (Line(
          points={{29,-50},{22,-50}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(gKt.y, add2.u2) annotation (Line(
          points={{-1,-50},{-8,-50}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(add.y,lV_Gate.u1) annotation (Line(
          points={{-59,6},{-42,6}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(lV_Gate.u2, add2.y) annotation (Line(
          points={{-42,-6},{-48,-6},{-48,-56},{-31,-56}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(const.y, add2.u1) annotation (Line(points={{69,-70},{0,-70},{0,-62},{-8,-62}},
                          color={0,0,127}));
      connect(simpleLagLim.u,lV_Gate.y) annotation (Line(points={{-2,0},{-19,0}},
                                     color={0,0,127}));
      connect(add3.y, PMECH)
        annotation (Line(points={{141,0},{250,0}}, color={0,0,127}));
      connect(SPEED, g1_R.u) annotation (Line(points={{-240,-120},{-152,-120},{-152,0},{-122,0}},
                                color={0,0,127}));
      connect(gDturb.u, g1_R.u) annotation (Line(points={{-42,39.5},{-152,39.5},{-152,0},{-122,0}},
                           color={0,0,127}));
      connect(add1.u1, const.y) annotation (Line(points={{52,-56},{60,-56},{60,-70},{69,-70}}, color={0,0,127}));
      connect(add4.u2, PMECHControllable) annotation (Line(points={{-182,116},{-214,
              116},{-214,130},{-240,130}}, color={0,0,127}));
      connect(PMECH0, add4.u1) annotation (Line(points={{-240,80},{-190,80},{-190,
              104},{-182,104}}, color={0,0,127}));
      connect(add4.y, add.u2) annotation (Line(points={{-159,110},{-88,110},{-88,12},
              {-82,12}}, color={0,0,127}));
      connect(simpleLagLim.y, limiter.u)
        annotation (Line(points={{21,0},{30,0}}, color={0,0,127}));
      connect(simpleLag.y, add3.u2) annotation (Line(points={{91,0},{108,0},{108,-6},
              {118,-6}}, color={0,0,127}));
      connect(limiter.y, simpleLag.u)
        annotation (Line(points={{53,0},{68,0}}, color={0,0,127}));
      connect(simpleLag1.u, add3.u2) annotation (Line(points={{102,-32},{108,-32},{
              108,-6},{118,-6}}, color={0,0,127}));
      connect(simpleLag1.y, add1.u2) annotation (Line(points={{79,-32},{60,-32},{60,
              -44},{52,-44}}, color={0,0,127}));
      connect(TF2_out, add1.u2) annotation (Line(points={{68,-210},{68,-124},{134,
              -124},{134,-42},{68,-42},{68,-32},{60,-32},{60,-44},{52,-44}}, color=
              {0,0,127}));
      annotation (
        Diagram(coordinateSystem(
            extent={{-240,-200},{240,180}},
            preserveAspectRatio=false,
            grid={2,2})),
        Icon(coordinateSystem(
            extent={{-100,-100},{100,100}},
            preserveAspectRatio=false,
            grid={2,2}),
            graphics={Text(
              extent={{-100,160},{100,100}},
              lineColor={28,108,200},
              textString="GAST")}),
        Documentation(info="<html>Gas Turbine-Governor Model.</html>",
      revisions="<html>
<table cellspacing=\"1\" cellpadding=\"1\" border=\"1\">
<tr>
<td><p>Reference</p></td>
<td><p>PSS&reg;E Manual</p></td>
</tr>
<tr>
<td><p>Last update</p></td>
<td><p>2020-09</p></td>
</tr>
<tr>
<td><p>Author</p></td>
<td><p>ALSETLab, Rensselaer Polytechnic Institute</p></td>
</tr>
<tr>
<td><p>Contact</p></td>
<td><p>see <a href=\"modelica://OpenIPSL.UsersGuide.Contact\">UsersGuide.Contact</a></p></td>
</tr>
</table>
</html>"));
    end GASTMPC_THERMAL;

    model GASTMPCforthreeentradas "GAST - Gas Turbine-Governor"
      extends Icons.VerifiedModel;
      extends Electrical.Controls.PSSE.TG.BaseClasses.BaseGovernor;
      parameter Types.PerUnit R=0.05 "Speed droop gain";
      parameter Types.Time T_1=0.4 "Valve response time constant";
      parameter Types.Time T_2=0.1 "Turbine response time constant";
      parameter Types.Time T_3=3.0 "Load limit response time constant";
      parameter Types.PerUnit AT=0.9 "Ambient temperature load limit";
      parameter Types.PerUnit K_T=2.0 "Load-limited feedback path adjustment gain";
      parameter Types.PerUnit V_MAX=1.0 "Operational control high limit on fuel valve opening";
      parameter Types.PerUnit V_MIN=-0.05 "Low output control limit on fuel valve opening";
      parameter Types.PerUnit D_turb=0.0 "Turbine damping";
      Modelica.Blocks.Math.Add add(k1=-1)
        annotation (Placement(transformation(extent={{-80,16},{-60,-4}})));
      Modelica.Blocks.Math.Add add1(k2=-1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={40,-50})));
      Modelica.Blocks.Math.Add add2(k2=+1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-20,-56})));
      Modelica.Blocks.Math.Add add3(k1=-1)
        annotation (Placement(transformation(extent={{120,-10},{140,10}})));
      Modelica.Blocks.Math.Gain gDturb(k=D_turb)
        annotation (Placement(transformation(extent={{-40,29},{-20,50}})));
      Modelica.Blocks.Math.Gain gKt(k=K_T) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-50})));
      Modelica.Blocks.Math.Gain g1_R(k=1/R) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            origin={-110,0})));
      NonElectrical.Logical.LV_GATE lV_Gate
        annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));
      Modelica.Blocks.Continuous.TransferFunction transferFunction1(a={T_2,1},
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=pm0)
        annotation (Placement(transformation(extent={{64,-10},{84,10}})));
      Modelica.Blocks.Continuous.TransferFunction transferFunction2(a={T_3,1},
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=pm0)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={80,-30})));
      Modelica.Blocks.Sources.Constant const(k=AT)
        annotation (Placement(transformation(extent={{90,-80},{70,-60}})));
      NonElectrical.Continuous.SimpleLag    simpleLagLim(
        K=1,
        T=T_1,
        y_start=pm0) annotation (Placement(transformation(extent={{0,-10},{20,10}})));
      Modelica.Blocks.Interfaces.RealInput PMECHControllable1 annotation (Placement(
            transformation(extent={{-260,110},{-220,150}}), iconTransformation(
            extent={{-20,-20},{20,20}},
            rotation=90,
            origin={-60,-120})));
      Modelica.Blocks.Math.Add3 add3_1(
                                    k1=+1)
        annotation (Placement(transformation(extent={{-180,120},{-160,100}})));
      Modelica.Blocks.Interfaces.RealOutput TF2_out
        "Connector of Real output signal" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={68,-210}), iconTransformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={90,110})));
      Modelica.Blocks.Nonlinear.Limiter limiter(uMax=V_MAX, uMin=V_MIN)
        annotation (Placement(transformation(extent={{32,-10},{52,10}})));
      Modelica.Blocks.Interfaces.RealInput PMECHControllable2
        "Connector of Real input signal 3" annotation (Placement(transformation(
            extent={{-20,-20},{20,20}},
            rotation=0,
            origin={-240,160}), iconTransformation(
            extent={{-20,-20},{20,20}},
            rotation=90,
            origin={60,-120})));
    protected
      parameter Types.PerUnit pm0(fixed=false);
    initial algorithm
      pm0 := PMECH0;
    equation
      connect(gDturb.y, add3.u1) annotation (Line(
          points={{-19,39.5},{100,39.5},{100,6},{118,6}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(g1_R.y, add.u1) annotation (Line(
          points={{-99,0},{-82,0}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(add1.y, gKt.u) annotation (Line(
          points={{29,-50},{22,-50}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(gKt.y, add2.u2) annotation (Line(
          points={{-1,-50},{-8,-50}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(transferFunction2.y, add1.u2) annotation (Line(
          points={{69,-30},{60,-30},{60,-44},{52,-44}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(transferFunction1.y, add3.u2) annotation (Line(
          points={{85,0},{100,0},{100,-6},{118,-6}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(transferFunction1.y, transferFunction2.u) annotation (Line(
          points={{85,0},{100,0},{100,-30},{92,-30}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(add.y,lV_Gate.u1) annotation (Line(
          points={{-59,6},{-42,6}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(lV_Gate.u2, add2.y) annotation (Line(
          points={{-42,-6},{-48,-6},{-48,-56},{-31,-56}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(const.y, add2.u1) annotation (Line(points={{69,-70},{0,-70},{0,-62},{-8,-62}},
                          color={0,0,127}));
      connect(simpleLagLim.u,lV_Gate.y) annotation (Line(points={{-2,0},{-19,0}},
                                     color={0,0,127}));
      connect(add3.y, PMECH)
        annotation (Line(points={{141,0},{250,0}}, color={0,0,127}));
      connect(SPEED, g1_R.u) annotation (Line(points={{-240,-120},{-152,-120},{-152,0},{-122,0}},
                                color={0,0,127}));
      connect(gDturb.u, g1_R.u) annotation (Line(points={{-42,39.5},{-152,39.5},{-152,0},{-122,0}},
                           color={0,0,127}));
      connect(add1.u1, const.y) annotation (Line(points={{52,-56},{60,-56},{60,-70},{69,-70}}, color={0,0,127}));
      connect(add3_1.u2, PMECHControllable1) annotation (Line(points={{-182,110},{
              -214,110},{-214,130},{-240,130}}, color={0,0,127}));
      connect(PMECH0, add3_1.u1) annotation (Line(points={{-240,80},{-190,80},{-190,
              102},{-182,102}}, color={0,0,127}));
      connect(add3_1.y, add.u2) annotation (Line(points={{-159,110},{-88,110},{-88,
              12},{-82,12}}, color={0,0,127}));
      connect(transferFunction2.y, TF2_out) annotation (Line(points={{69,-30},{60,
              -30},{60,-54},{96,-54},{96,-194},{68,-194},{68,-210}}, color={0,0,127}));
      connect(simpleLagLim.y, limiter.u)
        annotation (Line(points={{21,0},{30,0}}, color={0,0,127}));
      connect(limiter.y, transferFunction1.u)
        annotation (Line(points={{53,0},{62,0}}, color={0,0,127}));
      connect(add3_1.u3, PMECHControllable2) annotation (Line(points={{-182,118},{
              -210,118},{-210,160},{-240,160}}, color={0,0,127}));
      annotation (
        Diagram(coordinateSystem(
            extent={{-240,-200},{240,180}},
            preserveAspectRatio=false,
            grid={2,2})),
        Icon(coordinateSystem(
            extent={{-100,-100},{100,100}},
            preserveAspectRatio=false,
            grid={2,2}),
            graphics={Text(
              extent={{-100,160},{100,100}},
              lineColor={28,108,200},
              textString="GAST")}),
        Documentation(info="<html>Gas Turbine-Governor Model.</html>",
      revisions="<html>
<table cellspacing=\"1\" cellpadding=\"1\" border=\"1\">
<tr>
<td><p>Reference</p></td>
<td><p>PSS&reg;E Manual</p></td>
</tr>
<tr>
<td><p>Last update</p></td>
<td><p>2020-09</p></td>
</tr>
<tr>
<td><p>Author</p></td>
<td><p>ALSETLab, Rensselaer Polytechnic Institute</p></td>
</tr>
<tr>
<td><p>Contact</p></td>
<td><p>see <a href=\"modelica://OpenIPSL.UsersGuide.Contact\">UsersGuide.Contact</a></p></td>
</tr>
</table>
</html>"));
    end GASTMPCforthreeentradas;

    partial model BaseExciterMPC "Base exciter model for PSSE excitation systems"
      Modelica.Blocks.Interfaces.RealInput VUEL annotation (Placement(
            transformation(
            extent={{-20,-20},{20,20}},
            rotation=90,
            origin={-130,-200}), iconTransformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={-40,-110})));
      Modelica.Blocks.Interfaces.RealInput VOEL annotation (Placement(
            transformation(
            extent={{-20,-20},{20,20}},
            rotation=90,
            origin={-70,-200}), iconTransformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={0,-110})));
      Modelica.Blocks.Interfaces.RealOutput EFD "Excitation Voltage [pu]"
        annotation (Placement(transformation(extent={{200,-10},{220,10}}), iconTransformation(extent={{100,-10},{120,10}})));
      Modelica.Blocks.Interfaces.RealInput EFD0 annotation (Placement(
            transformation(
            extent={{-20,-20},{20,20}},
            origin={-200,-130}), iconTransformation(extent={{-10,-10},{10,10}},
              origin={-110,-40})));
      Modelica.Blocks.Interfaces.RealInput VOTHSG annotation (Placement(
            transformation(
            extent={{-20,-20},{20,20}},
            origin={-200,90}), iconTransformation(extent={{-10,-10},{10,10}},
              origin={-110,40})));
      Modelica.Blocks.Interfaces.RealInput ECOMP annotation (Placement(
            transformation(
            extent={{-20,-20},{20,20}},
            origin={-200,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin={-110,0})));
      Modelica.Blocks.Sources.Constant VoltageReference(k=V_REF)
        annotation (Placement(transformation(extent={{-170,40},{-150,60}})));
      Modelica.Blocks.Math.Add DiffV(k2=-1)
        annotation (Placement(transformation(extent={{-120,-10},{-100,10}})));
    protected
      parameter Real Efd0(fixed=false);
      parameter Real V_REF(fixed=false);
      parameter Real ECOMP0(fixed=false);
    public
      Modelica.Blocks.Interfaces.RealInput XADIFD annotation (Placement(
            transformation(
            extent={{-20,-20},{20,20}},
            rotation=90,
            origin={80,-200}), iconTransformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,-110})));
      Modelica.Blocks.Math.Add sum
        annotation (Placement(transformation(extent={{-120,40},{-100,60}})));
      Modelica.Blocks.Interfaces.RealInput EFd_input
        "Connector of Real input signal 1" annotation (Placement(transformation(
            extent={{-20,-20},{20,20}},
            rotation=270,
            origin={0,180}), iconTransformation(
            extent={{0,0},{20,20}},
            rotation=0,
            origin={-120,70})));
      Modelica.Blocks.Math.Gain gain annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={-130,110})));
    initial equation
      Efd0 = EFD0;
      ECOMP0 = ECOMP;
    equation
      connect(sum.y, DiffV.u1) annotation (Line(points={{-99,50},{-90,50},{-90,26},
              {-130,26},{-130,6},{-122,6}}, color={0,0,127}));
      connect(VoltageReference.y, sum.u2) annotation (Line(points={{-149,50},{-132,
              50},{-132,44},{-122,44}}, color={0,0,127}));
      connect(gain.y, sum.u1)
        annotation (Line(points={{-130,99},{-130,56},{-122,56}}, color={0,0,127}));
      connect(gain.u, EFd_input) annotation (Line(points={{-130,122},{-130,154},{0,
              154},{0,180}}, color={0,0,127}));
      annotation (
        Icon(
            graphics={Rectangle(
              extent={{-100,100},{100,-100}},
              lineColor={28,108,200},
              fillColor={255,255,255}), Text(
              extent={{-56,-80},{-24,-100}},
              lineColor={28,108,200},
              textString="VUEL"),Text(
              extent={{-14,-80},{14,-100}},
              lineColor={28,108,200},
              textString="VOEL"),Text(
              extent={{-90,10},{-20,-10}},
              lineColor={28,108,200},
              textString="ECOMP"),Text(
              extent={{-90,50},{-20,28}},
              lineColor={28,108,200},
              textString="VOTHSG"),Text(
              extent={{-90,-30},{-40,-52}},
              lineColor={28,108,200},
              textString="EFD0"),Text(
              extent={{50,10},{90,-10}},
              lineColor={28,108,200},
              textString="EFD"), Text(
              extent={{60,-80},{100,-100}},
              lineColor={28,108,200},
              textString="XADIFD")}),
        Diagram(coordinateSystem(extent={{-200,-200},{200,160}})));
    end BaseExciterMPC;

    model GASTMPC "GAST - Gas Turbine-Governor"
      extends Icons.VerifiedModel;
      extends Electrical.Controls.PSSE.TG.BaseClasses.BaseGovernor;
      parameter Types.PerUnit R=0.05 "Speed droop gain";
      parameter Types.Time T_1=0.4 "Valve response time constant";
      parameter Types.Time T_2=0.1 "Turbine response time constant";
      parameter Types.Time T_3=3.0 "Load limit response time constant";
      parameter Types.PerUnit AT=0.9 "Ambient temperature load limit";
      parameter Types.PerUnit K_T=2.0 "Load-limited feedback path adjustment gain";
      parameter Types.PerUnit V_MAX=0.1 "Operational control high limit on fuel valve opening";
      parameter Types.PerUnit V_MIN=0.025 "Low output control limit on fuel valve opening";
      parameter Types.PerUnit D_turb=0.0 "Turbine damping";
      Modelica.Blocks.Math.Add add(k1=-1)
        annotation (Placement(transformation(extent={{-80,16},{-60,-4}})));
      Modelica.Blocks.Math.Add add1(k2=-1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={40,-50})));
      Modelica.Blocks.Math.Add add2(k2=+1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-20,-56})));
      Modelica.Blocks.Math.Add add3(k1=-1)
        annotation (Placement(transformation(extent={{120,-10},{140,10}})));
      Modelica.Blocks.Math.Gain gDturb(k=D_turb)
        annotation (Placement(transformation(extent={{-40,29},{-20,50}})));
      Modelica.Blocks.Math.Gain gKt(k=K_T) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={10,-50})));
      Modelica.Blocks.Math.Gain g1_R(k=1/R) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            origin={-110,0})));
      NonElectrical.Logical.LV_GATE lV_Gate
        annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));
      Modelica.Blocks.Sources.Constant const(k=AT)
        annotation (Placement(transformation(extent={{90,-80},{70,-60}})));
      NonElectrical.Continuous.SimpleLag    simpleLagLim(
        K=1,
        T=T_1,
        y_start=pm0) annotation (Placement(transformation(extent={{0,-10},{20,10}})));
      Modelica.Blocks.Interfaces.RealInput PMECHControllable annotation (Placement(
            transformation(extent={{-260,110},{-220,150}}), iconTransformation(
            extent={{-20,-20},{20,20}},
            rotation=90,
            origin={0,-120})));
      Modelica.Blocks.Math.Add add4(k1=+1)
        annotation (Placement(transformation(extent={{-180,120},{-160,100}})));
      Modelica.Blocks.Interfaces.RealOutput TF2_out
        "Connector of Real output signal" annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=270,
            origin={68,-210}), iconTransformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={90,110})));
      Modelica.Blocks.Nonlinear.Limiter limiter(uMax=V_MAX, uMin=V_MIN)
        annotation (Placement(transformation(extent={{32,-10},{52,10}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=T_2,
        y_start=pm0)
        annotation (Placement(transformation(extent={{70,-10},{90,10}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=T_3,
        y_start=pm0)
        annotation (Placement(transformation(extent={{100,-42},{80,-22}})));
    protected
      parameter Types.PerUnit pm0(fixed=false);
    initial algorithm
      pm0 := PMECH0;
    equation
      connect(gDturb.y, add3.u1) annotation (Line(
          points={{-19,39.5},{100,39.5},{100,6},{118,6}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(g1_R.y, add.u1) annotation (Line(
          points={{-99,0},{-82,0}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(add1.y, gKt.u) annotation (Line(
          points={{29,-50},{22,-50}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(gKt.y, add2.u2) annotation (Line(
          points={{-1,-50},{-8,-50}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(add.y,lV_Gate.u1) annotation (Line(
          points={{-59,6},{-42,6}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(lV_Gate.u2, add2.y) annotation (Line(
          points={{-42,-6},{-48,-6},{-48,-56},{-31,-56}},
          color={0,0,127},
          smooth=Smooth.None));
      connect(const.y, add2.u1) annotation (Line(points={{69,-70},{0,-70},{0,-62},{-8,-62}},
                          color={0,0,127}));
      connect(simpleLagLim.u,lV_Gate.y) annotation (Line(points={{-2,0},{-19,0}},
                                     color={0,0,127}));
      connect(add3.y, PMECH)
        annotation (Line(points={{141,0},{250,0}}, color={0,0,127}));
      connect(SPEED, g1_R.u) annotation (Line(points={{-240,-120},{-152,-120},{-152,0},{-122,0}},
                                color={0,0,127}));
      connect(gDturb.u, g1_R.u) annotation (Line(points={{-42,39.5},{-152,39.5},{-152,0},{-122,0}},
                           color={0,0,127}));
      connect(add1.u1, const.y) annotation (Line(points={{52,-56},{60,-56},{60,-70},{69,-70}}, color={0,0,127}));
      connect(add4.u2, PMECHControllable) annotation (Line(points={{-182,116},{-214,
              116},{-214,130},{-240,130}}, color={0,0,127}));
      connect(PMECH0, add4.u1) annotation (Line(points={{-240,80},{-190,80},{-190,
              104},{-182,104}}, color={0,0,127}));
      connect(add4.y, add.u2) annotation (Line(points={{-159,110},{-88,110},{-88,12},
              {-82,12}}, color={0,0,127}));
      connect(simpleLagLim.y, limiter.u)
        annotation (Line(points={{21,0},{30,0}}, color={0,0,127}));
      connect(simpleLag.y, add3.u2) annotation (Line(points={{91,0},{108,0},{108,-6},
              {118,-6}}, color={0,0,127}));
      connect(limiter.y, simpleLag.u)
        annotation (Line(points={{53,0},{68,0}}, color={0,0,127}));
      connect(simpleLag1.u, add3.u2) annotation (Line(points={{102,-32},{108,-32},{
              108,-6},{118,-6}}, color={0,0,127}));
      connect(simpleLag1.y, add1.u2) annotation (Line(points={{79,-32},{60,-32},{60,
              -44},{52,-44}}, color={0,0,127}));
      connect(TF2_out, add1.u2) annotation (Line(points={{68,-210},{68,-124},{134,
              -124},{134,-42},{68,-42},{68,-32},{60,-32},{60,-44},{52,-44}}, color=
              {0,0,127}));
      annotation (
        Diagram(coordinateSystem(
            extent={{-240,-200},{240,180}},
            preserveAspectRatio=false,
            grid={2,2})),
        Icon(coordinateSystem(
            extent={{-100,-100},{100,100}},
            preserveAspectRatio=false,
            grid={2,2}),
            graphics={Text(
              extent={{-100,160},{100,100}},
              lineColor={28,108,200},
              textString="GAST")}),
        Documentation(info="<html>Gas Turbine-Governor Model.</html>",
      revisions="<html>
<table cellspacing=\"1\" cellpadding=\"1\" border=\"1\">
<tr>
<td><p>Reference</p></td>
<td><p>PSS&reg;E Manual</p></td>
</tr>
<tr>
<td><p>Last update</p></td>
<td><p>2020-09</p></td>
</tr>
<tr>
<td><p>Author</p></td>
<td><p>ALSETLab, Rensselaer Polytechnic Institute</p></td>
</tr>
<tr>
<td><p>Contact</p></td>
<td><p>see <a href=\"modelica://OpenIPSL.UsersGuide.Contact\">UsersGuide.Contact</a></p></td>
</tr>
</table>
</html>"));
    end GASTMPC;

    model G2_no_controls3 "Generation unit connected to bus B5"
      outer OpenIPSL.Electrical.SystemBase SysData;
      extends OpenIPSL.Electrical.Essentials.pfComponent;

      OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
      OpenIPSL.Electrical.Machines.PSSE.GENROE gen(
        M_b=100000000,
        Tpd0=5,
        Tppd0=0.07,
        Tppq0=0.09,
        H=4.28,
        D=0,
        Xd=1.84,
        Xq=1.75,
        Xpd=0.41,
        Xppd=0.2,
        Xl=0.12,
        S10=0.11,
        S12=0.39,
        Xppq=0.2,
        R_a=0,
        V_b=V_b,
        v_0=v_0,
        angle_0=angle_0,
        P_0=P_0,
        Q_0=Q_0,
        Xpq=0.1,
        Tpq0=2)  annotation (Placement(transformation(extent={{38,-20},{78,20}})));
      SEXS4MPC                                                sEXS(
        T_E=0.01)
                annotation (Placement(transformation(extent={{-10,-22},{10,-2}})));
      Modelica.Blocks.Sources.Constant non_active_limits(k=0)
        annotation (Placement(transformation(extent={{80,-80},{60,-60}})));
      Modelica.Blocks.Interfaces.RealInput Padd
        "Turbine mechanical power (machine base)"
        annotation (Placement(transformation(extent={{-140,-8},{-100,32}})));
      Modelica.Blocks.Interfaces.RealOutput PELEC1
                                 "Machine electrical power (machine base)"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={90,110})));
    equation
      connect(gen.p, conn)
        annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
      connect(sEXS.EFD, gen.EFD)
        annotation (Line(points={{11,-12},{34,-12}}, color={0,0,127}));
      connect(non_active_limits.y, sEXS.VOEL)
        annotation (Line(points={{59,-70},{0,-70},{0,-23}}, color={0,0,127}));
      connect(sEXS.VUEL, sEXS.VOEL) annotation (Line(points={{-4,-23},{-4,-70},{0,
              -70},{0,-23}}, color={0,0,127}));
      connect(sEXS.VOTHSG, sEXS.VOEL) annotation (Line(points={{-11,-8},{-22,-8},{
              -22,-70},{0,-70},{0,-23}}, color={0,0,127}));
      connect(sEXS.XADIFD, gen.XADIFD) annotation (Line(points={{8,-23},{8,-28},{86,
              -28},{86,-18},{80,-18}}, color={0,0,127}));
      connect(sEXS.EFD0, gen.EFD0) annotation (Line(points={{-11,-16},{-14,-16},{
              -14,-32},{90,-32},{90,-10},{80,-10}}, color={0,0,127}));
      connect(sEXS.ECOMP, gen.ETERM) annotation (Line(points={{-11,-12},{-18,-12},{
              -18,-36},{94,-36},{94,-6},{80,-6}}, color={0,0,127}));
      connect(gen.PELEC, PELEC1)
        annotation (Line(points={{80,6},{90,6},{90,110}}, color={0,0,127}));
      connect(Padd, gen.PMECH)
        annotation (Line(points={{-120,12},{34,12}}, color={0,0,127}));
      annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                {100,100}}), graphics={Ellipse(
              extent={{-100,100},{100,-100}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid),Line(
              points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
              color={0,0,0},
              smooth=Smooth.Bezier),Text(
              extent={{-52,-18},{56,-66}},
              lineColor={0,0,0},
              fillColor={255,255,255},
              fillPattern=FillPattern.Solid,
              textString="%name")}),
        Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
    end G2_no_controls3;

    model HYGOV4MPC "HYGOV - Hydro Turbine-Governor model"
      extends Icons.VerifiedModel;
      extends Electrical.Controls.PSSE.TG.BaseClasses.BaseGovernor;
      parameter Types.PerUnit R=0.05 "Permanent droop gain";
      parameter Types.PerUnit r=0.3 "Temporary droop gain";
      parameter Types.Time T_r=5 "Governor time constant";
      parameter Types.Time T_f=0.05 "Filter time constant";
      parameter Types.Time T_g=0.5 "Servo time constant";
      parameter Types.TimeAging VELM=0.2 "Gate open/close velocity limit";
      parameter Types.PerUnit G_MAX=0.9 "Maximum gate limit";
      parameter Types.PerUnit G_MIN=0 "Minimum gate limit";
      parameter Types.Time T_w=1.25 "Water time constant";
      parameter Types.PerUnit A_t=1.2 "Turbine gain";
      parameter Types.PerUnit D_turb=0.2 "Turbine damping";
      parameter Types.PerUnit q_NL=0.08 "Water flow at no load";
      parameter Types.PerUnit h0(min=0)=1 "Water head initial value > 0";
      Modelica.Blocks.Sources.Constant n_ref(k=nref) annotation (Placement(transformation(extent={{-178,14},{-166,26}})));
      OpenIPSL.NonElectrical.Continuous.SimpleLag SimpleLag1(
        K=1,
        T=T_f,
        y_start=0)
        annotation (Placement(transformation(extent={{-126,0},{-114,12}})));
      Modelica.Blocks.Math.Gain Gain3(k=R)
        annotation (Placement(transformation(extent={{-130,-22},{-142,-10}})));
      Modelica.Blocks.Math.Gain Gain4(k=D_turb)
        annotation (Placement(transformation(extent={{-62,-34},{-50,-22}})));
      Modelica.Blocks.Sources.Constant hs(k=h0)
        annotation (Placement(transformation(extent={{20,-20},{32,-8}})));
      Modelica.Blocks.Continuous.Integrator q(
        y_start=q0,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        k=1/T_w) annotation (Placement(transformation(extent={{62,-4},{74,8}})));
      Modelica.Blocks.Sources.Constant qNL(k=q_NL) annotation (Placement(transformation(extent={{92,-18},{84,-10}})));
      Modelica.Blocks.Math.Gain Gain6(k=A_t) annotation (Placement(transformation(extent={{132,-2},{144,10}})));
      OpenIPSL.NonElectrical.Continuous.SimpleLag g(
        K=1,
        T=T_g,
        y_start=g0) "servo_motor" annotation (Placement(transformation(extent={{-40,0},{-28,12}})));
      Modelica.Blocks.Nonlinear.Limiter Velocity_Limiter(uMin=-VELM, uMax=VELM) annotation (Placement(transformation(extent={{-86,0},{-74,12}})));
      Types.PerUnit G "Gate opening";
      Types.PerUnit c "Desired gate opening";
      Types.PerUnit Q "Turbine flow";
      Types.PerUnit H "Turbine head";
      Modelica.Blocks.Math.Add add(k2=-1)
        annotation (Placement(transformation(extent={{-144,0},{-132,12}})));
      Modelica.Blocks.Math.Add add1
        annotation (Placement(transformation(extent={{-168,-12},{-156,0}})));
      Modelica.Blocks.Math.Division division
        annotation (Placement(transformation(extent={{0,-4},{12,8}})));
      Modelica.Blocks.Math.Product product
        annotation (Placement(transformation(extent={{20,-4},{32,8}})));
      Modelica.Blocks.Math.Add add2(k1=-1)
        annotation (Placement(transformation(extent={{42,-4},{54,8}})));
      Modelica.Blocks.Math.Add add3(k2=-1)
        annotation (Placement(transformation(extent={{82,-4},{94,8}})));
      Modelica.Blocks.Math.Add add4(k2=-1)
        annotation (Placement(transformation(extent={{152,-6},{164,6}})));
      Modelica.Blocks.Math.Product product1
        annotation (Placement(transformation(extent={{58,-30},{70,-18}})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{108,-2},{120,10}})));
      NonElectrical.Continuous.SimpleLead simpleLead(
        K=r*T_r,
        T=T_r,
        y_start=0)
        annotation (Placement(transformation(extent={{-106,0},{-94,12}})));
      Modelica.Blocks.Continuous.Integrator integrator(k=1, y_start=c0)
        annotation (Placement(transformation(extent={{-68,0},{-56,12}})));
    protected
      parameter Real q0(fixed=false);
      //=Pm0/(A_t*h0)+q_NL "water flow initial value";
      parameter Real g0(fixed=false);
      //=q0/sqrt(h0) "the gate opening initial value";
      parameter Real c0(fixed=false);
      //=g0 "desired gate position";
      parameter Real e0=0 "initial output for the filter";
      parameter Real nref(fixed=false);
      //=R*c0 "speed reference";
      parameter Types.PerUnit P_m0(fixed=false);
    initial algorithm
      P_m0 := PMECH0;
      q0 := P_m0/(A_t*h0) + q_NL;
      g0 := q0/sqrt(h0);
      //
      //
      c0 := g0;
      //c0_calculation(g0,G_MIN,G_MAX);
      nref := R*c0;
      //
    equation
      G = g.y;
      c = g.u;
      Q = q.y;
      H = product.y;
      connect(add.y, SimpleLag1.u) annotation (Line(points={{-131.4,6},{-127.2,6}}, color={0,0,127}));
      connect(n_ref.y, add.u1) annotation (Line(points={{-165.4,20},{-152,20},{-152,9.6},{-145.2,9.6}}, color={0,0,127}));
      connect(add1.y, add.u2) annotation (Line(points={{-155.4,-6},{-150,-6},{-150,2.4},{-145.2,2.4}}, color={0,0,127}));
      connect(Gain3.y, add1.u2) annotation (Line(points={{-142.6,-16},{-178,-16},{-178,-9.6},{-169.2,-9.6}}, color={0,0,127}));
      connect(g.u, Gain3.u) annotation (Line(points={{-41.2,6},{-52,6},{-52,-16},{-128.8,-16}}, color={0,0,127}));
      connect(division.y, product.u1) annotation (Line(points={{12.6,2},{14,2},{14,5.6},{18.8,5.6}}, color={0,0,127}));
      connect(product.u2, product.u1) annotation (Line(points={{18.8,-1.6},{14,-1.6},{14,5.6},{18.8,5.6}}, color={0,0,127}));
      connect(product.y, add2.u1) annotation (Line(points={{32.6,2},{36,2},{36,5.6},{40.8,5.6}}, color={0,0,127}));
      connect(hs.y, add2.u2) annotation (Line(points={{32.6,-14},{36,-14},{36,-1.6},{40.8,-1.6}}, color={0,0,127}));
      connect(add2.y, q.u) annotation (Line(points={{54.6,2},{60.8,2}}, color={0,0,127}));
      connect(q.y, add3.u1) annotation (Line(points={{74.6,2},{76,2},{76,5.6},{80.8,5.6}}, color={0,0,127}));
      connect(qNL.y, add3.u2) annotation (Line(points={{83.6,-14},{76,-14},{76,-1.6},{80.8,-1.6}}, color={0,0,127}));
      connect(Gain4.y, product1.u2) annotation (Line(points={{-49.4,-28},{4,-28},{4,-27.6},{56.8,-27.6}}, color={0,0,127}));
      connect(product1.y, add4.u2) annotation (Line(points={{70.6,-24},{144,-24},{144,-3.6},{150.8,-3.6}}, color={0,0,127}));
      connect(product1.u1, g.y) annotation (Line(points={{56.8,-20.4},{-16,-20.4},{-16,6},{-27.4,6}}, color={0,0,127}));
      connect(division.u2, g.y) annotation (Line(points={{-1.2,-1.6},{-16,-1.6},{-16,6},{-27.4,6}}, color={0,0,127}));
      connect(division.u1, add3.u1) annotation (Line(points={{-1.2,5.6},{-6,5.6},{-6,20},{76,20},{76,5.6},{80.8,5.6}}, color={0,0,127}));
      connect(Gain6.y, add4.u1) annotation (Line(points={{144.6,4},{150.8,4},{150.8,3.6}}, color={0,0,127}));
      connect(product2.y, Gain6.u) annotation (Line(points={{120.6,4},{130.8,4},{130.8,4}}, color={0,0,127}));
      connect(add3.y, product2.u2) annotation (Line(points={{94.6,2},{100,2},{100,0.4},{106.8,0.4}}, color={0,0,127}));
      connect(product2.u1, add2.u1) annotation (Line(points={{106.8,7.6},{100,7.6},{100,16},{36,16},{36,5.6},{40.8,5.6}}, color={0,0,127}));
      connect(simpleLead.y, Velocity_Limiter.u) annotation (Line(points={{-93.4,6},{-87.2,6}}, color={0,0,127}));
      connect(simpleLead.u, SimpleLag1.y) annotation (Line(points={{-107.2,6},{-113.4,6}}, color={0,0,127}));
      connect(add4.y, PMECH)
        annotation (Line(points={{164.6,0},{250,0},{250,0}}, color={0,0,127}));
      connect(SPEED, add1.u1) annotation (Line(points={{-240,-120},{-200,-120},{
              -200,-2.4},{-169.2,-2.4}}, color={0,0,127}));
      connect(Gain4.u, add1.u1) annotation (Line(points={{-63.2,-28},{-200,-28},{
              -200,-2.4},{-169.2,-2.4}}, color={0,0,127}));
      connect(Velocity_Limiter.y, integrator.u)
        annotation (Line(points={{-73.4,6},{-69.2,6}}, color={0,0,127}));
      connect(g.u, integrator.y)
        annotation (Line(points={{-41.2,6},{-55.4,6}}, color={0,0,127}));
      annotation (
        Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-240,-140},{240,100}}),
                                                                                         graphics={Rectangle(
              extent={{-190,32},{-12,-38}},
              lineColor={255,128,0},
              pattern=LinePattern.Dash,
              lineThickness=1),Text(
              extent={{-126,40},{-82,34}},
              lineColor={255,128,0},
              textStyle={TextStyle.Bold},
              textString="Governor System"),Rectangle(
              extent={{-8,32},{166,-38}},
              lineColor={85,170,255},
              pattern=LinePattern.Dash,
              lineThickness=1),Text(
              extent={{38,42},{98,32}},
              lineColor={85,170,255},
              textStyle={TextStyle.Bold},
              textString="Hydraulic Turbine System")}),
        Icon(graphics={Text(
              extent={{-100,160},{100,100}},
              lineColor={28,108,200},
              textString="HYGOV")}),
        Documentation(info="<html> 
<p> This is a hydro turbine-governor model. </p>
<p> If compared to the original PSSE implementation one will notice that the initial water head value, <code>h0</code>, is declared as a parameter.
This allows the user to modify it, if required, in order to perform adequate studies. 
The user should leave it in its default value (<code>1</code>) if they do not have any information on water head value, or if they do not wish to modify the parameter.</p>
</html>",    revisions="<html>
<table cellspacing=\"1\" cellpadding=\"1\" border=\"1\">
<tr>
<td><p>Reference</p></td>
<td><p>PSS&reg;E Manual</p></td>
</tr>
<tr>
<td><p>Last update</p></td>
<td><p>2022-11</p></td>
</tr>
<tr>
<td><p>Author</p></td>
<td><p>ALSETLab, Rensselaer Polytechnic Institute</p></td>
</tr>
<tr>
<td><p>Contact</p></td>
<td><p>see <a href=\"modelica://OpenIPSL.UsersGuide.Contact\">UsersGuide.Contact</a></p></td>
</tr>
</table>
</html>"));
    end HYGOV4MPC;

    model IEESGO4MPC "IEESGO - IEEE Standard Model for Turbine-Governor"
      extends Icons.VerifiedModel;
    extends Electrical.Controls.PSSE.TG.BaseClasses.BaseGovernor;
      parameter Types.Time T_1=0.2 "Controller lag";
      parameter Types.Time T_2=0 "Controller lead compensation";
      parameter Types.Time T_3=0.5 "Governor lag";
      parameter Types.Time T_4=0.12 "Delay due to steam inlet volumes associated with steam chest and inlet piping";
      parameter Types.Time T_5=5 "Reheater delay including hot and cold leads";
      parameter Types.Time T_6=0.5 "Delay due to IP-LP turbine, crossover pipes, and LP end hoods";
      parameter Real K_1=20 "Regulation gain [1/pu]";
      parameter Types.PerUnit K_2=0.59 "Intermediate pressure turbine fraction";
      parameter Types.PerUnit K_3=0.43 "Low pressure turbine fraction ";
      parameter Types.PerUnit P_MAX=0.98 "Upper power limit";
      parameter Types.PerUnit P_MIN=0 "Lower power limit";
      OpenIPSL.NonElectrical.Continuous.SimpleLag imSimpleLag(
        K=K_1,
        T=T_1,
        y_start=0) annotation (Placement(transformation(extent={{-180,-130},{-160,-110}})));
      NonElectrical.Continuous.SimpleLag        imLeadLag(
        K=1,
        T=T_3,
        y_start=0) annotation (Placement(transformation(extent={{-140,-130},{-120,-110}})));
      OpenIPSL.NonElectrical.Continuous.SimpleLag imSimpleLag1(
        K=1,
        T=T_4,
        y_start=p0) annotation (Placement(transformation(extent={{20,-10},{40,10}})));
      OpenIPSL.NonElectrical.Continuous.SimpleLag imSimpleLag2(
        K=K_2,
        T=T_5,
        y_start=p0*K_2) annotation (Placement(transformation(extent={{80,-80},{100,-60}})));
      OpenIPSL.NonElectrical.Continuous.SimpleLag imSimpleLag3(
        K=K_3,
        T=T_6,
        y_start=p0*K_2*K_3) annotation (Placement(transformation(extent={{120,-80},{
                140,-60}})));
      Modelica.Blocks.Math.Add add(k2=-1) annotation (Placement(transformation(extent={{-60,-10},
                {-40,10}})));
      Modelica.Blocks.Nonlinear.Limiter limiter(uMax=P_MAX, uMin=P_MIN) annotation (Placement(transformation(extent={{-20,-10},
                {0,10}})));
      Modelica.Blocks.Math.Gain gain(k=1 - K_2) annotation (Placement(transformation(extent={{120,-10},
                {140,10}})));
      Modelica.Blocks.Math.Gain gain1(k=1 - K_3) annotation (Placement(transformation(extent={{120,-40},
                {140,-20}})));
      Modelica.Blocks.Math.Add3 add3_1 annotation (Placement(transformation(extent={{160,-18},
                {180,2}})));
    protected
      parameter Types.PerUnit p0(fixed=false);
    initial algorithm
      p0 := PMECH0;

    equation
      connect(imSimpleLag.y, imLeadLag.u) annotation (Line(points={{-159,-120},{-142,
              -120}}, color={0,0,127}));
      connect(imLeadLag.y, add.u2) annotation (Line(points={{-119,-120},{-80,-120},{
              -80,-6},{-62,-6}}, color={0,0,127}));
      connect(add.y, limiter.u) annotation (Line(points={{-39,0},{-22,0}}, color={0,0,127}));
      connect(limiter.y, imSimpleLag1.u) annotation (Line(points={{1,0},{1,0},{18,0}}, color={0,0,127}));
      connect(imSimpleLag2.y, imSimpleLag3.u) annotation (Line(points={{101,-70},{118,
              -70}}, color={0,0,127}));
      connect(gain1.u, imSimpleLag3.u) annotation (Line(points={{118,-30},{110,-30},
              {110,-70},{118,-70}}, color={0,0,127}));
      connect(PMECH0, add.u1) annotation (Line(points={{-240,80},{-80,80},{-80,6},{-62,
              6}}, color={0,0,127}));
      connect(SPEED, imSimpleLag.u) annotation (Line(points={{-240,-120},{-212,-120},
              {-182,-120}}, color={0,0,127}));
      connect(imSimpleLag1.y, gain.u)
        annotation (Line(points={{41,0},{118,0}}, color={0,0,127}));
      connect(imSimpleLag2.u, gain.u) annotation (Line(points={{78,-70},{60,-70},{60,
              0},{118,0}}, color={0,0,127}));
      connect(gain.y, add3_1.u1)
        annotation (Line(points={{141,0},{141,0},{158,0}}, color={0,0,127}));
      connect(gain1.y, add3_1.u2) annotation (Line(points={{141,-30},{148,-30},{148,
              -8},{158,-8}}, color={0,0,127}));
      connect(imSimpleLag3.y, add3_1.u3) annotation (Line(points={{141,-70},{152,-70},
              {152,-16},{158,-16}}, color={0,0,127}));
      connect(add3_1.y, PMECH) annotation (Line(points={{181,-8},{188,-8},{188,0},{250,
              0}}, color={0,0,127}));
      annotation (
        Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-240,-200},{240,160}})),
        Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,100}}),
             graphics={Text(
              extent={{-100,160},{100,100}},
              lineColor={28,108,200},
              textString="IEESGO")}),
        Documentation(revisions="<html>
<table cellspacing=\"1\" cellpadding=\"1\" border=\"1\">
<tr>
<td><p>Reference</p></td>
<td><p>PSS&reg;E Manual</p></td>
</tr>
<tr>
<td><p>Last update</p></td>
<td><p>2020-09</p></td>
</tr>
<tr>
<td><p>Author</p></td>
<td><p>ALSETLab, Rensselaer Polytechnic Institute</p></td>
</tr>
<tr>
<td><p>Contact</p></td>
<td><p>see <a href=\"modelica://OpenIPSL.UsersGuide.Contact\">UsersGuide.Contact</a></p></td>
</tr>
</table>
</html>"));
    end IEESGO4MPC;

    partial model baseMachine4MPC "Base machine for PSSE models"
      import Complex;
      import Modelica.ComplexMath.arg;
      import Modelica.ComplexMath.real;
      import Modelica.ComplexMath.imag;
      import Modelica.ComplexMath.conj;
      import Modelica.Blocks.Interfaces.*;
      extends OpenIPSL.Electrical.Essentials.pfComponent(
        final enabledisplayPF=false,
        final enablefn=false,
        final enableV_b=false,
        final enableangle_0=true,
        final enablev_0=true,
        final enableQ_0=true,
        final enableP_0=true,
        final enableS_b=true);
      //Machine parameters
      parameter Types.ApparentPower M_b "Machine base power"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.Time Tpd0 "d-axis transient open-circuit time constant"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.Time Tppd0 "d-axis sub-transient open-circuit time constant"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.Time Tppq0 "q-axis sub-transient open-circuit time constant"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.Time H "Inertia constant"
        annotation (Dialog(group="Machine parameters"));
      parameter Real D "Speed damping"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit Xd "d-axis reactance"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit Xq "q-axis reactance"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit Xpd "d-axis transient reactance"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit Xppd "d-axis sub-transient reactance"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit Xppq "q-axis sub-transient reactance"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit Xl "leakage reactance"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit S10 "Saturation factor at 1.0 pu"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit S12 "Saturation factor at 1.2 pu"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit R_a=0 "Armature resistance"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit w0(min=-1+C.eps)=0 "Initial speed deviation from nominal"
        annotation (Dialog(group="Initialization"));
      OpenIPSL.Interfaces.PwPin p(
        vr(start=vr0),
        vi(start=vi0),
        ir(start=ir0),
        ii(start=ii0))
        annotation (Placement(transformation(extent={{90,-10},{110,10}})));
      RealOutput SPEED "Machine speed deviation from nominal [pu]"
        annotation (Placement(transformation(extent={{100,60},{120,80}})));
      RealInput PMECH "Turbine mechanical power (machine base)"
        annotation (Placement(transformation(extent={{-140,40},{-100,80}}), iconTransformation(extent={{-140,40},{-100,80}})));
      RealOutput PMECH0 "Initial value of machine electrical power (machine base)"
        annotation (Placement(transformation(extent={{100,40},{120,60}})));
      RealOutput ETERM(start=v_0) "Machine terminal voltage [pu]"
        annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
      RealInput EFD "Generator main field voltage [pu]"
        annotation (Placement(transformation(extent={{-140,-80},{-100,-40}}), iconTransformation(extent={{-140,-80},{-100,-40}})));
      RealOutput EFD0 "Initial generator main field voltage [pu]"
        annotation (Placement(transformation(extent={{100,-60},{120,-40}})));
      RealOutput PELEC(start=p0) "Machine electrical power (machine base)"
        annotation (Placement(transformation(extent={{100,20},{120,40}})));
      RealOutput ISORCE "Machine source current [pu]"
        annotation (Placement(transformation(extent={{100,-80},{120,-60}})));
          RealOutput ANGLE "Machine relative rotor angle"
        annotation (Placement(transformation(extent={{100,80},{120,100}})));
      RealOutput XADIFD "Machine field current [pu]" annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            origin={110,-90}), iconTransformation(
            extent={{-10,-10},{10,10}},
            origin={110,-90})));
      Types.PerUnit w(start=w0, fixed=true) "Machine speed deviation";
      Types.Angle delta "Rotor angle";
      Types.PerUnit Vt(start=v_0) "Bus voltage magnitude";
      Types.Angle anglev(start=angle_0) "Bus voltage angle";
      Types.PerUnit I(start=sqrt(ir0^2 + ii0^2)) "Terminal current magnitude";
      Types.Angle anglei(start=atan2(ii0, ir0)) "Terminal current angle";
      Types.PerUnit P(start=P_0/S_b) "Active power (system base)";
      Types.PerUnit Q(start=Q_0/S_b) "Reactive power (system base)";
      Types.PerUnit Te "Electrical torque [pu]";
      Types.PerUnit id "d-axis armature current [pu]";
      Types.PerUnit iq "q-axis armature current [pu]";
      Types.PerUnit ud "d-axis terminal voltage [pu]";
      Types.PerUnit uq "q-axis terminal voltage [pu]";
    protected
      parameter Types.AngularVelocity w_b=2*C.pi*fn "System base speed";
      parameter Real CoB=M_b/S_b;
      parameter Types.PerUnit vr0=v_0*cos(angle_0)
        "Real component of initial terminal voltage";
      parameter Types.PerUnit vi0=v_0*sin(angle_0)
        "Imaginary component of initial terminal voltage";
      parameter Types.PerUnit ir0=-CoB*(p0*vr0 + q0*vi0)/(vr0^2 + vi0^2)
        "Real component of initial armature current (system base)";
      parameter Types.PerUnit ii0=-CoB*(p0*vi0 - q0*vr0)/(vr0^2 + vi0^2)
        "Imaginary component of initial armature current (system base)";
      parameter Types.PerUnit p0=P_0/M_b "Initial active power generation (machine base)";
      parameter Types.PerUnit q0=Q_0/M_b
        "Initial reactive power generation (machine base)";
    equation
      //Interfacing outputs with the internal variables
      ANGLE = delta;
      SPEED = w;
      ETERM = Vt;
      PELEC = P/CoB;
      [p.ir; p.ii] = -CoB*[sin(delta), cos(delta); -cos(delta), sin(delta)]*[id; iq];
      [p.vr; p.vi] = [sin(delta), cos(delta); -cos(delta), sin(delta)]*[ud; uq];
      -P = p.vr*p.ir + p.vi*p.ii;
      -Q = p.vi*p.ir - p.vr*p.ii;
      Vt = sqrt(p.vr^2 + p.vi^2);
      anglev = atan2(p.vi, p.vr);
      I = sqrt(p.ii^2 + p.ir^2);
      anglei = atan2(p.ii, p.ir);
      der(w) = ((PMECH - D*w)/(w + 1) - Te)/(2*H);
      der(delta) = w_b*w;
      annotation (
        Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
                100}}), graphics={Rectangle(extent={{-100,100},{100,-100}},
              lineColor={0,0,255}),Text(
              extent={{64,75},{92,65}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="SPEED"),Text(
              extent={{60,-66},{92,-76}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="ISORCE"),Text(
              extent={{64,-25},{92,-35}},
              lineColor={0,0,255},
              textString="ETERM"),Text(
              extent={{64,94},{92,84}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="ANGLE"),Text(
              extent={{58,56},{92,46}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="PMECH0"),Text(
              extent={{64,34},{92,24}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="PELEC"),Text(
              extent={{72,-46},{92,-56}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="EFD0"),Text(
              extent={{56,-86},{92,-96}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="XADIFD0"),Text(
              extent={{-90,70},{-50,50}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="PMECH"), Text(
              extent={{-90,-50},{-60,-70}},
              lineColor={0,0,255},
              lineThickness=0.5,
              textString="EFD")}));
    end baseMachine4MPC;

    model GENROE4MPC
      "ROUND ROTOR GENERATOR MODEL (EXPONENTIAL SATURATION)"
      extends Icons.VerifiedModel;
      //Import of dependencies
      import Complex;
      import Modelica.ComplexMath.arg;
      import Modelica.ComplexMath.real;
      import Modelica.ComplexMath.imag;
      import Modelica.ComplexMath.abs;
      import Modelica.ComplexMath.conj;
      import Modelica.ComplexMath.fromPolar;
      import OpenIPSL.NonElectrical.Functions.SE_exp;
      import Modelica.ComplexMath.j;
      extends Electrical.Machines.PSSE.BaseClasses.baseMachine(
        EFD(start=efd0),
        XADIFD(start=efd0),
        PMECH(start=pm0),
        delta(start=delta0),
        id(start=id0),
        iq(start=iq0),
        ud(start=ud0),
        uq(start=uq0),
        Te(start=pm0));
      //Machine parameters
      parameter Types.PerUnit Xpq "Sub-transient reactance"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.Time Tpq0 "q-axis transient open-circuit time constant"
        annotation (Dialog(group="Machine parameters"));
      parameter Types.PerUnit Xpp=Xppd "Sub-transient reactance"
        annotation (Dialog(group="Machine parameters"));
      Types.PerUnit Epd(start=Epd0) "d-axis voltage behind transient reactance";
      Types.PerUnit Epq(start=Epq0) "q-axis voltage behind transient reactance";
      Types.PerUnit PSIkd(start=PSIkd0) "d-axis rotor flux linkage";
      Types.PerUnit PSIkq(start=PSIkq0) "q-axis rotor flux linkage";
      //State variables
      Types.PerUnit PSId(start=PSId0) "d-axis flux linkage";
      Types.PerUnit PSIq(start=PSIq0) "q-axis flux linkage";
      Types.PerUnit PSIppd(start=PSIppd0) "d-axis subtransient flux linkage";
      Types.PerUnit PSIppq(start=PSIppq0) "q-axis subtransient flux linkage";
      Types.PerUnit PSIpp "Air-gap flux";
      Types.PerUnit XadIfd(start=efd0) "d-axis machine field current";
      Types.PerUnit XaqIlq(start=0) "q-axis Machine field current";
    protected
      parameter Complex Zs=Complex(R_a,Xpp) "Equivalent impedance";
      parameter Complex VT=Complex(v_0*cos(angle_0),v_0*sin(angle_0))
        "Complex terminal voltage";
      parameter Complex S=Complex(p0,q0) "Complex power on machine base";
      parameter Complex It=Complex(real(S/VT),-imag(S/VT))
        "Complex current, machine base";
      parameter Complex Is=Complex(real(It + VT/Zs),imag(It + VT/Zs))
        "Equivalent internal current source";
      parameter Complex PSIpp0=Complex(real(Zs*Is),imag(Zs*Is))
        "Sub-transient flux linkage in stator reference frame";
      parameter Real ang_PSIpp0=arg(PSIpp0) "flux angle";
      parameter Real ang_It=arg(It) "current angle";
      parameter Real ang_PSIpp0andIt=ang_PSIpp0 - ang_It "angle difference";
      parameter Types.PerUnit abs_PSIpp0=abs(PSIpp0)
        "magnitude of sub-transient flux linkage";
      parameter Real dsat=SE_exp(
          abs_PSIpp0,
          S10,
          S12,
          1,
          1.2) "To include saturation of during initialization";
      parameter Real a=abs_PSIpp0 + abs_PSIpp0*dsat*(Xq - Xl)/(Xd - Xl);
      parameter Real b=(It.re^2 + It.im^2)^0.5*(Xpp - Xq);
      //Initializion rotor angle position
      parameter Real delta0=atan(b*cos(ang_PSIpp0andIt)/(b*sin(ang_PSIpp0andIt) - a))
           + ang_PSIpp0 "initial rotor angle in radians";
      parameter Complex DQ_dq=Complex(cos(delta0),-sin(delta0))
        "Parks transformation, from stator to rotor reference frame";
      parameter Complex PSIpp0_dq=Complex(real(PSIpp0*DQ_dq),imag(PSIpp0*DQ_dq))
        "Flux linkage in rotor reference frame";
      parameter Complex I_dq=Complex(real(It*DQ_dq),-imag(It*DQ_dq));
      //"The terminal current in rotor reference frame"
      parameter Types.PerUnit PSIppq0=imag(PSIpp0_dq)
        "q-axis component of the sub-transient flux linkage";
      parameter Types.PerUnit PSIppd0=real(PSIpp0_dq)
        "d-axis component of the sub-transient flux linkage";
      //Initialization of current and voltage components in rotor reference frame (dq-axes).
      parameter Types.PerUnit iq0=real(I_dq) "q-axis component of initial current";
      parameter Types.PerUnit id0=imag(I_dq) "d-axis component of initial current";
      parameter Types.PerUnit ud0=(-(PSIppq0 - Xppq*iq0)) - R_a*id0
        "d-axis component of initial voltage";
      parameter Types.PerUnit uq0=PSIppd0 - Xppd*id0 - R_a*iq0
        "q-axis component of initial voltage";
      //Initialization current and voltage components in synchronous reference frame.
      parameter Types.PerUnit vr0=v_0*cos(angle_0)
        "Real component of initial terminal voltage";
      parameter Types.PerUnit vi0=v_0*sin(angle_0)
        "Imaginary component of initial terminal voltage";
      parameter Types.PerUnit ir0=-CoB*(p0*vr0 + q0*vi0)/(vr0^2 + vi0^2)
        "Real component of initial armature current, systembase";
      parameter Types.PerUnit ii0=-CoB*(p0*vi0 - q0*vr0)/(vr0^2 + vi0^2)
        "Imaginary component of initial armature current, systembase";
      //Initialization mechanical power and field voltage.
      parameter Types.PerUnit pm0=p0 + R_a*iq0*iq0 + R_a*id0*id0
        "Initial mechanical power, machine base";
      parameter Types.PerUnit efd0=dsat*PSIppd0 + PSIppd0 + (Xpd - Xpp)*id0 + (Xd - Xpd)*id0
        "Initial field voltage magnitude";
      parameter Types.PerUnit Epq0=PSIkd0 + (Xpd - Xl)*id0;
      parameter Types.PerUnit Epd0=PSIkq0 - (Xpq - Xl)*iq0;
      //Initialize remaining states:
      parameter Types.PerUnit PSIkd0=(PSIppd0 - (Xpd - Xl)*K3d*id0)/(K3d + K4d)
        "d-axis initial rotor flux linkage";
      parameter Types.PerUnit PSIkq0=((-PSIppq0) + (Xpq - Xl)*K3q*iq0)/(K3q + K4q)
        "q-axis initial rotor flux linkage";
      parameter Types.PerUnit PSId0=PSIppd0 - Xppd*id0;
      parameter Types.PerUnit PSIq0=PSIppq0 - Xppq*iq0;
      // Constants
      parameter Real K1d=(Xpd - Xppd)*(Xd - Xpd)/(Xpd - Xl)^2;
      parameter Real K2d=(Xpd - Xl)*(Xppd - Xl)/(Xpd - Xppd);
      parameter Real K1q=(Xpq - Xppq)*(Xq - Xpq)/(Xpq - Xl)^2;
      parameter Real K2q=(Xpq - Xl)*(Xppq - Xl)/(Xpq - Xppq);
      parameter Real K3d=(Xppd - Xl)/(Xpd - Xl);
      parameter Real K4d=(Xpd - Xppd)/(Xpd - Xl);
      parameter Real K3q=(Xppq - Xl)/(Xpq - Xl);
      parameter Real K4q=(Xpq - Xppq)/(Xpq - Xl);
      parameter Real CoB=M_b/S_b
        "Constant to change from system base to machine base";
    initial equation
      der(Epd) = 0;
      der(Epq) = 0;
      der(PSIkd) = 0;
      der(PSIkq) = 0;
    equation
      //Interfacing outputs with the internal variables
      XADIFD = XadIfd;
      ISORCE = XadIfd;
      EFD0 = efd0;
      PMECH0 = pm0;
      der(Epq) = 1/Tpd0*(EFD - XadIfd);
      der(Epd) = 1/Tpq0*(-1)*XaqIlq;
      der(PSIkd) = 1/Tppd0*(Epq - PSIkd - (Xpd - Xl)*id);
      der(PSIkq) = 1/Tppq0*(Epd - PSIkq + (Xpq - Xl)*iq);
      Te = PSId*iq - PSIq*id;
      PSId = PSIppd - Xppd*id;
      PSIq = (-PSIppq) - Xppq*iq;
      PSIppd = Epq*K3d + PSIkd*K4d;
      -PSIppq = (-Epd*K3q) - PSIkq*K4q;
      PSIpp = sqrt(PSIppd*PSIppd + PSIppq*PSIppq);
      XadIfd = K1d*(Epq - PSIkd - (Xpd - Xl)*id) + Epq + id*(Xd - Xpd) + SE_exp(
        PSIpp,
        S10,
        S12,
        1,
        1.2)*PSIppd;
      XaqIlq = K1q*(Epd - PSIkq + (Xpq - Xl)*iq) + Epd - iq*(Xq - Xpq) - SE_exp(
        PSIpp,
        S10,
        S12,
        1,
        1.2)*(-1)*PSIppq*(Xq - Xl)/(Xd - Xl);
      //change sign for PSIppq 3/3
      ud = (-PSIq) - R_a*id;
      uq = PSId - R_a*iq;
      annotation (
        Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
                100}}), graphics={Text(
              extent={{-54,24},{54,-26}},
              lineColor={0,0,255},
              textString="GENROE")}),
              Documentation(info="<html>Round Rotor Generator Model GENROE. It is the same as GENROU model
          except that an exponential function is used as saturation.</html>",
              revisions="<html>
<table cellspacing=\"1\" cellpadding=\"1\" border=\"1\">
<tr>
<td><p>Reference</p></td>
<td><p>PSS&reg;E Manual</p></td>
</tr>
<tr>
<td><p>Last update</p></td>
<td><p>2020-09</p></td>
</tr>
<tr>
<td><p>Author</p></td>
<td><p>ALSETLab, Rensselaer Polytechnic Institute</p></td>
</tr>
<tr>
<td><p>Contact</p></td>
<td><p>see <a href=\"modelica://OpenIPSL.UsersGuide.Contact\">UsersGuide.Contact</a></p></td>
</tr>
</table>
</html>"));
    end GENROE4MPC;

    model SEXSMPC
      "SEXS - Simplified excitation system model (AC4 from [IEEE1981])"
      extends Icons.VerifiedModel;
      extends
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.BaseExciterMPC(
          gain(k=1/K));
      parameter Real T_AT_B=0.1 "Ratio between regulator numerator (lead) and denominator (lag) time constants";
      parameter Real T_B=1 "Regulator denominator (lag) time constant";
      parameter Real K=100 "Excitation power source output gain";
      parameter Real T_E=0.1 "Excitation power source output time constant";
      parameter Real E_MIN=-10 "Minimum exciter output";
      parameter Real E_MAX=10 "Maximum exciter output";
      Modelica.Blocks.Math.Add3 V_erro(
        k3=1,
        k1=1,
        k2=1) annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));
      NonElectrical.Continuous.SimpleLagLim simpleLagLim(
        K=K,
        T=T_E,
        y_start=Efd0,
        outMax=E_MAX,
        outMin=E_MIN)
        annotation (Placement(transformation(extent={{120,-10},{140,10}})));
      Modelica.Blocks.Math.Add DiffV1 annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={-100,-50})));
      NonElectrical.Continuous.LeadLag leadLag(
        K=1,
        T1=T_AT_B*T_B,
        T2=T_B,
        y_start=Efd0/K,
        x_start=Efd0/K)
        annotation (Placement(transformation(extent={{40,-10},{60,10}})));
    initial equation
      V_REF = Efd0/K + ECOMP0;
    equation
      connect(simpleLagLim.y, EFD)
        annotation (Line(points={{141,0},{210,0}}, color={0,0,127}));
      connect(DiffV.y, V_erro.u2)
        annotation (Line(points={{-99,0},{-42,0}}, color={0,0,127}));
      connect(V_erro.u1, VOTHSG) annotation (Line(points={{-42,8},{-52,8},{-52,90},
              {-200,90}}, color={0,0,127}));
      connect(ECOMP, DiffV.u2) annotation (Line(points={{-200,0},{-166,0},{-132,0},
              {-132,-6},{-122,-6}}, color={0,0,127}));
      connect(VUEL, DiffV1.u1) annotation (Line(points={{-130,-200},{-130,-72},{
              -106,-72},{-106,-62}}, color={0,0,127}));
      connect(VOEL, DiffV1.u2) annotation (Line(points={{-70,-200},{-70,-72},{-94,
              -72},{-94,-62}}, color={0,0,127}));
      connect(DiffV1.y, V_erro.u3) annotation (Line(points={{-100,-39},{-100,-16},{
              -42,-16},{-42,-8}}, color={0,0,127}));
      connect(V_erro.y, leadLag.u)
        annotation (Line(points={{-19,0},{38,0}}, color={0,0,127}));
      connect(leadLag.y, simpleLagLim.u)
        annotation (Line(points={{61,0},{118,0}}, color={0,0,127}));
      annotation (
        Diagram(coordinateSystem(extent={{-200,-200},{200,160}})),
        Icon(coordinateSystem(extent={{-100,-100},{100,100}}),
            graphics={Text(
              extent={{-100,160},{100,100}},
              lineColor={28,108,200},
              textString="SEXS")}),
        Documentation(info="<html>Simplified Excitation System Model.</html>",
        revisions = "<html><table cellspacing=\"1\" cellpadding=\"1\" border=\"1\">
<tr>
<td><p>Reference</p></td>
<td><p>PSS/E Manual</p></td>
</tr>
<tr>
<td><p>Last update</p></td>
<td><p>2020-09</p></td>
</tr>
<tr>
<td><p>Author</p></td>
<td><p>Mengjia Zhang, SmarTS Lab, KTH Royal Institute of Technology</p></td>
</tr>
<tr>
<td><p>Contact</p></td>
<td><p>see <a href=\"modelica://OpenIPSL.UsersGuide.Contact\">UsersGuide.Contact</a></p></td>
</tr>
</table>
</html>"));
    end SEXSMPC;

    model REECCU1
      "Electrical control model for utility scale battery energy storage"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECC(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0.01 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = 0 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.01 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 1 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -1 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.01 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.1 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";
      parameter OpenIPSL.Types.PerUnit Vq1 = 0.2 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq1 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq2 = 0.5 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq2 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq3 = 0.75 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq3 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq4 = 1 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq4 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp1 = 0.2 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip1 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp2 = 0.5 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip2 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp3 = 0.75 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip3 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp4 = 1 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip4 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter Modelica.Units.SI.Time T = 999 "Battery discharge time";
      parameter OpenIPSL.Types.PerUnit SOCini = 0.5 "Initial state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmax = 0.8 "Maximum allowable state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmin = 0.2 "Minimum allowable state of charge";

      Integer Voltage_dip;

      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-54,-120},{-34,-140}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-100,-90},{-80,-70}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-242,-136},{-222,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-208,-136},{-188,-116}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-142,-136},{-122,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-102,-136},{-82,-116}})));
      Modelica.Blocks.Sources.RealExpression Vt_filt3(y=simpleLag.y)
        annotation (Placement(transformation(extent={{-140,-90},{-120,-70}})));
      Modelica.Blocks.Math.Add add7(k1=+1, k2=+1)
        annotation (Placement(transformation(extent={{-18,-140},{2,-120}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{228,-170},{248,-150}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl_reecc.Ipmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-120})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl_reecc.Ipmin) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-184})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{224,-136},{204,-116}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=180,
            origin={214,-190})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmax(y=sOC_logic.ipmax_SOC)
        annotation (Placement(transformation(extent={{250,-122},{230,-142}})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmin(y=sOC_logic.ipmin_SOC)
        annotation (Placement(transformation(extent={{250,-186},{230,-206}})));
      Modelica.Blocks.Sources.RealExpression PELEC(y=Pe)
        annotation (Placement(transformation(extent={{-164,-226},{-144,-206}})));
      Modelica.Blocks.Continuous.Integrator integrator1(k=1/T,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=p00)
        annotation (Placement(transformation(extent={{-134,-226},{-114,-206}})));
      Modelica.Blocks.Math.Add add1(k1=-1, k2=+1)
        annotation (Placement(transformation(extent={{-104,-244},{-84,-224}})));
      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=SOCmax, uMin=SOCmin)
        annotation (Placement(transformation(extent={{-74,-244},{-54,-224}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.StateOfChargeLogic
        sOC_logic(SOCmin=SOCmin, SOCmax=SOCmax)
        annotation (Placement(transformation(extent={{-30,-244},{-10,-224}})));
      Modelica.Blocks.Sources.BooleanConstant PfFlag_logic(k=pfflag)
        annotation (Placement(transformation(extent={{-254,86},{-234,106}})));
      Modelica.Blocks.Logical.Switch PfFlag
        "Constant Q (False) or PF (True) local control."
        annotation (Placement(transformation(extent={{-198,136},{-178,156}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-164,136},{-144,156}})));
      Modelica.Blocks.Math.Add add2(k2=-1)
        annotation (Placement(transformation(extent={{-134,130},{-114,150}})));
      Modelica.Blocks.Sources.RealExpression frzState(y=if Voltage_dip == 1 then 0
             else 1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-114,82})));
      Modelica.Blocks.Math.Product product1
        annotation (Placement(transformation(extent={{-124,90},{-104,110}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-40,124},{-20,144}})));
      Modelica.Blocks.Sources.BooleanConstant Vflag_logic(k=vflag)
        annotation (Placement(transformation(extent={{-60,70},{-40,90}})));
      Modelica.Blocks.Logical.Switch VFlag
        "Constant Q (False) or PF (True) local control."
        annotation (Placement(transformation(extent={{-4,124},{16,144}})));
      Modelica.Blocks.Sources.RealExpression VReF0(y=Vref0) annotation (Placement(
            transformation(
            extent={{-10,10},{10,-10}},
            origin={-38,50})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{26,124},{46,144}})));
      Modelica.Blocks.Math.Add add5(k2=-1)
        annotation (Placement(transformation(extent={{58,124},{78,144}})));
      Modelica.Blocks.Sources.RealExpression Vt_filt2(y=simpleLag.y)
        annotation (Placement(transformation(extent={{78,124},{58,104}})));
      Modelica.Blocks.Math.Product product4
        annotation (Placement(transformation(extent={{52,70},{72,90}})));
      Modelica.Blocks.Sources.RealExpression frzState1(y=if Voltage_dip == 1 then 0
             else 1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            origin={28,74})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{158,120},{178,140}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl_reecc.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={170,154})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl_reecc.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={170,104})));
      Modelica.Blocks.Logical.Switch QFlag
        annotation (Placement(transformation(extent={{198,84},{218,104}})));
      Modelica.Blocks.Sources.BooleanConstant QFLAG(k=qflag)
        annotation (Placement(transformation(extent={{158,66},{178,86}})));
      Modelica.Blocks.Math.Add add9(k2=+1)
        annotation (Placement(transformation(extent={{232,150},{252,170}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{266,150},{286,170}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl_reecc.Iqmin)
        annotation (Placement(transformation(extent={{286,150},{266,130}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl_reecc.Iqmax)
        annotation (Placement(transformation(extent={{286,174},{266,194}})));
      Modelica.Blocks.Math.Add add10(k2=-1)
        annotation (Placement(transformation(extent={{52,-6},{72,14}})));
      Modelica.Blocks.Continuous.Integrator integrator4(k=1/Tiq,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=-Iq0 - (-
            V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{132,0},{152,20}})));
      Modelica.Blocks.Math.Product product5
        annotation (Placement(transformation(extent={{96,0},{116,20}})));
      Modelica.Blocks.Sources.RealExpression Vt_filt1(y=simpleLag.y)
        annotation (Placement(transformation(extent={{-68,-20},{-48,0}})));
      Modelica.Blocks.Nonlinear.Limiter limiter6(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-28,-20},{-8,0}})));
      Modelica.Blocks.Math.Division division
        annotation (Placement(transformation(extent={{12,0},{32,20}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL1(table=[Vq1,Iq1; Vq2,Iq2; Vq3,Iq3;
            Vq4,Iq4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-40}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL2(table=[Vp1,Ip1; Vp2,Ip2; Vp3,Ip3;
            Vp4,Ip4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-80}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECC
        ccl_reecc(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{92,-76},{124,-44}})));
      Modelica.Blocks.Sources.RealExpression IQCMD(y=Iqcmd)
        annotation (Placement(transformation(extent={{168,-48},{148,-28}})));
      Modelica.Blocks.Sources.BooleanConstant PQFLAG(k=pqflag)
        annotation (Placement(transformation(extent={{168,-50},{148,-70}})));
      Modelica.Blocks.Sources.RealExpression IPCMD(y=Ipcmd)
        annotation (Placement(transformation(extent={{168,-72},{148,-92}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-288,230},{-268,250}})));
      Modelica.Blocks.Math.Add add(k1=-1)
        annotation (Placement(transformation(extent={{-248,224},{-228,244}})));
      Modelica.Blocks.Nonlinear.Limiter limiter(uMax=Iqh1, uMin=Iql1)
        annotation (Placement(transformation(extent={{-128,224},{-108,244}})));
      Modelica.Blocks.Sources.RealExpression VREF0(y=Vref0)
        annotation (Placement(transformation(extent={{-288,200},{-268,220}})));
      Modelica.Blocks.Nonlinear.DeadZone dbd1_dbd2(uMax=dbd2, uMin=dbd1)
        annotation (Placement(transformation(extent={{-208,224},{-188,244}})));
      Modelica.Blocks.Math.Gain gain2(k=Kqv)
        annotation (Placement(transformation(extent={{-168,224},{-148,244}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Tp,
        y_start=p00)
        annotation (Placement(transformation(extent={{-268,150},{-248,170}})));
      Modelica.Blocks.Math.Tan tan1
        annotation (Placement(transformation(extent={{-268,140},{-248,120}})));
      Modelica.Blocks.Math.Product product6
        annotation (Placement(transformation(extent={{-238,144},{-218,164}})));
      Modelica.Blocks.Sources.RealExpression PFAREF(y=pfangle)
        annotation (Placement(transformation(extent={{10,-10},{-10,10}},
            rotation=180,
            origin={-288,130})));

      Modelica.Blocks.Math.Product product7
        annotation (Placement(transformation(extent={{-174,-136},{-154,-116}})));
      Modelica.Blocks.Sources.RealExpression frzState2(y=if Voltage_dip == 1 then 0
             else 1) annotation (Placement(transformation(
            extent={{-10,10},{10,-10}},
            origin={-196,-96})));
      Modelica.Blocks.Sources.Constant SOC(k=SOCini)
        annotation (Placement(transformation(extent={{-200,-260},{-180,-240}})));
      Modelica.Blocks.Continuous.Integrator integrator(
        k=Kqi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=V0)
        annotation (Placement(transformation(extent={{-96,90},{-76,110}})));
      Modelica.Blocks.Math.Gain gain(k=Kqp)
        annotation (Placement(transformation(extent={{-94,130},{-74,150}})));
      Modelica.Blocks.Math.Add add3
        annotation (Placement(transformation(extent={{-66,124},{-46,144}})));
      Modelica.Blocks.Math.Gain gain1(k=Kvp)
        annotation (Placement(transformation(extent={{100,126},{120,146}})));
      Modelica.Blocks.Continuous.Integrator integrator2(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0 - (-V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{100,92},{120,112}})));
      Modelica.Blocks.Math.Add add4
        annotation (Placement(transformation(extent={{128,120},{148,140}})));
    protected
      parameter Real pfaref=p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;
    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;

      connect(limiter5.y,division1. u2) annotation (Line(points={{-79,-80},{-68,-80},
              {-68,-124},{-56,-124}}, color={0,0,127}));
      connect(add8.y,limiter7. u)
        annotation (Line(points={{-221,-126},{-210,-126}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-121,-126},{-104,-126}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-244,-132},{-252,-132},
              {-252,-152},{-112,-152},{-112,-126},{-104,-126}},
                                                       color={0,0,127}));
      connect(Vt_filt3.y,limiter5. u)
        annotation (Line(points={{-119,-80},{-102,-80}},
                                                      color={0,0,127}));
      connect(add8.u1, Pref)
        annotation (Line(points={{-244,-120},{-292,-120},{-292,-80},{-320,-80}},
                                                           color={0,0,127}));
      connect(limiter8.y, division1.u1) annotation (Line(points={{-81,-126},{-72,-126},
              {-72,-136},{-56,-136}}, color={0,0,127}));
      connect(division1.y, add7.u1) annotation (Line(points={{-33,-130},{-28,-130},{
              -28,-124},{-20,-124}}, color={0,0,127}));
      connect(Paux, add7.u2) annotation (Line(points={{-320,-160},{-26,-160},{-26,-136},
              {-20,-136}}, color={0,0,127}));
      connect(variableLimiter2.y, Ipcmd)
        annotation (Line(points={{249,-160},{288,-160},{288,-170},{310,-170}},
                                                         color={0,0,127}));
      connect(add7.y,variableLimiter2. u) annotation (Line(points={{3,-130},{114,-130},
              {114,-160},{226,-160}}, color={0,0,127}));
      connect(product2.y,variableLimiter2. limit1) annotation (Line(points={{203,-126},
              {180,-126},{180,-152},{226,-152}},
                                      color={0,0,127}));
      connect(IPMAX.y,product2. u1)
        annotation (Line(points={{229,-120},{226,-120}}, color={0,0,127}));
      connect(product3.u2,IPMIN. y)
        annotation (Line(points={{226,-184},{229,-184}}, color={0,0,127}));
      connect(variableLimiter2.limit2,product3. y) annotation (Line(points={{226,-168},
              {180,-168},{180,-190},{203,-190}}, color={0,0,127}));
      connect(product2.u2,SOC_ipmax. y)
        annotation (Line(points={{226,-132},{229,-132}},
                                                       color={0,0,127}));
      connect(product3.u1,SOC_ipmin. y)
        annotation (Line(points={{226,-196},{229,-196}}, color={0,0,127}));
      connect(PELEC.y,integrator1. u)
        annotation (Line(points={{-143,-216},{-136,-216}},
                                                         color={0,0,127}));
      connect(integrator1.y,add1. u1) annotation (Line(points={{-113,-216},{-112,-216},
              {-112,-228},{-106,-228}}, color={0,0,127}));
      connect(add1.y,limiter1. u)
        annotation (Line(points={{-83,-234},{-76,-234}}, color={0,0,127}));
      connect(limiter1.y,sOC_logic. SOC)
        annotation (Line(points={{-53,-234},{-32,-234}},color={0,0,127}));
      connect(simpleLag.y,add. u1) annotation (Line(points={{-267,240},{-250,240}},
                                color={0,0,127}));
      connect(VREF0.y,add. u2) annotation (Line(points={{-267,210},{-254,210},{-254,
              228},{-250,228}},color={0,0,127}));
      connect(dbd1_dbd2.y,gain2. u)
        annotation (Line(points={{-187,234},{-170,234}}, color={0,0,127}));
      connect(add.y,dbd1_dbd2. u)
        annotation (Line(points={{-227,234},{-210,234}}, color={0,0,127}));
      connect(gain2.y,limiter. u)
        annotation (Line(points={{-147,234},{-130,234}},
                                                     color={0,0,127}));
      connect(simpleLag1.y,product6. u1)
        annotation (Line(points={{-247,160},{-240,160}}, color={0,0,127}));
      connect(tan1.y,product6. u2) annotation (Line(points={{-247,130},{-240,130},{-240,
              148}}, color={0,0,127}));
      connect(Pe,simpleLag1. u)
        annotation (Line(points={{-320,160},{-270,160}}, color={0,0,127}));
      connect(PFAREF.y,tan1. u)
        annotation (Line(points={{-277,130},{-270,130}},
                                                       color={0,0,127}));
      connect(Qext,PfFlag. u3) annotation (Line(points={{-320,0},{-204,0},{-204,138},
              {-200,138}}, color={0,0,127}));
      connect(product6.y,PfFlag. u1)
        annotation (Line(points={{-217,154},{-200,154}}, color={0,0,127}));
      connect(PfFlag_logic.y,PfFlag. u2) annotation (Line(points={{-233,96},{-208,
              96},{-208,146},{-200,146}},
                                      color={255,0,255}));
      connect(PfFlag.y,limiter2. u)
        annotation (Line(points={{-177,146},{-166,146}}, color={0,0,127}));
      connect(limiter2.y,add2. u1)
        annotation (Line(points={{-143,146},{-136,146}}, color={0,0,127}));
      connect(Qgen,add2. u2) annotation (Line(points={{-320,80},{-136,80},{-136,134}},
            color={0,0,127}));
      connect(frzState.y,product1. u2) annotation (Line(points={{-125,82},{-130,82},
              {-130,94},{-126,94}}, color={0,0,127}));
      connect(limiter3.y,VFlag. u1) annotation (Line(points={{-19,134},{-18,134},{-18,
              142},{-6,142}},color={0,0,127}));
      connect(Vflag_logic.y,VFlag. u2) annotation (Line(points={{-39,80},{-16,80},{-16,
              134},{-6,134}},color={255,0,255}));
      connect(limiter4.y,add5. u1) annotation (Line(points={{47,134},{52,134},{52,140},
              {56,140}}, color={0,0,127}));
      connect(Vt_filt2.y,add5. u2) annotation (Line(points={{57,114},{52,114},{52,128},
              {56,128}}, color={0,0,127}));
      connect(VFlag.y,limiter4. u)
        annotation (Line(points={{17,134},{24,134}}, color={0,0,127}));
      connect(frzState1.y,product4. u2) annotation (Line(points={{39,74},{50,74}},
                            color={0,0,127}));
      connect(IQMAX_.y,variableLimiter1. limit1) annotation (Line(points={{159,154},
              {152,154},{152,138},{156,138}}, color={0,0,127}));
      connect(variableLimiter1.y,QFlag. u1)
        annotation (Line(points={{179,130},{196,130},{196,102}},color={0,0,127}));
      connect(QFLAG.y,QFlag. u2) annotation (Line(points={{179,76},{184,76},{184,94},
              {196,94}}, color={255,0,255}));
      connect(IQMIN_.y,variableLimiter1. limit2) annotation (Line(points={{159,104},
              {152,104},{152,122},{156,122}},
                                            color={0,0,127}));
      connect(add9.y,variableLimiter. u)
        annotation (Line(points={{253,160},{264,160}},
                                                     color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{265,140},{258,
              140},{258,152},{264,152}},
                                      color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{265,184},{258,
              184},{258,168},{264,168}},
                                       color={0,0,127}));
      connect(QFlag.y,add9. u2) annotation (Line(points={{219,94},{230,94},{230,154}},
                         color={0,0,127}));
      connect(add10.y, product5.u2)
        annotation (Line(points={{73,4},{94,4}}, color={0,0,127}));
      connect(Vt_filt1.y,limiter6. u)
        annotation (Line(points={{-47,-10},{-30,-10}}, color={0,0,127}));
      connect(limiter6.y,division. u2) annotation (Line(points={{-7,-10},{0,-10},{0,
              4},{10,4}},color={0,0,127}));
      connect(division.u1,limiter2. u) annotation (Line(points={{10,16},{-172,16},{-172,
              146},{-166,146}}, color={0,0,127}));
      connect(division.y, add10.u1)
        annotation (Line(points={{33,10},{50,10}}, color={0,0,127}));
      connect(integrator4.y,QFlag. u3) annotation (Line(points={{153,10},{188,10},{188,
              86},{196,86}}, color={0,0,127}));
      connect(add10.u2, QFlag.u3) annotation (Line(points={{50,-2},{40,-2},{40,-12},
              {188,-12},{188,86},{196,86}}, color={0,0,127}));
      connect(product5.y,integrator4. u)
        annotation (Line(points={{117,10},{130,10}}, color={0,0,127}));
      connect(product5.u1,product4. u2) annotation (Line(points={{94,16},{82,16},{82,
              46},{44,46},{44,74},{50,74}}, color={0,0,127}));
      connect(VDL2.u,limiter6. u) annotation (Line(points={{54,-70},{-36,-70},{-36,-10},
              {-30,-10}}, color={0,0,127}));
      connect(VDL1.u,limiter6. u) annotation (Line(points={{54,-50},{-36,-50},{-36,-10},
              {-30,-10}}, color={0,0,127}));
      connect(VDL2.y[1], ccl_reecc.VDL2_out)
        annotation (Line(points={{77,-70},{88.8,-69.6}}, color={0,0,127}));
      connect(VDL1.y[1], ccl_reecc.VDL1_out) annotation (Line(points={{77,-50},{77,-50.4},
              {88.8,-50.4}}, color={0,0,127}));
      connect(PQFLAG.y, ccl_reecc.pqflag)
        annotation (Line(points={{147,-60},{88.8,-60}},  color={255,0,255}));
      connect(IQCMD.y, ccl_reecc.Iqcmd) annotation (Line(points={{147,-38},{132,-38},{132,-50.4},{127.2,-50.4}},
                                          color={0,0,127}));
      connect(IPCMD.y, ccl_reecc.Ipcmd) annotation (Line(points={{147,-82},{132,-82},{132,-69.6},{127.2,-69.6}},
                                          color={0,0,127}));
      connect(limiter.y, add9.u1)
        annotation (Line(points={{-107,234},{230,234},{230,166}},color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{287,160},{294,160},{294,170},{310,170}},
                                                     color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,240},{-290,240}}, color={0,0,127}));
      connect(product1.u1, add2.y) annotation (Line(points={{-126,106},{-130,106},{-130,
              122},{-113,122},{-113,140}}, color={0,0,127}));
      connect(product4.u1, add5.y) annotation (Line(points={{50,86},{44,86},{44,98},
              {82,98},{82,134},{79,134}}, color={0,0,127}));
      connect(product7.y, integrator3.u)
        annotation (Line(points={{-153,-126},{-144,-126}}, color={0,0,127}));
      connect(limiter7.y, product7.u2) annotation (Line(points={{-187,-126},{-180,-126},
              {-180,-132},{-176,-132}}, color={0,0,127}));
      connect(frzState2.y, product7.u1) annotation (Line(points={{-185,-96},{-182,-96},
              {-182,-120},{-176,-120}}, color={0,0,127}));
      connect(VReF0.y, VFlag.u3)
        annotation (Line(points={{-27,50},{-6,50},{-6,126}}, color={0,0,127}));
      connect(SOC.y, add1.u2) annotation (Line(points={{-179,-250},{-128,-250},{-128,
              -240},{-106,-240}}, color={0,0,127}));
      connect(gain.y,add3. u1)
        annotation (Line(points={{-73,140},{-68,140}},
                                                     color={0,0,127}));
      connect(integrator.y,add3. u2)
        annotation (Line(points={{-75,100},{-68,100},{-68,128}},
                                                            color={0,0,127}));
      connect(product1.y, integrator.u)
        annotation (Line(points={{-103,100},{-98,100}}, color={0,0,127}));
      connect(gain.u, product1.y) annotation (Line(points={{-96,140},{-100,140},
              {-100,120},{-103,120},{-103,100}}, color={0,0,127}));
      connect(add3.y, limiter3.u)
        annotation (Line(points={{-45,134},{-42,134}}, color={0,0,127}));
      connect(gain1.y,add4. u1) annotation (Line(points={{121,136},{126,136}},
                    color={0,0,127}));
      connect(integrator2.y,add4. u2) annotation (Line(points={{121,102},{121,
              112},{126,112},{126,124}},
                    color={0,0,127}));
      connect(product4.y, integrator2.u) annotation (Line(points={{73,80},{92,
              80},{92,102},{98,102}}, color={0,0,127}));
      connect(gain1.u, product4.y) annotation (Line(points={{98,136},{88,136},{
              88,80},{73,80}}, color={0,0,127}));
      connect(add4.y, variableLimiter1.u)
        annotation (Line(points={{149,130},{156,130}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECCU1 component is an augmented version of the existing renewable energy electrical control (REECA1) model, and can be utilized to represent
both type 3 and type 4 wind turbine electrical controllers as well as photovoltaic electrical controllers. The REECCU1 component can be connected to the
plant controller (REPCA1). This electrical controller provides real (Ipcmd) and reactive (Iqcmd) current commands to the REGCA1 component, which are the outputs
of this component.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECCU1 component has six inputs, three of which are connected to the inverter component
(for instance REGCA1), two more that can either be constant values from the power flow initialization or come from the connection to the plant controller, and
an auxiliary input variable that is rarely used (usually constant and zero). The three REECCU1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Battery Storage Dynamic Modeling Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCBattery]</a>.</li>
</ul>

</html>"));
    end REECCU1;

    model REECB1 "Electrical control model for large scale photovoltaic"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECB(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = -0.05 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0.05 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1.05 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1.05 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.05 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 0.4360 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -0.4360 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.02 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.82 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";

      Integer Voltage_dip;

      Modelica.Blocks.Sources.BooleanConstant PfFlag_logic(k=pfflag)
        annotation (Placement(transformation(extent={{-236,20},{-216,40}})));
      Modelica.Blocks.Logical.Switch PfFlag
        "Constant Q (False) or PF (True) local control."
        annotation (Placement(transformation(extent={{-196,56},{-176,76}})));
      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-162,56},{-142,76}})));
      Modelica.Blocks.Math.Add add1(k2=-1)
        annotation (Placement(transformation(extent={{-132,50},{-112,70}})));
      Modelica.Blocks.Continuous.Integrator integrator(
        k=Kqi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=V0)
        annotation (Placement(transformation(extent={{-94,10},{-74,30}})));
      Modelica.Blocks.Math.Gain gain(k=Kqp)
        annotation (Placement(transformation(extent={{-92,50},{-72,70}})));
      Modelica.Blocks.Math.Add add2
        annotation (Placement(transformation(extent={{-66,44},{-46,64}})));
      Modelica.Blocks.Sources.RealExpression frzState(y=if Voltage_dip == 1 then 0
             else 1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={-112,2})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{-122,10},{-102,30}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-38,44},{-18,64}})));
      Modelica.Blocks.Sources.BooleanConstant Vflag_logic(k=vflag)
        annotation (Placement(transformation(extent={{-58,-10},{-38,10}})));
      Modelica.Blocks.Logical.Switch VFlag
        "Constant Q (False) or PF (True) local control."
        annotation (Placement(transformation(extent={{-2,44},{18,64}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{28,44},{48,64}})));
      Modelica.Blocks.Math.Add add4(k2=-1)
        annotation (Placement(transformation(extent={{60,44},{80,64}})));
      Modelica.Blocks.Sources.RealExpression Vt_filt2(y=simpleLag.y)
        annotation (Placement(transformation(extent={{80,44},{60,24}})));
      Modelica.Blocks.Math.Gain gain1(k=Kvp)
        annotation (Placement(transformation(extent={{100,44},{120,64}})));
      Modelica.Blocks.Continuous.Integrator integrator1(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0 - (-V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{100,10},{120,30}})));
      Modelica.Blocks.Math.Add add5
        annotation (Placement(transformation(extent={{128,38},{148,58}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{54,-10},{74,10}})));
      Modelica.Blocks.Sources.RealExpression frzState1(y=if Voltage_dip == 1 then 0
             else 1) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            origin={30,-6})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{162,38},{182,58}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={172,74})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={172,24})));
      Modelica.Blocks.Logical.Switch QFlag
        annotation (Placement(transformation(extent={{200,4},{220,24}})));
      Modelica.Blocks.Sources.BooleanConstant QFLAG(k=qflag)
        annotation (Placement(transformation(extent={{160,-14},{180,6}})));
      Modelica.Blocks.Math.Add add6(k2=+1)
        annotation (Placement(transformation(extent={{230,70},{250,90}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{264,70},{284,90}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl.Iqmin)
        annotation (Placement(transformation(extent={{284,70},{264,50}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl.Iqmax)
        annotation (Placement(transformation(extent={{284,94},{264,114}})));
      Modelica.Blocks.Math.Add add7(k2=-1)
        annotation (Placement(transformation(extent={{54,-86},{74,-66}})));
      Modelica.Blocks.Continuous.Integrator integrator2(k=1/Tiq, y_start=-Iq0 - (-
            V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{134,-80},{154,-60}})));
      Modelica.Blocks.Math.Product product4
        annotation (Placement(transformation(extent={{98,-80},{118,-60}})));
      Modelica.Blocks.Sources.RealExpression Vt_filt1(y=simpleLag.y)
        annotation (Placement(transformation(extent={{-66,-100},{-46,-80}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-26,-100},{-6,-80}})));
      Modelica.Blocks.Math.Division division
        annotation (Placement(transformation(extent={{14,-80},{34,-60}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{54,-180},{74,-160}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl.Ipmax) annotation (
          Placement(transformation(
            extent={{10,-10},{-10,10}},
            origin={64,-140})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl.Ipmin)
        annotation (Placement(transformation(extent={{74,-210},{54,-190}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-286,150},{-266,170}})));
      Modelica.Blocks.Math.Add add(k1=-1)
        annotation (Placement(transformation(extent={{-246,144},{-226,164}})));
      Modelica.Blocks.Nonlinear.Limiter limiter(uMax=Iqh1, uMin=Iql1)
        annotation (Placement(transformation(extent={{-126,144},{-106,164}})));
      Modelica.Blocks.Sources.RealExpression VREF0(y=Vref0)
        annotation (Placement(transformation(extent={{-286,120},{-266,140}})));
      Modelica.Blocks.Nonlinear.DeadZone dbd1_dbd2(uMax=dbd2, uMin=dbd1)
        annotation (Placement(transformation(extent={{-206,144},{-186,164}})));
      Modelica.Blocks.Math.Gain gain2(k=Kqv)
        annotation (Placement(transformation(extent={{-166,144},{-146,164}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Tp,
        y_start=p00)
        annotation (Placement(transformation(extent={{-266,70},{-246,90}})));
      Modelica.Blocks.Math.Tan tan1
        annotation (Placement(transformation(extent={{-252,56},{-244,48}})));
      Modelica.Blocks.Math.Product product1
        annotation (Placement(transformation(extent={{-236,64},{-216,84}})));
      Modelica.Blocks.Sources.RealExpression PFAREF(y=pfangle)
        annotation (Placement(transformation(extent={{10,-10},{-10,10}},
            rotation=180,
            origin={-290,30})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-72,-180},{-52,-160}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-132,-220},{-112,-200}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-276,-176},{-256,-156}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-240,-176},{-220,-156}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-152,-176},{-132,-156}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-112,-176},{-92,-156}})));
      Modelica.Blocks.Sources.RealExpression Vt_filt3(y=simpleLag.y)
        annotation (Placement(transformation(extent={{-198,-220},{-178,-200}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECB
        ccl(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{260,-40},{280,-20}})));
      Modelica.Blocks.Sources.BooleanConstant Pqflag_logic(k=pqflag)
        annotation (Placement(transformation(extent={{220,-40},{240,-20}})));

      Modelica.Blocks.Sources.RealExpression frzState2(y=if Voltage_dip == 1 then 0
             else 1) annotation (Placement(transformation(
            extent={{-10,10},{10,-10}},
            origin={-230,-130})));
      Modelica.Blocks.Math.Product product6
        annotation (Placement(transformation(extent={{-190,-176},{-170,-156}})));
      Modelica.Blocks.Sources.RealExpression VReF0(y=Vref0) annotation (Placement(
            transformation(
            extent={{-10,10},{10,-10}},
            origin={-44,-32})));
    protected
      parameter Real pfaref = p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;

    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;
      connect(simpleLag.y,add. u1) annotation (Line(points={{-265,160},{-248,160}},
                                color={0,0,127}));
      connect(VREF0.y,add. u2) annotation (Line(points={{-265,130},{-252,130},{-252,
              148},{-248,148}},color={0,0,127}));
      connect(dbd1_dbd2.y,gain2. u)
        annotation (Line(points={{-185,154},{-168,154}}, color={0,0,127}));
      connect(add.y,dbd1_dbd2. u)
        annotation (Line(points={{-225,154},{-208,154}}, color={0,0,127}));
      connect(gain2.y,limiter. u)
        annotation (Line(points={{-145,154},{-128,154}},
                                                     color={0,0,127}));
      connect(simpleLag1.y,product1. u1)
        annotation (Line(points={{-245,80},{-238,80}}, color={0,0,127}));
      connect(tan1.y,product1. u2) annotation (Line(points={{-243.6,52},{-238,
              52},{-238,68}},
                    color={0,0,127}));
      connect(Pe,simpleLag1. u)
        annotation (Line(points={{-320,80},{-268,80}}, color={0,0,127}));
      connect(product1.y,PfFlag. u1)
        annotation (Line(points={{-215,74},{-198,74}}, color={0,0,127}));
      connect(PfFlag_logic.y,PfFlag. u2) annotation (Line(points={{-215,30},{-206,30},
              {-206,66},{-198,66}}, color={255,0,255}));
      connect(PfFlag.y,limiter1. u)
        annotation (Line(points={{-175,66},{-164,66}}, color={0,0,127}));
      connect(limiter1.y,add1. u1)
        annotation (Line(points={{-141,66},{-134,66}}, color={0,0,127}));
      connect(Qgen,add1. u2) annotation (Line(points={{-320,0},{-134,0},{-134,54}},
            color={0,0,127}));
      connect(gain.y,add2. u1)
        annotation (Line(points={{-71,60},{-68,60}}, color={0,0,127}));
      connect(integrator.y,add2. u2)
        annotation (Line(points={{-73,20},{-70,20},{-70,48},{-68,48}},
                                                            color={0,0,127}));
      connect(product2.y,integrator. u)
        annotation (Line(points={{-101,20},{-96,20}},color={0,0,127}));
      connect(frzState.y,product2. u2) annotation (Line(points={{-123,2},{-128,2},{-128,
              14},{-124,14}}, color={0,0,127}));
      connect(add2.y,limiter2. u)
        annotation (Line(points={{-45,54},{-40,54}}, color={0,0,127}));
      connect(limiter2.y,VFlag. u1) annotation (Line(points={{-17,54},{-16,54},{-16,
              62},{-4,62}}, color={0,0,127}));
      connect(Vflag_logic.y,VFlag. u2) annotation (Line(points={{-37,0},{-14,0},{-14,
              54},{-4,54}}, color={255,0,255}));
      connect(limiter3.y,add4. u1) annotation (Line(points={{49,54},{54,54},{54,60},
              {58,60}}, color={0,0,127}));
      connect(Vt_filt2.y,add4. u2) annotation (Line(points={{59,34},{54,34},{54,48},
              {58,48}}, color={0,0,127}));
      connect(VFlag.y,limiter3. u)
        annotation (Line(points={{19,54},{26,54}}, color={0,0,127}));
      connect(gain1.y,add5. u1) annotation (Line(points={{121,54},{126,54}},
                    color={0,0,127}));
      connect(integrator1.y,add5. u2) annotation (Line(points={{121,20},{126,20},{126,
              42}}, color={0,0,127}));
      connect(frzState1.y,product3. u2) annotation (Line(points={{41,-6},{52,-6}},
                            color={0,0,127}));
      connect(product3.y,integrator1. u) annotation (Line(points={{75,0},{90,0},{90,
              20},{98,20}}, color={0,0,127}));
      connect(add5.y,variableLimiter2. u)
        annotation (Line(points={{149,48},{160,48}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter2. limit1) annotation (Line(points={{161,74},{
              154,74},{154,56},{160,56}}, color={0,0,127}));
      connect(variableLimiter2.y,QFlag. u1)
        annotation (Line(points={{183,48},{198,48},{198,22}}, color={0,0,127}));
      connect(QFLAG.y,QFlag. u2) annotation (Line(points={{181,-4},{186,-4},{186,14},
              {198,14}}, color={255,0,255}));
      connect(IQMIN_.y,variableLimiter2. limit2) annotation (Line(points={{161,24},{
              154,24},{154,40},{160,40}}, color={0,0,127}));
      connect(add6.y,variableLimiter. u)
        annotation (Line(points={{251,80},{262,80}}, color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{263,60},{256,
              60},{256,72},{262,72}}, color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{263,104},{256,
              104},{256,88},{262,88}}, color={0,0,127}));
      connect(QFlag.y,add6. u2) annotation (Line(points={{221,14},{228,14},{228,74}},
                         color={0,0,127}));
      connect(add7.y,product4. u2)
        annotation (Line(points={{75,-76},{96,-76}}, color={0,0,127}));
      connect(Vt_filt1.y,limiter4. u)
        annotation (Line(points={{-45,-90},{-28,-90}}, color={0,0,127}));
      connect(limiter4.y,division. u2) annotation (Line(points={{-5,-90},{2,-90},{2,
              -76},{12,-76}},
                         color={0,0,127}));
      connect(division.u1,limiter1. u) annotation (Line(points={{12,-64},{-170,-64},
              {-170,66},{-164,66}},
                                color={0,0,127}));
      connect(division.y,add7. u1)
        annotation (Line(points={{35,-70},{52,-70}}, color={0,0,127}));
      connect(integrator2.y,QFlag. u3) annotation (Line(points={{155,-70},{190,-70},
              {190,6},{198,6}}, color={0,0,127}));
      connect(add7.u2,QFlag. u3) annotation (Line(points={{52,-82},{42,-82},{42,-92},
              {190,-92},{190,6},{198,6}}, color={0,0,127}));
      connect(product4.y,integrator2. u)
        annotation (Line(points={{119,-70},{132,-70}}, color={0,0,127}));
      connect(product4.u1,product3. u2) annotation (Line(points={{96,-64},{84,-64},{
              84,-34},{46,-34},{46,-6},{52,-6}},
                                            color={0,0,127}));
      connect(IPMIN.y,variableLimiter1. limit2) annotation (Line(points={{53,-200},{
              34,-200},{34,-178},{52,-178}}, color={0,0,127}));
      connect(IPMAX.y,variableLimiter1. limit1) annotation (Line(points={{53,-140},{
              34,-140},{34,-162},{52,-162}}, color={0,0,127}));
      connect(variableLimiter1.y, Ipcmd) annotation (Line(points={{75,-170},{254,-170},{254,-170},{310,-170}},
                                    color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,160},{-288,160}}, color={0,0,127}));
      connect(limiter.y, add6.u1)
        annotation (Line(points={{-105,154},{228,154},{228,86}}, color={0,0,127}));
      connect(limiter5.y,division1. u2) annotation (Line(points={{-111,-210},{-86,-210},
              {-86,-176},{-74,-176}}, color={0,0,127}));
      connect(add8.y,limiter7. u)
        annotation (Line(points={{-255,-166},{-242,-166}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-131,-166},{-114,-166}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-278,-172},{-278,-188},
              {-124,-188},{-124,-166},{-114,-166}}, color={0,0,127}));
      connect(limiter8.y,division1. u1) annotation (Line(points={{-91,-166},{-82,-166},
              {-82,-164},{-74,-164}}, color={0,0,127}));
      connect(Vt_filt3.y,limiter5. u)
        annotation (Line(points={{-177,-210},{-134,-210}},
                                                      color={0,0,127}));
      connect(add8.u1, Pref)
        annotation (Line(points={{-278,-160},{-320,-160}}, color={0,0,127}));
      connect(division1.y, variableLimiter1.u)
        annotation (Line(points={{-51,-170},{52,-170}}, color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{285,80},{292,80},{292,170},{310,170}},
                                                     color={0,0,127}));
      connect(Pqflag_logic.y, ccl.Pqflag)
        annotation (Line(points={{241,-30},{258,-30}}, color={255,0,255}));
      connect(ccl.Iqcmd, Iqcmd) annotation (Line(points={{282,-25},{292,-25},{292,170},{310,170}},
                         color={0,0,127}));
      connect(ccl.Ipcmd, Ipcmd) annotation (Line(points={{282,-35},{292,-35},{292,-170},{310,-170}},
                          color={0,0,127}));
      connect(product2.u1, add1.y) annotation (Line(points={{-124,26},{-128,26},{-128,
              40},{-111,40},{-111,60}}, color={0,0,127}));
      connect(gain.u, integrator.u) annotation (Line(points={{-94,60},{-98,60},{-98,
              20},{-96,20}}, color={0,0,127}));
      connect(product3.u1, add4.y) annotation (Line(points={{52,6},{50,6},{50,8},{46,
              8},{46,20},{84,20},{84,54},{81,54}}, color={0,0,127}));
      connect(gain1.u, integrator1.u) annotation (Line(points={{98,54},{90,54},{90,20},
              {98,20}}, color={0,0,127}));
      connect(frzState2.y, product6.u1) annotation (Line(points={{-219,-130},{-204,-130},
              {-204,-160},{-192,-160}}, color={0,0,127}));
      connect(limiter7.y, product6.u2) annotation (Line(points={{-219,-166},{-212,-166},
              {-212,-172},{-192,-172}}, color={0,0,127}));
      connect(product6.y, integrator3.u)
        annotation (Line(points={{-169,-166},{-154,-166}}, color={0,0,127}));
      connect(VReF0.y, VFlag.u3)
        annotation (Line(points={{-33,-32},{-4,-32},{-4,46}}, color={0,0,127}));
      connect(PFAREF.y, tan1.u) annotation (Line(points={{-279,30},{-266,30},{
              -266,52},{-252.8,52}}, color={0,0,127}));
      connect(Qext, PfFlag.u3) annotation (Line(points={{-320,-80},{-198,-80},{
              -198,58}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECB1 component used to represent the electrical controls of photovoltaic generation. The electrical controller actuates on the active and reactive power
reference from either the plant controller component or from power flow power reference values (in the case where there is no plant controller),
with feedback variables that original from the inverter interface component, specifically terminal voltage and generator power output,
and provides real (Ipcmd) and reactive current (Iqcmd) commands to the REGC types module.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECB1 component has five inputs, three of which are connected to the inverter component
(for instance REGCA1), and two more that can either be constant values from the power flow initialization or come from the connection to the plant controller.
The three REECB1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Solar Photovoltaic Power Plant Modeling and Validation Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCPhotovoltaic]</a>.</li>
</ul>
</html>"), Icon(graphics={
            Text(
              extent={{-276,282},{-146,240}},
              textColor={0,0,255},
              textString="PFinput")}));
    end REECB1;

    model REECB_Constant_Q_Control
      "Electrical control model for large scale photovoltaic"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECB(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = -0.05 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0.05 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1.05 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1.05 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.05 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 0.4360 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -0.4360 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.02 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.82 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{264,70},{284,90}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl.Iqmin)
        annotation (Placement(transformation(extent={{284,70},{264,50}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl.Iqmax)
        annotation (Placement(transformation(extent={{284,94},{264,114}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-26,-100},{-6,-80}})));
      Modelica.Blocks.Math.Division division
        annotation (Placement(transformation(extent={{14,-80},{34,-60}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{54,-180},{74,-160}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl.Ipmax) annotation (
          Placement(transformation(
            extent={{10,-10},{-10,10}},
            origin={64,-140})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl.Ipmin)
        annotation (Placement(transformation(extent={{74,-210},{54,-190}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-286,150},{-266,170}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-72,-180},{-52,-160}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-276,-176},{-256,-156}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-240,-176},{-220,-156}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-170,-176},{-150,-156}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-112,-176},{-92,-156}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECB
        ccl(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{260,-40},{280,-20}})));
      Modelica.Blocks.Sources.BooleanConstant Pqflag_logic(k=pqflag)
        annotation (Placement(transformation(extent={{220,-40},{240,-20}})));

      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Trv,
        y_start=q00)
        annotation (Placement(transformation(extent={{-220,-90},{-200,-70}})));
      NonElectrical.Continuous.SimpleLag simpleLag2(
        K=1,
        T=Tiq,
        y_start=-Iq0 - (-V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{60,-80},{80,-60}})));
    protected
      parameter Real pfaref = p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;

    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{263,60},{256,
              60},{256,72},{262,72}}, color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{263,104},{256,
              104},{256,88},{262,88}}, color={0,0,127}));
      connect(limiter4.y,division. u2) annotation (Line(points={{-5,-90},{2,-90},{2,
              -76},{12,-76}},
                         color={0,0,127}));
      connect(IPMIN.y,variableLimiter1. limit2) annotation (Line(points={{53,-200},{
              34,-200},{34,-178},{52,-178}}, color={0,0,127}));
      connect(IPMAX.y,variableLimiter1. limit1) annotation (Line(points={{53,-140},{
              34,-140},{34,-162},{52,-162}}, color={0,0,127}));
      connect(variableLimiter1.y, Ipcmd) annotation (Line(points={{75,-170},{254,-170},{254,-170},{310,-170}},
                                    color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,160},{-288,160}}, color={0,0,127}));
      connect(add8.y,limiter7. u)
        annotation (Line(points={{-255,-166},{-242,-166}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-149,-166},{-114,-166}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-278,-172},{-278,-188},
              {-124,-188},{-124,-166},{-114,-166}}, color={0,0,127}));
      connect(limiter8.y,division1. u1) annotation (Line(points={{-91,-166},{-82,-166},
              {-82,-164},{-74,-164}}, color={0,0,127}));
      connect(add8.u1, Pref)
        annotation (Line(points={{-278,-160},{-320,-160}}, color={0,0,127}));
      connect(division1.y, variableLimiter1.u)
        annotation (Line(points={{-51,-170},{52,-170}}, color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{285,80},{292,80},{292,170},{310,170}},
                                                     color={0,0,127}));
      connect(Pqflag_logic.y, ccl.Pqflag)
        annotation (Line(points={{241,-30},{258,-30}}, color={255,0,255}));
      connect(ccl.Iqcmd, Iqcmd) annotation (Line(points={{282,-25},{292,-25},{292,170},{310,170}},
                         color={0,0,127}));
      connect(ccl.Ipcmd, Ipcmd) annotation (Line(points={{282,-35},{292,-35},{292,-170},{310,-170}},
                          color={0,0,127}));
      connect(Qext, simpleLag1.u)
        annotation (Line(points={{-320,-80},{-222,-80}}, color={0,0,127}));
      connect(simpleLag1.y, division.u1) annotation (Line(points={{-199,-80},{
              -106,-80},{-106,-64},{12,-64}}, color={0,0,127}));
      connect(simpleLag.y, limiter4.u) annotation (Line(points={{-265,160},{
              -178,160},{-178,158},{-60,158},{-60,-88},{-28,-88},{-28,-90}},
            color={0,0,127}));
      connect(division.y, simpleLag2.u)
        annotation (Line(points={{35,-70},{58,-70}}, color={0,0,127}));
      connect(simpleLag2.y, variableLimiter.u) annotation (Line(points={{81,-70},
              {180,-70},{180,80},{262,80}}, color={0,0,127}));
      connect(limiter7.y, integrator3.u)
        annotation (Line(points={{-219,-166},{-172,-166}}, color={0,0,127}));
      connect(division1.u2, division.u2) annotation (Line(points={{-74,-176},{
              -78,-176},{-78,-174},{-84,-174},{-84,-224},{2,-224},{2,-76},{12,
              -76}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECB1 component used to represent the electrical controls of photovoltaic generation. The electrical controller actuates on the active and reactive power
reference from either the plant controller component or from power flow power reference values (in the case where there is no plant controller),
with feedback variables that original from the inverter interface component, specifically terminal voltage and generator power output,
and provides real (Ipcmd) and reactive current (Iqcmd) commands to the REGC types module.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECB1 component has five inputs, three of which are connected to the inverter component
(for instance REGCA1), and two more that can either be constant values from the power flow initialization or come from the connection to the plant controller.
The three REECB1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Solar Photovoltaic Power Plant Modeling and Validation Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCPhotovoltaic]</a>.</li>
</ul>
</html>"), Icon(graphics={
            Text(
              extent={{-276,282},{-146,240}},
              textColor={0,0,255},
              textString="PFinput")}));
    end REECB_Constant_Q_Control;

    model REECB1_Local_V_Control
      "Electrical control model for large scale photovoltaic"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECB(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = -0.05 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0.05 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1.05 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1.05 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.05 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 0.4360 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -0.4360 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.02 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.82 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";

      //Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{28,44},{48,64}})));
      Modelica.Blocks.Math.Add add4(k2=-1)
        annotation (Placement(transformation(extent={{60,44},{80,64}})));
      Modelica.Blocks.Math.Gain gain1(k=Kvp)
        annotation (Placement(transformation(extent={{100,44},{120,64}})));
      Modelica.Blocks.Continuous.Integrator integrator1(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=Iq0)
        annotation (Placement(transformation(extent={{100,10},{120,30}})));
      Modelica.Blocks.Math.Add add5
        annotation (Placement(transformation(extent={{128,38},{148,58}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{162,38},{182,58}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={172,74})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={172,24})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{264,70},{284,90}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl.Iqmin)
        annotation (Placement(transformation(extent={{284,70},{264,50}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl.Iqmax)
        annotation (Placement(transformation(extent={{284,94},{264,114}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{54,-180},{74,-160}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl.Ipmax) annotation (
          Placement(transformation(
            extent={{10,-10},{-10,10}},
            origin={64,-140})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl.Ipmin)
        annotation (Placement(transformation(extent={{74,-210},{54,-190}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-286,150},{-266,170}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-72,-180},{-52,-160}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-132,-220},{-112,-200}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-276,-176},{-256,-156}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-240,-176},{-220,-156}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-152,-176},{-132,-156}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-112,-176},{-92,-156}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECB
        ccl(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{260,-40},{280,-20}})));
      Modelica.Blocks.Sources.BooleanConstant Pqflag_logic(k=pqflag)
        annotation (Placement(transformation(extent={{220,-40},{240,-20}})));

      Modelica.Blocks.Sources.RealExpression VReF0(y=Vref0) annotation (Placement(
            transformation(
            extent={{-10,10},{10,-10}},
            origin={-50,70})));
      Modelica.Blocks.Math.Add add1
        annotation (Placement(transformation(extent={{-20,44},{0,64}})));
      Modelica.Blocks.Interfaces.RealInput Vref_input
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-20,-20},{20,20}},
            rotation=0,
            origin={-320,260})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Trv,
        y_start=0)
        annotation (Placement(transformation(extent={{-106,38},{-86,58}})));
    protected
      parameter Real pfaref = p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;

    equation

      //Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;
      connect(limiter3.y,add4. u1) annotation (Line(points={{49,54},{54,54},{54,60},
              {58,60}}, color={0,0,127}));
      connect(gain1.y,add5. u1) annotation (Line(points={{121,54},{126,54}},
                    color={0,0,127}));
      connect(integrator1.y,add5. u2) annotation (Line(points={{121,20},{126,20},{126,
              42}}, color={0,0,127}));
      connect(add5.y,variableLimiter2. u)
        annotation (Line(points={{149,48},{160,48}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter2. limit1) annotation (Line(points={{161,74},{
              154,74},{154,56},{160,56}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter2. limit2) annotation (Line(points={{161,24},{
              154,24},{154,40},{160,40}}, color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{263,60},{256,
              60},{256,72},{262,72}}, color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{263,104},{256,
              104},{256,88},{262,88}}, color={0,0,127}));
      connect(IPMIN.y,variableLimiter1. limit2) annotation (Line(points={{53,-200},{
              34,-200},{34,-178},{52,-178}}, color={0,0,127}));
      connect(IPMAX.y,variableLimiter1. limit1) annotation (Line(points={{53,-140},{
              34,-140},{34,-162},{52,-162}}, color={0,0,127}));
      connect(variableLimiter1.y, Ipcmd) annotation (Line(points={{75,-170},{254,-170},{254,-170},{310,-170}},
                                    color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,160},{-288,160}}, color={0,0,127}));
      connect(limiter5.y,division1. u2) annotation (Line(points={{-111,-210},{-86,-210},
              {-86,-176},{-74,-176}}, color={0,0,127}));
      connect(add8.y,limiter7. u)
        annotation (Line(points={{-255,-166},{-242,-166}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-131,-166},{-114,-166}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-278,-172},{-278,-188},
              {-124,-188},{-124,-166},{-114,-166}}, color={0,0,127}));
      connect(limiter8.y,division1. u1) annotation (Line(points={{-91,-166},{-82,-166},
              {-82,-164},{-74,-164}}, color={0,0,127}));
      connect(add8.u1, Pref)
        annotation (Line(points={{-278,-160},{-320,-160}}, color={0,0,127}));
      connect(division1.y, variableLimiter1.u)
        annotation (Line(points={{-51,-170},{52,-170}}, color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{285,80},{292,80},{292,170},{310,170}},
                                                     color={0,0,127}));
      connect(Pqflag_logic.y, ccl.Pqflag)
        annotation (Line(points={{241,-30},{258,-30}}, color={255,0,255}));
      connect(ccl.Iqcmd, Iqcmd) annotation (Line(points={{282,-25},{292,-25},{292,170},{310,170}},
                         color={0,0,127}));
      connect(ccl.Ipcmd, Ipcmd) annotation (Line(points={{282,-35},{292,-35},{292,-170},{310,-170}},
                          color={0,0,127}));
      connect(gain1.u, integrator1.u) annotation (Line(points={{98,54},{90,54},{90,20},
              {98,20}}, color={0,0,127}));
      connect(VReF0.y, add1.u1) annotation (Line(points={{-39,70},{-32,70},{-32,
              60},{-22,60}}, color={0,0,127}));
      connect(add1.y, limiter3.u)
        annotation (Line(points={{1,54},{26,54}}, color={0,0,127}));
      connect(simpleLag.y, add4.u2) annotation (Line(points={{-265,160},{-226,
              160},{-226,158},{-172,158},{-172,28},{58,28},{58,48}}, color={0,0,
              127}));
      connect(variableLimiter2.y, variableLimiter.u) annotation (Line(points={{
              183,48},{252,48},{252,80},{262,80}}, color={0,0,127}));
      connect(add4.y, gain1.u)
        annotation (Line(points={{81,54},{98,54}}, color={0,0,127}));
      connect(limiter7.y, integrator3.u)
        annotation (Line(points={{-219,-166},{-154,-166}}, color={0,0,127}));
      connect(limiter5.u, add4.u2) annotation (Line(points={{-134,-210},{-170,
              -210},{-170,28},{58,28},{58,48}}, color={0,0,127}));
      connect(simpleLag1.y, add1.u2)
        annotation (Line(points={{-85,48},{-22,48}}, color={0,0,127}));
      connect(simpleLag1.u, Vref_input) annotation (Line(points={{-108,48},{
              -140,48},{-140,260},{-320,260}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECB1 component used to represent the electrical controls of photovoltaic generation. The electrical controller actuates on the active and reactive power
reference from either the plant controller component or from power flow power reference values (in the case where there is no plant controller),
with feedback variables that original from the inverter interface component, specifically terminal voltage and generator power output,
and provides real (Ipcmd) and reactive current (Iqcmd) commands to the REGC types module.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECB1 component has five inputs, three of which are connected to the inverter component
(for instance REGCA1), and two more that can either be constant values from the power flow initialization or come from the connection to the plant controller.
The three REECB1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Solar Photovoltaic Power Plant Modeling and Validation Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCPhotovoltaic]</a>.</li>
</ul>
</html>"), Icon(graphics={
            Text(
              extent={{-276,282},{-146,240}},
              textColor={0,0,255},
              textString="Vinput")}));
    end REECB1_Local_V_Control;

    model REECB1_Local_V_Q_Control
      "Electrical control model for large scale photovoltaic"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECB(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = -0.05 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0.05 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1.05 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1.05 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.05 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 0.4360 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -0.4360 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.02 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.82 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-162,56},{-142,76}})));
      Modelica.Blocks.Math.Add add1(k2=-1)
        annotation (Placement(transformation(extent={{-132,50},{-112,70}})));
      Modelica.Blocks.Continuous.Integrator integrator(
        k=Kqi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=V0)
        annotation (Placement(transformation(extent={{-94,10},{-74,30}})));
      Modelica.Blocks.Math.Gain gain(k=Kqp)
        annotation (Placement(transformation(extent={{-92,50},{-72,70}})));
      Modelica.Blocks.Math.Add add2
        annotation (Placement(transformation(extent={{-66,44},{-46,64}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-8,44},{12,64}})));
      Modelica.Blocks.Math.Add add4(k2=-1)
        annotation (Placement(transformation(extent={{60,44},{80,64}})));
      Modelica.Blocks.Math.Gain gain1(k=Kvp)
        annotation (Placement(transformation(extent={{100,44},{120,64}})));
      Modelica.Blocks.Continuous.Integrator integrator1(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0)
        annotation (Placement(transformation(extent={{100,10},{120,30}})));
      Modelica.Blocks.Math.Add add5
        annotation (Placement(transformation(extent={{128,38},{148,58}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{162,38},{182,58}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={172,74})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={172,24})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{264,70},{284,90}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl.Iqmin)
        annotation (Placement(transformation(extent={{284,70},{264,50}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl.Iqmax)
        annotation (Placement(transformation(extent={{284,94},{264,114}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{178,-180},{198,-160}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl.Ipmax) annotation (
          Placement(transformation(
            extent={{10,-10},{-10,10}},
            origin={188,-140})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl.Ipmin)
        annotation (Placement(transformation(extent={{198,-210},{178,-190}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-286,150},{-266,170}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{0,-180},{20,-160}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-132,-220},{-112,-200}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-70,-176},{-50,-156}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECB
        ccl(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{260,-40},{280,-20}})));
      Modelica.Blocks.Sources.BooleanConstant Pqflag_logic(k=pqflag)
        annotation (Placement(transformation(extent={{220,-40},{240,-20}})));

      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Trv,
        y_start=q00)
        annotation (Placement(transformation(extent={{-270,-90},{-250,-70}})));
      NonElectrical.Continuous.SimpleLag simpleLag2(
        K=1,
        T=Trv,
        y_start=p00)
        annotation (Placement(transformation(extent={{-276,-170},{-256,-150}})));
    protected
      parameter Real pfaref = p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;

    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;
      connect(limiter1.y,add1. u1)
        annotation (Line(points={{-141,66},{-134,66}}, color={0,0,127}));
      connect(Qgen,add1. u2) annotation (Line(points={{-320,0},{-134,0},{-134,54}},
            color={0,0,127}));
      connect(gain.y,add2. u1)
        annotation (Line(points={{-71,60},{-68,60}}, color={0,0,127}));
      connect(integrator.y,add2. u2)
        annotation (Line(points={{-73,20},{-70,20},{-70,48},{-68,48}},
                                                            color={0,0,127}));
      connect(add2.y,limiter2. u)
        annotation (Line(points={{-45,54},{-10,54}}, color={0,0,127}));
      connect(gain1.y,add5. u1) annotation (Line(points={{121,54},{126,54}},
                    color={0,0,127}));
      connect(integrator1.y,add5. u2) annotation (Line(points={{121,20},{126,20},{126,
              42}}, color={0,0,127}));
      connect(add5.y,variableLimiter2. u)
        annotation (Line(points={{149,48},{160,48}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter2. limit1) annotation (Line(points={{161,74},{
              154,74},{154,56},{160,56}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter2. limit2) annotation (Line(points={{161,24},{
              154,24},{154,40},{160,40}}, color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{263,60},{256,
              60},{256,72},{262,72}}, color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{263,104},{256,
              104},{256,88},{262,88}}, color={0,0,127}));
      connect(IPMIN.y,variableLimiter1. limit2) annotation (Line(points={{177,
              -200},{177,-189},{176,-189},{176,-178}},
                                             color={0,0,127}));
      connect(IPMAX.y,variableLimiter1. limit1) annotation (Line(points={{177,
              -140},{177,-151},{176,-151},{176,-162}},
                                             color={0,0,127}));
      connect(variableLimiter1.y, Ipcmd) annotation (Line(points={{199,-170},{
              310,-170}},           color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,160},{-288,160}}, color={0,0,127}));
      connect(limiter5.y,division1. u2) annotation (Line(points={{-111,-210},{
              -111,-212},{-12,-212},{-12,-176},{-2,-176}},
                                      color={0,0,127}));
      connect(limiter8.y,division1. u1) annotation (Line(points={{-49,-166},{
              -25.5,-166},{-25.5,-164},{-2,-164}},
                                      color={0,0,127}));
      connect(division1.y, variableLimiter1.u)
        annotation (Line(points={{21,-170},{176,-170}}, color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{285,80},{292,80},{292,170},{310,170}},
                                                     color={0,0,127}));
      connect(Pqflag_logic.y, ccl.Pqflag)
        annotation (Line(points={{241,-30},{258,-30}}, color={255,0,255}));
      connect(ccl.Iqcmd, Iqcmd) annotation (Line(points={{282,-25},{292,-25},{292,170},{310,170}},
                         color={0,0,127}));
      connect(ccl.Ipcmd, Ipcmd) annotation (Line(points={{282,-35},{292,-35},{292,-170},{310,-170}},
                          color={0,0,127}));
      connect(gain.u, integrator.u) annotation (Line(points={{-94,60},{-98,60},{-98,
              20},{-96,20}}, color={0,0,127}));
      connect(gain1.u, integrator1.u) annotation (Line(points={{98,54},{90,54},{90,20},
              {98,20}}, color={0,0,127}));
      connect(variableLimiter2.y, variableLimiter.u) annotation (Line(points={{
              183,48},{232,48},{232,80},{262,80}}, color={0,0,127}));
      connect(add4.y, gain1.u)
        annotation (Line(points={{81,54},{98,54}}, color={0,0,127}));
      connect(add4.u2, simpleLag.y) annotation (Line(points={{58,48},{58,28},{
              86,28},{86,160},{-265,160}}, color={0,0,127}));
      connect(limiter5.u, simpleLag.y) annotation (Line(points={{-134,-210},{
              -188,-210},{-188,160},{-265,160}}, color={0,0,127}));
      connect(limiter2.y, add4.u1)
        annotation (Line(points={{13,54},{13,60},{58,60}}, color={0,0,127}));
      connect(Qext, simpleLag1.u)
        annotation (Line(points={{-320,-80},{-272,-80}}, color={0,0,127}));
      connect(simpleLag1.y, limiter1.u) annotation (Line(points={{-249,-80},{
              -212,-80},{-212,66},{-164,66}}, color={0,0,127}));
      connect(add1.y, gain.u)
        annotation (Line(points={{-111,60},{-94,60}}, color={0,0,127}));
      connect(Pref, simpleLag2.u)
        annotation (Line(points={{-320,-160},{-278,-160}}, color={0,0,127}));
      connect(simpleLag2.y, limiter8.u) annotation (Line(points={{-255,-160},{
              -84,-160},{-84,-166},{-72,-166}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECB1 component used to represent the electrical controls of photovoltaic generation. The electrical controller actuates on the active and reactive power
reference from either the plant controller component or from power flow power reference values (in the case where there is no plant controller),
with feedback variables that original from the inverter interface component, specifically terminal voltage and generator power output,
and provides real (Ipcmd) and reactive current (Iqcmd) commands to the REGC types module.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECB1 component has five inputs, three of which are connected to the inverter component
(for instance REGCA1), and two more that can either be constant values from the power flow initialization or come from the connection to the plant controller.
The three REECB1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Solar Photovoltaic Power Plant Modeling and Validation Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCPhotovoltaic]</a>.</li>
</ul>
</html>"));
    end REECB1_Local_V_Q_Control;

    model REECCU1_Local_V_Control
      "Electrical control model for utility scale battery energy storage"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECC(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0.01 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = 0 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.01 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 1 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -1 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.01 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.1 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";
      parameter OpenIPSL.Types.PerUnit Vq1 = 0.2 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq1 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq2 = 0.5 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq2 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq3 = 0.75 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq3 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq4 = 1 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq4 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp1 = 0.2 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip1 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp2 = 0.5 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip2 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp3 = 0.75 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip3 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp4 = 1 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip4 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter Modelica.Units.SI.Time T = 999 "Battery discharge time";
      parameter OpenIPSL.Types.PerUnit SOCini = 0.5 "Initial state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmax = 0.8 "Maximum allowable state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmin = 0.2 "Minimum allowable state of charge";

      Integer Voltage_dip;

      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{108,-132},{128,-152}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{62,-102},{82,-82}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-50,-148},{-30,-128}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-16,-148},{4,-128}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{20,-148},{40,-128}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{60,-148},{80,-128}})));
      Modelica.Blocks.Math.Add add7(k1=+1, k2=+1)
        annotation (Placement(transformation(extent={{144,-152},{164,-132}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{228,-170},{248,-150}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl_reecc.Ipmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-120})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl_reecc.Ipmin) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-184})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{224,-136},{204,-116}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=180,
            origin={214,-190})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmax(y=sOC_logic.ipmax_SOC)
        annotation (Placement(transformation(extent={{250,-122},{230,-142}})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmin(y=sOC_logic.ipmin_SOC)
        annotation (Placement(transformation(extent={{250,-186},{230,-206}})));
      Modelica.Blocks.Continuous.Integrator integrator1(k=1/T,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=p00)
        annotation (Placement(transformation(extent={{-258,-208},{-238,-188}})));
      Modelica.Blocks.Math.Add add1(k1=-1, k2=+1)
        annotation (Placement(transformation(extent={{64,-220},{84,-200}})));
      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=SOCmax, uMin=SOCmin)
        annotation (Placement(transformation(extent={{96,-220},{116,-200}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.StateOfChargeLogic
        sOC_logic(SOCmin=SOCmin, SOCmax=SOCmax)
        annotation (Placement(transformation(extent={{132,-220},{152,-200}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{24,130},{44,150}})));
      Modelica.Blocks.Math.Add add5(k2=-1)
        annotation (Placement(transformation(extent={{58,124},{78,144}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{158,120},{178,140}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl_reecc.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={170,154})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl_reecc.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={170,104})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{266,150},{286,170}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl_reecc.Iqmin)
        annotation (Placement(transformation(extent={{286,150},{266,130}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl_reecc.Iqmax)
        annotation (Placement(transformation(extent={{286,174},{266,194}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL1(table=[Vq1,Iq1; Vq2,Iq2; Vq3,Iq3;
            Vq4,Iq4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{94,0},{114,20}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL2(table=[Vp1,Ip1; Vp2,Ip2; Vp3,Ip3;
            Vp4,Ip4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{94,0},{114,-20}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECC
        ccl_reecc(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{130,-16},{162,16}})));
      Modelica.Blocks.Sources.RealExpression IQCMD(y=Iqcmd)
        annotation (Placement(transformation(extent={{206,12},{186,32}})));
      Modelica.Blocks.Sources.BooleanConstant PQFLAG(k=pqflag)
        annotation (Placement(transformation(extent={{206,10},{186,-10}})));
      Modelica.Blocks.Sources.RealExpression IPCMD(y=Ipcmd)
        annotation (Placement(transformation(extent={{206,-12},{186,-32}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-288,230},{-268,250}})));

      Modelica.Blocks.Sources.Constant SOC(k=SOCini)
        annotation (Placement(transformation(extent={{10,-284},{30,-264}})));
      Modelica.Blocks.Math.Gain PGQ(k=Kvp)
        annotation (Placement(transformation(extent={{98,150},{118,170}})));
      Modelica.Blocks.Continuous.Integrator IGQ(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0)
        annotation (Placement(transformation(extent={{98,92},{118,112}})));
      Modelica.Blocks.Math.Add add4
        annotation (Placement(transformation(extent={{128,120},{148,140}})));
      Modelica.Blocks.Math.Add add2
        annotation (Placement(transformation(extent={{-10,130},{10,150}})));
      Modelica.Blocks.Sources.RealExpression VReF0(y=V0)    annotation (Placement(
            transformation(
            extent={{-10,10},{10,-10}},
            origin={-38,134})));
      Modelica.Blocks.Interfaces.RealInput Vref_input
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-20,-20},{20,20}},
            rotation=0,
            origin={-320,280}), iconTransformation(
            extent={{-20,-20},{20,20}},
            rotation=270,
            origin={0,320})));
      NonElectrical.Continuous.SimpleLag simpleLag2(
        K=1,
        T=Trv,
        y_start=0)
        annotation (Placement(transformation(extent={{-180,270},{-160,290}})));
      Modelica.Blocks.Math.Add add6(k2=-1)
        annotation (Placement(transformation(extent={{-200,-90},{-180,-70}})));
      Modelica.Blocks.Math.Gain PGP(k=1)
        annotation (Placement(transformation(extent={{-160,-70},{-140,-50}})));
      Modelica.Blocks.Continuous.Integrator IGP(k=1, y_start=p00)
        annotation (Placement(transformation(extent={{-160,-110},{-140,-90}})));
      Modelica.Blocks.Math.Add add9(k1=+1)
        annotation (Placement(transformation(extent={{-120,-90},{-100,-70}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Trv,
        y_start=p00)
        annotation (Placement(transformation(extent={{-244,-84},{-224,-64}})));
    protected
      parameter Real pfaref=p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;
    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;

      connect(limiter5.y,division1. u2) annotation (Line(points={{83,-92},{96,
              -92},{96,-136},{106,-136}},
                                      color={0,0,127}));
      connect(add8.y,limiter7. u)
        annotation (Line(points={{-29,-138},{-18,-138}}, color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{41,-138},{58,-138}},   color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-52,-144},{-60,
              -144},{-60,-156},{48,-156},{48,-138},{58,-138}},
                                                       color={0,0,127}));
      connect(limiter8.y, division1.u1) annotation (Line(points={{81,-138},{96,
              -138},{96,-148},{106,-148}},
                                      color={0,0,127}));
      connect(division1.y, add7.u1) annotation (Line(points={{129,-142},{129,
              -136},{142,-136}},     color={0,0,127}));
      connect(Paux, add7.u2) annotation (Line(points={{-320,-160},{136,-160},{
              136,-148},{142,-148}},
                           color={0,0,127}));
      connect(variableLimiter2.y, Ipcmd)
        annotation (Line(points={{249,-160},{288,-160},{288,-170},{310,-170}},
                                                         color={0,0,127}));
      connect(add7.y,variableLimiter2. u) annotation (Line(points={{165,-142},{
              165,-144},{176,-144},{176,-160},{226,-160}},
                                      color={0,0,127}));
      connect(product2.y,variableLimiter2. limit1) annotation (Line(points={{203,-126},
              {180,-126},{180,-152},{226,-152}},
                                      color={0,0,127}));
      connect(IPMAX.y,product2. u1)
        annotation (Line(points={{229,-120},{226,-120}}, color={0,0,127}));
      connect(product3.u2,IPMIN. y)
        annotation (Line(points={{226,-184},{229,-184}}, color={0,0,127}));
      connect(variableLimiter2.limit2,product3. y) annotation (Line(points={{226,-168},
              {180,-168},{180,-190},{203,-190}}, color={0,0,127}));
      connect(product2.u2,SOC_ipmax. y)
        annotation (Line(points={{226,-132},{229,-132}},
                                                       color={0,0,127}));
      connect(product3.u1,SOC_ipmin. y)
        annotation (Line(points={{226,-196},{229,-196}}, color={0,0,127}));
      connect(add1.y,limiter1. u)
        annotation (Line(points={{85,-210},{94,-210}},   color={0,0,127}));
      connect(limiter1.y,sOC_logic. SOC)
        annotation (Line(points={{117,-210},{130,-210}},color={0,0,127}));
      connect(limiter4.y,add5. u1) annotation (Line(points={{45,140},{56,140}},
                         color={0,0,127}));
      connect(IQMAX_.y,variableLimiter1. limit1) annotation (Line(points={{159,154},
              {152,154},{152,138},{156,138}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter1. limit2) annotation (Line(points={{159,104},
              {152,104},{152,122},{156,122}},
                                            color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{265,140},{258,
              140},{258,152},{264,152}},
                                      color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{265,184},{258,
              184},{258,168},{264,168}},
                                       color={0,0,127}));
      connect(VDL2.y[1], ccl_reecc.VDL2_out)
        annotation (Line(points={{115,-10},{120.9,-10},{120.9,-9.6},{126.8,-9.6}},
                                                         color={0,0,127}));
      connect(VDL1.y[1], ccl_reecc.VDL1_out) annotation (Line(points={{115,10},
              {115,9.6},{126.8,9.6}},
                             color={0,0,127}));
      connect(PQFLAG.y, ccl_reecc.pqflag)
        annotation (Line(points={{185,0},{172,0},{172,24},{126.8,24},{126.8,0}},
                                                         color={255,0,255}));
      connect(IQCMD.y, ccl_reecc.Iqcmd) annotation (Line(points={{185,22},{176,
              22},{176,9.6},{165.2,9.6}}, color={0,0,127}));
      connect(IPCMD.y, ccl_reecc.Ipcmd) annotation (Line(points={{185,-22},{
              165.2,-22},{165.2,-9.6}},   color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{287,160},{294,160},{294,170},{310,170}},
                                                     color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,240},{-290,240}}, color={0,0,127}));
      connect(SOC.y, add1.u2) annotation (Line(points={{31,-274},{31,-276},{62,
              -276},{62,-216}},   color={0,0,127}));
      connect(PGQ.y, add4.u1) annotation (Line(points={{119,160},{119,148},{126,
              148},{126,136}}, color={0,0,127}));
      connect(IGQ.y, add4.u2) annotation (Line(points={{119,102},{126,102},{126,
              124}}, color={0,0,127}));
      connect(add4.y, variableLimiter1.u)
        annotation (Line(points={{149,130},{156,130}}, color={0,0,127}));
      connect(add5.y, PGQ.u) annotation (Line(points={{79,134},{79,144},{96,144},
              {96,160}}, color={0,0,127}));
      connect(variableLimiter1.y, variableLimiter.u) annotation (Line(points={{
              179,130},{240,130},{240,160},{264,160}}, color={0,0,127}));
      connect(VReF0.y, add2.u2)
        annotation (Line(points={{-27,134},{-12,134}}, color={0,0,127}));
      connect(add2.y, limiter4.u)
        annotation (Line(points={{11,140},{22,140}},  color={0,0,127}));
      connect(Vref_input, simpleLag2.u)
        annotation (Line(points={{-320,280},{-182,280}}, color={0,0,127}));
      connect(simpleLag2.y, add2.u1) annotation (Line(points={{-159,280},{-24,
              280},{-24,146},{-12,146}}, color={0,0,127}));
      connect(limiter7.y, integrator3.u)
        annotation (Line(points={{5,-138},{18,-138}},      color={0,0,127}));
      connect(limiter5.u, simpleLag.y) annotation (Line(points={{60,-92},{-60,
              -92},{-60,240},{-267,240}},       color={0,0,127}));
      connect(integrator1.u, Pe) annotation (Line(points={{-260,-198},{-280,
              -198},{-280,160},{-320,160}}, color={0,0,127}));
      connect(IGQ.u, PGQ.u) annotation (Line(points={{96,102},{88,102},{88,144},
              {96,144},{96,160}}, color={0,0,127}));
      connect(add5.u2, simpleLag.y) annotation (Line(points={{56,128},{54,128},
              {54,78},{-60,78},{-60,240},{-267,240}},   color={0,0,127}));
      connect(VDL1.u, simpleLag.y) annotation (Line(points={{92,10},{-60,10},{
              -60,240},{-267,240}},                      color={0,0,127}));
      connect(VDL2.u, simpleLag.y) annotation (Line(points={{92,-10},{-60,-10},
              {-60,240},{-267,240}},                      color={0,0,127}));
      connect(IGP.y,add9. u2) annotation (Line(points={{-139,-100},{-132,-100},
              {-132,-86},{-122,-86}},
                     color={0,0,127}));
      connect(PGP.y,add9. u1) annotation (Line(points={{-139,-60},{-132,-60},{
              -132,-74},{-122,-74}},
                         color={0,0,127}));
      connect(add9.y, add8.u1) annotation (Line(points={{-99,-80},{-64,-80},{
              -64,-132},{-52,-132}}, color={0,0,127}));
      connect(simpleLag1.y, add6.u1)
        annotation (Line(points={{-223,-74},{-202,-74}}, color={0,0,127}));
      connect(Pref, simpleLag1.u) annotation (Line(points={{-320,-80},{-320,-74},
              {-246,-74}}, color={0,0,127}));
      connect(IGP.u, add6.y) annotation (Line(points={{-162,-100},{-168,-100},{
              -168,-80},{-179,-80}}, color={0,0,127}));
      connect(PGP.u, add6.y) annotation (Line(points={{-162,-60},{-168,-60},{
              -168,-80},{-179,-80}}, color={0,0,127}));
      connect(integrator1.y, add1.u1) annotation (Line(points={{-237,-198},{
              -237,-204},{62,-204}}, color={0,0,127}));
      connect(add6.u2, Pe) annotation (Line(points={{-202,-86},{-206,-86},{-206,
              -118},{-280,-118},{-280,160},{-320,160}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECCU1 component is an augmented version of the existing renewable energy electrical control (REECA1) model, and can be utilized to represent
both type 3 and type 4 wind turbine electrical controllers as well as photovoltaic electrical controllers. The REECCU1 component can be connected to the
plant controller (REPCA1). This electrical controller provides real (Ipcmd) and reactive (Iqcmd) current commands to the REGCA1 component, which are the outputs
of this component.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECCU1 component has six inputs, three of which are connected to the inverter component
(for instance REGCA1), two more that can either be constant values from the power flow initialization or come from the connection to the plant controller, and
an auxiliary input variable that is rarely used (usually constant and zero). The three REECCU1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Battery Storage Dynamic Modeling Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCBattery]</a>.</li>
</ul>

</html>"));
    end REECCU1_Local_V_Control;

    model REECCU1_Local_V_Q_Control
      "Electrical control model for utility scale battery energy storage"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECC(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0.01 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = 0 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.01 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 1 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -1 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.01 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.1 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";
      parameter OpenIPSL.Types.PerUnit Vq1 = 0.2 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq1 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq2 = 0.5 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq2 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq3 = 0.75 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq3 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq4 = 1 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq4 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp1 = 0.2 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip1 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp2 = 0.5 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip2 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp3 = 0.75 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip3 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp4 = 1 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip4 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter Modelica.Units.SI.Time T = 999 "Battery discharge time";
      parameter OpenIPSL.Types.PerUnit SOCini = 0.5 "Initial state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmax = 0.8 "Maximum allowable state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmin = 0.2 "Minimum allowable state of charge";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-100,-90},{-80,-70}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-242,-136},{-222,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-208,-136},{-188,-116}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-142,-136},{-122,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-102,-136},{-82,-116}})));
      Modelica.Blocks.Math.Add add7(k1=+1, k2=+1)
        annotation (Placement(transformation(extent={{-18,-140},{2,-120}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{228,-170},{248,-150}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl_reecc.Ipmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-120})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl_reecc.Ipmin) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-184})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{224,-136},{204,-116}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=180,
            origin={214,-190})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmax(y=sOC_logic.ipmax_SOC)
        annotation (Placement(transformation(extent={{250,-122},{230,-142}})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmin(y=sOC_logic.ipmin_SOC)
        annotation (Placement(transformation(extent={{250,-186},{230,-206}})));
      Modelica.Blocks.Continuous.Integrator integrator1(k=1/T,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=p00)
        annotation (Placement(transformation(extent={{-134,-226},{-114,-206}})));
      Modelica.Blocks.Math.Add add1(k1=-1, k2=+1)
        annotation (Placement(transformation(extent={{-104,-244},{-84,-224}})));
      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=SOCmax, uMin=SOCmin)
        annotation (Placement(transformation(extent={{-74,-244},{-54,-224}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.StateOfChargeLogic
        sOC_logic(SOCmin=SOCmin, SOCmax=SOCmax)
        annotation (Placement(transformation(extent={{-30,-244},{-10,-224}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-164,136},{-144,156}})));
      Modelica.Blocks.Math.Add add2(k2=-1)
        annotation (Placement(transformation(extent={{-134,130},{-114,150}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-40,124},{-20,144}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{26,124},{46,144}})));
      Modelica.Blocks.Math.Add add5(k2=-1)
        annotation (Placement(transformation(extent={{58,124},{78,144}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{158,120},{178,140}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl_reecc.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={170,154})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl_reecc.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={170,104})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{266,150},{286,170}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl_reecc.Iqmin)
        annotation (Placement(transformation(extent={{286,150},{266,130}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl_reecc.Iqmax)
        annotation (Placement(transformation(extent={{286,174},{266,194}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL1(table=[Vq1,Iq1; Vq2,Iq2; Vq3,Iq3;
            Vq4,Iq4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-40}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL2(table=[Vp1,Ip1; Vp2,Ip2; Vp3,Ip3;
            Vp4,Ip4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-80}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECC
        ccl_reecc(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{92,-76},{124,-44}})));
      Modelica.Blocks.Sources.RealExpression IQCMD(y=Iqcmd)
        annotation (Placement(transformation(extent={{168,-48},{148,-28}})));
      Modelica.Blocks.Sources.BooleanConstant PQFLAG(k=pqflag)
        annotation (Placement(transformation(extent={{168,-50},{148,-70}})));
      Modelica.Blocks.Sources.RealExpression IPCMD(y=Ipcmd)
        annotation (Placement(transformation(extent={{168,-72},{148,-92}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-288,230},{-268,250}})));

      Modelica.Blocks.Sources.Constant SOC(k=SOCini)
        annotation (Placement(transformation(extent={{-200,-260},{-180,-240}})));
      Modelica.Blocks.Continuous.Integrator integrator(
        k=Kqi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=V0)
        annotation (Placement(transformation(extent={{-96,90},{-76,110}})));
      Modelica.Blocks.Math.Gain gain(k=Kqp)
        annotation (Placement(transformation(extent={{-94,130},{-74,150}})));
      Modelica.Blocks.Math.Add add3
        annotation (Placement(transformation(extent={{-66,124},{-46,144}})));
      Modelica.Blocks.Math.Gain gain1(k=Kvp)
        annotation (Placement(transformation(extent={{100,126},{120,146}})));
      Modelica.Blocks.Continuous.Integrator integrator2(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0 - (-V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{100,92},{120,112}})));
      Modelica.Blocks.Math.Add add4
        annotation (Placement(transformation(extent={{128,120},{148,140}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-60,-110},{-40,-130}})));
    protected
      parameter Real pfaref=p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;
    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;

      connect(add8.y,limiter7. u)
        annotation (Line(points={{-221,-126},{-210,-126}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-121,-126},{-104,-126}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-244,-132},{-252,-132},
              {-252,-152},{-112,-152},{-112,-126},{-104,-126}},
                                                       color={0,0,127}));
      connect(Paux, add7.u2) annotation (Line(points={{-320,-160},{-26,-160},{-26,-136},
              {-20,-136}}, color={0,0,127}));
      connect(variableLimiter2.y, Ipcmd)
        annotation (Line(points={{249,-160},{288,-160},{288,-170},{310,-170}},
                                                         color={0,0,127}));
      connect(add7.y,variableLimiter2. u) annotation (Line(points={{3,-130},{114,-130},
              {114,-160},{226,-160}}, color={0,0,127}));
      connect(product2.y,variableLimiter2. limit1) annotation (Line(points={{203,-126},
              {180,-126},{180,-152},{226,-152}},
                                      color={0,0,127}));
      connect(IPMAX.y,product2. u1)
        annotation (Line(points={{229,-120},{226,-120}}, color={0,0,127}));
      connect(product3.u2,IPMIN. y)
        annotation (Line(points={{226,-184},{229,-184}}, color={0,0,127}));
      connect(variableLimiter2.limit2,product3. y) annotation (Line(points={{226,-168},
              {180,-168},{180,-190},{203,-190}}, color={0,0,127}));
      connect(product2.u2,SOC_ipmax. y)
        annotation (Line(points={{226,-132},{229,-132}},
                                                       color={0,0,127}));
      connect(product3.u1,SOC_ipmin. y)
        annotation (Line(points={{226,-196},{229,-196}}, color={0,0,127}));
      connect(integrator1.y,add1. u1) annotation (Line(points={{-113,-216},{-112,-216},
              {-112,-228},{-106,-228}}, color={0,0,127}));
      connect(add1.y,limiter1. u)
        annotation (Line(points={{-83,-234},{-76,-234}}, color={0,0,127}));
      connect(limiter1.y,sOC_logic. SOC)
        annotation (Line(points={{-53,-234},{-32,-234}},color={0,0,127}));
      connect(limiter2.y,add2. u1)
        annotation (Line(points={{-143,146},{-136,146}}, color={0,0,127}));
      connect(Qgen,add2. u2) annotation (Line(points={{-320,80},{-136,80},{-136,134}},
            color={0,0,127}));
      connect(limiter4.y,add5. u1) annotation (Line(points={{47,134},{52,134},{52,140},
              {56,140}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter1. limit1) annotation (Line(points={{159,154},
              {152,154},{152,138},{156,138}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter1. limit2) annotation (Line(points={{159,104},
              {152,104},{152,122},{156,122}},
                                            color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{265,140},{258,
              140},{258,152},{264,152}},
                                      color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{265,184},{258,
              184},{258,168},{264,168}},
                                       color={0,0,127}));
      connect(VDL2.y[1], ccl_reecc.VDL2_out)
        annotation (Line(points={{77,-70},{88.8,-69.6}}, color={0,0,127}));
      connect(VDL1.y[1], ccl_reecc.VDL1_out) annotation (Line(points={{77,-50},{77,-50.4},
              {88.8,-50.4}}, color={0,0,127}));
      connect(PQFLAG.y, ccl_reecc.pqflag)
        annotation (Line(points={{147,-60},{88.8,-60}},  color={255,0,255}));
      connect(IQCMD.y, ccl_reecc.Iqcmd) annotation (Line(points={{147,-38},{132,-38},{132,-50.4},{127.2,-50.4}},
                                          color={0,0,127}));
      connect(IPCMD.y, ccl_reecc.Ipcmd) annotation (Line(points={{147,-82},{132,-82},{132,-69.6},{127.2,-69.6}},
                                          color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{287,160},{294,160},{294,170},{310,170}},
                                                     color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,240},{-290,240}}, color={0,0,127}));
      connect(SOC.y, add1.u2) annotation (Line(points={{-179,-250},{-128,-250},{-128,
              -240},{-106,-240}}, color={0,0,127}));
      connect(gain.y,add3. u1)
        annotation (Line(points={{-73,140},{-68,140}},
                                                     color={0,0,127}));
      connect(integrator.y,add3. u2)
        annotation (Line(points={{-75,100},{-68,100},{-68,128}},
                                                            color={0,0,127}));
      connect(add3.y, limiter3.u)
        annotation (Line(points={{-45,134},{-42,134}}, color={0,0,127}));
      connect(gain1.y,add4. u1) annotation (Line(points={{121,136},{126,136}},
                    color={0,0,127}));
      connect(integrator2.y,add4. u2) annotation (Line(points={{121,102},{121,
              112},{126,112},{126,124}},
                    color={0,0,127}));
      connect(add4.y, variableLimiter1.u)
        annotation (Line(points={{149,130},{156,130}}, color={0,0,127}));
      connect(Qext, limiter2.u) annotation (Line(points={{-320,0},{-200,0},{
              -200,146},{-166,146}}, color={0,0,127}));
      connect(gain.u, add2.y)
        annotation (Line(points={{-96,140},{-113,140}}, color={0,0,127}));
      connect(integrator.u, add2.y) annotation (Line(points={{-98,100},{-108,
              100},{-108,140},{-113,140}}, color={0,0,127}));
      connect(limiter3.y, limiter4.u)
        annotation (Line(points={{-19,134},{24,134}}, color={0,0,127}));
      connect(gain1.u, add5.y) annotation (Line(points={{98,136},{88.5,136},{
              88.5,134},{79,134}}, color={0,0,127}));
      connect(integrator2.u, add5.y) annotation (Line(points={{98,102},{88,102},
              {88,134},{79,134}}, color={0,0,127}));
      connect(variableLimiter1.y, variableLimiter.u) annotation (Line(points={{
              179,130},{202,130},{202,132},{228,132},{228,160},{264,160}},
            color={0,0,127}));
      connect(simpleLag.y, VDL1.u) annotation (Line(points={{-267,240},{-244,
              240},{-244,-50},{54,-50}}, color={0,0,127}));
      connect(VDL2.u, VDL1.u) annotation (Line(points={{54,-70},{22,-70},{22,
              -50},{54,-50}}, color={0,0,127}));
      connect(add5.u2, simpleLag.y) annotation (Line(points={{56,128},{52,128},
              {52,84},{-6,84},{-6,240},{-267,240}}, color={0,0,127}));
      connect(limiter5.u, VDL1.u) annotation (Line(points={{-102,-80},{-246,-80},
              {-246,-50},{54,-50}}, color={0,0,127}));
      connect(limiter7.y, integrator3.u)
        annotation (Line(points={{-187,-126},{-144,-126}}, color={0,0,127}));
      connect(integrator1.u, Pe) annotation (Line(points={{-136,-216},{-280,
              -216},{-280,160},{-320,160}}, color={0,0,127}));
      connect(limiter8.y, division1.u1)
        annotation (Line(points={{-81,-126},{-62,-126}}, color={0,0,127}));
      connect(limiter5.y, division1.u2) annotation (Line(points={{-79,-80},{-70,
              -80},{-70,-114},{-62,-114}}, color={0,0,127}));
      connect(division1.y, add7.u1) annotation (Line(points={{-39,-120},{-39,
              -124},{-20,-124}}, color={0,0,127}));
      connect(Pref, add8.u1) annotation (Line(points={{-320,-80},{-252,-80},{
              -252,-120},{-244,-120}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECCU1 component is an augmented version of the existing renewable energy electrical control (REECA1) model, and can be utilized to represent
both type 3 and type 4 wind turbine electrical controllers as well as photovoltaic electrical controllers. The REECCU1 component can be connected to the
plant controller (REPCA1). This electrical controller provides real (Ipcmd) and reactive (Iqcmd) current commands to the REGCA1 component, which are the outputs
of this component.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECCU1 component has six inputs, three of which are connected to the inverter component
(for instance REGCA1), two more that can either be constant values from the power flow initialization or come from the connection to the plant controller, and
an auxiliary input variable that is rarely used (usually constant and zero). The three REECCU1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Battery Storage Dynamic Modeling Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCBattery]</a>.</li>
</ul>

</html>"));
    end REECCU1_Local_V_Q_Control;

    model REECCU1_Local_V_Q_Control2
      "Electrical control model for utility scale battery energy storage"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECC(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0.01 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = 0 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.01 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 1 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -1 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter Real Kpp = 1 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kpi = 1 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.01 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.1 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";
      parameter OpenIPSL.Types.PerUnit Vq1 = 0.2 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq1 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq2 = 0.5 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq2 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq3 = 0.75 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq3 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq4 = 1 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq4 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp1 = 0.2 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip1 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp2 = 0.5 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip2 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp3 = 0.75 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip3 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp4 = 1 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip4 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter Modelica.Units.SI.Time T = 999 "Battery discharge time";
      parameter OpenIPSL.Types.PerUnit SOCini = 0.5 "Initial state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmax = 0.8 "Maximum allowable state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmin = 0.2 "Minimum allowable state of charge";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-100,-90},{-80,-70}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-242,-136},{-222,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-208,-136},{-188,-116}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-142,-136},{-122,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-102,-136},{-82,-116}})));
      Modelica.Blocks.Math.Add add7(k1=+1, k2=+1)
        annotation (Placement(transformation(extent={{-18,-140},{2,-120}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{228,-170},{248,-150}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl_reecc.Ipmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-120})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl_reecc.Ipmin) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-184})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{224,-136},{204,-116}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=180,
            origin={214,-190})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmax(y=sOC_logic.ipmax_SOC)
        annotation (Placement(transformation(extent={{250,-122},{230,-142}})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmin(y=sOC_logic.ipmin_SOC)
        annotation (Placement(transformation(extent={{250,-186},{230,-206}})));
      Modelica.Blocks.Continuous.Integrator integrator1(k=1/T,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=p00)
        annotation (Placement(transformation(extent={{-134,-226},{-114,-206}})));
      Modelica.Blocks.Math.Add add1(k1=-1, k2=+1)
        annotation (Placement(transformation(extent={{-104,-244},{-84,-224}})));
      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=SOCmax, uMin=SOCmin)
        annotation (Placement(transformation(extent={{-74,-244},{-54,-224}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.StateOfChargeLogic
        sOC_logic(SOCmin=SOCmin, SOCmax=SOCmax)
        annotation (Placement(transformation(extent={{-30,-244},{-10,-224}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-164,136},{-144,156}})));
      Modelica.Blocks.Math.Add add2(k2=-1)
        annotation (Placement(transformation(extent={{-134,130},{-114,150}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-40,124},{-20,144}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{26,124},{46,144}})));
      Modelica.Blocks.Math.Add add5(k2=-1)
        annotation (Placement(transformation(extent={{58,124},{78,144}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{158,120},{178,140}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl_reecc.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={170,154})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl_reecc.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={170,104})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{266,150},{286,170}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl_reecc.Iqmin)
        annotation (Placement(transformation(extent={{286,150},{266,130}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl_reecc.Iqmax)
        annotation (Placement(transformation(extent={{286,174},{266,194}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL1(table=[Vq1,Iq1; Vq2,Iq2; Vq3,Iq3;
            Vq4,Iq4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-40}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL2(table=[Vp1,Ip1; Vp2,Ip2; Vp3,Ip3;
            Vp4,Ip4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-80}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECC
        ccl_reecc(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{92,-76},{124,-44}})));
      Modelica.Blocks.Sources.RealExpression IQCMD(y=Iqcmd)
        annotation (Placement(transformation(extent={{168,-48},{148,-28}})));
      Modelica.Blocks.Sources.BooleanConstant PQFLAG(k=pqflag)
        annotation (Placement(transformation(extent={{168,-50},{148,-70}})));
      Modelica.Blocks.Sources.RealExpression IPCMD(y=Ipcmd)
        annotation (Placement(transformation(extent={{168,-72},{148,-92}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-288,230},{-268,250}})));

      Modelica.Blocks.Sources.Constant SOC(k=SOCini)
        annotation (Placement(transformation(extent={{-200,-260},{-180,-240}})));
      Modelica.Blocks.Continuous.Integrator IGQ(
        k=Kqi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=V0)
        annotation (Placement(transformation(extent={{-96,90},{-76,110}})));
      Modelica.Blocks.Math.Gain PGQ(k=Kqp)
        annotation (Placement(transformation(extent={{-94,130},{-74,150}})));
      Modelica.Blocks.Math.Add add3
        annotation (Placement(transformation(extent={{-66,124},{-46,144}})));
      Modelica.Blocks.Math.Gain PGV(k=Kvp)
        annotation (Placement(transformation(extent={{100,126},{120,146}})));
      Modelica.Blocks.Continuous.Integrator IGV(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0 - (-V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{100,92},{120,112}})));
      Modelica.Blocks.Math.Add add4
        annotation (Placement(transformation(extent={{128,120},{148,140}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-60,-110},{-40,-130}})));
      Modelica.Blocks.Math.Add add6(k2=-1)
        annotation (Placement(transformation(extent={{14,-210},{34,-190}})));
      Modelica.Blocks.Math.Gain PGP(k=Kpp)
        annotation (Placement(transformation(extent={{54,-190},{74,-170}})));
      Modelica.Blocks.Continuous.Integrator IGP(k=Kpi,     y_start=p00)
        annotation (Placement(transformation(extent={{54,-228},{74,-208}})));
      Modelica.Blocks.Math.Add add9(k1=+1)
        annotation (Placement(transformation(extent={{94,-210},{114,-190}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Trv,
        y_start=p00)
        annotation (Placement(transformation(extent={{-30,-204},{-10,-184}})));
      NonElectrical.Continuous.SimpleLag simpleLag2(
        K=1,
        T=Tp,
        y_start=p00)
        annotation (Placement(transformation(extent={{-286,150},{-266,170}})));
      NonElectrical.Continuous.SimpleLag simpleLag3(
        K=1,
        T=Tp,
        y_start=q00)
        annotation (Placement(transformation(extent={{-288,70},{-268,90}})));
      NonElectrical.Continuous.SimpleLag simpleLag4(
        K=1,
        T=Tp,
        y_start=q00)
        annotation (Placement(transformation(extent={{-220,-10},{-200,10}})));
    protected
      parameter Real pfaref=p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;
    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;

      connect(add8.y,limiter7. u)
        annotation (Line(points={{-221,-126},{-210,-126}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-121,-126},{-104,-126}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-244,-132},{-252,-132},
              {-252,-152},{-112,-152},{-112,-126},{-104,-126}},
                                                       color={0,0,127}));
      connect(Paux, add7.u2) annotation (Line(points={{-320,-160},{-26,-160},{-26,-136},
              {-20,-136}}, color={0,0,127}));
      connect(variableLimiter2.y, Ipcmd)
        annotation (Line(points={{249,-160},{288,-160},{288,-170},{310,-170}},
                                                         color={0,0,127}));
      connect(add7.y,variableLimiter2. u) annotation (Line(points={{3,-130},{114,-130},
              {114,-160},{226,-160}}, color={0,0,127}));
      connect(product2.y,variableLimiter2. limit1) annotation (Line(points={{203,-126},
              {180,-126},{180,-152},{226,-152}},
                                      color={0,0,127}));
      connect(IPMAX.y,product2. u1)
        annotation (Line(points={{229,-120},{226,-120}}, color={0,0,127}));
      connect(product3.u2,IPMIN. y)
        annotation (Line(points={{226,-184},{229,-184}}, color={0,0,127}));
      connect(variableLimiter2.limit2,product3. y) annotation (Line(points={{226,-168},
              {180,-168},{180,-190},{203,-190}}, color={0,0,127}));
      connect(product2.u2,SOC_ipmax. y)
        annotation (Line(points={{226,-132},{229,-132}},
                                                       color={0,0,127}));
      connect(product3.u1,SOC_ipmin. y)
        annotation (Line(points={{226,-196},{229,-196}}, color={0,0,127}));
      connect(integrator1.y,add1. u1) annotation (Line(points={{-113,-216},{-112,-216},
              {-112,-228},{-106,-228}}, color={0,0,127}));
      connect(add1.y,limiter1. u)
        annotation (Line(points={{-83,-234},{-76,-234}}, color={0,0,127}));
      connect(limiter1.y,sOC_logic. SOC)
        annotation (Line(points={{-53,-234},{-32,-234}},color={0,0,127}));
      connect(limiter2.y,add2. u1)
        annotation (Line(points={{-143,146},{-136,146}}, color={0,0,127}));
      connect(limiter4.y,add5. u1) annotation (Line(points={{47,134},{52,134},{52,140},
              {56,140}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter1. limit1) annotation (Line(points={{159,154},
              {152,154},{152,138},{156,138}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter1. limit2) annotation (Line(points={{159,104},
              {152,104},{152,122},{156,122}},
                                            color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{265,140},{258,
              140},{258,152},{264,152}},
                                      color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{265,184},{258,
              184},{258,168},{264,168}},
                                       color={0,0,127}));
      connect(VDL2.y[1], ccl_reecc.VDL2_out)
        annotation (Line(points={{77,-70},{88.8,-69.6}}, color={0,0,127}));
      connect(VDL1.y[1], ccl_reecc.VDL1_out) annotation (Line(points={{77,-50},{77,-50.4},
              {88.8,-50.4}}, color={0,0,127}));
      connect(PQFLAG.y, ccl_reecc.pqflag)
        annotation (Line(points={{147,-60},{88.8,-60}},  color={255,0,255}));
      connect(IQCMD.y, ccl_reecc.Iqcmd) annotation (Line(points={{147,-38},{132,-38},{132,-50.4},{127.2,-50.4}},
                                          color={0,0,127}));
      connect(IPCMD.y, ccl_reecc.Ipcmd) annotation (Line(points={{147,-82},{132,-82},{132,-69.6},{127.2,-69.6}},
                                          color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{287,160},{294,160},{294,170},{310,170}},
                                                     color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,240},{-290,240}}, color={0,0,127}));
      connect(SOC.y, add1.u2) annotation (Line(points={{-179,-250},{-128,-250},{-128,
              -240},{-106,-240}}, color={0,0,127}));
      connect(PGQ.y, add3.u1)
        annotation (Line(points={{-73,140},{-68,140}}, color={0,0,127}));
      connect(IGQ.y, add3.u2) annotation (Line(points={{-75,100},{-68,100},{-68,
              128}}, color={0,0,127}));
      connect(add3.y, limiter3.u)
        annotation (Line(points={{-45,134},{-42,134}}, color={0,0,127}));
      connect(PGV.y, add4.u1)
        annotation (Line(points={{121,136},{126,136}}, color={0,0,127}));
      connect(IGV.y, add4.u2) annotation (Line(points={{121,102},{121,112},{126,
              112},{126,124}}, color={0,0,127}));
      connect(add4.y, variableLimiter1.u)
        annotation (Line(points={{149,130},{156,130}}, color={0,0,127}));
      connect(PGQ.u, add2.y)
        annotation (Line(points={{-96,140},{-113,140}}, color={0,0,127}));
      connect(IGQ.u, add2.y) annotation (Line(points={{-98,100},{-108,100},{
              -108,140},{-113,140}}, color={0,0,127}));
      connect(limiter3.y, limiter4.u)
        annotation (Line(points={{-19,134},{24,134}}, color={0,0,127}));
      connect(PGV.u, add5.y) annotation (Line(points={{98,136},{88.5,136},{88.5,
              134},{79,134}}, color={0,0,127}));
      connect(IGV.u, add5.y) annotation (Line(points={{98,102},{88,102},{88,134},
              {79,134}}, color={0,0,127}));
      connect(variableLimiter1.y, variableLimiter.u) annotation (Line(points={{
              179,130},{202,130},{202,132},{228,132},{228,160},{264,160}},
            color={0,0,127}));
      connect(simpleLag.y, VDL1.u) annotation (Line(points={{-267,240},{-244,
              240},{-244,-50},{54,-50}}, color={0,0,127}));
      connect(VDL2.u, VDL1.u) annotation (Line(points={{54,-70},{22,-70},{22,
              -50},{54,-50}}, color={0,0,127}));
      connect(add5.u2, simpleLag.y) annotation (Line(points={{56,128},{52,128},
              {52,84},{-6,84},{-6,240},{-267,240}}, color={0,0,127}));
      connect(limiter5.u, VDL1.u) annotation (Line(points={{-102,-80},{-246,-80},
              {-246,-50},{54,-50}}, color={0,0,127}));
      connect(limiter7.y, integrator3.u)
        annotation (Line(points={{-187,-126},{-144,-126}}, color={0,0,127}));
      connect(limiter8.y, division1.u1)
        annotation (Line(points={{-81,-126},{-62,-126}}, color={0,0,127}));
      connect(limiter5.y, division1.u2) annotation (Line(points={{-79,-80},{-70,
              -80},{-70,-114},{-62,-114}}, color={0,0,127}));
      connect(division1.y, add7.u1) annotation (Line(points={{-39,-120},{-39,
              -124},{-20,-124}}, color={0,0,127}));
      connect(IGP.y,add9. u2) annotation (Line(points={{75,-218},{80,-218},{80,
              -206},{92,-206}},
                     color={0,0,127}));
      connect(PGP.y,add9. u1) annotation (Line(points={{75,-180},{75,-194},{92,
              -194}},    color={0,0,127}));
      connect(simpleLag1.y,add6. u1)
        annotation (Line(points={{-9,-194},{12,-194}},   color={0,0,127}));
      connect(IGP.u,add6. y) annotation (Line(points={{52,-218},{44,-218},{44,
              -200},{35,-200}},      color={0,0,127}));
      connect(PGP.u,add6. y) annotation (Line(points={{52,-180},{44,-180},{44,
              -200},{35,-200}},      color={0,0,127}));
      connect(simpleLag1.u, Pref) annotation (Line(points={{-32,-194},{-150,
              -194},{-150,-176},{-270,-176},{-270,-80},{-320,-80}}, color={0,0,
              127}));
      connect(add9.y, add8.u1) annotation (Line(points={{115,-200},{130,-200},{
              130,-170},{-264,-170},{-264,-120},{-244,-120}}, color={0,0,127}));
      connect(Pe, simpleLag2.u)
        annotation (Line(points={{-320,160},{-288,160}}, color={0,0,127}));
      connect(simpleLag2.y, integrator1.u) annotation (Line(points={{-265,160},
              {-260,160},{-260,14},{-282,14},{-282,-216},{-136,-216}}, color={0,
              0,127}));
      connect(add6.u2, integrator1.u) annotation (Line(points={{12,-206},{8,
              -206},{8,-40},{-282,-40},{-282,-216},{-136,-216}}, color={0,0,127}));
      connect(Qgen, simpleLag3.u)
        annotation (Line(points={{-320,80},{-290,80}}, color={0,0,127}));
      connect(simpleLag3.y, add2.u2) annotation (Line(points={{-267,80},{-136,
              80},{-136,134}}, color={0,0,127}));
      connect(Qext, simpleLag4.u)
        annotation (Line(points={{-320,0},{-222,0}}, color={0,0,127}));
      connect(simpleLag4.y, limiter2.u) annotation (Line(points={{-199,0},{-190,
              0},{-190,146},{-166,146}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECCU1 component is an augmented version of the existing renewable energy electrical control (REECA1) model, and can be utilized to represent
both type 3 and type 4 wind turbine electrical controllers as well as photovoltaic electrical controllers. The REECCU1 component can be connected to the
plant controller (REPCA1). This electrical controller provides real (Ipcmd) and reactive (Iqcmd) current commands to the REGCA1 component, which are the outputs
of this component.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECCU1 component has six inputs, three of which are connected to the inverter component
(for instance REGCA1), two more that can either be constant values from the power flow initialization or come from the connection to the plant controller, and
an auxiliary input variable that is rarely used (usually constant and zero). The three REECCU1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Battery Storage Dynamic Modeling Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCBattery]</a>.</li>
</ul>

</html>"));
    end REECCU1_Local_V_Q_Control2;

    model REECCU1_Constant_Q_Control
      "Electrical control model for utility scale battery energy storage"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECC(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0.01 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = 0 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.01 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 1 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -1 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.01 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.1 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";
      parameter OpenIPSL.Types.PerUnit Vq1 = 0.2 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq1 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq2 = 0.5 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq2 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq3 = 0.75 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq3 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq4 = 1 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq4 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp1 = 0.2 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip1 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp2 = 0.5 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip2 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp3 = 0.75 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip3 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp4 = 1 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip4 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter Modelica.Units.SI.Time T = 999 "Battery discharge time";
      parameter OpenIPSL.Types.PerUnit SOCini = 0.5 "Initial state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmax = 0.8 "Maximum allowable state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmin = 0.2 "Minimum allowable state of charge";

      Integer Voltage_dip;

      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-54,-120},{-34,-140}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-100,-90},{-80,-70}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-242,-136},{-222,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-208,-136},{-188,-116}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-142,-136},{-122,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-102,-136},{-82,-116}})));
      Modelica.Blocks.Math.Add add7(k1=+1, k2=+1)
        annotation (Placement(transformation(extent={{-18,-140},{2,-120}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{228,-170},{248,-150}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl_reecc.Ipmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-120})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl_reecc.Ipmin) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-184})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{224,-136},{204,-116}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=180,
            origin={214,-190})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmax(y=sOC_logic.ipmax_SOC)
        annotation (Placement(transformation(extent={{250,-122},{230,-142}})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmin(y=sOC_logic.ipmin_SOC)
        annotation (Placement(transformation(extent={{250,-186},{230,-206}})));
      Modelica.Blocks.Continuous.Integrator integrator1(k=1/T,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=p00)
        annotation (Placement(transformation(extent={{-134,-226},{-114,-206}})));
      Modelica.Blocks.Math.Add add1(k1=-1, k2=+1)
        annotation (Placement(transformation(extent={{-104,-244},{-84,-224}})));
      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=SOCmax, uMin=SOCmin)
        annotation (Placement(transformation(extent={{-74,-244},{-54,-224}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.StateOfChargeLogic
        sOC_logic(SOCmin=SOCmin, SOCmax=SOCmax)
        annotation (Placement(transformation(extent={{-30,-244},{-10,-224}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{266,150},{286,170}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl_reecc.Iqmin)
        annotation (Placement(transformation(extent={{286,150},{266,130}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl_reecc.Iqmax)
        annotation (Placement(transformation(extent={{286,174},{266,194}})));
      Modelica.Blocks.Nonlinear.Limiter limiter6(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-28,-20},{-8,0}})));
      Modelica.Blocks.Math.Division division
        annotation (Placement(transformation(extent={{12,0},{32,20}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL1(table=[Vq1,Iq1; Vq2,Iq2; Vq3,Iq3;
            Vq4,Iq4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-40}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL2(table=[Vp1,Ip1; Vp2,Ip2; Vp3,Ip3;
            Vp4,Ip4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-80}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECC
        ccl_reecc(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{92,-76},{124,-44}})));
      Modelica.Blocks.Sources.RealExpression IQCMD(y=Iqcmd)
        annotation (Placement(transformation(extent={{168,-48},{148,-28}})));
      Modelica.Blocks.Sources.BooleanConstant PQFLAG(k=pqflag)
        annotation (Placement(transformation(extent={{168,-50},{148,-70}})));
      Modelica.Blocks.Sources.RealExpression IPCMD(y=Ipcmd)
        annotation (Placement(transformation(extent={{168,-72},{148,-92}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-288,230},{-268,250}})));

      Modelica.Blocks.Sources.Constant SOC(k=SOCini)
        annotation (Placement(transformation(extent={{-200,-260},{-180,-240}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Tiq,
        y_start=-Iq0)
        annotation (Placement(transformation(extent={{60,0},{80,20}})));
      NonElectrical.Continuous.SimpleLag simpleLag2(
        K=1,
        T=Trv,
        y_start=q00)
        annotation (Placement(transformation(extent={{-220,-10},{-200,10}})));
    protected
      parameter Real pfaref=p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;
    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;

      connect(limiter5.y,division1. u2) annotation (Line(points={{-79,-80},{-68,-80},
              {-68,-124},{-56,-124}}, color={0,0,127}));
      connect(add8.y,limiter7. u)
        annotation (Line(points={{-221,-126},{-210,-126}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-121,-126},{-104,-126}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-244,-132},{-252,-132},
              {-252,-152},{-112,-152},{-112,-126},{-104,-126}},
                                                       color={0,0,127}));
      connect(add8.u1, Pref)
        annotation (Line(points={{-244,-120},{-292,-120},{-292,-80},{-320,-80}},
                                                           color={0,0,127}));
      connect(limiter8.y, division1.u1) annotation (Line(points={{-81,-126},{-72,-126},
              {-72,-136},{-56,-136}}, color={0,0,127}));
      connect(division1.y, add7.u1) annotation (Line(points={{-33,-130},{-28,-130},{
              -28,-124},{-20,-124}}, color={0,0,127}));
      connect(Paux, add7.u2) annotation (Line(points={{-320,-160},{-26,-160},{-26,-136},
              {-20,-136}}, color={0,0,127}));
      connect(variableLimiter2.y, Ipcmd)
        annotation (Line(points={{249,-160},{288,-160},{288,-170},{310,-170}},
                                                         color={0,0,127}));
      connect(add7.y,variableLimiter2. u) annotation (Line(points={{3,-130},{114,-130},
              {114,-160},{226,-160}}, color={0,0,127}));
      connect(product2.y,variableLimiter2. limit1) annotation (Line(points={{203,-126},
              {180,-126},{180,-152},{226,-152}},
                                      color={0,0,127}));
      connect(IPMAX.y,product2. u1)
        annotation (Line(points={{229,-120},{226,-120}}, color={0,0,127}));
      connect(product3.u2,IPMIN. y)
        annotation (Line(points={{226,-184},{229,-184}}, color={0,0,127}));
      connect(variableLimiter2.limit2,product3. y) annotation (Line(points={{226,-168},
              {180,-168},{180,-190},{203,-190}}, color={0,0,127}));
      connect(product2.u2,SOC_ipmax. y)
        annotation (Line(points={{226,-132},{229,-132}},
                                                       color={0,0,127}));
      connect(product3.u1,SOC_ipmin. y)
        annotation (Line(points={{226,-196},{229,-196}}, color={0,0,127}));
      connect(integrator1.y,add1. u1) annotation (Line(points={{-113,-216},{-112,-216},
              {-112,-228},{-106,-228}}, color={0,0,127}));
      connect(add1.y,limiter1. u)
        annotation (Line(points={{-83,-234},{-76,-234}}, color={0,0,127}));
      connect(limiter1.y,sOC_logic. SOC)
        annotation (Line(points={{-53,-234},{-32,-234}},color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{265,140},{258,
              140},{258,152},{264,152}},
                                      color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{265,184},{258,
              184},{258,168},{264,168}},
                                       color={0,0,127}));
      connect(limiter6.y,division. u2) annotation (Line(points={{-7,-10},{0,-10},{0,
              4},{10,4}},color={0,0,127}));
      connect(VDL2.u,limiter6. u) annotation (Line(points={{54,-70},{-36,-70},{-36,-10},
              {-30,-10}}, color={0,0,127}));
      connect(VDL1.u,limiter6. u) annotation (Line(points={{54,-50},{-36,-50},{-36,-10},
              {-30,-10}}, color={0,0,127}));
      connect(VDL2.y[1], ccl_reecc.VDL2_out)
        annotation (Line(points={{77,-70},{88.8,-69.6}}, color={0,0,127}));
      connect(VDL1.y[1], ccl_reecc.VDL1_out) annotation (Line(points={{77,-50},{77,-50.4},
              {88.8,-50.4}}, color={0,0,127}));
      connect(PQFLAG.y, ccl_reecc.pqflag)
        annotation (Line(points={{147,-60},{88.8,-60}},  color={255,0,255}));
      connect(IQCMD.y, ccl_reecc.Iqcmd) annotation (Line(points={{147,-38},{132,-38},{132,-50.4},{127.2,-50.4}},
                                          color={0,0,127}));
      connect(IPCMD.y, ccl_reecc.Ipcmd) annotation (Line(points={{147,-82},{132,-82},{132,-69.6},{127.2,-69.6}},
                                          color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{287,160},{294,160},{294,170},{310,170}},
                                                     color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,240},{-290,240}}, color={0,0,127}));
      connect(SOC.y, add1.u2) annotation (Line(points={{-179,-250},{-128,-250},{-128,
              -240},{-106,-240}}, color={0,0,127}));
      connect(division.y, simpleLag1.u)
        annotation (Line(points={{33,10},{58,10}}, color={0,0,127}));
      connect(simpleLag1.y, variableLimiter.u) annotation (Line(points={{81,10},
              {224,10},{224,160},{264,160}}, color={0,0,127}));
      connect(simpleLag.y, limiter6.u) annotation (Line(points={{-267,240},{-88,
              240},{-88,-10},{-30,-10}}, color={0,0,127}));
      connect(limiter7.y, integrator3.u)
        annotation (Line(points={{-187,-126},{-144,-126}}, color={0,0,127}));
      connect(limiter5.u, limiter6.u) annotation (Line(points={{-102,-80},{-242,
              -80},{-242,240},{-88,240},{-88,-10},{-30,-10}}, color={0,0,127}));
      connect(integrator1.u, Pe) annotation (Line(points={{-136,-216},{-280,
              -216},{-280,160},{-320,160}}, color={0,0,127}));
      connect(simpleLag2.u, Qext)
        annotation (Line(points={{-222,0},{-320,0}}, color={0,0,127}));
      connect(simpleLag2.y, division.u1) annotation (Line(points={{-199,0},{
              -134,0},{-134,16},{10,16}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECCU1 component is an augmented version of the existing renewable energy electrical control (REECA1) model, and can be utilized to represent
both type 3 and type 4 wind turbine electrical controllers as well as photovoltaic electrical controllers. The REECCU1 component can be connected to the
plant controller (REPCA1). This electrical controller provides real (Ipcmd) and reactive (Iqcmd) current commands to the REGCA1 component, which are the outputs
of this component.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECCU1 component has six inputs, three of which are connected to the inverter component
(for instance REGCA1), two more that can either be constant values from the power flow initialization or come from the connection to the plant controller, and
an auxiliary input variable that is rarely used (usually constant and zero). The three REECCU1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Battery Storage Dynamic Modeling Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCBattery]</a>.</li>
</ul>

</html>"));
    end REECCU1_Constant_Q_Control;

    model REECCU1_Local_V_Q_Control_for_Linearization
      "Electrical control model for utility scale battery energy storage"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECC(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0.01 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = 0 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.01 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 1 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -1 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter Real Kpp = 1 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kpi = 1 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.01 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.1 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";
      parameter OpenIPSL.Types.PerUnit Vq1 = 0.2 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq1 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq2 = 0.5 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq2 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq3 = 0.75 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq3 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq4 = 1 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq4 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp1 = 0.2 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip1 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp2 = 0.5 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip2 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp3 = 0.75 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip3 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp4 = 1 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip4 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter Modelica.Units.SI.Time T = 999 "Battery discharge time";
      parameter OpenIPSL.Types.PerUnit SOCini = 0.5 "Initial state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmax = 0.8 "Maximum allowable state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmin = 0.2 "Minimum allowable state of charge";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-100,-90},{-80,-70}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-242,-136},{-222,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-208,-136},{-188,-116}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-142,-136},{-122,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-102,-136},{-82,-116}})));
      Modelica.Blocks.Math.Add add7(k1=+1, k2=+1)
        annotation (Placement(transformation(extent={{-18,-140},{2,-120}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{228,-170},{248,-150}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl_reecc.Ipmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-120})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl_reecc.Ipmin) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-184})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{224,-136},{204,-116}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=180,
            origin={214,-190})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmax(y=1)
        annotation (Placement(transformation(extent={{250,-122},{230,-142}})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmin(y=1)
        annotation (Placement(transformation(extent={{250,-186},{230,-206}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-164,136},{-144,156}})));
      Modelica.Blocks.Math.Add add2(k2=-1)
        annotation (Placement(transformation(extent={{-134,130},{-114,150}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-40,124},{-20,144}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{26,124},{46,144}})));
      Modelica.Blocks.Math.Add add5(k2=-1)
        annotation (Placement(transformation(extent={{58,124},{78,144}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{158,120},{178,140}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl_reecc.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={170,154})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl_reecc.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={170,104})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{266,150},{286,170}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl_reecc.Iqmin)
        annotation (Placement(transformation(extent={{286,150},{266,130}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl_reecc.Iqmax)
        annotation (Placement(transformation(extent={{286,174},{266,194}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL1(table=[Vq1,Iq1; Vq2,Iq2; Vq3,Iq3;
            Vq4,Iq4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-40}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL2(table=[Vp1,Ip1; Vp2,Ip2; Vp3,Ip3;
            Vp4,Ip4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-80}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECC
        ccl_reecc(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{92,-76},{124,-44}})));
      Modelica.Blocks.Sources.RealExpression IQCMD(y=Iqcmd)
        annotation (Placement(transformation(extent={{168,-48},{148,-28}})));
      Modelica.Blocks.Sources.BooleanConstant PQFLAG(k=pqflag)
        annotation (Placement(transformation(extent={{168,-50},{148,-70}})));
      Modelica.Blocks.Sources.RealExpression IPCMD(y=Ipcmd)
        annotation (Placement(transformation(extent={{168,-72},{148,-92}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-288,230},{-268,250}})));

      Modelica.Blocks.Continuous.Integrator IGQ(
        k=Kqi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=V0)
        annotation (Placement(transformation(extent={{-96,90},{-76,110}})));
      Modelica.Blocks.Math.Gain PGQ(k=Kqp)
        annotation (Placement(transformation(extent={{-94,130},{-74,150}})));
      Modelica.Blocks.Math.Add add3
        annotation (Placement(transformation(extent={{-66,124},{-46,144}})));
      Modelica.Blocks.Math.Gain PGV(k=Kvp)
        annotation (Placement(transformation(extent={{100,126},{120,146}})));
      Modelica.Blocks.Continuous.Integrator IGV(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0 - (-V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{100,92},{120,112}})));
      Modelica.Blocks.Math.Add add4
        annotation (Placement(transformation(extent={{128,120},{148,140}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-60,-110},{-40,-130}})));
      Modelica.Blocks.Math.Add add6(k2=-1)
        annotation (Placement(transformation(extent={{14,-210},{34,-190}})));
      Modelica.Blocks.Math.Gain PGP(k=Kpp)
        annotation (Placement(transformation(extent={{54,-190},{74,-170}})));
      Modelica.Blocks.Continuous.Integrator IGP(k=Kpi,     y_start=p00)
        annotation (Placement(transformation(extent={{54,-230},{74,-210}})));
      Modelica.Blocks.Math.Add add9(k1=+1)
        annotation (Placement(transformation(extent={{94,-210},{114,-190}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Trv,
        y_start=p00)
        annotation (Placement(transformation(extent={{-30,-204},{-10,-184}})));
      NonElectrical.Continuous.SimpleLag simpleLag2(
        K=1,
        T=Tp,
        y_start=p00)
        annotation (Placement(transformation(extent={{-286,150},{-266,170}})));
      NonElectrical.Continuous.SimpleLag simpleLag3(
        K=1,
        T=Tp,
        y_start=q00)
        annotation (Placement(transformation(extent={{-288,70},{-268,90}})));
      NonElectrical.Continuous.SimpleLag simpleLag4(
        K=1,
        T=Tp,
        y_start=q00)
        annotation (Placement(transformation(extent={{-288,-10},{-268,10}})));
    protected
      parameter Real pfaref=p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;
    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;

      connect(add8.y,limiter7. u)
        annotation (Line(points={{-221,-126},{-210,-126}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-121,-126},{-104,-126}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-244,-132},{-252,-132},
              {-252,-152},{-112,-152},{-112,-126},{-104,-126}},
                                                       color={0,0,127}));
      connect(Paux, add7.u2) annotation (Line(points={{-320,-160},{-26,-160},{-26,-136},
              {-20,-136}}, color={0,0,127}));
      connect(variableLimiter2.y, Ipcmd)
        annotation (Line(points={{249,-160},{288,-160},{288,-170},{310,-170}},
                                                         color={0,0,127}));
      connect(add7.y,variableLimiter2. u) annotation (Line(points={{3,-130},{114,-130},
              {114,-160},{226,-160}}, color={0,0,127}));
      connect(product2.y,variableLimiter2. limit1) annotation (Line(points={{203,-126},
              {180,-126},{180,-152},{226,-152}},
                                      color={0,0,127}));
      connect(IPMAX.y,product2. u1)
        annotation (Line(points={{229,-120},{226,-120}}, color={0,0,127}));
      connect(product3.u2,IPMIN. y)
        annotation (Line(points={{226,-184},{229,-184}}, color={0,0,127}));
      connect(variableLimiter2.limit2,product3. y) annotation (Line(points={{226,-168},
              {180,-168},{180,-190},{203,-190}}, color={0,0,127}));
      connect(product2.u2,SOC_ipmax. y)
        annotation (Line(points={{226,-132},{229,-132}},
                                                       color={0,0,127}));
      connect(product3.u1,SOC_ipmin. y)
        annotation (Line(points={{226,-196},{229,-196}}, color={0,0,127}));
      connect(limiter2.y,add2. u1)
        annotation (Line(points={{-143,146},{-136,146}}, color={0,0,127}));
      connect(limiter4.y,add5. u1) annotation (Line(points={{47,134},{52,134},{52,140},
              {56,140}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter1. limit1) annotation (Line(points={{159,154},
              {152,154},{152,138},{156,138}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter1. limit2) annotation (Line(points={{159,104},
              {152,104},{152,122},{156,122}},
                                            color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{265,140},{258,
              140},{258,152},{264,152}},
                                      color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{265,184},{258,
              184},{258,168},{264,168}},
                                       color={0,0,127}));
      connect(VDL2.y[1], ccl_reecc.VDL2_out)
        annotation (Line(points={{77,-70},{88.8,-69.6}}, color={0,0,127}));
      connect(VDL1.y[1], ccl_reecc.VDL1_out) annotation (Line(points={{77,-50},{77,-50.4},
              {88.8,-50.4}}, color={0,0,127}));
      connect(PQFLAG.y, ccl_reecc.pqflag)
        annotation (Line(points={{147,-60},{88.8,-60}},  color={255,0,255}));
      connect(IQCMD.y, ccl_reecc.Iqcmd) annotation (Line(points={{147,-38},{132,-38},{132,-50.4},{127.2,-50.4}},
                                          color={0,0,127}));
      connect(IPCMD.y, ccl_reecc.Ipcmd) annotation (Line(points={{147,-82},{132,-82},{132,-69.6},{127.2,-69.6}},
                                          color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{287,160},{294,160},{294,170},{310,170}},
                                                     color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,240},{-290,240}}, color={0,0,127}));
      connect(PGQ.y, add3.u1)
        annotation (Line(points={{-73,140},{-68,140}}, color={0,0,127}));
      connect(IGQ.y, add3.u2) annotation (Line(points={{-75,100},{-68,100},{-68,
              128}}, color={0,0,127}));
      connect(add3.y, limiter3.u)
        annotation (Line(points={{-45,134},{-42,134}}, color={0,0,127}));
      connect(PGV.y, add4.u1)
        annotation (Line(points={{121,136},{126,136}}, color={0,0,127}));
      connect(IGV.y, add4.u2) annotation (Line(points={{121,102},{121,112},{126,
              112},{126,124}}, color={0,0,127}));
      connect(add4.y, variableLimiter1.u)
        annotation (Line(points={{149,130},{156,130}}, color={0,0,127}));
      connect(PGQ.u, add2.y)
        annotation (Line(points={{-96,140},{-113,140}}, color={0,0,127}));
      connect(IGQ.u, add2.y) annotation (Line(points={{-98,100},{-108,100},{
              -108,140},{-113,140}}, color={0,0,127}));
      connect(limiter3.y, limiter4.u)
        annotation (Line(points={{-19,134},{24,134}}, color={0,0,127}));
      connect(PGV.u, add5.y) annotation (Line(points={{98,136},{88.5,136},{88.5,
              134},{79,134}}, color={0,0,127}));
      connect(IGV.u, add5.y) annotation (Line(points={{98,102},{88,102},{88,134},
              {79,134}}, color={0,0,127}));
      connect(variableLimiter1.y, variableLimiter.u) annotation (Line(points={{
              179,130},{202,130},{202,132},{228,132},{228,160},{264,160}},
            color={0,0,127}));
      connect(simpleLag.y, VDL1.u) annotation (Line(points={{-267,240},{-244,
              240},{-244,-50},{54,-50}}, color={0,0,127}));
      connect(VDL2.u, VDL1.u) annotation (Line(points={{54,-70},{22,-70},{22,
              -50},{54,-50}}, color={0,0,127}));
      connect(add5.u2, simpleLag.y) annotation (Line(points={{56,128},{52,128},
              {52,84},{-6,84},{-6,240},{-267,240}}, color={0,0,127}));
      connect(limiter5.u, VDL1.u) annotation (Line(points={{-102,-80},{-246,-80},
              {-246,-50},{54,-50}}, color={0,0,127}));
      connect(limiter7.y, integrator3.u)
        annotation (Line(points={{-187,-126},{-144,-126}}, color={0,0,127}));
      connect(limiter8.y, division1.u1)
        annotation (Line(points={{-81,-126},{-62,-126}}, color={0,0,127}));
      connect(limiter5.y, division1.u2) annotation (Line(points={{-79,-80},{-70,
              -80},{-70,-114},{-62,-114}}, color={0,0,127}));
      connect(division1.y, add7.u1) annotation (Line(points={{-39,-120},{-39,
              -124},{-20,-124}}, color={0,0,127}));
      connect(IGP.y,add9. u2) annotation (Line(points={{75,-220},{80,-220},{80,
              -206},{92,-206}},
                     color={0,0,127}));
      connect(PGP.y,add9. u1) annotation (Line(points={{75,-180},{75,-194},{92,
              -194}},    color={0,0,127}));
      connect(simpleLag1.y,add6. u1)
        annotation (Line(points={{-9,-194},{12,-194}},   color={0,0,127}));
      connect(IGP.u,add6. y) annotation (Line(points={{52,-220},{44,-220},{44,
              -200},{35,-200}},      color={0,0,127}));
      connect(PGP.u,add6. y) annotation (Line(points={{52,-180},{44,-180},{44,
              -200},{35,-200}},      color={0,0,127}));
      connect(simpleLag1.u, Pref) annotation (Line(points={{-32,-194},{-150,
              -194},{-150,-176},{-270,-176},{-270,-80},{-320,-80}}, color={0,0,
              127}));
      connect(add9.y, add8.u1) annotation (Line(points={{115,-200},{130,-200},{
              130,-170},{-264,-170},{-264,-120},{-244,-120}}, color={0,0,127}));
      connect(Pe, simpleLag2.u)
        annotation (Line(points={{-320,160},{-288,160}}, color={0,0,127}));
      connect(simpleLag2.y, add6.u2) annotation (Line(points={{-265,160},{-260,160},
              {-260,-206},{12,-206}}, color={0,0,127}));
      connect(Qgen, simpleLag3.u)
        annotation (Line(points={{-320,80},{-290,80}}, color={0,0,127}));
      connect(simpleLag3.y, add2.u2) annotation (Line(points={{-267,80},{-136,
              80},{-136,134}}, color={0,0,127}));
      connect(Qext, simpleLag4.u)
        annotation (Line(points={{-320,0},{-290,0}}, color={0,0,127}));
      connect(simpleLag4.y, limiter2.u) annotation (Line(points={{-267,0},{-234,
              0},{-234,2},{-202,2},{-202,146},{-166,146}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECCU1 component is an augmented version of the existing renewable energy electrical control (REECA1) model, and can be utilized to represent
both type 3 and type 4 wind turbine electrical controllers as well as photovoltaic electrical controllers. The REECCU1 component can be connected to the
plant controller (REPCA1). This electrical controller provides real (Ipcmd) and reactive (Iqcmd) current commands to the REGCA1 component, which are the outputs
of this component.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECCU1 component has six inputs, three of which are connected to the inverter component
(for instance REGCA1), two more that can either be constant values from the power flow initialization or come from the connection to the plant controller, and
an auxiliary input variable that is rarely used (usually constant and zero). The three REECCU1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Battery Storage Dynamic Modeling Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCBattery]</a>.</li>
</ul>

</html>"));
    end REECCU1_Local_V_Q_Control_for_Linearization;

    model REECB1_Local_V_Q_Control_PI
      "Electrical control model for large scale photovoltaic"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECB(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = -0.05 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0.05 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1.05 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1.05 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.05 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 0.4360 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -0.4360 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 1 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 1 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 1 "Voltage regulator integral gain (No predefined range)";
      parameter Real Kpp = 1 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kpi = 1 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.02 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.82 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-162,56},{-142,76}})));
      Modelica.Blocks.Math.Add add1(k2=-1)
        annotation (Placement(transformation(extent={{-132,50},{-112,70}})));
      Modelica.Blocks.Continuous.Integrator IGQ(
        k=Kqi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=V0)
        annotation (Placement(transformation(extent={{-94,10},{-74,30}})));
      Modelica.Blocks.Math.Gain PGQ(k=Kqp)
        annotation (Placement(transformation(extent={{-92,50},{-72,70}})));
      Modelica.Blocks.Math.Add add2
        annotation (Placement(transformation(extent={{-66,44},{-46,64}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-8,44},{12,64}})));
      Modelica.Blocks.Math.Add add4(k2=-1)
        annotation (Placement(transformation(extent={{60,44},{80,64}})));
      Modelica.Blocks.Math.Gain PGV(k=Kvp)
        annotation (Placement(transformation(extent={{100,44},{120,64}})));
      Modelica.Blocks.Continuous.Integrator IGV(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0)
        annotation (Placement(transformation(extent={{100,10},{120,30}})));
      Modelica.Blocks.Math.Add add5
        annotation (Placement(transformation(extent={{128,38},{148,58}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{162,38},{182,58}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={172,74})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={172,24})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{264,70},{284,90}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl.Iqmin)
        annotation (Placement(transformation(extent={{284,70},{264,50}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl.Iqmax)
        annotation (Placement(transformation(extent={{284,94},{264,114}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{178,-180},{198,-160}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl.Ipmax) annotation (
          Placement(transformation(
            extent={{10,-10},{-10,10}},
            origin={188,-140})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl.Ipmin)
        annotation (Placement(transformation(extent={{198,-210},{178,-190}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-286,150},{-266,170}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{0,-180},{20,-160}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-132,-220},{-112,-200}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-70,-176},{-50,-156}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECB
        ccl(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{260,-40},{280,-20}})));
      Modelica.Blocks.Sources.BooleanConstant Pqflag_logic(k=pqflag)
        annotation (Placement(transformation(extent={{220,-40},{240,-20}})));

      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Trv,
        y_start=q00)
        annotation (Placement(transformation(extent={{-270,-90},{-250,-70}})));
      NonElectrical.Continuous.SimpleLag simpleLag2(
        K=1,
        T=Trv,
        y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-110,-176},{-90,-156}})));
      Modelica.Blocks.Math.Add add6(k2=-1)
        annotation (Placement(transformation(extent={{52,-272},{72,-252}})));
      Modelica.Blocks.Math.Gain PGP(k=Kpp)
        annotation (Placement(transformation(extent={{92,-252},{112,-232}})));
      Modelica.Blocks.Continuous.Integrator IGP(k=Kpi,
                                                     y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{92,-292},{112,-272}})));
      Modelica.Blocks.Math.Add add9(k1=+1)
        annotation (Placement(transformation(extent={{132,-272},{152,-252}})));
      NonElectrical.Continuous.SimpleLag simpleLag3(
        K=1,
        T=Tp,
        y_start=p00)
        annotation (Placement(transformation(extent={{-284,70},{-264,90}})));
      NonElectrical.Continuous.SimpleLag simpleLag4(
        K=1,
        T=Trv,
        y_start=p00)
        annotation (Placement(transformation(extent={{-278,-170},{-258,-150}})));
      NonElectrical.Continuous.SimpleLag simpleLag5(
        K=1,
        T=Trv,
        y_start=q00)
        annotation (Placement(transformation(extent={{-280,-10},{-260,10}})));
    protected
      parameter Real pfaref = p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;

    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;
      connect(limiter1.y,add1. u1)
        annotation (Line(points={{-141,66},{-134,66}}, color={0,0,127}));
      connect(PGQ.y, add2.u1)
        annotation (Line(points={{-71,60},{-68,60}}, color={0,0,127}));
      connect(IGQ.y, add2.u2) annotation (Line(points={{-73,20},{-70,20},{-70,
              48},{-68,48}}, color={0,0,127}));
      connect(add2.y,limiter2. u)
        annotation (Line(points={{-45,54},{-10,54}}, color={0,0,127}));
      connect(PGV.y, add5.u1)
        annotation (Line(points={{121,54},{126,54}}, color={0,0,127}));
      connect(IGV.y, add5.u2) annotation (Line(points={{121,20},{126,20},{126,
              42}}, color={0,0,127}));
      connect(add5.y,variableLimiter2. u)
        annotation (Line(points={{149,48},{160,48}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter2. limit1) annotation (Line(points={{161,74},{
              154,74},{154,56},{160,56}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter2. limit2) annotation (Line(points={{161,24},{
              154,24},{154,40},{160,40}}, color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{263,60},{256,
              60},{256,72},{262,72}}, color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{263,104},{256,
              104},{256,88},{262,88}}, color={0,0,127}));
      connect(IPMIN.y,variableLimiter1. limit2) annotation (Line(points={{177,-200},
              {177,-189},{176,-189},{176,-178}},
                                             color={0,0,127}));
      connect(IPMAX.y,variableLimiter1. limit1) annotation (Line(points={{177,-140},
              {177,-151},{176,-151},{176,-162}},
                                             color={0,0,127}));
      connect(variableLimiter1.y, Ipcmd) annotation (Line(points={{199,-170},{310,-170}},
                                    color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,160},{-288,160}}, color={0,0,127}));
      connect(limiter5.y,division1. u2) annotation (Line(points={{-111,-210},{-111,-212},
              {-12,-212},{-12,-176},{-2,-176}},
                                      color={0,0,127}));
      connect(limiter8.y,division1. u1) annotation (Line(points={{-49,-166},{-25.5,-166},
              {-25.5,-164},{-2,-164}},color={0,0,127}));
      connect(division1.y, variableLimiter1.u)
        annotation (Line(points={{21,-170},{176,-170}}, color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{285,80},{292,80},{292,170},{310,170}},
                                                     color={0,0,127}));
      connect(Pqflag_logic.y, ccl.Pqflag)
        annotation (Line(points={{241,-30},{258,-30}}, color={255,0,255}));
      connect(ccl.Iqcmd, Iqcmd) annotation (Line(points={{282,-25},{292,-25},{292,170},{310,170}},
                         color={0,0,127}));
      connect(ccl.Ipcmd, Ipcmd) annotation (Line(points={{282,-35},{292,-35},{292,-170},{310,-170}},
                          color={0,0,127}));
      connect(PGQ.u, IGQ.u) annotation (Line(points={{-94,60},{-98,60},{-98,20},
              {-96,20}}, color={0,0,127}));
      connect(PGV.u, IGV.u) annotation (Line(points={{98,54},{90,54},{90,20},{
              98,20}}, color={0,0,127}));
      connect(variableLimiter2.y, variableLimiter.u) annotation (Line(points={{
              183,48},{232,48},{232,80},{262,80}}, color={0,0,127}));
      connect(add4.y, PGV.u)
        annotation (Line(points={{81,54},{98,54}}, color={0,0,127}));
      connect(add4.u2, simpleLag.y) annotation (Line(points={{58,48},{58,28},{
              86,28},{86,160},{-265,160}}, color={0,0,127}));
      connect(limiter5.u, simpleLag.y) annotation (Line(points={{-134,-210},{
              -188,-210},{-188,160},{-265,160}}, color={0,0,127}));
      connect(limiter2.y, add4.u1)
        annotation (Line(points={{13,54},{13,60},{58,60}}, color={0,0,127}));
      connect(Qext, simpleLag1.u)
        annotation (Line(points={{-320,-80},{-272,-80}}, color={0,0,127}));
      connect(simpleLag1.y, limiter1.u) annotation (Line(points={{-249,-80},{
              -212,-80},{-212,66},{-164,66}}, color={0,0,127}));
      connect(add1.y, PGQ.u)
        annotation (Line(points={{-111,60},{-94,60}}, color={0,0,127}));
      connect(simpleLag2.y, limiter8.u)
        annotation (Line(points={{-89,-166},{-72,-166}}, color={0,0,127}));
      connect(add6.y, PGP.u) annotation (Line(points={{73,-262},{80,-262},{80,-242},
              {90,-242}}, color={0,0,127}));
      connect(IGP.u, PGP.u) annotation (Line(points={{90,-282},{80,-282},{80,-242},{
              90,-242}}, color={0,0,127}));
      connect(PGP.y, add9.u1) annotation (Line(points={{113,-242},{120,-242},{120,-256},
              {130,-256}}, color={0,0,127}));
      connect(IGP.y, add9.u2) annotation (Line(points={{113,-282},{122,-282},{122,-268},
              {130,-268}}, color={0,0,127}));
      connect(Pe, simpleLag3.u)
        annotation (Line(points={{-320,80},{-286,80}}, color={0,0,127}));
      connect(simpleLag3.y, add6.u2) annotation (Line(points={{-263,80},{-230,80},{-230,
              -268},{50,-268}}, color={0,0,127}));
      connect(add9.y, simpleLag2.u) annotation (Line(points={{153,-262},{172,-262},{
              172,-260},{152,-260},{152,-134},{-146,-134},{-146,-168},{-132,-168},{-132,
              -166},{-112,-166}}, color={0,0,127}));
      connect(Pref, simpleLag4.u)
        annotation (Line(points={{-320,-160},{-280,-160}}, color={0,0,127}));
      connect(simpleLag4.y, add6.u1) annotation (Line(points={{-257,-160},{-206,
              -160},{-206,-256},{50,-256}}, color={0,0,127}));
      connect(Qgen, simpleLag5.u)
        annotation (Line(points={{-320,0},{-282,0}}, color={0,0,127}));
      connect(simpleLag5.y, add1.u2) annotation (Line(points={{-259,0},{-134,0},
              {-134,54}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECB1 component used to represent the electrical controls of photovoltaic generation. The electrical controller actuates on the active and reactive power
reference from either the plant controller component or from power flow power reference values (in the case where there is no plant controller),
with feedback variables that original from the inverter interface component, specifically terminal voltage and generator power output,
and provides real (Ipcmd) and reactive current (Iqcmd) commands to the REGC types module.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECB1 component has five inputs, three of which are connected to the inverter component
(for instance REGCA1), and two more that can either be constant values from the power flow initialization or come from the connection to the plant controller.
The three REECB1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Solar Photovoltaic Power Plant Modeling and Validation Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCPhotovoltaic]</a>.</li>
</ul>
</html>"));
    end REECB1_Local_V_Q_Control_PI;

    model REECCU1_Local_V_Q_Control_for_LinearizationPYTHON
      "Electrical control model for utility scale battery energy storage"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECC(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0.01 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = 0 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.01 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 1 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -1 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 1 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 1 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 1 "Voltage regulator integral gain (No predefined range)";
      parameter Real Kpp = 1 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kpi = 1 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.01 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.1 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";
      parameter OpenIPSL.Types.PerUnit Vq1 = 0.2 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq1 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq2 = 0.5 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq2 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq3 = 0.75 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq3 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq4 = 1 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq4 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp1 = 0.2 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip1 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp2 = 0.5 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip2 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp3 = 0.75 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip3 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp4 = 1 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip4 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter Modelica.Units.SI.Time T = 999 "Battery discharge time";
      parameter OpenIPSL.Types.PerUnit SOCini = 0.5 "Initial state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmax = 0.8 "Maximum allowable state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmin = 0.2 "Minimum allowable state of charge";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-100,-90},{-80,-70}})));
      Modelica.Blocks.Math.Add add8(k2=-1)
        annotation (Placement(transformation(extent={{-242,-136},{-222,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter7(uMax=dPmax, uMin=dPmin)
        annotation (Placement(transformation(extent={{-208,-136},{-188,-116}})));
      Modelica.Blocks.Continuous.Integrator integrator3(k=1/Tpord,
        initType=Modelica.Blocks.Types.Init.InitialState, y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-142,-136},{-122,-116}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-102,-136},{-82,-116}})));
      Modelica.Blocks.Math.Add add7(k1=+1, k2=+1)
        annotation (Placement(transformation(extent={{-18,-140},{2,-120}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{228,-170},{248,-150}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl_reecc.Ipmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-120})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl_reecc.Ipmin) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-184})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{224,-136},{204,-116}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=180,
            origin={214,-190})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmax(y=1)
        annotation (Placement(transformation(extent={{250,-122},{230,-142}})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmin(y=1)
        annotation (Placement(transformation(extent={{250,-186},{230,-206}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-164,136},{-144,156}})));
      Modelica.Blocks.Math.Add add2(k2=-1)
        annotation (Placement(transformation(extent={{-134,130},{-114,150}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-40,124},{-20,144}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{26,124},{46,144}})));
      Modelica.Blocks.Math.Add add5(k2=-1)
        annotation (Placement(transformation(extent={{58,124},{78,144}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{158,120},{178,140}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl_reecc.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={170,154})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl_reecc.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={170,104})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{266,150},{286,170}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl_reecc.Iqmin)
        annotation (Placement(transformation(extent={{286,150},{266,130}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl_reecc.Iqmax)
        annotation (Placement(transformation(extent={{286,174},{266,194}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL1(table=[Vq1,Iq1; Vq2,Iq2; Vq3,Iq3;
            Vq4,Iq4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-40}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL2(table=[Vp1,Ip1; Vp2,Ip2; Vp3,Ip3;
            Vp4,Ip4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-80}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECC
        ccl_reecc(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{92,-76},{124,-44}})));
      Modelica.Blocks.Sources.RealExpression IQCMD(y=Iqcmd)
        annotation (Placement(transformation(extent={{168,-48},{148,-28}})));
      Modelica.Blocks.Sources.BooleanConstant PQFLAG(k=pqflag)
        annotation (Placement(transformation(extent={{168,-50},{148,-70}})));
      Modelica.Blocks.Sources.RealExpression IPCMD(y=Ipcmd)
        annotation (Placement(transformation(extent={{168,-72},{148,-92}})));
      NonElectrical.Continuous.SimpleLag simpleLag(
        K=1,
        T=Trv,
        y_start=V0)
        annotation (Placement(transformation(extent={{-288,230},{-268,250}})));

      Modelica.Blocks.Continuous.Integrator IGQ(
        k=Kqi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=V0)
        annotation (Placement(transformation(extent={{-96,90},{-76,110}})));
      Modelica.Blocks.Math.Gain PGQ(k=Kqp)
        annotation (Placement(transformation(extent={{-94,130},{-74,150}})));
      Modelica.Blocks.Math.Add add3
        annotation (Placement(transformation(extent={{-66,124},{-46,144}})));
      Modelica.Blocks.Math.Gain PGV(k=Kvp)
        annotation (Placement(transformation(extent={{100,126},{120,146}})));
      Modelica.Blocks.Continuous.Integrator IGV(
        k=Kvi,
        initType=Modelica.Blocks.Types.Init.InitialState,
        y_start=-Iq0 - (-V0 + Vref0)*Kqv)
        annotation (Placement(transformation(extent={{100,92},{120,112}})));
      Modelica.Blocks.Math.Add add4
        annotation (Placement(transformation(extent={{128,120},{148,140}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-60,-110},{-40,-130}})));
      Modelica.Blocks.Math.Add add6(k2=-1)
        annotation (Placement(transformation(extent={{14,-210},{34,-190}})));
      Modelica.Blocks.Math.Gain PGP(k=Kpp)
        annotation (Placement(transformation(extent={{54,-190},{74,-170}})));
      Modelica.Blocks.Continuous.Integrator IGP(k=Kpi,     y_start=p00)
        annotation (Placement(transformation(extent={{54,-230},{74,-210}})));
      Modelica.Blocks.Math.Add add9(k1=+1)
        annotation (Placement(transformation(extent={{94,-210},{114,-190}})));
      NonElectrical.Continuous.SimpleLag simpleLag1(
        K=1,
        T=Trv,
        y_start=p00)
        annotation (Placement(transformation(extent={{-30,-204},{-10,-184}})));
      NonElectrical.Continuous.SimpleLag simpleLag2(
        K=1,
        T=Tp,
        y_start=p00)
        annotation (Placement(transformation(extent={{-286,150},{-266,170}})));
    protected
      parameter Real pfaref=p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;
    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;

      connect(add8.y,limiter7. u)
        annotation (Line(points={{-221,-126},{-210,-126}},
                                                         color={0,0,127}));
      connect(integrator3.y,limiter8. u)
        annotation (Line(points={{-121,-126},{-104,-126}},
                                                         color={0,0,127}));
      connect(add8.u2,limiter8. u) annotation (Line(points={{-244,-132},{-252,-132},
              {-252,-152},{-112,-152},{-112,-126},{-104,-126}},
                                                       color={0,0,127}));
      connect(Paux, add7.u2) annotation (Line(points={{-320,-160},{-26,-160},{-26,-136},
              {-20,-136}}, color={0,0,127}));
      connect(variableLimiter2.y, Ipcmd)
        annotation (Line(points={{249,-160},{288,-160},{288,-170},{310,-170}},
                                                         color={0,0,127}));
      connect(add7.y,variableLimiter2. u) annotation (Line(points={{3,-130},{114,-130},
              {114,-160},{226,-160}}, color={0,0,127}));
      connect(product2.y,variableLimiter2. limit1) annotation (Line(points={{203,-126},
              {180,-126},{180,-152},{226,-152}},
                                      color={0,0,127}));
      connect(IPMAX.y,product2. u1)
        annotation (Line(points={{229,-120},{226,-120}}, color={0,0,127}));
      connect(product3.u2,IPMIN. y)
        annotation (Line(points={{226,-184},{229,-184}}, color={0,0,127}));
      connect(variableLimiter2.limit2,product3. y) annotation (Line(points={{226,-168},
              {180,-168},{180,-190},{203,-190}}, color={0,0,127}));
      connect(product2.u2,SOC_ipmax. y)
        annotation (Line(points={{226,-132},{229,-132}},
                                                       color={0,0,127}));
      connect(product3.u1,SOC_ipmin. y)
        annotation (Line(points={{226,-196},{229,-196}}, color={0,0,127}));
      connect(limiter2.y,add2. u1)
        annotation (Line(points={{-143,146},{-136,146}}, color={0,0,127}));
      connect(Qgen,add2. u2) annotation (Line(points={{-320,80},{-136,80},{-136,134}},
            color={0,0,127}));
      connect(limiter4.y,add5. u1) annotation (Line(points={{47,134},{52,134},{52,140},
              {56,140}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter1. limit1) annotation (Line(points={{159,154},
              {152,154},{152,138},{156,138}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter1. limit2) annotation (Line(points={{159,104},
              {152,104},{152,122},{156,122}},
                                            color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{265,140},{258,
              140},{258,152},{264,152}},
                                      color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{265,184},{258,
              184},{258,168},{264,168}},
                                       color={0,0,127}));
      connect(VDL2.y[1], ccl_reecc.VDL2_out)
        annotation (Line(points={{77,-70},{88.8,-69.6}}, color={0,0,127}));
      connect(VDL1.y[1], ccl_reecc.VDL1_out) annotation (Line(points={{77,-50},{77,-50.4},
              {88.8,-50.4}}, color={0,0,127}));
      connect(PQFLAG.y, ccl_reecc.pqflag)
        annotation (Line(points={{147,-60},{88.8,-60}},  color={255,0,255}));
      connect(IQCMD.y, ccl_reecc.Iqcmd) annotation (Line(points={{147,-38},{132,-38},{132,-50.4},{127.2,-50.4}},
                                          color={0,0,127}));
      connect(IPCMD.y, ccl_reecc.Ipcmd) annotation (Line(points={{147,-82},{132,-82},{132,-69.6},{127.2,-69.6}},
                                          color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{287,160},{294,160},{294,170},{310,170}},
                                                     color={0,0,127}));
      connect(Vt, simpleLag.u)
        annotation (Line(points={{-320,240},{-290,240}}, color={0,0,127}));
      connect(PGQ.y, add3.u1)
        annotation (Line(points={{-73,140},{-68,140}}, color={0,0,127}));
      connect(IGQ.y, add3.u2) annotation (Line(points={{-75,100},{-68,100},{-68,
              128}}, color={0,0,127}));
      connect(add3.y, limiter3.u)
        annotation (Line(points={{-45,134},{-42,134}}, color={0,0,127}));
      connect(PGV.y, add4.u1)
        annotation (Line(points={{121,136},{126,136}}, color={0,0,127}));
      connect(IGV.y, add4.u2) annotation (Line(points={{121,102},{121,112},{126,
              112},{126,124}}, color={0,0,127}));
      connect(add4.y, variableLimiter1.u)
        annotation (Line(points={{149,130},{156,130}}, color={0,0,127}));
      connect(Qext, limiter2.u) annotation (Line(points={{-320,0},{-200,0},{
              -200,146},{-166,146}}, color={0,0,127}));
      connect(PGQ.u, add2.y)
        annotation (Line(points={{-96,140},{-113,140}}, color={0,0,127}));
      connect(IGQ.u, add2.y) annotation (Line(points={{-98,100},{-108,100},{
              -108,140},{-113,140}}, color={0,0,127}));
      connect(limiter3.y, limiter4.u)
        annotation (Line(points={{-19,134},{24,134}}, color={0,0,127}));
      connect(PGV.u, add5.y) annotation (Line(points={{98,136},{88.5,136},{88.5,
              134},{79,134}}, color={0,0,127}));
      connect(IGV.u, add5.y) annotation (Line(points={{98,102},{88,102},{88,134},
              {79,134}}, color={0,0,127}));
      connect(variableLimiter1.y, variableLimiter.u) annotation (Line(points={{
              179,130},{202,130},{202,132},{228,132},{228,160},{264,160}},
            color={0,0,127}));
      connect(simpleLag.y, VDL1.u) annotation (Line(points={{-267,240},{-244,
              240},{-244,-50},{54,-50}}, color={0,0,127}));
      connect(VDL2.u, VDL1.u) annotation (Line(points={{54,-70},{22,-70},{22,
              -50},{54,-50}}, color={0,0,127}));
      connect(add5.u2, simpleLag.y) annotation (Line(points={{56,128},{52,128},
              {52,84},{-6,84},{-6,240},{-267,240}}, color={0,0,127}));
      connect(limiter5.u, VDL1.u) annotation (Line(points={{-102,-80},{-246,-80},
              {-246,-50},{54,-50}}, color={0,0,127}));
      connect(limiter7.y, integrator3.u)
        annotation (Line(points={{-187,-126},{-144,-126}}, color={0,0,127}));
      connect(limiter8.y, division1.u1)
        annotation (Line(points={{-81,-126},{-62,-126}}, color={0,0,127}));
      connect(limiter5.y, division1.u2) annotation (Line(points={{-79,-80},{-70,
              -80},{-70,-114},{-62,-114}}, color={0,0,127}));
      connect(division1.y, add7.u1) annotation (Line(points={{-39,-120},{-39,
              -124},{-20,-124}}, color={0,0,127}));
      connect(IGP.y,add9. u2) annotation (Line(points={{75,-220},{80,-220},{80,
              -206},{92,-206}},
                     color={0,0,127}));
      connect(PGP.y,add9. u1) annotation (Line(points={{75,-180},{75,-194},{92,
              -194}},    color={0,0,127}));
      connect(simpleLag1.y,add6. u1)
        annotation (Line(points={{-9,-194},{12,-194}},   color={0,0,127}));
      connect(IGP.u,add6. y) annotation (Line(points={{52,-220},{44,-220},{44,
              -200},{35,-200}},      color={0,0,127}));
      connect(PGP.u,add6. y) annotation (Line(points={{52,-180},{44,-180},{44,
              -200},{35,-200}},      color={0,0,127}));
      connect(simpleLag1.u, Pref) annotation (Line(points={{-32,-194},{-150,
              -194},{-150,-176},{-270,-176},{-270,-80},{-320,-80}}, color={0,0,
              127}));
      connect(add9.y, add8.u1) annotation (Line(points={{115,-200},{130,-200},{
              130,-170},{-264,-170},{-264,-120},{-244,-120}}, color={0,0,127}));
      connect(Pe, simpleLag2.u)
        annotation (Line(points={{-320,160},{-288,160}}, color={0,0,127}));
      connect(simpleLag2.y, add6.u2) annotation (Line(points={{-265,160},{-260,160},
              {-260,-206},{12,-206}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECCU1 component is an augmented version of the existing renewable energy electrical control (REECA1) model, and can be utilized to represent
both type 3 and type 4 wind turbine electrical controllers as well as photovoltaic electrical controllers. The REECCU1 component can be connected to the
plant controller (REPCA1). This electrical controller provides real (Ipcmd) and reactive (Iqcmd) current commands to the REGCA1 component, which are the outputs
of this component.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECCU1 component has six inputs, three of which are connected to the inverter component
(for instance REGCA1), two more that can either be constant values from the power flow initialization or come from the connection to the plant controller, and
an auxiliary input variable that is rarely used (usually constant and zero). The three REECCU1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Battery Storage Dynamic Modeling Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCBattery]</a>.</li>
</ul>

</html>"));
    end REECCU1_Local_V_Q_Control_for_LinearizationPYTHON;

    model REECB1_Local_V_Q_Control_PI_OBSERVABILITY
      "Electrical control model for large scale photovoltaic"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECB(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = -0.05 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0.05 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1.05 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1.05 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.05 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 0.4360 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -0.4360 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter Real Kpp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kpi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.02 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.82 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter1(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-162,56},{-142,76}})));
      Modelica.Blocks.Math.Add add1(k2=-1)
        annotation (Placement(transformation(extent={{-132,50},{-112,70}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-8,44},{12,64}})));
      Modelica.Blocks.Math.Add add4(k2=-1)
        annotation (Placement(transformation(extent={{60,44},{80,64}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{162,38},{182,58}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={172,74})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={172,24})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{264,70},{284,90}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl.Iqmin)
        annotation (Placement(transformation(extent={{284,70},{264,50}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl.Iqmax)
        annotation (Placement(transformation(extent={{284,94},{264,114}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{178,-180},{198,-160}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl.Ipmax) annotation (
          Placement(transformation(
            extent={{10,-10},{-10,10}},
            origin={188,-140})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl.Ipmin)
        annotation (Placement(transformation(extent={{198,-210},{178,-190}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{0,-180},{20,-160}})));
      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-132,-220},{-112,-200}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-70,-176},{-50,-156}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECB
        ccl(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{260,-40},{280,-20}})));
      Modelica.Blocks.Sources.BooleanConstant Pqflag_logic(k=pqflag)
        annotation (Placement(transformation(extent={{220,-40},{240,-20}})));

      Modelica.Blocks.Math.Add add6(k2=-1)
        annotation (Placement(transformation(extent={{52,-272},{72,-252}})));
      Modelica.Blocks.Continuous.PI PI(
        k=Kqp,
        T=Kqp/Kqi,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=V0)
        annotation (Placement(transformation(extent={{-60,44},{-40,64}})));
      Modelica.Blocks.Continuous.PI PI1(
        k=Kvp,
        T=Kvp/Kvi,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=-Iq0)
        annotation (Placement(transformation(extent={{114,40},{134,60}})));
      Modelica.Blocks.Continuous.PI PI2(
        k=Kpp,
        T=Kpp/Kpi,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{90,-272},{110,-252}})));
      Modelica.Blocks.Continuous.FirstOrder Vt_sensor(
        k=1,
        T=Trv,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=V0)
        annotation (Placement(transformation(extent={{-280,150},{-260,170}})));
      Modelica.Blocks.Continuous.FirstOrder P_sensor(
        k=1,
        T=Tp,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=p00)
        annotation (Placement(transformation(extent={{-280,70},{-260,90}})));
      Modelica.Blocks.Continuous.FirstOrder Q_sensor(
        k=1,
        T=Tp,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=q00)
        annotation (Placement(transformation(extent={{-278,-10},{-258,10}})));
      Modelica.Blocks.Continuous.FirstOrder Filter(
        k=1,
        T=Tpord,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-110,-176},{-90,-156}})));
    protected
      parameter Real pfaref = p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;

    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;


      connect(limiter1.y,add1. u1)
        annotation (Line(points={{-141,66},{-134,66}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter2. limit1) annotation (Line(points={{161,74},{
              154,74},{154,56},{160,56}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter2. limit2) annotation (Line(points={{161,24},{
              154,24},{154,40},{160,40}}, color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{263,60},{256,
              60},{256,72},{262,72}}, color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{263,104},{256,
              104},{256,88},{262,88}}, color={0,0,127}));
      connect(IPMIN.y,variableLimiter1. limit2) annotation (Line(points={{177,-200},
              {177,-189},{176,-189},{176,-178}},
                                             color={0,0,127}));
      connect(IPMAX.y,variableLimiter1. limit1) annotation (Line(points={{177,-140},
              {177,-151},{176,-151},{176,-162}},
                                             color={0,0,127}));
      connect(variableLimiter1.y, Ipcmd) annotation (Line(points={{199,-170},{310,-170}},
                                    color={0,0,127}));
      connect(limiter5.y,division1. u2) annotation (Line(points={{-111,-210},{-111,-212},
              {-12,-212},{-12,-176},{-2,-176}},
                                      color={0,0,127}));
      connect(limiter8.y,division1. u1) annotation (Line(points={{-49,-166},{-25.5,-166},
              {-25.5,-164},{-2,-164}},color={0,0,127}));
      connect(division1.y, variableLimiter1.u)
        annotation (Line(points={{21,-170},{176,-170}}, color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{285,80},{292,80},{292,170},{310,170}},
                                                     color={0,0,127}));
      connect(Pqflag_logic.y, ccl.Pqflag)
        annotation (Line(points={{241,-30},{258,-30}}, color={255,0,255}));
      connect(ccl.Iqcmd, Iqcmd) annotation (Line(points={{282,-25},{292,-25},{292,170},{310,170}},
                         color={0,0,127}));
      connect(ccl.Ipcmd, Ipcmd) annotation (Line(points={{282,-35},{292,-35},{292,-170},{310,-170}},
                          color={0,0,127}));
      connect(variableLimiter2.y, variableLimiter.u) annotation (Line(points={{
              183,48},{232,48},{232,80},{262,80}}, color={0,0,127}));
      connect(limiter2.y, add4.u1)
        annotation (Line(points={{13,54},{13,60},{58,60}}, color={0,0,127}));
      connect(PI.y, limiter2.u)
        annotation (Line(points={{-39,54},{-10,54}}, color={0,0,127}));
      connect(add1.y, PI.u)
        annotation (Line(points={{-111,60},{-111,54},{-62,54}}, color={0,0,127}));
      connect(PI1.y, variableLimiter2.u)
        annotation (Line(points={{135,50},{135,48},{160,48}}, color={0,0,127}));
      connect(PI1.u, add4.y)
        annotation (Line(points={{112,50},{112,54},{81,54}}, color={0,0,127}));
      connect(Pref, add6.u1) annotation (Line(points={{-320,-160},{-258,-160},{-258,
              -256},{50,-256}}, color={0,0,127}));
      connect(Qext, limiter1.u) annotation (Line(points={{-320,-80},{-180,-80},{-180,
              66},{-164,66}}, color={0,0,127}));
      connect(add6.y, PI2.u) annotation (Line(points={{73,-262},{88,-262}},
                          color={0,0,127}));
      connect(Vt_sensor.u, Vt)
        annotation (Line(points={{-282,160},{-320,160}}, color={0,0,127}));
      connect(Vt_sensor.y, add4.u2) annotation (Line(points={{-259,160},{34,160},{34,
              48},{58,48}}, color={0,0,127}));
      connect(Vt_sensor.y, limiter5.u) annotation (Line(points={{-259,160},{-188,160},
              {-188,-210},{-134,-210}}, color={0,0,127}));
      connect(Pe, P_sensor.u)
        annotation (Line(points={{-320,80},{-282,80}}, color={0,0,127}));
      connect(P_sensor.y, add6.u2) annotation (Line(points={{-259,80},{-214,80},{-214,
              -268},{50,-268}}, color={0,0,127}));
      connect(Qgen, Q_sensor.u)
        annotation (Line(points={{-320,0},{-280,0}}, color={0,0,127}));
      connect(Q_sensor.y, add1.u2)
        annotation (Line(points={{-257,0},{-134,0},{-134,54}}, color={0,0,127}));
      connect(Filter.y, limiter8.u)
        annotation (Line(points={{-89,-166},{-72,-166}}, color={0,0,127}));
      connect(PI2.y, Filter.u) annotation (Line(points={{111,-262},{126,-262},{126,-224},
              {-162,-224},{-162,-166},{-112,-166}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECB1 component used to represent the electrical controls of photovoltaic generation. The electrical controller actuates on the active and reactive power
reference from either the plant controller component or from power flow power reference values (in the case where there is no plant controller),
with feedback variables that original from the inverter interface component, specifically terminal voltage and generator power output,
and provides real (Ipcmd) and reactive current (Iqcmd) commands to the REGC types module.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECB1 component has five inputs, three of which are connected to the inverter component
(for instance REGCA1), and two more that can either be constant values from the power flow initialization or come from the connection to the plant controller.
The three REECB1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Solar Photovoltaic Power Plant Modeling and Validation Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCPhotovoltaic]</a>.</li>
</ul>
</html>"));
    end REECB1_Local_V_Q_Control_PI_OBSERVABILITY;

    model REECCU1_Local_V_Q_Control_for_Linearization_OBSERVABILITY
      "Electrical control model for utility scale battery energy storage"
      extends
        OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.BaseREECC(
         Iqcmd, Ipcmd);

      parameter OpenIPSL.Types.PerUnit Vdip = -99 "Low voltage threshold to activate reactive current injection logic (0.85 - 0.9)";
      parameter OpenIPSL.Types.PerUnit Vup = 99 "Voltage above which reactive current injection logic is activated (>1.1)";
      parameter OpenIPSL.Types.Time Trv = 0.01 "Filter time constant for voltage measurement (0.01 - 0.02)";
      parameter OpenIPSL.Types.PerUnit dbd1 = 0 "Voltage error dead band lower threshold (-0.1 - 0)";
      parameter OpenIPSL.Types.PerUnit dbd2 = 0 "Voltage error dead band upper threshold (0 - 0.1)";
      parameter Real Kqv = 0 "Reactive current injection gain during over and undervoltage conditions (0 - 10)";
      parameter OpenIPSL.Types.PerUnit Iqh1 = 1 "Upper limit on reactive current injection Iqinj (1 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Iql1 = -1 "Lower limit on reactive current injection Iqinj (-1.1 - 1)";
      parameter OpenIPSL.Types.PerUnit vref0 = 1 "User defined voltage reference (0.95 - 1.05)";
      parameter OpenIPSL.Types.Time Tp = 0.01 "Filter time constant for electrical power (0.01 - 0.1)";
      parameter OpenIPSL.Types.PerUnit Qmax = 1 "Upper limits of the limit for reactive power regulator (0.4 - 1.0)";
      parameter OpenIPSL.Types.PerUnit Qmin = -1 "Lower limits of the limit for reactive power regulator (-1.0 - -0.4)";
      parameter OpenIPSL.Types.PerUnit Vmax = 1.1 "Maximum limit for voltage control (1.05 - 1.1)";
      parameter OpenIPSL.Types.PerUnit Vmin = 0.9 "Lower limits of input signals (0.9 - 0.95)";
      parameter Real Kqp = 0 "Reactive power regulator proportional gain (No predefined range)";
      parameter Real Kqi = 0.1 "Reactive power regulator integral gain (No predefined range)";
      parameter Real Kvp = 0 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kvi = 40 "Voltage regulator integral gain (No predefined range)";
      parameter Real Kpp = 1 "Voltage regulator proportional gain (No predefined range)";
      parameter Real Kpi = 1 "Voltage regulator integral gain (No predefined range)";
      parameter OpenIPSL.Types.Time Tiq = 0.01 "Time constant on lag delay (0.01 - 0.02)";
      parameter Real dPmax = 99 "Power reference maximum ramp rate (No predefined range)";
      parameter Real dPmin = -99 "Lower limits of input signals (No predefined range)";
      parameter OpenIPSL.Types.PerUnit Pmax = 1 "Maximum power limit";
      parameter OpenIPSL.Types.PerUnit Pmin = 0 "Minimum power limit";
      parameter OpenIPSL.Types.PerUnit Imax = 1.1 "Maximum limit on total converter current (1.1 - 1.3)";
      parameter OpenIPSL.Types.Time Tpord = 0.02 "Power filter time constant (0.01 - 0.02) ";
      parameter OpenIPSL.Types.PerUnit Vq1 = 0.2 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq1 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq2 = 0.5 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq2 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq3 = 0.75 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq3 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vq4 = 1 "Reactive Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Iq4 = 0.75 "Reactive Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp1 = 0.2 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip1 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp2 = 0.5 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip2 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp3 = 0.75 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip3 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter OpenIPSL.Types.PerUnit Vp4 = 1 "Real Power V-I pair, voltage (user defined)";
      parameter OpenIPSL.Types.PerUnit Ip4 = 1.11 "Real Power V-I pair, current (user defined)";
      parameter Modelica.Units.SI.Time T = 999 "Battery discharge time";
      parameter OpenIPSL.Types.PerUnit SOCini = 0.5 "Initial state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmax = 0.8 "Maximum allowable state of charge";
      parameter OpenIPSL.Types.PerUnit SOCmin = 0.2 "Minimum allowable state of charge";

      Integer Voltage_dip;

      Modelica.Blocks.Nonlinear.Limiter limiter5(uMax=Modelica.Constants.inf, uMin=0.01)
        annotation (Placement(transformation(extent={{-100,-90},{-80,-70}})));
      Modelica.Blocks.Nonlinear.Limiter limiter8(uMax=Pmax, uMin=Pmin)
        annotation (Placement(transformation(extent={{-102,-136},{-82,-116}})));
      Modelica.Blocks.Math.Add add7(k1=+1, k2=+1)
        annotation (Placement(transformation(extent={{-18,-140},{2,-120}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter2
        annotation (Placement(transformation(extent={{228,-170},{248,-150}})));
      Modelica.Blocks.Sources.RealExpression IPMAX(y=ccl_reecc.Ipmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-120})));
      Modelica.Blocks.Sources.RealExpression IPMIN(y=ccl_reecc.Ipmin) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={240,-184})));
      Modelica.Blocks.Math.Product product2
        annotation (Placement(transformation(extent={{224,-136},{204,-116}})));
      Modelica.Blocks.Math.Product product3
        annotation (Placement(transformation(extent={{-10,-10},{10,10}},
            rotation=180,
            origin={214,-190})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmax(y=1)
        annotation (Placement(transformation(extent={{250,-122},{230,-142}})));
      Modelica.Blocks.Sources.RealExpression SOC_ipmin(y=1)
        annotation (Placement(transformation(extent={{250,-186},{230,-206}})));
      Modelica.Blocks.Nonlinear.Limiter limiter2(uMax=Qmax, uMin=Qmin)
        annotation (Placement(transformation(extent={{-164,136},{-144,156}})));
      Modelica.Blocks.Math.Add add2(k2=-1)
        annotation (Placement(transformation(extent={{-134,130},{-114,150}})));
      Modelica.Blocks.Nonlinear.Limiter limiter3(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{-40,124},{-20,144}})));
      Modelica.Blocks.Nonlinear.Limiter limiter4(uMax=Vmax, uMin=Vmin)
        annotation (Placement(transformation(extent={{26,124},{46,144}})));
      Modelica.Blocks.Math.Add add5(k2=-1)
        annotation (Placement(transformation(extent={{58,124},{78,144}})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter1
        annotation (Placement(transformation(extent={{158,120},{178,140}})));
      Modelica.Blocks.Sources.RealExpression IQMAX_(y=ccl_reecc.Iqmax) annotation (
          Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={170,154})));
      Modelica.Blocks.Sources.RealExpression IQMIN_(y=ccl_reecc.Iqmin) annotation (
          Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=180,
            origin={170,104})));
      Modelica.Blocks.Nonlinear.VariableLimiter variableLimiter
        annotation (Placement(transformation(extent={{266,150},{286,170}})));
      Modelica.Blocks.Sources.RealExpression IQMIN(y=ccl_reecc.Iqmin)
        annotation (Placement(transformation(extent={{286,150},{266,130}})));
      Modelica.Blocks.Sources.RealExpression IQMAX(y=ccl_reecc.Iqmax)
        annotation (Placement(transformation(extent={{286,174},{266,194}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL1(table=[Vq1,Iq1; Vq2,Iq2; Vq3,Iq3;
            Vq4,Iq4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-40}})));
      Modelica.Blocks.Tables.CombiTable1Ds VDL2(table=[Vp1,Ip1; Vp2,Ip2; Vp3,Ip3;
            Vp4,Ip4],
        smoothness=Modelica.Blocks.Types.Smoothness.LinearSegments,
        extrapolation=Modelica.Blocks.Types.Extrapolation.HoldLastPoint)
        annotation (Placement(transformation(extent={{56,-60},{76,-80}})));
      OpenIPSL.Electrical.Renewables.PSSE.ElectricalController.BaseClasses.CurrentLimitLogicREECC
        ccl_reecc(
        start_ii=-Iq0,
        start_ir=Ip0,
        Imax=Imax)
        annotation (Placement(transformation(extent={{92,-76},{124,-44}})));
      Modelica.Blocks.Sources.RealExpression IQCMD(y=Iqcmd)
        annotation (Placement(transformation(extent={{168,-48},{148,-28}})));
      Modelica.Blocks.Sources.BooleanConstant PQFLAG(k=pqflag)
        annotation (Placement(transformation(extent={{168,-50},{148,-70}})));
      Modelica.Blocks.Sources.RealExpression IPCMD(y=Ipcmd)
        annotation (Placement(transformation(extent={{168,-72},{148,-92}})));

      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{-60,-110},{-40,-130}})));
      Modelica.Blocks.Math.Add add6(k2=-1)
        annotation (Placement(transformation(extent={{14,-210},{34,-190}})));
      Modelica.Blocks.Continuous.PI PI(
        k=Kqp,
        T=Kqp/Kqi,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=V0)
        annotation (Placement(transformation(extent={{-80,124},{-60,144}})));
      Modelica.Blocks.Continuous.PI PI1(
        k=Kvp,
        T=Kvp/Kvi,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=-Iq0)
        annotation (Placement(transformation(extent={{100,124},{120,144}})));
      Modelica.Blocks.Continuous.PI PI2(
        k=Kpp,
        T=Kpp/Kpi,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{50,-210},{70,-190}})));
      Modelica.Blocks.Continuous.FirstOrder Vt_sensor(
        k=1,
        T=Trv,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=V0)
        annotation (Placement(transformation(extent={{-280,230},{-260,250}})));
      Modelica.Blocks.Continuous.FirstOrder P_sensor(
        k=1,
        T=Tp,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=p00)
        annotation (Placement(transformation(extent={{-278,150},{-258,170}})));
      Modelica.Blocks.Continuous.FirstOrder Q_sensor(
        k=1,
        T=Tp,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=q00)
        annotation (Placement(transformation(extent={{-282,70},{-262,90}})));
      Modelica.Blocks.Continuous.FirstOrder Filter(
        k=1,
        T=Tpord,
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=Ip0*V0)
        annotation (Placement(transformation(extent={{-144,-136},{-124,-116}})));
    protected
      parameter Real pfaref=p00/sqrt(p00^2 +q00^2) "Power Factor of choice.";
      parameter OpenIPSL.Types.Angle pfangle = if q00 > 0 then acos(pfaref) else -acos(pfaref);
      parameter OpenIPSL.Types.PerUnit Ip0(fixed=false);
      parameter OpenIPSL.Types.PerUnit Iq0(fixed=false);
      parameter OpenIPSL.Types.PerUnit V0(fixed=false);
      parameter OpenIPSL.Types.PerUnit p00(fixed=false);
      parameter OpenIPSL.Types.PerUnit q00(fixed=false);
      parameter OpenIPSL.Types.PerUnit Vref0 = if vref0 == 0 then V0 else vref0;

    initial equation

      Ip0 = ip0;
      Iq0 = iq0;
      V0 = v0;
      p00 = p0;
      q00 = q0;
    equation

      Voltage_dip = if Vt<Vdip or Vt>Vup then 1 else 0;

      connect(Paux, add7.u2) annotation (Line(points={{-320,-160},{-26,-160},{-26,-136},
              {-20,-136}}, color={0,0,127}));
      connect(variableLimiter2.y, Ipcmd)
        annotation (Line(points={{249,-160},{288,-160},{288,-170},{310,-170}},
                                                         color={0,0,127}));
      connect(add7.y,variableLimiter2. u) annotation (Line(points={{3,-130},{114,-130},
              {114,-160},{226,-160}}, color={0,0,127}));
      connect(product2.y,variableLimiter2. limit1) annotation (Line(points={{203,-126},
              {180,-126},{180,-152},{226,-152}},
                                      color={0,0,127}));
      connect(IPMAX.y,product2. u1)
        annotation (Line(points={{229,-120},{226,-120}}, color={0,0,127}));
      connect(product3.u2,IPMIN. y)
        annotation (Line(points={{226,-184},{229,-184}}, color={0,0,127}));
      connect(variableLimiter2.limit2,product3. y) annotation (Line(points={{226,-168},
              {180,-168},{180,-190},{203,-190}}, color={0,0,127}));
      connect(product2.u2,SOC_ipmax. y)
        annotation (Line(points={{226,-132},{229,-132}},
                                                       color={0,0,127}));
      connect(product3.u1,SOC_ipmin. y)
        annotation (Line(points={{226,-196},{229,-196}}, color={0,0,127}));
      connect(limiter2.y,add2. u1)
        annotation (Line(points={{-143,146},{-136,146}}, color={0,0,127}));
      connect(limiter4.y,add5. u1) annotation (Line(points={{47,134},{52,134},{52,140},
              {56,140}}, color={0,0,127}));
      connect(IQMAX_.y,variableLimiter1. limit1) annotation (Line(points={{159,154},
              {152,154},{152,138},{156,138}}, color={0,0,127}));
      connect(IQMIN_.y,variableLimiter1. limit2) annotation (Line(points={{159,104},
              {152,104},{152,122},{156,122}},
                                            color={0,0,127}));
      connect(IQMIN.y,variableLimiter. limit2) annotation (Line(points={{265,140},{258,
              140},{258,152},{264,152}},
                                      color={0,0,127}));
      connect(IQMAX.y,variableLimiter. limit1) annotation (Line(points={{265,184},{258,
              184},{258,168},{264,168}},
                                       color={0,0,127}));
      connect(VDL2.y[1], ccl_reecc.VDL2_out)
        annotation (Line(points={{77,-70},{88.8,-69.6}}, color={0,0,127}));
      connect(VDL1.y[1], ccl_reecc.VDL1_out) annotation (Line(points={{77,-50},{77,-50.4},
              {88.8,-50.4}}, color={0,0,127}));
      connect(PQFLAG.y, ccl_reecc.pqflag)
        annotation (Line(points={{147,-60},{88.8,-60}},  color={255,0,255}));
      connect(IQCMD.y, ccl_reecc.Iqcmd) annotation (Line(points={{147,-38},{132,-38},{132,-50.4},{127.2,-50.4}},
                                          color={0,0,127}));
      connect(IPCMD.y, ccl_reecc.Ipcmd) annotation (Line(points={{147,-82},{132,-82},{132,-69.6},{127.2,-69.6}},
                                          color={0,0,127}));
      connect(variableLimiter.y, Iqcmd)
        annotation (Line(points={{287,160},{294,160},{294,170},{310,170}},
                                                     color={0,0,127}));
      connect(limiter3.y, limiter4.u)
        annotation (Line(points={{-19,134},{24,134}}, color={0,0,127}));
      connect(variableLimiter1.y, variableLimiter.u) annotation (Line(points={{
              179,130},{202,130},{202,132},{228,132},{228,160},{264,160}},
            color={0,0,127}));
      connect(VDL2.u, VDL1.u) annotation (Line(points={{54,-70},{20,-70},{20,
              -50},{54,-50}}, color={0,0,127}));
      connect(limiter8.y, division1.u1)
        annotation (Line(points={{-81,-126},{-62,-126}}, color={0,0,127}));
      connect(limiter5.y, division1.u2) annotation (Line(points={{-79,-80},{-70,
              -80},{-70,-114},{-62,-114}}, color={0,0,127}));
      connect(division1.y, add7.u1) annotation (Line(points={{-39,-120},{-39,
              -124},{-20,-124}}, color={0,0,127}));
      connect(add6.u1, Pref) annotation (Line(points={{12,-194},{-280,-194},{
              -280,-80},{-320,-80}}, color={0,0,127}));
      connect(Qext, limiter2.u) annotation (Line(points={{-320,0},{-196,0},{
              -196,146},{-166,146}}, color={0,0,127}));
      connect(PI.y, limiter3.u)
        annotation (Line(points={{-59,134},{-42,134}}, color={0,0,127}));
      connect(PI.u, add2.y) annotation (Line(points={{-82,134},{-82,140},{-113,
              140}}, color={0,0,127}));
      connect(add5.y, PI1.u)
        annotation (Line(points={{79,134},{98,134}}, color={0,0,127}));
      connect(PI1.y, variableLimiter1.u) annotation (Line(points={{121,134},{
              121,130},{156,130}}, color={0,0,127}));
      connect(add6.y, PI2.u)
        annotation (Line(points={{35,-200},{48,-200}}, color={0,0,127}));
      connect(Vt, Vt_sensor.u)
        annotation (Line(points={{-320,240},{-282,240}}, color={0,0,127}));
      connect(Vt_sensor.y, add5.u2) annotation (Line(points={{-259,240},{-106,
              240},{-106,238},{48,238},{48,128},{56,128}}, color={0,0,127}));
      connect(Vt_sensor.y, VDL1.u) annotation (Line(points={{-259,240},{-100,
              240},{-100,-50},{54,-50}}, color={0,0,127}));
      connect(limiter5.u, VDL1.u) annotation (Line(points={{-102,-80},{-122,-80},
              {-122,-78},{-142,-78},{-142,-18},{-100,-18},{-100,-50},{54,-50}},
            color={0,0,127}));
      connect(Pe, P_sensor.u)
        annotation (Line(points={{-320,160},{-280,160}}, color={0,0,127}));
      connect(P_sensor.y, add6.u2) annotation (Line(points={{-257,160},{-230,
              160},{-230,-206},{12,-206}}, color={0,0,127}));
      connect(Qgen, Q_sensor.u)
        annotation (Line(points={{-320,80},{-284,80}}, color={0,0,127}));
      connect(Q_sensor.y, add2.u2) annotation (Line(points={{-261,80},{-136,80},
              {-136,134}}, color={0,0,127}));
      connect(Filter.y, limiter8.u)
        annotation (Line(points={{-123,-126},{-104,-126}}, color={0,0,127}));
      connect(Filter.u, PI2.y) annotation (Line(points={{-146,-126},{-170,-126},
              {-170,-128},{-178,-128},{-178,-172},{100,-172},{100,-200},{71,
              -200}}, color={0,0,127}));
      annotation (Documentation(info="<html>
<p>
The REECCU1 component is an augmented version of the existing renewable energy electrical control (REECA1) model, and can be utilized to represent
both type 3 and type 4 wind turbine electrical controllers as well as photovoltaic electrical controllers. The REECCU1 component can be connected to the
plant controller (REPCA1). This electrical controller provides real (Ipcmd) and reactive (Iqcmd) current commands to the REGCA1 component, which are the outputs
of this component.
</p>
<p>
For initialization purposes, there are 5 inputs that are derived from the inverter component: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0).
</p>
<p>
In terms of connectivity with other components to form the renewable source, the REECCU1 component has six inputs, three of which are connected to the inverter component
(for instance REGCA1), two more that can either be constant values from the power flow initialization or come from the connection to the plant controller, and
an auxiliary input variable that is rarely used (usually constant and zero). The three REECCU1 inputs that take in values from the output of the inverter model
are Vt, Pgen, and Qgen while the two inputs that could potentially be constant valued or come from the plant controller are Pref, and Qext.
</p>
<p>The modelling of such devices is based, mainly, on the following references:</p>
<ul>
<li>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>,</li>
<li>WECC: \"Battery Storage Dynamic Modeling Guideline\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[WECCBattery]</a>.</li>
</ul>

</html>"));
    end REECCU1_Local_V_Q_Control_for_Linearization_OBSERVABILITY;

    model BESS_SYS_ID "Renewable energy generator/converter model A"
      extends OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.BaseREGC_MPC;
      Modelica.Blocks.Continuous.TransferFunction Reactive_Power_TF(
        b={49.855803858650780,9.713892380297832,5.471999424889827e+02},
        a={1,50.114770101495020,19.198895690124427,5.468930196992671e+02},
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=0)
        annotation (Placement(transformation(extent={{-80,70},{-60,90}})));
      Modelica.Blocks.Continuous.TransferFunction Active_Power_TF(
        b={-1.347967776743149,2.324567660869829e+02,8.855424448817964e+04},
        a={1,79.255871675982100,3.643901447058458e+03,8.855402875445042e+04},
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=0)
        annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
      Modelica.Blocks.Math.Division division
        annotation (Placement(transformation(extent={{0,60},{20,80}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{0,-60},{20,-80}})));
      Modelica.Blocks.Sources.RealExpression Vt(y=VT)
        annotation (Placement(transformation(extent={{-120,-10},{-100,10}})));
      Modelica.Blocks.Math.Gain IP(k=1)
        annotation (Placement(transformation(extent={{84,-86},{104,-66}})));
      Modelica.Blocks.Sources.Constant const(k=q0)
        annotation (Placement(transformation(extent={{-88,40},{-68,60}})));
      Modelica.Blocks.Math.Add sum
        annotation (Placement(transformation(extent={{-46,-96},{-26,-76}})));
      Modelica.Blocks.Sources.Constant const1(k=p0)
        annotation (Placement(transformation(extent={{-80,-124},{-60,-104}})));
      Modelica.Blocks.Math.Gain IQ(k=-1)
        annotation (Placement(transformation(extent={{82,60},{102,80}})));
      Modelica.Blocks.Math.Add sum1
        annotation (Placement(transformation(extent={{-48,64},{-28,84}})));
    equation
      [IP.y; IQ.y] = -[cos(delta),sin(delta); -sin(delta),cos(delta)]*[p.ir; p.ii];
      V_t = VT;
      Pgen = -((p.vr*p.ir + p.vi*p.ii));
      Qgen = -((p.vi*p.ir - p.vr*p.ii));
      //Pgen = (p0 + Active_Power_TF.y);
      //Qgen = (q0 + Reactive_Power_TF.y);

      connect(Iqcmd, Reactive_Power_TF.u)
        annotation (Line(points={{-160,80},{-82,80}}, color={0,0,127}));
      connect(Ipcmd, Active_Power_TF.u)
        annotation (Line(points={{-160,-80},{-82,-80}}, color={0,0,127}));
      connect(Vt.y, division.u2) annotation (Line(points={{-99,0},{-16,0},{-16,64},{
              -2,64}}, color={0,0,127}));
      connect(division1.u2, division.u2) annotation (Line(points={{-2,-64},{-16,-64},
              {-16,64},{-2,64}}, color={0,0,127}));
      connect(const.y, sum1.u2) annotation (Line(points={{-67,50},{-50,50},{-50,
              68}}, color={0,0,127}));
      connect(const1.y, sum.u2) annotation (Line(points={{-59,-114},{-56,-114},
              {-56,-92},{-48,-92}}, color={0,0,127}));
      connect(sum1.y, division.u1)
        annotation (Line(points={{-27,74},{-27,76},{-2,76}}, color={0,0,127}));
      connect(Reactive_Power_TF.y, sum1.u1)
        annotation (Line(points={{-59,80},{-50,80}}, color={0,0,127}));
      connect(division.y, IQ.u)
        annotation (Line(points={{21,70},{80,70}}, color={0,0,127}));
      connect(Active_Power_TF.y, sum.u1)
        annotation (Line(points={{-59,-80},{-48,-80}}, color={0,0,127}));
      connect(sum.y, division1.u1) annotation (Line(points={{-25,-86},{-10,-86},
              {-10,-76},{-2,-76}}, color={0,0,127}));
      connect(division1.y, IP.u) annotation (Line(points={{21,-70},{72,-70},{72,
              -76},{82,-76}}, color={0,0,127}));
      annotation (Icon(graphics={Text(
              extent={{-82,70},{98,-70}},
              textColor={0,0,255},
              textString="REGCA")}), Documentation(info="<html>
<p>The REGCA1 component is used to represent the renewable source (inverter) interface with the grid. It takes in as input the real current command
(Ipcmd) and the reactive current command (Iqcmd) from the electrical controller, and outputs real (Ip) and reactive (Iq) injected currents to the grid through
OpenIPSL's proprietary pwpin connector.</p>
<p>In order to properly initialize all the components that form the renewable energy source, the REGC_A component has five initialization outputs, which its constant output originates from the
starting power flow: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0). This method reduces repetitiveness of initialization calculation, being calculated once at the REGCA1 component.</p>
<p>The connection with other components requires a closed loop through terminal voltage variable (V_t), and active and reactive power generation (Pgen and Qgen).</p>
<p>The modelling of such devices is based, mainly, on the following reference:</p>
<ul>
<li><p>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>.</p>
</li>
</ul>
</html>"));
    end BESS_SYS_ID;

    model PV_SYS_ID "Renewable energy generator/converter model A"
      extends Electrical.Renewables.PSSE.InverterInterface.BaseClasses.BaseREGC;
      Modelica.Blocks.Continuous.TransferFunction Reactive_Power_TF(
        b={16.775626598767293,5.885051427917501,1.960354078592724e+02},
        a={1,17.907862066825032,16.031011818947107,1.958076063039068e+02},
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=0)
        annotation (Placement(transformation(extent={{-80,70},{-60,90}})));
      Modelica.Blocks.Continuous.TransferFunction Active_Power_TF(
        b={4.124637082873321,6.427072745480649e+02},
        a={1,7.654218691334363,6.417212936877655e+02},
        initType=Modelica.Blocks.Types.Init.InitialOutput,
        y_start=p0)
        annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
      Modelica.Blocks.Math.Division division
        annotation (Placement(transformation(extent={{0,60},{20,80}})));
      Modelica.Blocks.Math.Division division1
        annotation (Placement(transformation(extent={{0,-60},{20,-80}})));
      Modelica.Blocks.Sources.RealExpression Vt(y=VT)
        annotation (Placement(transformation(extent={{-120,-10},{-100,10}})));
      Modelica.Blocks.Math.Gain IP(k=1)
        annotation (Placement(transformation(extent={{84,-86},{104,-66}})));
      Modelica.Blocks.Sources.Constant const(k=q0)
        annotation (Placement(transformation(extent={{-88,40},{-68,60}})));
      Modelica.Blocks.Math.Gain IQ(k=-1)
        annotation (Placement(transformation(extent={{82,60},{102,80}})));
      Modelica.Blocks.Math.Add sum1
        annotation (Placement(transformation(extent={{-48,64},{-28,84}})));
    equation
      [IP.y; IQ.y] = -[cos(delta),sin(delta); -sin(delta),cos(delta)]*[p.ir; p.ii];
      V_t = VT;
      Pgen = -((p.vr*p.ir + p.vi*p.ii));
      Qgen = -((p.vi*p.ir - p.vr*p.ii));
      IQ0 = Iq0;
      IP0 = Ip0;
      V_0 = v_0;
      p_0 = p0;
      q_0 = q0;
      //Pgen = (p0 + Active_Power_TF.y);
      //Qgen = (q0 + Reactive_Power_TF.y);

      connect(Iqcmd, Reactive_Power_TF.u)
        annotation (Line(points={{-160,80},{-82,80}}, color={0,0,127}));
      connect(Ipcmd, Active_Power_TF.u)
        annotation (Line(points={{-160,-80},{-82,-80}}, color={0,0,127}));
      connect(Vt.y, division.u2) annotation (Line(points={{-99,0},{-16,0},{-16,64},{
              -2,64}}, color={0,0,127}));
      connect(division1.u2, division.u2) annotation (Line(points={{-2,-64},{-16,-64},
              {-16,64},{-2,64}}, color={0,0,127}));
      connect(const.y, sum1.u2) annotation (Line(points={{-67,50},{-50,50},{-50,
              68}}, color={0,0,127}));
      connect(sum1.y, division.u1)
        annotation (Line(points={{-27,74},{-27,76},{-2,76}}, color={0,0,127}));
      connect(Reactive_Power_TF.y, sum1.u1)
        annotation (Line(points={{-59,80},{-50,80}}, color={0,0,127}));
      connect(division.y, IQ.u)
        annotation (Line(points={{21,70},{80,70}}, color={0,0,127}));
      connect(division1.y, IP.u) annotation (Line(points={{21,-70},{72,-70},{72,
              -76},{82,-76}}, color={0,0,127}));
      connect(Active_Power_TF.y, division1.u1) annotation (Line(points={{-59,
              -80},{-12,-80},{-12,-76},{-2,-76}}, color={0,0,127}));
      annotation (Icon(graphics={Text(
              extent={{-82,70},{98,-70}},
              textColor={0,0,255},
              textString="REGCA")}), Documentation(info="<html>
<p>The REGCA1 component is used to represent the renewable source (inverter) interface with the grid. It takes in as input the real current command
(Ipcmd) and the reactive current command (Iqcmd) from the electrical controller, and outputs real (Ip) and reactive (Iq) injected currents to the grid through
OpenIPSL's proprietary pwpin connector.</p>
<p>In order to properly initialize all the components that form the renewable energy source, the REGC_A component has five initialization outputs, which its constant output originates from the
starting power flow: initial real and reactive injection currents (IP0 and IQ0), initial terminal voltage (v_0), and initial active and reactive power
injections (p_0 and q_0). This method reduces repetitiveness of initialization calculation, being calculated once at the REGCA1 component.</p>
<p>The connection with other components requires a closed loop through terminal voltage variable (V_t), and active and reactive power generation (Pgen and Qgen).</p>
<p>The modelling of such devices is based, mainly, on the following reference:</p>
<ul>
<li><p>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>.</p>
</li>
</ul>
</html>"));
    end PV_SYS_ID;

    package PSSE
      model G1 "Generation unit connected to bus BG1"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        OpenIPSL.Electrical.Machines.PSSE.GENROE gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=4.28,
          D=0,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0,
          Xpq=0.1,
          Tpq0=2)  annotation (Placement(transformation(extent={{32,-20},{72,20}})));
        OpenIPSL.Electrical.Controls.PSSE.ES.SEXS SEXS(T_E=0.1)
          annotation (Placement(transformation(extent={{-10,0},{10,20}})));
        OpenIPSL.Electrical.Controls.PSSE.TG.IEESGO IEESGO
          annotation (Placement(transformation(extent={{-6,-52},{14,-32}})));
        Modelica.Blocks.Sources.Constant non_active_inputs(k=0)
          annotation (Placement(transformation(extent={{-60,-20},{-40,0}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{72,0},{110,0}}, color={0,0,255}));
        connect(SEXS.EFD0, gen.EFD0) annotation (Line(points={{-11,6},{-20,6},{-20,-24},
                {80,-24},{80,-10},{74,-10}}, color={0,0,127}));
        connect(SEXS.ECOMP, gen.ETERM) annotation (Line(points={{-11,10},{-20,10},{-20,
                28},{80,28},{80,-6},{74,-6}}, color={0,0,127}));
        connect(IEESGO.SPEED, gen.SPEED) annotation (Line(points={{-4,-36},{-24,-36},
                {-24,32},{84,32},{84,14},{74,14}}, color={0,0,127}));
        connect(IEESGO.PMECH0, gen.PMECH0) annotation (Line(points={{-4,-48},{-10,-48},
                {-10,-56},{84,-56},{84,10},{74,10}}, color={0,0,127}));
        connect(non_active_inputs.y, SEXS.VOTHSG) annotation (Line(points={{-39,-10},
                {-16,-10},{-16,14},{-11,14}}, color={0,0,127}));
        connect(IEESGO.PMECH, gen.PMECH) annotation (Line(points={{15,-42},{20,-42},{
                20,12},{28,12}}, color={0,0,127}));
        connect(SEXS.EFD, gen.EFD) annotation (Line(points={{11,10},{16,10},{16,-12},
                {28,-12}}, color={0,0,127}));
        connect(gen.XADIFD, SEXS.XADIFD) annotation (Line(points={{74,-18},{78,-18},{
                78,-22},{8,-22},{8,-1}}, color={0,0,127}));
        connect(non_active_inputs.y, SEXS.VUEL)
          annotation (Line(points={{-39,-10},{-4,-10},{-4,-1}}, color={0,0,127}));
        connect(non_active_inputs.y, SEXS.VOEL)
          annotation (Line(points={{-39,-10},{0,-10},{0,-1}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: HYGOV, a hydro-turbine governor from PSSE.</li>
</ul>
</html>"));
      end G1;

      model G2_1INPUT_Pref "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENSAL          gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=4.28,
          D=0,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        OpenIPSL.Electrical.Controls.PSSE.ES.SEXS sEXS(
          T_AT_B=0.2,
          K=50,
          E_MIN=0,
          E_MAX=1.26,
          T_E=0.01,
          T_B=10) annotation (Placement(transformation(extent={{-16,-22},{4,-2}})));
        Modelica.Blocks.Sources.Constant non_active_limits(k=0)
          annotation (Placement(transformation(extent={{80,-60},{60,-40}})));
        Modelica.Blocks.Interfaces.RealInput P_ref
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        Electrical.Controls.PSSE.TG.IEESGO          iEESGO(P_MAX=1.5, P_MIN=0)
          annotation (Placement(transformation(extent={{-20,20},{0,40}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{-72,50},{-52,30}})));
        Modelica.Blocks.Interfaces.RealOutput SPEED1
          "Machine speed deviation from nominal [pu]"
          annotation (Placement(transformation(extent={{100,50},{120,70}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(sEXS.EFD, gen.EFD)
          annotation (Line(points={{5,-12},{34,-12}}, color={0,0,127}));
        connect(sEXS.ECOMP, gen.ETERM) annotation (Line(points={{-17,-12},{-32,-12},{
                -32,-72},{92,-72},{92,-6},{80,-6}}, color={0,0,127}));
        connect(gen.EFD0, sEXS.EFD0) annotation (Line(points={{80,-10},{88,-10},{88,
                -68},{-28,-68},{-28,-16},{-17,-16}}, color={0,0,127}));
        connect(non_active_limits.y, sEXS.VOEL)
          annotation (Line(points={{59,-50},{-6,-50},{-6,-23}}, color={0,0,127}));
        connect(sEXS.VUEL, sEXS.VOEL) annotation (Line(points={{-10,-23},{-10,-32},{
                -6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.XADIFD, sEXS.XADIFD) annotation (Line(points={{80,-18},{84,-18},{
                84,-34},{2,-34},{2,-23}}, color={0,0,127}));
        connect(sEXS.VOTHSG, sEXS.VOEL) annotation (Line(points={{-17,-8},{-22,-8},{
                -22,-32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.SPEED, iEESGO.SPEED) annotation (Line(points={{80,14},{86,14},{
                86,54},{-28,54},{-28,36},{-18,36}}, color={0,0,127}));
        connect(iEESGO.PMECH, gen.PMECH) annotation (Line(points={{1,30},{24,30},{
                24,12},{34,12}}, color={0,0,127}));
        connect(add.u1, P_ref) annotation (Line(points={{-74,34},{-94,34},{-94,0},{
                -120,0}}, color={0,0,127}));
        connect(gen.PMECH0, add.u2) annotation (Line(points={{80,10},{90,10},{90,64},
                {-82,64},{-82,46},{-74,46}}, color={0,0,127}));
        connect(add.y, iEESGO.PMECH0) annotation (Line(points={{-51,40},{-40,40},{
                -40,24},{-18,24}}, color={0,0,127}));
        connect(gen.SPEED, SPEED1) annotation (Line(points={{80,14},{86,14},{86,66},
                {96,66},{96,60},{110,60}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_1INPUT_Pref;

      model G2_for_PID "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        OpenIPSL.Electrical.Machines.PSSE.GENROE gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=4.28,
          D=0,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0,
          Xpq=0.41,
          Tpq0=1)  annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        Modelica.Blocks.Interfaces.RealInput Padd "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,60},{-100,100}})));
        Modelica.Blocks.Interfaces.RealInput EfdAdd
          "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-140,-100},{-100,-60}})));
        Modelica.Blocks.Interfaces.RealOutput PELEC1
                                   "Machine electrical power (machine base)"
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={90,110})));
        Modelica.Blocks.Interfaces.RealOutput ETERM1
                                    "Machine terminal voltage [pu]" annotation (
            Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={90,-110})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(gen.PELEC, PELEC1) annotation (Line(points={{80,6},{92,6},{92,96},{90,
                96},{90,110}}, color={0,0,127}));
        connect(gen.ETERM, ETERM1) annotation (Line(points={{80,-6},{94,-6},{94,-96},
                {90,-96},{90,-110}}, color={0,0,127}));
        connect(Padd, gen.PMECH) annotation (Line(points={{-120,80},{24,80},{24,12},{
                34,12}}, color={0,0,127}));
        connect(EfdAdd, gen.EFD) annotation (Line(points={{-120,-80},{24,-80},{24,-12},
                {34,-12}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_for_PID;

      model G2_no_controls "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        OpenIPSL.Electrical.Machines.PSSE.GENSAL gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=4.28,
          D=0,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        Modelica.Blocks.Interfaces.RealInput Padd "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,4},{-100,44}})));
        Modelica.Blocks.Interfaces.RealInput EfdAdd
          "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-140,-40},{-100,0}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(EfdAdd, gen.EFD) annotation (Line(points={{-120,-20},{24,-20},{24,-12},
                {34,-12}}, color={0,0,127}));
        connect(Padd, gen.PMECH) annotation (Line(points={{-120,24},{24,24},{24,12},{
                34,12}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_no_controls;

      model G2_1INPUT_Pref_NO_TurbGov "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENSAL          gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=4.28,
          D=0,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        OpenIPSL.Electrical.Controls.PSSE.ES.SEXS sEXS(
          T_AT_B=0.2,
          K=50,
          E_MIN=0,
          E_MAX=1.26,
          T_E=0.01,
          T_B=10) annotation (Placement(transformation(extent={{-16,-22},{4,-2}})));
        Modelica.Blocks.Sources.Constant non_active_limits(k=0)
          annotation (Placement(transformation(extent={{80,-60},{60,-40}})));
        Modelica.Blocks.Interfaces.RealInput P_ref
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        Modelica.Blocks.Interfaces.RealOutput SPEED1
          "Machine speed deviation from nominal [pu]"
          annotation (Placement(transformation(extent={{100,50},{120,70}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{-60,20},{-40,40}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(sEXS.EFD, gen.EFD)
          annotation (Line(points={{5,-12},{34,-12}}, color={0,0,127}));
        connect(sEXS.ECOMP, gen.ETERM) annotation (Line(points={{-17,-12},{-32,-12},{
                -32,-72},{92,-72},{92,-6},{80,-6}}, color={0,0,127}));
        connect(gen.EFD0, sEXS.EFD0) annotation (Line(points={{80,-10},{88,-10},{88,
                -68},{-28,-68},{-28,-16},{-17,-16}}, color={0,0,127}));
        connect(non_active_limits.y, sEXS.VOEL)
          annotation (Line(points={{59,-50},{-6,-50},{-6,-23}}, color={0,0,127}));
        connect(sEXS.VUEL, sEXS.VOEL) annotation (Line(points={{-10,-23},{-10,-32},{
                -6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.XADIFD, sEXS.XADIFD) annotation (Line(points={{80,-18},{84,-18},{
                84,-34},{2,-34},{2,-23}}, color={0,0,127}));
        connect(sEXS.VOTHSG, sEXS.VOEL) annotation (Line(points={{-17,-8},{-22,-8},{
                -22,-32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.SPEED, SPEED1) annotation (Line(points={{80,14},{86,14},{86,66},
                {96,66},{96,60},{110,60}}, color={0,0,127}));
        connect(P_ref, add.u2) annotation (Line(points={{-120,0},{-80,0},{-80,24},{
                -62,24}}, color={0,0,127}));
        connect(gen.PMECH0, add.u1) annotation (Line(points={{80,10},{92,10},{92,52},
                {-70,52},{-70,36},{-62,36}}, color={0,0,127}));
        connect(add.y, gen.PMECH) annotation (Line(points={{-39,30},{24,30},{24,12},
                {34,12}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_1INPUT_Pref_NO_TurbGov;

      model G2_2INPUT_Pref_Efdref_NO_TurbGov_NO_Exci
        "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENSAL          gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=2,
          D=0,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        Modelica.Blocks.Interfaces.RealInput P_ref
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,20},{-100,60}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{-72,56},{-52,36}})));
        Modelica.Blocks.Interfaces.RealInput Efd_ref
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,-60},{-100,-20}})));
        Modelica.Blocks.Math.Add add1
          annotation (Placement(transformation(extent={{-72,-36},{-52,-56}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(add.u1, P_ref) annotation (Line(points={{-74,40},{-120,40}},
                          color={0,0,127}));
        connect(gen.PMECH0, add.u2) annotation (Line(points={{80,10},{90,10},{90,64},
                {-82,64},{-82,52},{-74,52}}, color={0,0,127}));
        connect(add.y, gen.PMECH) annotation (Line(points={{-51,46},{24,46},{24,12},
                {34,12}}, color={0,0,127}));
        connect(Efd_ref, add1.u2)
          annotation (Line(points={{-120,-40},{-74,-40}}, color={0,0,127}));
        connect(gen.EFD0, add1.u1) annotation (Line(points={{80,-10},{96,-10},{96,
                -70},{-86,-70},{-86,-52},{-74,-52}}, color={0,0,127}));
        connect(add1.y, gen.EFD) annotation (Line(points={{-51,-46},{24,-46},{24,
                -12},{34,-12}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_2INPUT_Pref_Efdref_NO_TurbGov_NO_Exci;

      model G2_1INPUT_Pref_WITH_TurbGov "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENSAL          gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=4.28,
          D=0,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        OpenIPSL.Electrical.Controls.PSSE.ES.SEXS sEXS(
          T_AT_B=0.2,
          K=50,
          E_MIN=0,
          E_MAX=1.26,
          T_E=0.01,
          T_B=10) annotation (Placement(transformation(extent={{-16,-22},{4,-2}})));
        Modelica.Blocks.Sources.Constant non_active_limits(k=0)
          annotation (Placement(transformation(extent={{80,-60},{60,-40}})));
        Modelica.Blocks.Interfaces.RealInput P_ref
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        Modelica.Blocks.Interfaces.RealOutput SPEED1
          "Machine speed deviation from nominal [pu]"
          annotation (Placement(transformation(extent={{100,50},{120,70}})));
        GASTMPC gASTMPC(T_3=0.01, D_turb=0.1)
          annotation (Placement(transformation(extent={{-18,14},{2,34}})));
        Modelica.Blocks.Interfaces.RealOutput PMECH1
          annotation (Placement(transformation(extent={{100,30},{120,50}})));
        Modelica.Blocks.Interfaces.RealOutput EFD1
                                                  "Excitation Voltage [pu]"
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Modelica.Blocks.Interfaces.RealOutput ETERM1
                                    "Machine terminal voltage [pu]"
          annotation (Placement(transformation(extent={{100,-70},{120,-50}})));
        Modelica.Blocks.Interfaces.RealOutput PELEC1
                                   "Machine electrical power (machine base)"
          annotation (Placement(transformation(extent={{100,12},{120,32}})));
        Modelica.Blocks.Interfaces.RealOutput TF2_out1
          "Connector of Real output signal"
          annotation (Placement(transformation(extent={{100,76},{120,96}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(sEXS.EFD, gen.EFD)
          annotation (Line(points={{5,-12},{34,-12}}, color={0,0,127}));
        connect(sEXS.ECOMP, gen.ETERM) annotation (Line(points={{-17,-12},{-32,-12},{
                -32,-72},{92,-72},{92,-6},{80,-6}}, color={0,0,127}));
        connect(gen.EFD0, sEXS.EFD0) annotation (Line(points={{80,-10},{88,-10},{88,
                -68},{-28,-68},{-28,-16},{-17,-16}}, color={0,0,127}));
        connect(non_active_limits.y, sEXS.VOEL)
          annotation (Line(points={{59,-50},{-6,-50},{-6,-23}}, color={0,0,127}));
        connect(sEXS.VUEL, sEXS.VOEL) annotation (Line(points={{-10,-23},{-10,-32},{
                -6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.XADIFD, sEXS.XADIFD) annotation (Line(points={{80,-18},{84,-18},{
                84,-34},{2,-34},{2,-23}}, color={0,0,127}));
        connect(sEXS.VOTHSG, sEXS.VOEL) annotation (Line(points={{-17,-8},{-22,-8},{
                -22,-32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.SPEED, SPEED1) annotation (Line(points={{80,14},{86,14},{86,66},
                {96,66},{96,60},{110,60}}, color={0,0,127}));
        connect(gASTMPC.SPEED, SPEED1) annotation (Line(points={{-16,30},{-32,30},{
                -32,54},{86,54},{86,66},{96,66},{96,60},{110,60}}, color={0,0,127}));
        connect(gASTMPC.PMECH0, gen.PMECH0) annotation (Line(points={{-16,18},{-28,
                18},{-28,44},{92,44},{92,10},{80,10}}, color={0,0,127}));
        connect(P_ref, gASTMPC.PMECHControllable) annotation (Line(points={{-120,0},
                {-40,0},{-40,8},{-8,8},{-8,12}}, color={0,0,127}));
        connect(gASTMPC.PMECH, gen.PMECH) annotation (Line(points={{3,24},{22,24},{
                22,12},{34,12}}, color={0,0,127}));
        connect(gASTMPC.PMECH, PMECH1) annotation (Line(points={{3,24},{52,24},{52,
                40},{110,40}}, color={0,0,127}));
        connect(sEXS.EFD, EFD1) annotation (Line(points={{5,-12},{26,-12},{26,-36},
                {94,-36},{94,-30},{110,-30}}, color={0,0,127}));
        connect(gen.ETERM, ETERM1) annotation (Line(points={{80,-6},{92,-6},{92,-60},
                {110,-60}}, color={0,0,127}));
        connect(gen.PELEC, PELEC1) annotation (Line(points={{80,6},{94,6},{94,22},{
                110,22}}, color={0,0,127}));
        connect(gASTMPC.TF2_out, TF2_out1) annotation (Line(points={{1,35},{16,35},
                {16,86},{110,86}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_1INPUT_Pref_WITH_TurbGov;

      model G2_2INPUTS "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENSAL          gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=4.28,
          D=0,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        SEXSMPC                                   sEXSMPC(
          T_AT_B=0.2,
          K=50,
          E_MIN=0,
          E_MAX=10,
          T_E=0.01,
          T_B=10) annotation (Placement(transformation(extent={{-16,-22},{4,-2}})));
        Modelica.Blocks.Sources.Constant non_active_limits(k=0)
          annotation (Placement(transformation(extent={{80,-60},{60,-40}})));
        Modelica.Blocks.Interfaces.RealInput P_ref
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,20},{-100,60}})));
        Modelica.Blocks.Interfaces.RealOutput SPEED1
          "Machine speed deviation from nominal [pu]"
          annotation (Placement(transformation(extent={{100,50},{120,70}})));
        GASTMPC gASTMPC(T_3=0.01, D_turb=0.1)
          annotation (Placement(transformation(extent={{-18,14},{2,34}})));
        Modelica.Blocks.Interfaces.RealOutput PMECH1
          annotation (Placement(transformation(extent={{100,30},{120,50}})));
        Modelica.Blocks.Interfaces.RealOutput EFD1
                                                  "Excitation Voltage [pu]"
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Modelica.Blocks.Interfaces.RealOutput ETERM1
                                    "Machine terminal voltage [pu]"
          annotation (Placement(transformation(extent={{100,-70},{120,-50}})));
        Modelica.Blocks.Interfaces.RealOutput PELEC1
                                   "Machine electrical power (machine base)"
          annotation (Placement(transformation(extent={{100,12},{120,32}})));
        Modelica.Blocks.Interfaces.RealOutput TF2_out1
          "Connector of Real output signal"
          annotation (Placement(transformation(extent={{100,76},{120,96}})));
        Modelica.Blocks.Interfaces.RealInput Efd_ref
          "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-140,-40},{-100,0}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(sEXSMPC.EFD, gen.EFD)
          annotation (Line(points={{5,-12},{34,-12}}, color={0,0,127}));
        connect(sEXSMPC.ECOMP, gen.ETERM) annotation (Line(points={{-17,-12},{-32,-12},
                {-32,-72},{92,-72},{92,-6},{80,-6}}, color={0,0,127}));
        connect(gen.EFD0, sEXSMPC.EFD0) annotation (Line(points={{80,-10},{88,-10},
                {88,-68},{-28,-68},{-28,-16},{-17,-16}}, color={0,0,127}));
        connect(non_active_limits.y, sEXSMPC.VOEL)
          annotation (Line(points={{59,-50},{-6,-50},{-6,-23}}, color={0,0,127}));
        connect(sEXSMPC.VUEL, sEXSMPC.VOEL) annotation (Line(points={{-10,-23},{-10,
                -32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.XADIFD, sEXSMPC.XADIFD) annotation (Line(points={{80,-18},{84,-18},
                {84,-34},{2,-34},{2,-23}}, color={0,0,127}));
        connect(sEXSMPC.VOTHSG, sEXSMPC.VOEL) annotation (Line(points={{-17,-8},{-22,
                -8},{-22,-32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.SPEED, SPEED1) annotation (Line(points={{80,14},{86,14},{86,66},
                {96,66},{96,60},{110,60}}, color={0,0,127}));
        connect(gASTMPC.SPEED, SPEED1) annotation (Line(points={{-16,30},{-32,30},{
                -32,54},{86,54},{86,66},{96,66},{96,60},{110,60}}, color={0,0,127}));
        connect(gASTMPC.PMECH0, gen.PMECH0) annotation (Line(points={{-16,18},{-28,
                18},{-28,44},{92,44},{92,10},{80,10}}, color={0,0,127}));
        connect(P_ref, gASTMPC.PMECHControllable) annotation (Line(points={{-120,40},
                {-34,40},{-34,8},{-8,8},{-8,12}},color={0,0,127}));
        connect(gASTMPC.PMECH, gen.PMECH) annotation (Line(points={{3,24},{22,24},{
                22,12},{34,12}}, color={0,0,127}));
        connect(gASTMPC.PMECH, PMECH1) annotation (Line(points={{3,24},{52,24},{52,
                40},{110,40}}, color={0,0,127}));
        connect(sEXSMPC.EFD, EFD1) annotation (Line(points={{5,-12},{26,-12},{26,-36},
                {94,-36},{94,-30},{110,-30}}, color={0,0,127}));
        connect(gen.ETERM, ETERM1) annotation (Line(points={{80,-6},{92,-6},{92,-60},
                {110,-60}}, color={0,0,127}));
        connect(gen.PELEC, PELEC1) annotation (Line(points={{80,6},{94,6},{94,22},{
                110,22}}, color={0,0,127}));
        connect(gASTMPC.TF2_out, TF2_out1) annotation (Line(points={{1,35},{16,35},
                {16,86},{110,86}}, color={0,0,127}));
        connect(sEXSMPC.EFd_input, Efd_ref) annotation (Line(points={{-17,-4},{-94,
                -4},{-94,-20},{-120,-20}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_2INPUTS;

      model G2_3INPUTS "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENSAL          gen(
          M_b=100000000,
          Tpd0=5,
          Tppd0=0.07,
          Tppq0=0.09,
          H=4.28,
          D=0.1,
          Xd=1.84,
          Xq=1.75,
          Xpd=0.41,
          Xppd=0.2,
          Xl=0.12,
          S10=0.11,
          S12=0.39,
          Xppq=0.2,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        SEXSMPC                                   sEXSMPC(
          T_AT_B=0.2,
          K=50,
          E_MIN=0,
          E_MAX=5,
          T_E=0.01,
          T_B=10) annotation (Placement(transformation(extent={{-16,-22},{4,-2}})));
        Modelica.Blocks.Sources.Constant non_active_limits(k=0)
          annotation (Placement(transformation(extent={{80,-60},{60,-40}})));
        Modelica.Blocks.Interfaces.RealInput P_ref1
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
        GASTMPC gASTMPC(T_3=0.01,
          V_MAX=1,                D_turb=0.1)
          annotation (Placement(transformation(extent={{-18,14},{2,34}})));
        Modelica.Blocks.Interfaces.RealInput Efd_ref
          "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(sEXSMPC.EFD, gen.EFD)
          annotation (Line(points={{5,-12},{34,-12}}, color={0,0,127}));
        connect(sEXSMPC.ECOMP, gen.ETERM) annotation (Line(points={{-17,-12},{-32,-12},
                {-32,-72},{92,-72},{92,-6},{80,-6}}, color={0,0,127}));
        connect(gen.EFD0, sEXSMPC.EFD0) annotation (Line(points={{80,-10},{88,-10},
                {88,-68},{-28,-68},{-28,-16},{-17,-16}}, color={0,0,127}));
        connect(non_active_limits.y, sEXSMPC.VOEL)
          annotation (Line(points={{59,-50},{-6,-50},{-6,-23}}, color={0,0,127}));
        connect(sEXSMPC.VUEL, sEXSMPC.VOEL) annotation (Line(points={{-10,-23},{-10,
                -32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.XADIFD, sEXSMPC.XADIFD) annotation (Line(points={{80,-18},{84,-18},
                {84,-34},{2,-34},{2,-23}}, color={0,0,127}));
        connect(sEXSMPC.VOTHSG, sEXSMPC.VOEL) annotation (Line(points={{-17,-8},{-22,
                -8},{-22,-32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gASTMPC.PMECH0, gen.PMECH0) annotation (Line(points={{-16,18},{-28,
                18},{-28,44},{92,44},{92,10},{80,10}}, color={0,0,127}));
        connect(gASTMPC.PMECH, gen.PMECH) annotation (Line(points={{3,24},{22,24},{
                22,12},{34,12}}, color={0,0,127}));
        connect(sEXSMPC.EFd_input, Efd_ref) annotation (Line(points={{-17,-4},{-94,
                -4},{-94,-60},{-120,-60}}, color={0,0,127}));
        connect(P_ref1, gASTMPC.PMECHControllable) annotation (Line(points={{-120,
                60},{-60,60},{-60,8},{-8,8},{-8,12}}, color={0,0,127}));
        connect(gen.SPEED, gASTMPC.SPEED) annotation (Line(points={{80,14},{84,14},
                {84,40},{-24,40},{-24,30},{-16,30}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_3INPUTS;

      model G2_16MVA "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENSAL          gen(
          M_b=16667000,
          Tpd0=4.822,
          Tppd0=0.023,
          Tppq0=0.065,
          H=8.75,
          D=2,
          Xd=1.897,
          Xq=1.78,
          Xpd=0.23,
          Xppd=0.156,
          Xl=0.123,
          S10=0.12,
          S12=0.4,
          Xppq=0.156,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        SEXSMPC                                   sEXSMPC(
          T_AT_B=0,
          K=50,
          E_MIN=0,
          E_MAX=5,
          T_E=0.01,
          T_B=10) annotation (Placement(transformation(extent={{-16,-22},{4,-2}})));
        Modelica.Blocks.Sources.Constant non_active_limits(k=0)
          annotation (Placement(transformation(extent={{80,-60},{60,-40}})));
        Modelica.Blocks.Interfaces.RealInput P_ref1
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
        GASTMPC gASTMPC(
          R=0.05,
          T_3=1,        V_MAX=1,
          D_turb=1)
          annotation (Placement(transformation(extent={{-18,14},{2,34}})));
        Modelica.Blocks.Interfaces.RealInput Efd_ref
          "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(sEXSMPC.EFD, gen.EFD)
          annotation (Line(points={{5,-12},{34,-12}}, color={0,0,127}));
        connect(sEXSMPC.ECOMP, gen.ETERM) annotation (Line(points={{-17,-12},{-32,-12},
                {-32,-72},{92,-72},{92,-6},{80,-6}}, color={0,0,127}));
        connect(gen.EFD0, sEXSMPC.EFD0) annotation (Line(points={{80,-10},{88,-10},
                {88,-68},{-28,-68},{-28,-16},{-17,-16}}, color={0,0,127}));
        connect(non_active_limits.y, sEXSMPC.VOEL)
          annotation (Line(points={{59,-50},{-6,-50},{-6,-23}}, color={0,0,127}));
        connect(sEXSMPC.VUEL, sEXSMPC.VOEL) annotation (Line(points={{-10,-23},{-10,
                -32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.XADIFD, sEXSMPC.XADIFD) annotation (Line(points={{80,-18},{84,-18},
                {84,-34},{2,-34},{2,-23}}, color={0,0,127}));
        connect(sEXSMPC.VOTHSG, sEXSMPC.VOEL) annotation (Line(points={{-17,-8},{-22,
                -8},{-22,-32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gASTMPC.PMECH0, gen.PMECH0) annotation (Line(points={{-16,18},{-28,
                18},{-28,44},{92,44},{92,10},{80,10}}, color={0,0,127}));
        connect(gASTMPC.PMECH, gen.PMECH) annotation (Line(points={{3,24},{22,24},{
                22,12},{34,12}}, color={0,0,127}));
        connect(sEXSMPC.EFd_input, Efd_ref) annotation (Line(points={{-17,-4},{-94,
                -4},{-94,-60},{-120,-60}}, color={0,0,127}));
        connect(P_ref1, gASTMPC.PMECHControllable) annotation (Line(points={{-120,
                60},{-60,60},{-60,8},{-8,8},{-8,12}}, color={0,0,127}));
        connect(gen.SPEED, gASTMPC.SPEED) annotation (Line(points={{80,14},{84,14},
                {84,40},{-24,40},{-24,30},{-16,30}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_16MVA;

      model G2_GENROU "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENROU          gen(
          M_b=16667000,
          Tpd0=4.822,
          Tppd0=0.023,
          Tppq0=0.065,
          H=8.75,
          D=2,
          Xd=1.897,
          Xq=1.78,
          Xpd=0.23,
          Xppd=0.156,
          Xl=0.123,
          S10=0.12,
          S12=0.4,
          Xppq=0.156,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0,
          Xpq=0.23,
          Tpq0=4.822)
                   annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        SEXSMPC                                   sEXSMPC(
          T_AT_B=0.2,
          K=50,
          E_MIN=0,
          E_MAX=5,
          T_E=0.01,
          T_B=10) annotation (Placement(transformation(extent={{-16,-22},{4,-2}})));
        Modelica.Blocks.Sources.Constant non_active_limits(k=0)
          annotation (Placement(transformation(extent={{80,-60},{60,-40}})));
        Modelica.Blocks.Interfaces.RealInput P_ref1
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
        GASTMPC gASTMPC(V_MAX=1,  D_turb=0.1)
          annotation (Placement(transformation(extent={{-18,14},{2,34}})));
        Modelica.Blocks.Interfaces.RealInput Efd_ref
          "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(sEXSMPC.EFD, gen.EFD)
          annotation (Line(points={{5,-12},{34,-12}}, color={0,0,127}));
        connect(sEXSMPC.ECOMP, gen.ETERM) annotation (Line(points={{-17,-12},{-32,-12},
                {-32,-72},{92,-72},{92,-6},{80,-6}}, color={0,0,127}));
        connect(gen.EFD0, sEXSMPC.EFD0) annotation (Line(points={{80,-10},{88,-10},
                {88,-68},{-28,-68},{-28,-16},{-17,-16}}, color={0,0,127}));
        connect(non_active_limits.y, sEXSMPC.VOEL)
          annotation (Line(points={{59,-50},{-6,-50},{-6,-23}}, color={0,0,127}));
        connect(sEXSMPC.VUEL, sEXSMPC.VOEL) annotation (Line(points={{-10,-23},{-10,
                -32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.XADIFD, sEXSMPC.XADIFD) annotation (Line(points={{80,-18},{84,-18},
                {84,-34},{2,-34},{2,-23}}, color={0,0,127}));
        connect(sEXSMPC.VOTHSG, sEXSMPC.VOEL) annotation (Line(points={{-17,-8},{-22,
                -8},{-22,-32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gASTMPC.PMECH0, gen.PMECH0) annotation (Line(points={{-16,18},{-28,
                18},{-28,44},{92,44},{92,10},{80,10}}, color={0,0,127}));
        connect(gASTMPC.PMECH, gen.PMECH) annotation (Line(points={{3,24},{22,24},{
                22,12},{34,12}}, color={0,0,127}));
        connect(sEXSMPC.EFd_input, Efd_ref) annotation (Line(points={{-17,-4},{-94,
                -4},{-94,-60},{-120,-60}}, color={0,0,127}));
        connect(P_ref1, gASTMPC.PMECHControllable) annotation (Line(points={{-120,
                60},{-60,60},{-60,8},{-8,8},{-8,12}}, color={0,0,127}));
        connect(gen.SPEED, gASTMPC.SPEED) annotation (Line(points={{80,14},{84,14},
                {84,40},{-24,40},{-24,30},{-16,30}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_GENROU;

      model G2_16MVA_THERMAL "Generation unit connected to bus B5"
        outer OpenIPSL.Electrical.SystemBase SysData;
        extends OpenIPSL.Electrical.Essentials.pfComponent;

        OpenIPSL.Interfaces.PwPin conn annotation (Placement(transformation(extent={{
                  100,-10},{120,10}}), iconTransformation(extent={{100,-10},{120,10}})));
        Electrical.Machines.PSSE.GENSAL          gen(
          M_b=16667000,
          Tpd0=4.822,
          Tppd0=0.023,
          Tppq0=0.065,
          H=8.75,
          D=2,
          Xd=1.897,
          Xq=1.78,
          Xpd=0.23,
          Xppd=0.156,
          Xl=0.123,
          S10=0.12,
          S12=0.4,
          Xppq=0.156,
          R_a=0,
          V_b=V_b,
          v_0=v_0,
          angle_0=angle_0,
          P_0=P_0,
          Q_0=Q_0) annotation (Placement(transformation(extent={{38,-20},{78,20}})));
        SEXSMPC                                   sEXSMPC(
          T_AT_B=0.2,
          K=50,
          E_MIN=0,
          E_MAX=5,
          T_E=0.01,
          T_B=10) annotation (Placement(transformation(extent={{-16,-22},{4,-2}})));
        Modelica.Blocks.Sources.Constant non_active_limits(k=0)
          annotation (Placement(transformation(extent={{80,-60},{60,-40}})));
        Modelica.Blocks.Interfaces.RealInput P_ref1
          "Connector of Real input signal 2"
          annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
        GASTMPC gASTMPC(V_MAX=1,  D_turb=0.1)
          annotation (Placement(transformation(extent={{-18,14},{2,34}})));
        Modelica.Blocks.Interfaces.RealInput Efd_ref
          "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
      equation
        connect(gen.p, conn)
          annotation (Line(points={{78,0},{110,0}}, color={0,0,255}));
        connect(sEXSMPC.EFD, gen.EFD)
          annotation (Line(points={{5,-12},{34,-12}}, color={0,0,127}));
        connect(sEXSMPC.ECOMP, gen.ETERM) annotation (Line(points={{-17,-12},{-32,-12},
                {-32,-72},{92,-72},{92,-6},{80,-6}}, color={0,0,127}));
        connect(gen.EFD0, sEXSMPC.EFD0) annotation (Line(points={{80,-10},{88,-10},
                {88,-68},{-28,-68},{-28,-16},{-17,-16}}, color={0,0,127}));
        connect(non_active_limits.y, sEXSMPC.VOEL)
          annotation (Line(points={{59,-50},{-6,-50},{-6,-23}}, color={0,0,127}));
        connect(sEXSMPC.VUEL, sEXSMPC.VOEL) annotation (Line(points={{-10,-23},{-10,
                -32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gen.XADIFD, sEXSMPC.XADIFD) annotation (Line(points={{80,-18},{84,-18},
                {84,-34},{2,-34},{2,-23}}, color={0,0,127}));
        connect(sEXSMPC.VOTHSG, sEXSMPC.VOEL) annotation (Line(points={{-17,-8},{-22,
                -8},{-22,-32},{-6,-32},{-6,-23}}, color={0,0,127}));
        connect(gASTMPC.PMECH0, gen.PMECH0) annotation (Line(points={{-16,18},{-28,
                18},{-28,44},{92,44},{92,10},{80,10}}, color={0,0,127}));
        connect(gASTMPC.PMECH, gen.PMECH) annotation (Line(points={{3,24},{22,24},{
                22,12},{34,12}}, color={0,0,127}));
        connect(sEXSMPC.EFd_input, Efd_ref) annotation (Line(points={{-17,-4},{-94,
                -4},{-94,-60},{-120,-60}}, color={0,0,127}));
        connect(P_ref1, gASTMPC.PMECHControllable) annotation (Line(points={{-120,
                60},{-60,60},{-60,8},{-8,8},{-8,12}}, color={0,0,127}));
        connect(gen.SPEED, gASTMPC.SPEED) annotation (Line(points={{80,14},{84,14},
                {84,40},{-24,40},{-24,30},{-16,30}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},
                  {100,100}}), graphics={Ellipse(
                extent={{-100,100},{100,-100}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid),Line(
                points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                color={0,0,0},
                smooth=Smooth.Bezier),Text(
                extent={{-52,-18},{56,-66}},
                lineColor={0,0,0},
                fillColor={255,255,255},
                fillPattern=FillPattern.Solid,
                textString="%name")}),
          Documentation(info="<html>
<p>24kV/100MVA generation unit connected to bus BG1, and composed of the following component models:</p>
<ul>
<li><strong>Machine</strong>: GENSAL, a salient pole synchronous machine from PSSE.</li>
<li><strong>Exciter</strong>: SEXS, a simplified excitation system from PSSE.</li>
<li><strong>Turbine/Governor</strong>: IEESGO, a standard turbine/governor from PSSE.</li>
</ul>
<p>This generation unit is supposed to be disconnected in all experiments and, then, to be resynchronized to the whole system.</p>
</html>"));
      end G2_16MVA_THERMAL;

      package Solar_Units
        model SolarMPCLocalVControl
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0,
            Lvplsw=false)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECB1_Local_V_Control                                 rEECB1_Local_V_Control(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=false,
            Trv=0.02,
            Kqv=0.01,
            Tp=0.1,
            Vmax=1.05,
            Vmin=0.95,
            Kqp=1,
            Kvp=1,
            Kvi=1,
            dPmax=999,
            dPmin=-999,
            Pmin=0.000001,
            Imax=1.2)
                   annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput VINPUT "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
          parameter Modelica.Units.SI.Voltage V_base = 480;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Sources.Ramp ramp(
            height=-0.005,
            duration=10,
            startTime=15)
                         annotation (Placement(transformation(extent={{-80,-60},
                    {-60,-40}})));
          Modelica.Blocks.Math.Add PBUNDA annotation (Placement(transformation(
                  extent={{-50,-66},{-30,-46}})));
        equation
          connect(rEECB1_Local_V_Control.Iqcmd, rEGCA1_1.Iqcmd) annotation (Line(points={{4.33333,
                  5.66667},{11.4524,5.66667},{11.4524,5.71429},{18.5714,5.71429}},
                color={0,0,127}));
          connect(rEECB1_Local_V_Control.Ipcmd, rEGCA1_1.Ipcmd) annotation (Line(points={{4.33333,
                  -5.66667},{11.4524,-5.66667},{11.4524,-5.71429},{18.5714,
                  -5.71429}},
                color={0,0,127}));
          connect(rEECB1_Local_V_Control.iq0, rEGCA1_1.IQ0) annotation (Line(points={{2,
                  -10.6667},{2,-18},{22,-18},{22,-10},{21.4286,-10},{21.4286,
                  -10.7143}},
                color={0,0,127}));
          connect(rEECB1_Local_V_Control.ip0, rEGCA1_1.IP0) annotation (Line(points={{-2,
                  -10.6667},{-2,-20},{26,-20},{26,-10.7143},{25.7143,-10.7143}}, color={
                  0,0,127}));
          connect(rEECB1_Local_V_Control.v0, rEGCA1_1.V_0) annotation (Line(points={{-6,
                  -10.6667},{-6,-22},{30,-22},{30,-10.7143}}, color={0,0,127}));
          connect(rEECB1_Local_V_Control.q0, rEGCA1_1.q_0) annotation (Line(points={{-10,
                  -10.6667},{-10,-26},{34,-26},{34,-10.7143},{34.2857,-10.7143}}, color
                ={0,0,127}));
          connect(rEECB1_Local_V_Control.p0, rEGCA1_1.p_0) annotation (Line(points={{-14,
                  -10.6667},{-14,-24},{38,-24},{38,-10.7143},{38.5714,-10.7143}}, color
                ={0,0,127}));
          connect(rEGCA1_1.V_t, rEECB1_Local_V_Control.Vt) annotation (Line(points={{24.2857,
                  10.7143},{24.2857,16},{-28,16},{-28,5.33333},{-16.6667,
                  5.33333}},
                color={0,0,127}));
          connect(rEGCA1_1.Pgen, rEECB1_Local_V_Control.Pe) annotation (Line(points={{30,
                  10.7143},{30,20},{-22,20},{-22,2.66667},{-16.6667,2.66667}}, color={0,
                  0,127}));
          connect(rEGCA1_1.Qgen, rEECB1_Local_V_Control.Qgen) annotation (Line(points={{35.7143,
                  10.7143},{35.7143,24},{-20,24},{-20,0},{-16.6667,0}},         color={0,
                  0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(rEGCA1_1.q_0, rEECB1_Local_V_Control.Qext) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-32},{-22,-32},{-22,-2.66667},{-16.6667,
                  -2.66667}},
                color={0,0,127}));
          connect(VINPUT, rEECB1_Local_V_Control.Vref_input) annotation (Line(points={{-120,0},
                  {-42,0},{-42,8.66667},{-16.6667,8.66667}},    color={0,0,127}));
          connect(ramp.y, PBUNDA.u1)
            annotation (Line(points={{-59,-50},{-52,-50}}, color={0,0,127}));
          connect(PBUNDA.u2, rEGCA1_1.p_0) annotation (Line(points={{-52,-62},{
                  -56,-62},{-56,-74},{38.5714,-74},{38.5714,-10.7143}}, color={
                  0,0,127}));
          connect(PBUNDA.y, rEECB1_Local_V_Control.Pref) annotation (Line(
                points={{-29,-56},{-20,-56},{-20,-5.33333},{-16.6667,-5.33333}},
                color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={255,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end SolarMPCLocalVControl;

        model SolarMPCLocalQControl
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECB_Constant_Q_Control                               rEECB_Constant_Q_Control(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=true,
            Trv=0.02,
            Kqv=0.01,
            Tp=0.1,
            Kqp=1,
            Kvp=1,
            Pmin=0.01,
            Imax=1.2)
                   annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput QINPUT "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
          parameter Modelica.Units.SI.Voltage V_base = 480;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Math.Add add1
            annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        equation
          connect(rEECB_Constant_Q_Control.Iqcmd, rEGCA1_1.Iqcmd) annotation (Line(
                points={{4.33333,5.66667},{11.4524,5.66667},{11.4524,5.71429},{
                  18.5714,5.71429}},
                color={0,0,127}));
          connect(rEECB_Constant_Q_Control.Ipcmd, rEGCA1_1.Ipcmd) annotation (Line(
                points={{4.33333,-5.66667},{11.4524,-5.66667},{11.4524,-5.71429},
                  {18.5714,-5.71429}},
                              color={0,0,127}));
          connect(rEECB_Constant_Q_Control.iq0, rEGCA1_1.IQ0) annotation (Line(points={{2,
                  -10.6667},{2,-18},{22,-18},{22,-10},{21.4286,-10},{21.4286,
                  -10.7143}},
                color={0,0,127}));
          connect(rEECB_Constant_Q_Control.ip0, rEGCA1_1.IP0) annotation (Line(points={{-2,
                  -10.6667},{-2,-20},{26,-20},{26,-10.7143},{25.7143,-10.7143}},
                color={0,0,127}));
          connect(rEECB_Constant_Q_Control.v0, rEGCA1_1.V_0) annotation (Line(points={{-6,
                  -10.6667},{-6,-22},{30,-22},{30,-10.7143}}, color={0,0,127}));
          connect(rEECB_Constant_Q_Control.q0, rEGCA1_1.q_0) annotation (Line(points={{-10,
                  -10.6667},{-10,-26},{34,-26},{34,-10.7143},{34.2857,-10.7143}}, color
                ={0,0,127}));
          connect(rEECB_Constant_Q_Control.p0, rEGCA1_1.p_0) annotation (Line(points={{-14,
                  -10.6667},{-14,-24},{38,-24},{38,-10.7143},{38.5714,-10.7143}}, color
                ={0,0,127}));
          connect(rEGCA1_1.V_t, rEECB_Constant_Q_Control.Vt) annotation (Line(points={{24.2857,
                  10.7143},{24.2857,16},{-28,16},{-28,5.33333},{-16.6667,
                  5.33333}},
                color={0,0,127}));
          connect(rEGCA1_1.Pgen, rEECB_Constant_Q_Control.Pe) annotation (Line(points={{30,
                  10.7143},{30,20},{-22,20},{-22,2.66667},{-16.6667,2.66667}},    color
                ={0,0,127}));
          connect(rEGCA1_1.Qgen, rEECB_Constant_Q_Control.Qgen) annotation (Line(points={{35.7143,
                  10.7143},{35.7143,24},{-20,24},{-20,0},{-16.6667,0}},          color={
                  0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(rEECB_Constant_Q_Control.Pref, rEGCA1_1.p_0) annotation (Line(points={{
                  -16.6667,-5.33333},{-20,-5.33333},{-20,-38},{38.5714,-38},{
                  38.5714,-10.7143}},
                color={0,0,127}));
          connect(QINPUT, add1.u1)
            annotation (Line(points={{-120,0},{-82,0}}, color={0,0,127}));
          connect(rEGCA1_1.q_0, add1.u2) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-52},{-90,-52},{-90,-12},{-82,-12}},
                                                       color={0,0,127}));
          connect(add1.y, rEECB_Constant_Q_Control.Qext) annotation (Line(points={{-59,-6},
                  {-22,-6},{-22,-2.66667},{-16.6667,-2.66667}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={255,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end SolarMPCLocalQControl;

        model SolarMPCLocalVQControl
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECB1_Local_V_Q_Control_PI EC(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=true,
            Trv=0.02,
            Kqv=0.01,
            Tp=0.05,
            Kqp=1,
            Kqi=10,
            Kvp=1,
            Kvi=10,
            Kpp=1,
            Kpi=20,
            Pmin=0.001,
            Imax=1.3)
            annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput QINPUT
            "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
          parameter Modelica.Units.SI.Voltage V_base = 480;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Math.Add add1
            annotation (Placement(transformation(extent={{-54,-12},{-34,8}})));
        equation
          connect(EC.Iqcmd, rEGCA1_1.Iqcmd) annotation (Line(points={{4.33333,
                  5.66667},{11.4524,5.66667},{11.4524,5.71429},{18.5714,5.71429}},
                color={0,0,127}));
          connect(EC.Ipcmd, rEGCA1_1.Ipcmd) annotation (Line(points={{4.33333,
                  -5.66667},{11.4524,-5.66667},{11.4524,-5.71429},{18.5714,
                  -5.71429}}, color={0,0,127}));
          connect(EC.iq0, rEGCA1_1.IQ0) annotation (Line(points={{2,-10.6667},{
                  2,-18},{22,-18},{22,-10},{21.4286,-10},{21.4286,-10.7143}},
                color={0,0,127}));
          connect(EC.ip0, rEGCA1_1.IP0) annotation (Line(points={{-2,-10.6667},
                  {-2,-20},{26,-20},{26,-10.7143},{25.7143,-10.7143}}, color={0,
                  0,127}));
          connect(EC.v0, rEGCA1_1.V_0) annotation (Line(points={{-6,-10.6667},{
                  -6,-22},{30,-22},{30,-10.7143}}, color={0,0,127}));
          connect(EC.q0, rEGCA1_1.q_0) annotation (Line(points={{-10,-10.6667},
                  {-10,-26},{34,-26},{34,-10.7143},{34.2857,-10.7143}}, color={
                  0,0,127}));
          connect(EC.p0, rEGCA1_1.p_0) annotation (Line(points={{-14,-10.6667},
                  {-14,-24},{38,-24},{38,-10.7143},{38.5714,-10.7143}}, color={
                  0,0,127}));
          connect(rEGCA1_1.V_t, EC.Vt) annotation (Line(points={{24.2857,
                  10.7143},{24.2857,16},{-28,16},{-28,5.33333},{-16.6667,
                  5.33333}}, color={0,0,127}));
          connect(rEGCA1_1.Pgen, EC.Pe) annotation (Line(points={{30,10.7143},{
                  30,20},{-22,20},{-22,2.66667},{-16.6667,2.66667}}, color={0,0,
                  127}));
          connect(rEGCA1_1.Qgen, EC.Qgen) annotation (Line(points={{35.7143,
                  10.7143},{35.7143,24},{-20,24},{-20,0},{-16.6667,0}}, color={
                  0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(QINPUT, add1.u1)
            annotation (Line(points={{-120,0},{-66,0},{-66,4},{-56,4}},
                                                        color={0,0,127}));
          connect(rEGCA1_1.q_0, add1.u2) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-46},{-56,-46},{-56,-8}},
                                                       color={0,0,127}));
          connect(add1.y, EC.Qext) annotation (Line(points={{-33,-2},{-24.8333,
                  -2},{-24.8333,-2.66667},{-16.6667,-2.66667}}, color={0,0,127}));
          connect(EC.Pref, rEGCA1_1.p_0) annotation (Line(points={{-16.6667,
                  -5.33333},{-22,-5.33333},{-22,-34},{38.5714,-34},{38.5714,
                  -10.7143}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={255,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end SolarMPCLocalVQControl;

        model SolarMPCLocalVQControl_NOCONTROL
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECB1_Local_V_Q_Control                               rEECB1_Local_V_Q_Control(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=true,
            Trv=0.02,
            Kqv=0.01,
            Tp=0.1,
            Kqp=1,
            Kqi=1,
            Kvp=1,
            Kvi=1,
            Pmin=0.001,
            Imax=1.2)
                   annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          parameter Modelica.Units.SI.Voltage V_base = 480;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Math.Add add1
            annotation (Placement(transformation(extent={{-64,-14},{-44,6}})));
          Modelica.Blocks.Interfaces.RealInput u1
            "Connector of Real input signal 1" annotation (Placement(
                transformation(extent={{-140,-20},{-100,20}})));
        equation
          connect(rEECB1_Local_V_Q_Control.Iqcmd, rEGCA1_1.Iqcmd) annotation (Line(
                points={{4.33333,5.66667},{11.4524,5.66667},{11.4524,5.71429},{
                  18.5714,5.71429}},
                color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control.Ipcmd, rEGCA1_1.Ipcmd) annotation (Line(
                points={{4.33333,-5.66667},{11.4524,-5.66667},{11.4524,-5.71429},
                  {18.5714,-5.71429}},
                              color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control.iq0, rEGCA1_1.IQ0) annotation (Line(points={{2,
                  -10.6667},{2,-18},{22,-18},{22,-10},{21.4286,-10},{21.4286,
                  -10.7143}},
                color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control.ip0, rEGCA1_1.IP0) annotation (Line(points={{-2,
                  -10.6667},{-2,-20},{26,-20},{26,-10.7143},{25.7143,-10.7143}},
                color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control.v0, rEGCA1_1.V_0) annotation (Line(points={{-6,
                  -10.6667},{-6,-22},{30,-22},{30,-10.7143}}, color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control.q0, rEGCA1_1.q_0) annotation (Line(points={{-10,
                  -10.6667},{-10,-26},{34,-26},{34,-10.7143},{34.2857,-10.7143}}, color
                ={0,0,127}));
          connect(rEECB1_Local_V_Q_Control.p0, rEGCA1_1.p_0) annotation (Line(points={{-14,
                  -10.6667},{-14,-24},{38,-24},{38,-10.7143},{38.5714,-10.7143}}, color
                ={0,0,127}));
          connect(rEGCA1_1.V_t,rEECB1_Local_V_Q_Control. Vt) annotation (Line(points={{24.2857,
                  10.7143},{24.2857,16},{-28,16},{-28,5.33333},{-16.6667,
                  5.33333}},
                color={0,0,127}));
          connect(rEGCA1_1.Pgen,rEECB1_Local_V_Q_Control. Pe) annotation (Line(points={{30,
                  10.7143},{30,20},{-22,20},{-22,2.66667},{-16.6667,2.66667}},    color
                ={0,0,127}));
          connect(rEGCA1_1.Qgen,rEECB1_Local_V_Q_Control. Qgen) annotation (Line(points={{35.7143,
                  10.7143},{35.7143,24},{-20,24},{-20,0},{-16.6667,0}},          color={
                  0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(rEGCA1_1.q_0, add1.u2) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-32},{-78,-32},{-78,-10},{-66,-10}}, color
                ={0,0,127}));
          connect(add1.y, rEECB1_Local_V_Q_Control.Qext) annotation (Line(
                points={{-43,-4},{-43,-2.66667},{-16.6667,-2.66667}}, color={0,
                  0,127}));
          connect(add1.u1, u1) annotation (Line(points={{-66,2},{-96,2},{-96,0},
                  {-120,0}}, color={0,0,127}));
          connect(rEGCA1_1.p_0, rEECB1_Local_V_Q_Control.Pref) annotation (Line(
                points={{38.5714,-10.7143},{38.5714,-42},{-24,-42},{-24,
                  -5.33333},{-16.6667,-5.33333}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={255,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end SolarMPCLocalVQControl_NOCONTROL;

        model SolarMPCLocalVQControl_PYTHON
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECB1_Local_V_Q_Control_PI rEECB1_Local_V_Q_Control_PI_PYTHON(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=true,
            Trv=0.02,
            Kqv=0.01,
            Tp=0.05,
            Kqp=1,
            Kqi=1,
            Kvp=1,
            Kvi=1,
            Kpp=1,
            Kpi=1,
            Pmin=0.001,
            Imax=1.3)
            annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput QINPUT "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
          parameter Modelica.Units.SI.Voltage V_base = 480;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Math.Add add1
            annotation (Placement(transformation(extent={{-54,-12},{-34,8}})));
        equation
          connect(rEECB1_Local_V_Q_Control_PI_PYTHON.Iqcmd, rEGCA1_1.Iqcmd)
            annotation (Line(points={{4.33333,5.66667},{11.4524,5.66667},{
                  11.4524,5.71429},{18.5714,5.71429}}, color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control_PI_PYTHON.Ipcmd, rEGCA1_1.Ipcmd)
            annotation (Line(points={{4.33333,-5.66667},{11.4524,-5.66667},{
                  11.4524,-5.71429},{18.5714,-5.71429}}, color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control_PI_PYTHON.iq0, rEGCA1_1.IQ0)
            annotation (Line(points={{2,-10.6667},{2,-18},{22,-18},{22,-10},{
                  21.4286,-10},{21.4286,-10.7143}}, color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control_PI_PYTHON.ip0, rEGCA1_1.IP0)
            annotation (Line(points={{-2,-10.6667},{-2,-20},{26,-20},{26,
                  -10.7143},{25.7143,-10.7143}}, color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control_PI_PYTHON.v0, rEGCA1_1.V_0)
            annotation (Line(points={{-6,-10.6667},{-6,-22},{30,-22},{30,
                  -10.7143}}, color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control_PI_PYTHON.q0, rEGCA1_1.q_0)
            annotation (Line(points={{-10,-10.6667},{-10,-26},{34,-26},{34,
                  -10.7143},{34.2857,-10.7143}}, color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control_PI_PYTHON.p0, rEGCA1_1.p_0)
            annotation (Line(points={{-14,-10.6667},{-14,-24},{38,-24},{38,
                  -10.7143},{38.5714,-10.7143}}, color={0,0,127}));
          connect(rEGCA1_1.V_t, rEECB1_Local_V_Q_Control_PI_PYTHON.Vt)
            annotation (Line(points={{24.2857,10.7143},{24.2857,16},{-28,16},{
                  -28,5.33333},{-16.6667,5.33333}}, color={0,0,127}));
          connect(rEGCA1_1.Pgen, rEECB1_Local_V_Q_Control_PI_PYTHON.Pe)
            annotation (Line(points={{30,10.7143},{30,20},{-22,20},{-22,2.66667},
                  {-16.6667,2.66667}}, color={0,0,127}));
          connect(rEGCA1_1.Qgen, rEECB1_Local_V_Q_Control_PI_PYTHON.Qgen)
            annotation (Line(points={{35.7143,10.7143},{35.7143,24},{-20,24},{
                  -20,0},{-16.6667,0}}, color={0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(QINPUT, add1.u1)
            annotation (Line(points={{-120,0},{-66,0},{-66,4},{-56,4}},
                                                        color={0,0,127}));
          connect(rEGCA1_1.q_0, add1.u2) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-46},{-56,-46},{-56,-8}},
                                                       color={0,0,127}));
          connect(add1.y, rEECB1_Local_V_Q_Control_PI_PYTHON.Qext) annotation (
              Line(points={{-33,-2},{-24.8333,-2},{-24.8333,-2.66667},{-16.6667,
                  -2.66667}}, color={0,0,127}));
          connect(rEECB1_Local_V_Q_Control_PI_PYTHON.Pref, rEGCA1_1.p_0)
            annotation (Line(points={{-16.6667,-5.33333},{-22,-5.33333},{-22,
                  -34},{38.5714,-34},{38.5714,-10.7143}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={255,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end SolarMPCLocalVQControl_PYTHON;

        model SolarMPCLocalVQControl_OBSERVABILITY
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          REGCA1_OBSERVABILITY                                rEGCA1_OBSERVABILITY(
                                                                       V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECB1_Local_V_Q_Control_PI_OBSERVABILITY EC(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=true,
            Trv=0.02,
            Kqv=0.01,
            Tp=0.05,
            Kqp=1,
            Kqi=10,
            Kvp=1,
            Kvi=10,
            Kpp=1,
            Kpi=20,
            Pmin=0.001,
            Imax=1.3) annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput QINPUT "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
          parameter Modelica.Units.SI.Voltage V_base = 480;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Math.Add add1
            annotation (Placement(transformation(extent={{-54,-12},{-34,8}})));
        equation
          connect(EC.Iqcmd, rEGCA1_OBSERVABILITY.Iqcmd) annotation (Line(points={{4.33333,
                  5.66667},{11.4524,5.66667},{11.4524,5.71429},{18.5714,5.71429}},
                color={0,0,127}));
          connect(EC.Ipcmd, rEGCA1_OBSERVABILITY.Ipcmd) annotation (Line(points={{4.33333,
                  -5.66667},{11.4524,-5.66667},{11.4524,-5.71429},{18.5714,
                  -5.71429}},
                color={0,0,127}));
          connect(EC.iq0, rEGCA1_OBSERVABILITY.IQ0) annotation (Line(points={{2,
                  -10.6667},{2,-18},{22,-18},{22,-10},{21.4286,-10},{21.4286,
                  -10.7143}},                                                  color={0,
                  0,127}));
          connect(EC.ip0, rEGCA1_OBSERVABILITY.IP0) annotation (Line(points={{-2,
                  -10.6667},{-2,-20},{26,-20},{26,-10.7143},{25.7143,-10.7143}},
                                                                       color={0,0,127}));
          connect(EC.v0, rEGCA1_OBSERVABILITY.V_0) annotation (Line(points={{-6,
                  -10.6667},{-6,-22},{30,-22},{30,-10.7143}},
                                                    color={0,0,127}));
          connect(EC.q0, rEGCA1_OBSERVABILITY.q_0) annotation (Line(points={{-10,
                  -10.6667},{-10,-26},{34,-26},{34,-10.7143},{34.2857,-10.7143}},
                                                                        color={0,0,127}));
          connect(EC.p0, rEGCA1_OBSERVABILITY.p_0) annotation (Line(points={{-14,
                  -10.6667},{-14,-24},{38,-24},{38,-10.7143},{38.5714,-10.7143}},
                                                                        color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.V_t, EC.Vt) annotation (Line(points={{24.2857,
                  10.7143},{24.2857,16},{-28,16},{-28,5.33333},{-16.6667,
                  5.33333}},                                               color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.Pgen, EC.Pe) annotation (Line(points={{30,
                  10.7143},{30,20},{-22,20},{-22,2.66667},{-16.6667,2.66667}},
                                                                      color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.Qgen, EC.Qgen) annotation (Line(points={{35.7143,
                  10.7143},{35.7143,24},{-20,24},{-20,0},{-16.6667,0}}, color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(QINPUT, add1.u1)
            annotation (Line(points={{-120,0},{-66,0},{-66,4},{-56,4}},
                                                        color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.q_0, add1.u2) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-46},{-56,-46},{-56,-8}},
                                                     color={0,0,127}));
          connect(add1.y, EC.Qext) annotation (Line(points={{-33,-2},{-24.8333,
                  -2},{-24.8333,-2.66667},{-16.6667,-2.66667}}, color={0,0,127}));
          connect(EC.Pref, rEGCA1_OBSERVABILITY.p_0) annotation (Line(points={{
                  -16.6667,-5.33333},{-22,-5.33333},{-22,-34},{38.5714,-34},{
                  38.5714,-10.7143}},
                color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={255,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end SolarMPCLocalVQControl_OBSERVABILITY;

        model SolarMPCSysIdentification
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          parameter Modelica.Units.SI.Voltage V_base = 480;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          PV_SYS_ID rEGCA1_1(
            V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{-14,-14},{14,14}})));
          Modelica.Blocks.Interfaces.RealInput Qref "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
        equation
          connect(Qref, rEGCA1_1.Iqcmd) annotation (Line(points={{-120,-60},{-48,
                  -60},{-48,8},{-16,8}}, color={0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{14,0},{100,0}}, color={0,0,255}));
          connect(rEGCA1_1.p_0, rEGCA1_1.Ipcmd) annotation (Line(points={{12,-15},
                  {12,-26},{-24,-26},{-24,-8},{-16,-8}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={255,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end SolarMPCSysIdentification;
      end Solar_Units;

      package Battery_Units

        model BESSMPCLocalVControl
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECCU1_Local_V_Control                                 rEECCU1_Local_V_Control(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=false,
            Trv=0.02,
            dbd1=0,
            dbd2=0,
            Kqv=0.01,
            Kqp=1,
            Kvp=1,
            Kvi=1,
            Pmin=-1)
                   annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput Vinput
            "Reactive Power Reference" annotation (Placement(transformation(
                  extent={{-140,-80},{-100,-40}})));
          parameter Modelica.Units.SI.Voltage V_base;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Interfaces.RealInput Pinput
            "Auxiliary Signal for Active Power" annotation (Placement(
                transformation(extent={{-140,40},{-100,80}})));
          Modelica.Blocks.Math.Add add1(k1=+1)
            annotation (Placement(transformation(extent={{-60,64},{-40,44}})));
          Modelica.Blocks.Sources.Constant Paux(k=0)
            annotation (Placement(transformation(extent={{-80,-14},{-60,6}})));
        equation
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(add1.u2, Pinput)
            annotation (Line(points={{-62,60},{-120,60}}, color={0,0,127}));
          connect(rEGCA1_1.V_t, rEECCU1_Local_V_Control.Vt) annotation (Line(
                points={{24.2857,10.7143},{24.2857,16},{-20,16},{-20,8},{
                  -16.6667,8}}, color={0,0,127}));
          connect(rEGCA1_1.Pgen, rEECCU1_Local_V_Control.Pe) annotation (Line(
                points={{30,10.7143},{30,18},{-22,18},{-22,5.33333},{-16.6667,
                  5.33333}}, color={0,0,127}));
          connect(rEGCA1_1.Qgen, rEECCU1_Local_V_Control.Qgen) annotation (Line(
                points={{35.7143,10.7143},{35.7143,20},{-24,20},{-24,2.66667},{
                  -16.6667,2.66667}}, color={0,0,127}));
          connect(rEGCA1_1.p_0, add1.u1) annotation (Line(points={{38.5714,
                  -10.7143},{38.5714,-20},{56,-20},{56,28},{-72,28},{-72,48},{
                  -62,48}}, color={0,0,127}));
          connect(add1.y, rEECCU1_Local_V_Control.Pref) annotation (Line(points={{-39,54},
                  {-28,54},{-28,-2.66667},{-16.6667,-2.66667}},          color=
                  {0,0,127}));
          connect(rEECCU1_Local_V_Control.Qext, rEGCA1_1.q_0) annotation (Line(
                points={{-16.6667,0},{-20,0},{-20,-20},{34.2857,-20},{34.2857,
                  -10.7143}}, color={0,0,127}));
          connect(rEECCU1_Local_V_Control.iq0, rEGCA1_1.IQ0) annotation (Line(
                points={{2,-10.6667},{2,-12},{21.4286,-12},{21.4286,-10.7143}},
                color={0,0,127}));
          connect(rEECCU1_Local_V_Control.ip0, rEGCA1_1.IP0) annotation (Line(
                points={{-2,-10.6667},{-2,-14},{25.7143,-14},{25.7143,-10.7143}},
                color={0,0,127}));
          connect(rEECCU1_Local_V_Control.v0, rEGCA1_1.V_0) annotation (Line(
                points={{-6,-10.6667},{-6,-16},{30,-16},{30,-10.7143}}, color={
                  0,0,127}));
          connect(rEECCU1_Local_V_Control.q0, rEGCA1_1.q_0) annotation (Line(
                points={{-10,-10.6667},{-10,-18},{34.2857,-18},{34.2857,
                  -10.7143}}, color={0,0,127}));
          connect(rEECCU1_Local_V_Control.p0, rEGCA1_1.p_0) annotation (Line(
                points={{-14,-10.6667},{-14,-22},{38.5714,-22},{38.5714,
                  -10.7143}}, color={0,0,127}));
          connect(Paux.y, rEECCU1_Local_V_Control.Paux) annotation (Line(points={{-59,-4},
                  {-37.8333,-4},{-37.8333,-5.33333},{-16.6667,-5.33333}},
                color={0,0,127}));
          connect(Vinput, rEECCU1_Local_V_Control.Vref_input) annotation (Line(
                points={{-120,-60},{72,-60},{72,48},{-6,48},{-6,10.6667}},
                color={0,0,127}));
          connect(rEECCU1_Local_V_Control.Iqcmd, rEGCA1_1.Iqcmd) annotation (
              Line(points={{4.33333,5.66667},{11.4524,5.66667},{11.4524,5.71429},
                  {18.5714,5.71429}}, color={0,0,127}));
          connect(rEECCU1_Local_V_Control.Ipcmd, rEGCA1_1.Ipcmd) annotation (
              Line(points={{4.33333,-5.66667},{11.4524,-5.66667},{11.4524,
                  -5.71429},{18.5714,-5.71429}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={170,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end BESSMPCLocalVControl;

        model BESSMPCLocalQControl
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECCU1_Constant_Q_Control                              rEECCU1_Constant_Q_Control(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=true,
            dbd1=0,
            dbd2=0,
            Kqv=0.01,
            Kqp=1,
            Kvp=1,
            Pmin=-1,
            T=50)  annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput Qext1 "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
          parameter Modelica.Units.SI.Voltage V_base;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Interfaces.RealInput Paux1
            "Auxiliary Signal for Active Power"
            annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
          Modelica.Blocks.Math.Add add1(k1=+1)
            annotation (Placement(transformation(extent={{-60,64},{-40,44}})));
          Modelica.Blocks.Sources.Constant Paux(k=0)
            annotation (Placement(transformation(extent={{-80,-20},{-60,0}})));
          Modelica.Blocks.Math.Add add2(k1=+1)
            annotation (Placement(transformation(extent={{-60,-50},{-40,-70}})));
        equation
          connect(rEECCU1_Constant_Q_Control.Iqcmd, rEGCA1_1.Iqcmd) annotation (
             Line(points={{4.33333,5.66667},{11.4524,5.66667},{11.4524,5.71429},
                  {18.5714,5.71429}}, color={0,0,127}));
          connect(rEECCU1_Constant_Q_Control.Ipcmd, rEGCA1_1.Ipcmd) annotation (
             Line(points={{4.33333,-5.66667},{11.4524,-5.66667},{11.4524,
                  -5.71429},{18.5714,-5.71429}}, color={0,0,127}));
          connect(rEGCA1_1.V_t, rEECCU1_Constant_Q_Control.Vt) annotation (Line(
                points={{24.2857,10.7143},{24.2857,12},{-20,12},{-20,8},{
                  -16.6667,8}}, color={0,0,127}));
          connect(rEGCA1_1.Pgen, rEECCU1_Constant_Q_Control.Pe) annotation (
              Line(points={{30,10.7143},{30,18},{-22,18},{-22,5.33333},{
                  -16.6667,5.33333}}, color={0,0,127}));
          connect(rEGCA1_1.Qgen, rEECCU1_Constant_Q_Control.Qgen) annotation (
              Line(points={{35.7143,10.7143},{35.7143,20},{-24,20},{-24,2.66667},
                  {-16.6667,2.66667}}, color={0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(add1.u2, Paux1)
            annotation (Line(points={{-62,60},{-120,60}}, color={0,0,127}));
          connect(rEGCA1_1.p_0, add1.u1) annotation (Line(points={{38.5714,
                  -10.7143},{38.5714,-28},{60,-28},{60,26},{-78,26},{-78,48},{
                  -62,48}},
                        color={0,0,127}));
          connect(Paux.y, rEECCU1_Constant_Q_Control.Paux) annotation (Line(
                points={{-59,-10},{-59,-5.33333},{-16.6667,-5.33333}}, color={0,
                  0,127}));
          connect(rEGCA1_1.IQ0, rEECCU1_Constant_Q_Control.iq0) annotation (
              Line(points={{21.4286,-10.7143},{21.4286,-14},{2,-14},{2,-10.6667}},
                color={0,0,127}));
          connect(rEECCU1_Constant_Q_Control.ip0, rEGCA1_1.IP0) annotation (
              Line(points={{-2,-10.6667},{-2,-16},{25.7143,-16},{25.7143,
                  -10.7143}}, color={0,0,127}));
          connect(rEECCU1_Constant_Q_Control.v0, rEGCA1_1.V_0) annotation (Line(
                points={{-6,-10.6667},{-6,-18},{30,-18},{30,-10.7143}}, color={
                  0,0,127}));
          connect(rEECCU1_Constant_Q_Control.q0, rEGCA1_1.q_0) annotation (Line(
                points={{-10,-10.6667},{-10,-20},{34.2857,-20},{34.2857,
                  -10.7143}}, color={0,0,127}));
          connect(rEECCU1_Constant_Q_Control.p0, rEGCA1_1.p_0) annotation (Line(
                points={{-14,-10.6667},{-14,-22},{38.5714,-22},{38.5714,
                  -10.7143}}, color={0,0,127}));
          connect(add1.y, rEECCU1_Constant_Q_Control.Pref) annotation (Line(
                points={{-39,54},{-36,54},{-36,-2.66667},{-16.6667,-2.66667}},
                color={0,0,127}));
          connect(Qext1, add2.u2) annotation (Line(points={{-120,-60},{-72,-60},
                  {-72,-54},{-62,-54}}, color={0,0,127}));
          connect(add2.u1, rEGCA1_1.q_0) annotation (Line(points={{-62,-66},{
                  -68,-66},{-68,-84},{34.2857,-84},{34.2857,-10.7143}}, color={
                  0,0,127}));
          connect(add2.y, rEECCU1_Constant_Q_Control.Qext) annotation (Line(
                points={{-39,-60},{-22,-60},{-22,0},{-16.6667,0}}, color={0,0,
                  127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={170,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end BESSMPCLocalQControl;

        model BESSMPCLocalVQControl
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECCU1_Local_V_Q_Control2 EC(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=true,
            Trv=0.02,
            Kqp=1,
            Kqi=30,
            Kvp=1,
            Kvi=25,
            Kpp=1,
            Kpi=35,
            Pmin=-1,
            T=999)
            annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput Qext1 "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
          parameter Modelica.Units.SI.Voltage V_base;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Interfaces.RealInput Paux1
            "Auxiliary Signal for Active Power"
            annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
          Modelica.Blocks.Math.Add add1(k1=+1)
            annotation (Placement(transformation(extent={{-60,64},{-40,44}})));
          Modelica.Blocks.Sources.Constant Paux(k=0)
            annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
          Modelica.Blocks.Math.Add add2(k1=+1)
            annotation (Placement(transformation(extent={{-60,-56},{-40,-76}})));
        equation
          connect(EC.Iqcmd, rEGCA1_1.Iqcmd) annotation (Line(points={{4.33333,
                  5.66667},{11.4524,5.66667},{11.4524,5.71429},{18.5714,5.71429}},
                color={0,0,127}));
          connect(EC.Ipcmd, rEGCA1_1.Ipcmd) annotation (Line(points={{4.33333,
                  -5.66667},{11.4524,-5.66667},{11.4524,-5.71429},{18.5714,
                  -5.71429}}, color={0,0,127}));
          connect(rEGCA1_1.V_t, EC.Vt) annotation (Line(points={{24.2857,
                  10.7143},{24.2857,12},{-20,12},{-20,8},{-16.6667,8}}, color={
                  0,0,127}));
          connect(rEGCA1_1.Pgen, EC.Pe) annotation (Line(points={{30,10.7143},{
                  30,18},{-22,18},{-22,5.33333},{-16.6667,5.33333}}, color={0,0,
                  127}));
          connect(rEGCA1_1.Qgen, EC.Qgen) annotation (Line(points={{35.7143,
                  10.7143},{35.7143,20},{-24,20},{-24,2.66667},{-16.6667,
                  2.66667}}, color={0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(add1.u2, Paux1)
            annotation (Line(points={{-62,60},{-120,60}}, color={0,0,127}));
          connect(rEGCA1_1.p_0, add1.u1) annotation (Line(points={{38.5714,
                  -10.7143},{38.5714,-28},{60,-28},{60,26},{-78,26},{-78,48},{
                  -62,48}},
                        color={0,0,127}));
          connect(Paux.y, EC.Paux) annotation (Line(points={{-59,-6},{-59,
                  -5.33333},{-16.6667,-5.33333}}, color={0,0,127}));
          connect(rEGCA1_1.IQ0, EC.iq0) annotation (Line(points={{21.4286,
                  -10.7143},{21.4286,-14},{2,-14},{2,-10.6667}}, color={0,0,127}));
          connect(EC.ip0, rEGCA1_1.IP0) annotation (Line(points={{-2,-10.6667},
                  {-2,-16},{25.7143,-16},{25.7143,-10.7143}}, color={0,0,127}));
          connect(EC.v0, rEGCA1_1.V_0) annotation (Line(points={{-6,-10.6667},{
                  -6,-18},{30,-18},{30,-10.7143}}, color={0,0,127}));
          connect(EC.q0, rEGCA1_1.q_0) annotation (Line(points={{-10,-10.6667},
                  {-10,-20},{34.2857,-20},{34.2857,-10.7143}}, color={0,0,127}));
          connect(EC.p0, rEGCA1_1.p_0) annotation (Line(points={{-14,-10.6667},
                  {-14,-22},{38.5714,-22},{38.5714,-10.7143}}, color={0,0,127}));
          connect(add1.y, EC.Pref) annotation (Line(points={{-39,54},{-36,54},{
                  -36,-2.66667},{-16.6667,-2.66667}}, color={0,0,127}));
          connect(Qext1, add2.u2)
            annotation (Line(points={{-120,-60},{-62,-60}}, color={0,0,127}));
          connect(rEGCA1_1.q_0, add2.u1) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-90},{-70,-90},{-70,-72},{-62,-72}}, color
                ={0,0,127}));
          connect(add2.y, EC.Qext) annotation (Line(points={{-39,-66},{-22,-66},
                  {-22,0},{-16.6667,0}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={170,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end BESSMPCLocalVQControl;

        model BESSMPCLocalVQControlLinearized
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECCU1_Local_V_Q_Control_for_Linearization EC(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=false,
            Trv=0.02,
            Tp=0.05,
            Kqp=1,
            Kqi=30,
            Kvp=1,
            Kvi=25,
            Kpp=1,
            Kpi=35,
            Pmin=-1,
            T=999)
            annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput Qext1 "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
          parameter Modelica.Units.SI.Voltage V_base;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Interfaces.RealInput Paux1
            "Auxiliary Signal for Active Power"
            annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
          Modelica.Blocks.Math.Add add1(k1=+1)
            annotation (Placement(transformation(extent={{-60,64},{-40,44}})));
          Modelica.Blocks.Sources.Constant Paux(k=0)
            annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
          Modelica.Blocks.Math.Add add2(k1=+1)
            annotation (Placement(transformation(extent={{-60,-56},{-40,-76}})));
        equation
          connect(EC.Iqcmd, rEGCA1_1.Iqcmd) annotation (Line(points={{4.33333,
                  5.66667},{11.4524,5.66667},{11.4524,5.71429},{18.5714,5.71429}},
                color={0,0,127}));
          connect(EC.Ipcmd, rEGCA1_1.Ipcmd) annotation (Line(points={{4.33333,
                  -5.66667},{11.4524,-5.66667},{11.4524,-5.71429},{18.5714,
                  -5.71429}}, color={0,0,127}));
          connect(rEGCA1_1.V_t, EC.Vt) annotation (Line(points={{24.2857,
                  10.7143},{24.2857,12},{-20,12},{-20,8},{-16.6667,8}}, color={
                  0,0,127}));
          connect(rEGCA1_1.Pgen, EC.Pe) annotation (Line(points={{30,10.7143},{
                  30,18},{-22,18},{-22,5.33333},{-16.6667,5.33333}}, color={0,0,
                  127}));
          connect(rEGCA1_1.Qgen, EC.Qgen) annotation (Line(points={{35.7143,
                  10.7143},{35.7143,20},{-24,20},{-24,2.66667},{-16.6667,
                  2.66667}}, color={0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(add1.u2, Paux1)
            annotation (Line(points={{-62,60},{-120,60}}, color={0,0,127}));
          connect(rEGCA1_1.p_0, add1.u1) annotation (Line(points={{38.5714,
                  -10.7143},{38.5714,-28},{60,-28},{60,26},{-78,26},{-78,48},{
                  -62,48}},
                        color={0,0,127}));
          connect(Paux.y, EC.Paux) annotation (Line(points={{-59,-6},{-59,
                  -5.33333},{-16.6667,-5.33333}}, color={0,0,127}));
          connect(rEGCA1_1.IQ0, EC.iq0) annotation (Line(points={{21.4286,
                  -10.7143},{21.4286,-14},{2,-14},{2,-10.6667}}, color={0,0,127}));
          connect(EC.ip0, rEGCA1_1.IP0) annotation (Line(points={{-2,-10.6667},
                  {-2,-16},{25.7143,-16},{25.7143,-10.7143}}, color={0,0,127}));
          connect(EC.v0, rEGCA1_1.V_0) annotation (Line(points={{-6,-10.6667},{
                  -6,-18},{30,-18},{30,-10.7143}}, color={0,0,127}));
          connect(EC.q0, rEGCA1_1.q_0) annotation (Line(points={{-10,-10.6667},
                  {-10,-20},{34.2857,-20},{34.2857,-10.7143}}, color={0,0,127}));
          connect(EC.p0, rEGCA1_1.p_0) annotation (Line(points={{-14,-10.6667},
                  {-14,-22},{38.5714,-22},{38.5714,-10.7143}}, color={0,0,127}));
          connect(add1.y, EC.Pref) annotation (Line(points={{-39,54},{-36,54},{
                  -36,-2.66667},{-16.6667,-2.66667}}, color={0,0,127}));
          connect(Qext1, add2.u2)
            annotation (Line(points={{-120,-60},{-62,-60}}, color={0,0,127}));
          connect(rEGCA1_1.q_0, add2.u1) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-90},{-70,-90},{-70,-72},{-62,-72}}, color
                ={0,0,127}));
          connect(add2.y, EC.Qext) annotation (Line(points={{-39,-66},{-22,-66},
                  {-22,0},{-16.6667,0}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={170,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end BESSMPCLocalVQControlLinearized;

        model BESSMPCLocalVQControlLinearized_PYTHON
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Electrical.Renewables.PSSE.InverterInterface.REGCA1 rEGCA1_1(V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECCU1_Local_V_Q_Control_for_LinearizationPYTHON
            rEECCU1_Local_V_Q_Control(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=false,
            dbd1=0,
            dbd2=0,
            Kqv=0,
            Kqp=5,
            Kqi=40,
            Kvp=10,
            Kvi=20,
            Pmin=-1,
            T=999)
            annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput Qext1 "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
          parameter Modelica.Units.SI.Voltage V_base;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Interfaces.RealInput Paux1
            "Auxiliary Signal for Active Power"
            annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
          Modelica.Blocks.Math.Add add1(k1=+1)
            annotation (Placement(transformation(extent={{-60,64},{-40,44}})));
          Modelica.Blocks.Sources.Constant Paux(k=0)
            annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
          Modelica.Blocks.Math.Add add2(k1=+1)
            annotation (Placement(transformation(extent={{-60,-56},{-40,-76}})));
        equation
          connect(rEECCU1_Local_V_Q_Control.Iqcmd, rEGCA1_1.Iqcmd) annotation (
              Line(points={{4.33333,5.66667},{11.4524,5.66667},{11.4524,5.71429},
                  {18.5714,5.71429}}, color={0,0,127}));
          connect(rEECCU1_Local_V_Q_Control.Ipcmd, rEGCA1_1.Ipcmd) annotation (
              Line(points={{4.33333,-5.66667},{11.4524,-5.66667},{11.4524,
                  -5.71429},{18.5714,-5.71429}}, color={0,0,127}));
          connect(rEGCA1_1.V_t, rEECCU1_Local_V_Q_Control.Vt) annotation (Line(
                points={{24.2857,10.7143},{24.2857,12},{-20,12},{-20,8},{
                  -16.6667,8}}, color={0,0,127}));
          connect(rEGCA1_1.Pgen, rEECCU1_Local_V_Q_Control.Pe) annotation (Line(
                points={{30,10.7143},{30,18},{-22,18},{-22,5.33333},{-16.6667,
                  5.33333}}, color={0,0,127}));
          connect(rEGCA1_1.Qgen, rEECCU1_Local_V_Q_Control.Qgen) annotation (
              Line(points={{35.7143,10.7143},{35.7143,20},{-24,20},{-24,2.66667},
                  {-16.6667,2.66667}}, color={0,0,127}));
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(add1.u2, Paux1)
            annotation (Line(points={{-62,60},{-120,60}}, color={0,0,127}));
          connect(rEGCA1_1.p_0, add1.u1) annotation (Line(points={{38.5714,
                  -10.7143},{38.5714,-28},{60,-28},{60,26},{-78,26},{-78,48},{
                  -62,48}},
                        color={0,0,127}));
          connect(Paux.y, rEECCU1_Local_V_Q_Control.Paux) annotation (Line(
                points={{-59,-6},{-59,-5.33333},{-16.6667,-5.33333}}, color={0,
                  0,127}));
          connect(rEGCA1_1.IQ0, rEECCU1_Local_V_Q_Control.iq0) annotation (Line(
                points={{21.4286,-10.7143},{21.4286,-14},{2,-14},{2,-10.6667}},
                color={0,0,127}));
          connect(rEECCU1_Local_V_Q_Control.ip0, rEGCA1_1.IP0) annotation (Line(
                points={{-2,-10.6667},{-2,-16},{25.7143,-16},{25.7143,-10.7143}},
                color={0,0,127}));
          connect(rEECCU1_Local_V_Q_Control.v0, rEGCA1_1.V_0) annotation (Line(
                points={{-6,-10.6667},{-6,-18},{30,-18},{30,-10.7143}}, color={
                  0,0,127}));
          connect(rEECCU1_Local_V_Q_Control.q0, rEGCA1_1.q_0) annotation (Line(
                points={{-10,-10.6667},{-10,-20},{34.2857,-20},{34.2857,
                  -10.7143}}, color={0,0,127}));
          connect(rEECCU1_Local_V_Q_Control.p0, rEGCA1_1.p_0) annotation (Line(
                points={{-14,-10.6667},{-14,-22},{38.5714,-22},{38.5714,
                  -10.7143}}, color={0,0,127}));
          connect(add1.y, rEECCU1_Local_V_Q_Control.Pref) annotation (Line(
                points={{-39,54},{-36,54},{-36,-2.66667},{-16.6667,-2.66667}},
                color={0,0,127}));
          connect(Qext1, add2.u2)
            annotation (Line(points={{-120,-60},{-62,-60}}, color={0,0,127}));
          connect(rEGCA1_1.q_0, add2.u1) annotation (Line(points={{34.2857,
                  -10.7143},{34.2857,-90},{-70,-90},{-70,-72},{-62,-72}}, color
                ={0,0,127}));
          connect(add2.y, rEECCU1_Local_V_Q_Control.Qext) annotation (Line(
                points={{-39,-66},{-22,-66},{-22,0},{-16.6667,0}}, color={0,0,
                  127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={170,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end BESSMPCLocalVQControlLinearized_PYTHON;

        model BESSMPCLocalVQControlLinearized_OBSERVABILITY
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          REGCA1_OBSERVABILITY                                rEGCA1_OBSERVABILITY(
                                                                       V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{20,-10},{40,10}})));
          REECCU1_Local_V_Q_Control_for_Linearization_OBSERVABILITY
                                                      EC(
            pfflag=false,
            vflag=false,
            qflag=false,
            pqflag=false,
            Trv=0.02,
            Tp=0.05,
            Kqp=1,
            Kqi=30,
            Kvp=1,
            Kvi=25,
            Kpp=1,
            Kpi=35,
            Pmin=-1,
            T=999)
            annotation (Placement(transformation(extent={{-16,-10},{4,10}})));
          Modelica.Blocks.Interfaces.RealInput Qext1 "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
          parameter Modelica.Units.SI.Voltage V_base;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Interfaces.RealInput Paux1
            "Auxiliary Signal for Active Power"
            annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
          Modelica.Blocks.Math.Add add1(k1=+1)
            annotation (Placement(transformation(extent={{-60,64},{-40,44}})));
          Modelica.Blocks.Sources.Constant Paux(k=0)
            annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
          Modelica.Blocks.Math.Add add2(k1=+1)
            annotation (Placement(transformation(extent={{-60,-56},{-40,-76}})));
        equation
          connect(EC.Iqcmd, rEGCA1_OBSERVABILITY.Iqcmd) annotation (Line(points
                ={{4.33333,5.66667},{11.4524,5.66667},{11.4524,5.71429},{
                  18.5714,5.71429}}, color={0,0,127}));
          connect(EC.Ipcmd, rEGCA1_OBSERVABILITY.Ipcmd) annotation (Line(points
                ={{4.33333,-5.66667},{11.4524,-5.66667},{11.4524,-5.71429},{
                  18.5714,-5.71429}}, color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.V_t, EC.Vt) annotation (Line(points={{
                  24.2857,10.7143},{24.2857,12},{-20,12},{-20,8},{-16.6667,8}},
                color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.Pgen, EC.Pe) annotation (Line(points={{
                  30,10.7143},{30,18},{-22,18},{-22,5.33333},{-16.6667,5.33333}},
                color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.Qgen, EC.Qgen) annotation (Line(points={
                  {35.7143,10.7143},{35.7143,20},{-24,20},{-24,2.66667},{
                  -16.6667,2.66667}}, color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.p, p1)
            annotation (Line(points={{40,0},{100,0}}, color={0,0,255}));
          connect(add1.u2, Paux1)
            annotation (Line(points={{-62,60},{-120,60}}, color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.p_0, add1.u1) annotation (Line(points={{
                  38.5714,-10.7143},{38.5714,-28},{60,-28},{60,26},{-78,26},{
                  -78,48},{-62,48}}, color={0,0,127}));
          connect(Paux.y, EC.Paux) annotation (Line(points={{-59,-6},{-59,
                  -5.33333},{-16.6667,-5.33333}}, color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.IQ0, EC.iq0) annotation (Line(points={{
                  21.4286,-10.7143},{21.4286,-14},{2,-14},{2,-10.6667}}, color=
                  {0,0,127}));
          connect(EC.ip0, rEGCA1_OBSERVABILITY.IP0) annotation (Line(points={{
                  -2,-10.6667},{-2,-16},{25.7143,-16},{25.7143,-10.7143}},
                color={0,0,127}));
          connect(EC.v0, rEGCA1_OBSERVABILITY.V_0) annotation (Line(points={{-6,
                  -10.6667},{-6,-18},{30,-18},{30,-10.7143}}, color={0,0,127}));
          connect(EC.q0, rEGCA1_OBSERVABILITY.q_0) annotation (Line(points={{
                  -10,-10.6667},{-10,-20},{34.2857,-20},{34.2857,-10.7143}},
                color={0,0,127}));
          connect(EC.p0, rEGCA1_OBSERVABILITY.p_0) annotation (Line(points={{
                  -14,-10.6667},{-14,-22},{38.5714,-22},{38.5714,-10.7143}},
                color={0,0,127}));
          connect(add1.y, EC.Pref) annotation (Line(points={{-39,54},{-36,54},{
                  -36,-2.66667},{-16.6667,-2.66667}}, color={0,0,127}));
          connect(Qext1, add2.u2)
            annotation (Line(points={{-120,-60},{-62,-60}}, color={0,0,127}));
          connect(rEGCA1_OBSERVABILITY.q_0, add2.u1) annotation (Line(points={{
                  34.2857,-10.7143},{34.2857,-90},{-70,-90},{-70,-72},{-62,-72}},
                color={0,0,127}));
          connect(add2.y, EC.Qext) annotation (Line(points={{-39,-66},{-22,-66},
                  {-22,0},{-16.6667,0}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={170,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end BESSMPCLocalVQControlLinearized_OBSERVABILITY;

        model BESSMPCSysIdentification
          Interfaces.PwPin p1
            annotation (Placement(transformation(extent={{90,-10},{110,10}})));
          Modelica.Blocks.Interfaces.RealInput Qext1 "Reactive Power Reference"
            annotation (Placement(transformation(extent={{-140,-80},{-100,-40}})));
          parameter Modelica.Units.SI.Voltage V_base;
          extends OpenIPSL.Electrical.Essentials.pfComponent;
          Modelica.Blocks.Interfaces.RealInput Paux1
            "Auxiliary Signal for Active Power"
            annotation (Placement(transformation(extent={{-140,40},{-100,80}})));
          BESS_SYS_ID rEGCA1_1(
            V_b=V_base,
            P_0=P_0,
            Q_0=Q_0,
            v_0=v_0,
            angle_0=angle_0)
            annotation (Placement(transformation(extent={{-14,-14},{14,14}})));
        equation
          connect(rEGCA1_1.p, p1)
            annotation (Line(points={{14,0},{100,0}}, color={0,0,255}));
          connect(Paux1, rEGCA1_1.Ipcmd) annotation (Line(points={{-120,60},{-80,
                  60},{-80,-8},{-16,-8}}, color={0,0,127}));
          connect(Qext1, rEGCA1_1.Iqcmd) annotation (Line(points={{-120,-60},{-60,
                  -60},{-60,8},{-16,8}}, color={0,0,127}));
          annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
                                           Ellipse(
                  extent={{-100,100},{100,-100}},
                  lineColor={0,0,0},
                  fillColor={170,255,85},
                  fillPattern=FillPattern.Solid),Line(
                  points={{-48,2},{-20,56},{2,4},{24,-28},{48,22}},
                  color={0,0,0},
                  smooth=Smooth.Bezier),Text(
                  extent={{-52,-18},{56,-66}},
                  lineColor={0,0,0},
                  fillColor={255,255,255},
                  fillPattern=FillPattern.Solid,
                  textString="%name")}), Diagram(coordinateSystem(preserveAspectRatio=false)));
        end BESSMPCSysIdentification;
      end Battery_Units;
    end PSSE;

    partial model BaseREGC_MPC
      "Base renewable generator/converter for PSSE models"
      import Complex;
      import Modelica.ComplexMath.arg;
      import Modelica.ComplexMath.real;
      import Modelica.ComplexMath.imag;
      import Modelica.ComplexMath.conj;
      import Modelica.Blocks.Interfaces.*;
      parameter OpenIPSL.Types.ApparentPower M_b=SysData.S_b "Machine base power" annotation (Dialog(group="Power flow data"));
      extends OpenIPSL.Electrical.Essentials.pfComponent(
        final enabledisplayPF=false,
        final enablefn=false,
        final enableV_b=false,
        final enableangle_0=true,
        final enablev_0=true,
        final enableQ_0=true,
        final enableP_0=true,
        final enableS_b=true);

      // Set of Model Parameters
      parameter Modelica.Units.SI.Time Tg = 0.02 "Converter time constant" annotation (Dialog(group="Input Parameters"));
      parameter Modelica.Units.SI.TimeAging rrpwr = 10 "Low Voltage Power Logic (LVPL) ramp rate limit" annotation (Dialog(group="Input Parameters"));
      parameter OpenIPSL.Types.PerUnit Brkpt = 0.9 "LVPL characteristic voltage 2" annotation (Dialog(group="Input Parameters"));
      parameter OpenIPSL.Types.PerUnit Zerox = 0.5 "LVPL characteristic voltage 1" annotation (Dialog(group="Input Parameters"));
      parameter OpenIPSL.Types.PerUnit Lvpl1 = 1.22 "LVPL gain" annotation (Dialog(group="Input Parameters"));
      parameter OpenIPSL.Types.PerUnit Volim = 1.2 "Voltage limit for high voltage reactive current management" annotation (Dialog(group="Input Parameters"));
      parameter OpenIPSL.Types.PerUnit lvpnt1 = 0.8 "High voltage point for low voltage active current management" annotation (Dialog(group="Input Parameters"));
      parameter OpenIPSL.Types.PerUnit lvpnt0 = 0.4 "Low voltage point for low voltage active current management" annotation (Dialog(group="Input Parameters"));
      parameter OpenIPSL.Types.PerUnit Iolim = -1.3 "Current limit for high voltage reactive current management (specified as a negative value)" annotation (Dialog(group="Input Parameters"));
      parameter Modelica.Units.SI.Time Tfltr = 0.02 "Voltage filter time constant for low voltage active current management" annotation (Dialog(group="Input Parameters"));
      parameter Real Khv = 0.7 "Overvoltage compensation gain used in the high voltage reactive current management" annotation (Dialog(group="Input Parameters"));
      parameter Modelica.Units.SI.TimeAging Iqrmax = 9999 "Upper limit on rate of change for reactive current" annotation (Dialog(group="Input Parameters"));
      parameter Modelica.Units.SI.TimeAging Iqrmin = -9999 "Lower limit on rate of change for reactive current" annotation (Dialog(group="Input Parameters"));

      parameter Boolean Lvplsw=true "Enable (true) or disable (false) low voltage power logic." annotation (Dialog(tab="Controls"));

      OpenIPSL.Interfaces.PwPin p(
        vr(start=vr0),
        vi(start=vi0),
        ir(start=-ir0*CoB),
        ii(start=-ii0*CoB)) annotation (Placement(transformation(extent={{130,-10},{150,10}})));
      Modelica.Blocks.Interfaces.RealInput Iqcmd "Imaginary Command Current"
                                                                            annotation (Placement(transformation(extent={{-180,60},{-140,100}})));
      Modelica.Blocks.Interfaces.RealInput Ipcmd "Real Command Current" annotation (Placement(transformation(extent={{-180,-100},{-140,-60}})));
      Modelica.Blocks.Interfaces.RealOutput V_t "Terminal Voltage Magnitude" annotation (Placement(
            transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={-80,150})));
      Modelica.Blocks.Interfaces.RealOutput Pgen "Active Power injection"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={0,150})));
      Modelica.Blocks.Interfaces.RealOutput Qgen "Reactive Power injection"
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,150})));
    protected
      OpenIPSL.Types.Angle delta(start=angle_0);
      OpenIPSL.Types.PerUnit VT(start=v_0) "Bus voltage magnitude";
      OpenIPSL.Types.Angle anglev(start=angle_0) "Bus voltage angle";
      parameter OpenIPSL.Types.PerUnit p0=P_0/M_b "Initial active power (machine base)";
      parameter OpenIPSL.Types.PerUnit q0=Q_0/M_b "Initial reactive power (machine base)";
      parameter OpenIPSL.Types.PerUnit vr0=v_0*cos(angle_0);
      parameter OpenIPSL.Types.PerUnit vi0=v_0*sin(angle_0);
      parameter OpenIPSL.Types.PerUnit ir0=(p0*vr0 + q0*vi0)/(vr0^2 + vi0^2);
      parameter OpenIPSL.Types.PerUnit ii0=(p0*vi0 - q0*vr0)/(vr0^2 + vi0^2);
      parameter OpenIPSL.Types.PerUnit Isr0=ir0 "Source current re M_b";
      parameter OpenIPSL.Types.PerUnit Isi0=ii0 "Source current im M_b";
      parameter OpenIPSL.Types.PerUnit Ip0=Isr0*cos(-angle_0) - Isi0*sin(-angle_0);
      parameter OpenIPSL.Types.PerUnit Iq0=(Isr0*sin(-angle_0) + cos(-angle_0)*Isi0);
      parameter Real CoB=M_b/S_b "Change of base";

    equation
      anglev = atan2(p.vi, p.vr);
      VT = sqrt(p.vr*p.vr + p.vi*p.vi);
      delta = anglev;

     annotation (Icon(coordinateSystem(extent={{-140,-140},
                {140,140}}), graphics={
            Rectangle(extent={{-140,140},{140,-140}}, lineColor={28,108,200}),
            Text(
              extent={{-126,90},{-66,50}},
              textColor={0,0,255},
              textString="IQCMD"),
            Text(
              extent={{-126,-50},{-66,-90}},
              textColor={0,0,255},
              textString="IPCMD"),
            Text(
              extent={{-136,-100},{-104,-140}},
              textColor={0,0,255},
              textString="IQ0"),
            Text(
              extent={{-76,-100},{-44,-140}},
              textColor={0,0,255},
              textString="IP0"),
            Text(
              extent={{-14,-104},{14,-136}},
              textColor={0,0,255},
              textString="V0"),
            Text(
              extent={{46,-104},{74,-136}},
              textColor={0,0,255},
              textString="Q0"),
            Text(
              extent={{-110,140},{-70,110}},
              textColor={0,0,255},
              textString="VT"),
            Text(
              extent={{-30,140},{30,110}},
              textColor={0,0,255},
              textString="PGEN"),
            Text(
              extent={{60,140},{120,110}},
              textColor={0,0,255},
              textString="QGEN"),
            Text(
              extent={{106,-104},{134,-136}},
              textColor={0,0,255},
              textString="P0"),  Text(
              extent={{-82,70},{98,-70}},
              textColor={0,0,255},
              textString="REGCA")}),
                                  Diagram(
            coordinateSystem(extent={{-140,-140},{140,140}})),
        Documentation(info="<html>
<p>
This component is the base class for the inverter components from the InverterInterface sub-package.
</p>
<p>The modelling of such devices is based, mainly, on the following reference:</p>
<ul>
<li><p>Siemens: \"PSS&reg;E Model Library\"
<a href=\"modelica://OpenIPSL.UsersGuide.References\">[PSSE-MODELS]</a>.</p>
</li>
</ul>
</html>"));
    end BaseREGC_MPC;
  end GenerationUnits;

  package PSSE
    extends Modelica.Icons.ExamplesPackage;

    model Reconnection_Microgrid_PSSE_1_INPUT_WITH_INF_BUS
      "Base network for testing MPC control over the islanded generator"
      extends Modelica.Icons.Example;
      OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998855, angle_0=0.15699114448641)
        annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
      OpenIPSL.Electrical.Buses.Bus B1(v_0=0.992504, angle_0=0.076251672237088)
        annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=220000,
        VB1=220000,
        VNOM2=24000,
        VB2=24000) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=180,
            origin={-60,70})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        v_0=0.998855,
        angle_0=0.15699114448641,
        P_0=40000000,
        Q_0=4547321,
        V_b=24000)
        annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
      OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992681, angle_0=-0.0049879590159821)
        annotation (Placement(transformation(extent={{-10,60},{10,80}})));
      OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998705, angle_0=9.4873305611609e-06)
        annotation (Placement(transformation(extent={{50,60},{70,80}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
      OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.00014475935348966,
                                                              v_0=0.997342)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,10})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,40})));
      OpenIPSL.Electrical.Buses.Bus B5(v_0=1.0074, angle_0=0.0093371449790267)
                                       annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={60,-20})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=220000,
        VB1=220000,
        VNOM2=24000,
        VB2=24000,
        R=0.005,
        X=0.1) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=270,
            origin={60,-10})));
      OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_1INPUT_Pref
        G2(
        v_0=1.0074,
        angle_0=0.0093371449790267,
        V_b=24000,
        P_0=10010220,
        Q_0=10204330) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={60,-40})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                            fn=50)
        annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
      OpenIPSL.Electrical.Loads.PSSE.Load LD1(
        V_b=220000,
        v_0=0.992681,
        angle_0=-0.0049879590159821,
        P_0=50000000,
        Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
      Electrical.Events.Breaker breaker(enableTrigger=false, t_o=1)
                                               annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,22})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-20,-20},{20,20}},
            rotation=0,
            origin={-160,0})));
      Electrical.Loads.PSSE.Load_variation load_variation(
        V_b=220000,
        P_0=10000000,
        Q_0=10000000,
        v_0=0.997342,
        angle_0=-0.00014475935348966,
        d_P=0.1,
        t1=1000,
        d_t=2000)
        annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
      Electrical.Machines.PSSE.GENCLS          IB(
        V_b=220000,
        v_0=1,
        angle_0=0,
        P_0=10067010,
        Q_0=12058260,
        M_b=100000000,
        X_d=0.2) annotation (Placement(transformation(extent={{112,60},{102,80}})));
      Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
      OpenCPS.Controls.FREQ_CALC fREQ_CALC(
        T_w=2,
        T_f=1,
        fi_0=0.0093371449790267)
                annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
      Modelica.Blocks.Sources.RealExpression realExpression(y=B5.angle)
        annotation (Placement(transformation(extent={{-130,-80},{-110,-60}})));
      Modelica.Blocks.Interfaces.RealOutput frequency
        annotation (Placement(transformation(extent={{-28,-86},{-8,-66}})));
    equation
      //OUT1 = softPMU.freq;
      OUT2 = B4.v;

      connect(T1.p, B1.p)
        annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
      connect(BG1.p, T1.n)
        annotation (Line(points={{-80,70},{-66.6,70}},
                                                     color={0,0,255}));
      connect(G1.conn, BG1.p)
        annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
      connect(L1.n, B2.p)
        annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
      connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
            color={0,0,255}));
      connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
              70}}, color={0,0,255}));
      connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
              70}}, color={0,0,255}));
      connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                           color={0,0,255}));
      connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
            color={0,0,255}));
      connect(G2.conn, B5.p)
        annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
      connect(LD1.p, B2.p)
        annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
      connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                 color={0,0,255}));
      connect(breaker.s, B4.p)
        annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
      connect(T2.n, B5.p)
        annotation (Line(points={{60,-16.6},{60,-20}}, color={0,0,255}));
      connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,0},
              {80,0},{80,10}},      color={0,0,255}));
      connect(IB.p, B3.p)
        annotation (Line(points={{102,70},{60,70}}, color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-30},{-90,-30},{-90,
              -12},{-82,-12}},
                          color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-82,0}},
                         color={0,0,127}));
      connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-6},{44,-6},{44,
              -62},{60,-62},{60,-52}},
                                  color={0,0,127}));
      connect(T2.p, B4.p) annotation (Line(points={{60,-3.4},{60,0},{80,0},{80,10}},
                            color={0,0,255}));
      connect(realExpression.y,fREQ_CALC. ANGLE)
        annotation (Line(points={{-109,-70},{-99,-70}},color={0,0,127}));
      connect(frequency, fREQ_CALC.d_FREQ) annotation (Line(points={{-18,-76},{
              -74,-76},{-74,-66},{-79,-66}}, color={0,0,127}));
      annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-120},{140,120}})),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(StopTime=50, __Dymola_Algorithm="Dassl"));
    end Reconnection_Microgrid_PSSE_1_INPUT_WITH_INF_BUS;

    model Reconnection_Microgrid_PSSE_1_INPUT_WITH_INF_BUS2
      "Base network for testing MPC control over the islanded generator"
      extends Modelica.Icons.Example;
      OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998855, angle_0=0.15699114448641)
        annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
      OpenIPSL.Electrical.Buses.Bus B1(v_0=0.992504, angle_0=0.076251672237088)
        annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=220000,
        VB1=220000,
        VNOM2=24000,
        VB2=24000) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=180,
            origin={-60,70})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        v_0=0.998855,
        angle_0=0.15699114448641,
        P_0=40000000,
        Q_0=4547321,
        V_b=24000)
        annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
      OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992681, angle_0=-0.0049879590159821)
        annotation (Placement(transformation(extent={{-10,60},{10,80}})));
      OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998705, angle_0=9.4873305611609e-06)
        annotation (Placement(transformation(extent={{50,60},{70,80}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
      OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.00014475935348966,
                                                              v_0=0.997342)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,10})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,40})));
      OpenIPSL.Electrical.Buses.Bus B5(v_0=1.0074, angle_0=0.0093371449790267)
                                       annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={60,-20})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=220000,
        VB1=220000,
        VNOM2=24000,
        VB2=24000,
        R=0.005,
        X=0.1) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=270,
            origin={60,-10})));
      OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_1INPUT_Pref
        G2(
        v_0=1.0074,
        angle_0=0.0093371449790267,
        V_b=24000,
        P_0=10010220,
        Q_0=10204330) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={60,-40})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                            fn=50)
        annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
      OpenIPSL.Electrical.Loads.PSSE.Load LD1(
        V_b=220000,
        v_0=0.992681,
        angle_0=-0.0049879590159821,
        P_0=50000000,
        Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
      Electrical.Events.Breaker breaker(enableTrigger=false, t_o=1)
                                               annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,22})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-20,-20},{20,20}},
            rotation=0,
            origin={-160,0})));
      Electrical.Loads.PSSE.Load_variation load_variation(
        V_b=220000,
        P_0=10000000,
        Q_0=10000000,
        v_0=0.997342,
        angle_0=-0.00014475935348966,
        d_P=0.1,
        t1=1000,
        d_t=2000)
        annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
      Electrical.Machines.PSSE.GENCLS          IB(
        V_b=220000,
        v_0=1,
        angle_0=0,
        P_0=10067010,
        Q_0=12058260,
        M_b=100000000,
        H=1000,
        X_d=0.2) annotation (Placement(transformation(extent={{112,60},{102,80}})));
      Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
      Modelica.Blocks.Interfaces.RealOutput OUT1
        "Machine speed deviation from nominal [pu]"
        annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
    equation

      OUT2 = B4.v;

      connect(T1.p, B1.p)
        annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
      connect(BG1.p, T1.n)
        annotation (Line(points={{-80,70},{-66.6,70}},
                                                     color={0,0,255}));
      connect(G1.conn, BG1.p)
        annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
      connect(L1.n, B2.p)
        annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
      connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
            color={0,0,255}));
      connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
              70}}, color={0,0,255}));
      connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
              70}}, color={0,0,255}));
      connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                           color={0,0,255}));
      connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
            color={0,0,255}));
      connect(G2.conn, B5.p)
        annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
      connect(LD1.p, B2.p)
        annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
      connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                 color={0,0,255}));
      connect(breaker.s, B4.p)
        annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
      connect(T2.n, B5.p)
        annotation (Line(points={{60,-16.6},{60,-20}}, color={0,0,255}));
      connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,0},{80,
              0},{80,10}},          color={0,0,255}));
      connect(IB.p, B3.p)
        annotation (Line(points={{102,70},{60,70}}, color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-30},{-90,-30},{-90,-12},
              {-82,-12}}, color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-82,0}},
                         color={0,0,127}));
      connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-6},{44,-6},{44,-62},
              {60,-62},{60,-52}}, color={0,0,127}));
      connect(T2.p, B4.p) annotation (Line(points={{60,-3.4},{60,0},{80,0},{80,10}},
                            color={0,0,255}));
      connect(G2.SPEED1, OUT1) annotation (Line(points={{54,-29},{54,-30},{42,-30},{
              42,-80},{150,-80}}, color={0,0,127}));
      annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-120},{140,120}})),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(StopTime=50, __Dymola_Algorithm="Dassl"));
    end Reconnection_Microgrid_PSSE_1_INPUT_WITH_INF_BUS2;

    model Reconnection_Microgrid_PSSE_1_INPUT_WITH_CONST_V_SOURCE
      "Base network for testing MPC control over the islanded generator"
      extends Modelica.Icons.Example;
      OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998855, angle_0=0.15699114448641)
        annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
      OpenIPSL.Electrical.Buses.Bus B1(v_0=0.992504, angle_0=0.076251672237088)
        annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
        R=0.001,
        X=0.2,
        G=0,
        B=0,
        VNOM1=220000,
        VB1=220000,
        VNOM2=24000,
        VB2=24000) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=180,
            origin={-60,70})));
      OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
        v_0=0.998855,
        angle_0=0.15699114448641,
        P_0=40000000,
        Q_0=4547321,
        V_b=24000)
        annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
      OpenIPSL.Electrical.Branches.PwLine L1(
        R=0.001,
        X=0.2,
        G=0,
        B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
      OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992681, angle_0=-0.0049879590159821)
        annotation (Placement(transformation(extent={{-10,60},{10,80}})));
      OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998705, angle_0=9.4873305611609e-06)
        annotation (Placement(transformation(extent={{50,60},{70,80}})));
      OpenIPSL.Electrical.Branches.PwLine L2_1(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
      OpenIPSL.Electrical.Branches.PwLine L2_2(
        R=0.0005,
        X=0.1,
        G=0,
        B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
      OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.00014475935348966,
                                                              v_0=0.997342)
        annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={80,10})));
      OpenIPSL.Electrical.Branches.PwLine L3(
        R=0.001,
        X=0.2,
        G=0,
        B=0) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=-90,
            origin={80,40})));
      OpenIPSL.Electrical.Buses.Bus B5(v_0=1.0074, angle_0=0.0093371449790267)
                                       annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={60,-20})));
      OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
        G=0,
        B=0,
        VNOM1=220000,
        VB1=220000,
        VNOM2=24000,
        VB2=24000,
        R=0.005,
        X=0.1) annotation (Placement(transformation(
            extent={{-6,-4},{6,4}},
            rotation=270,
            origin={60,-6})));
      OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_1INPUT_Pref
        G2(
        v_0=1.0074,
        angle_0=0.0093371449790267,
        V_b=24000,
        P_0=10010220,
        Q_0=10204330) annotation (Placement(transformation(
            extent={{-10,-10},{10,10}},
            rotation=90,
            origin={60,-40})));
      inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                            fn=50)
        annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
      OpenIPSL.Electrical.Loads.PSSE.Load LD1(
        V_b=220000,
        v_0=0.992681,
        angle_0=-0.0049879590159821,
        P_0=50000000,
        Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
      Electrical.Events.Breaker breaker(enableTrigger=false, t_o=1)
                                               annotation (Placement(transformation(
            extent={{-4,-4},{4,4}},
            rotation=90,
            origin={80,22})));

      Modelica.Blocks.Interfaces.RealInput IN1(start=0)
        "Connector of Real input signal 2" annotation (Placement(transformation(
            extent={{-20,-20},{20,20}},
            rotation=0,
            origin={-160,0})));
      Electrical.Loads.PSSE.Load_variation load_variation(
        V_b=220000,
        P_0=10000000,
        Q_0=10000000,
        v_0=0.997342,
        angle_0=-0.00014475935348966,
        d_P=0.1,
        t1=1000,
        d_t=2000)
        annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
      Electrical.Sensors.SoftPMU softPMU(v_0=0.997342, angle_0=-0.00014475935348966)
        annotation (Placement(transformation(extent={{26,0},{46,20}})));
      Modelica.Blocks.Interfaces.RealOutput OUT1
        annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
      Modelica.Blocks.Interfaces.RealOutput OUT2
        annotation (Placement(transformation(extent={{140,50},{160,70}})));
      Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
        annotation (Placement(transformation(
            extent={{-10,10},{10,-10}},
            rotation=180,
            origin={86,96})));
      Modelica.Blocks.Sources.Constant VR(k=0.998726)
        annotation (Placement(transformation(extent={{130,90},{110,110}})));
      Modelica.Blocks.Sources.Constant VI(k=3.7730e-5)
        annotation (Placement(transformation(extent={{132,56},{112,76}})));
      Modelica.Blocks.Sources.Constant IN11(k=0)
        annotation (Placement(transformation(extent={{-120,-60},{-100,-40}})));
      Modelica.Blocks.Math.Add AddU1
        annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
    equation
      OUT1 = softPMU.freq;
      OUT2 = B4.v;

      connect(T1.p, B1.p)
        annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
      connect(BG1.p, T1.n)
        annotation (Line(points={{-80,70},{-66.6,70}},
                                                     color={0,0,255}));
      connect(G1.conn, BG1.p)
        annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
      connect(L1.n, B2.p)
        annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
      connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
            color={0,0,255}));
      connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
              70}}, color={0,0,255}));
      connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
              70}}, color={0,0,255}));
      connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                           color={0,0,255}));
      connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
            color={0,0,255}));
      connect(G2.conn, B5.p)
        annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
      connect(LD1.p, B2.p)
        annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
      connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                 color={0,0,255}));
      connect(breaker.s, B4.p)
        annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
      connect(breaker.r, L3.n)
        annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
      connect(T2.n, B5.p)
        annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
      connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,-8},{
              80,-8},{80,10}},      color={0,0,255}));
      connect(softPMU.n, B4.p)
        annotation (Line(points={{43,10},{80,10}}, color={0,0,255}));
      connect(T2.p, softPMU.p) annotation (Line(points={{60,0.6},{40,0.6},{40,0},{
              20,0},{20,10},{29,10}}, color={0,0,255}));
      connect(VR.y,voltageSourceReImInput. vRe)
        annotation (Line(points={{109,100},{98,100}},  color={0,0,127}));
      connect(VI.y,voltageSourceReImInput. vIm) annotation (Line(points={{111,66},
              {106,66},{106,92},{98,92}},  color={0,0,127}));
      connect(voltageSourceReImInput.p, B3.p)
        annotation (Line(points={{75,96},{60,96},{60,70}}, color={0,0,255}));
      connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-50},{-90,-50},{-90,
              -36},{-82,-36}}, color={0,0,127}));
      connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-92,0},{-92,-24},
              {-82,-24}}, color={0,0,127}));
      connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-30},{44,-30},{44,
              -62},{60,-62},{60,-52}}, color={0,0,127}));
      annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
              extent={{-140,-120},{140,120}})),
        Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),
        experiment(StopTime=10, __Dymola_Algorithm="Dassl"));
    end Reconnection_Microgrid_PSSE_1_INPUT_WITH_CONST_V_SOURCE;

    package OBSERVABLE_CONTROLLABLE_STABLE

      model Reconnection_Microgrid_PSSE_1_INPUT_WITH_CONST_V_SOURCE2_NO_TG
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998855, angle_0=0.15699114448641)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B1(v_0=0.992504, angle_0=0.076251672237088)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=0.998855,
          angle_0=0.15699114448641,
          P_0=40000000,
          Q_0=4547321,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992681, angle_0=-0.0049879590159821)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998705, angle_0=
              9.4873305611609e-06)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
        OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.00014475935348966,
                                                                v_0=0.997342)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B5(v_0=1.0074, angle_0=0.0093371449790267)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_1INPUT_Pref_NO_TurbGov
          G2(
          v_0=1.0074,
          angle_0=0.0093371449790267,
          V_b=24000,
          P_0=10010220,
          Q_0=10204330) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load LD1(
          V_b=220000,
          v_0=0.992681,
          angle_0=-0.0049879590159821,
          P_0=50000000,
          Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
        Electrical.Events.Breaker breaker(enableTrigger=false, t_o=0.25)
                                                 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,0})));
        Electrical.Loads.PSSE.Load_variation load_variation(
          V_b=220000,
          P_0=15000000,
          Q_0=10000000,
          v_0=0.997342,
          angle_0=-0.00014475935348966,
          d_P=0.05,
          t1=5,
          d_t=1)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
          annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={86,96})));
        Modelica.Blocks.Sources.Constant VR(k=0.998726)
          annotation (Placement(transformation(extent={{130,90},{110,110}})));
        Modelica.Blocks.Sources.Constant VI(k=3.7730e-5)
          annotation (Placement(transformation(extent={{132,56},{112,76}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-46},{-100,-26}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      equation
        OUT1 = G2.SPEED1;
        OUT2 = B4.v;

        connect(T1.p, B1.p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(BG1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}},
                                                       color={0,0,255}));
        connect(G1.conn, BG1.p)
          annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
        connect(L1.n, B2.p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                             color={0,0,255}));
        connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
              color={0,0,255}));
        connect(G2.conn, B5.p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(LD1.p, B2.p)
          annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
        connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s, B4.p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n, B5.p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,2},{80,
                2},{80,10}},          color={0,0,255}));
        connect(VR.y,voltageSourceReImInput. vRe)
          annotation (Line(points={{109,100},{98,100}},  color={0,0,127}));
        connect(VI.y,voltageSourceReImInput. vIm) annotation (Line(points={{111,66},{106,
                66},{106,92},{98,92}},       color={0,0,127}));
        connect(voltageSourceReImInput.p, B3.p)
          annotation (Line(points={{75,96},{60,96},{60,70}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-36},{-82,-36}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-92,0},{-92,-24},{-82,
                -24}}, color={0,0,127}));
        connect(T2.p, B4.p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));
        connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-30},{-20,-30},{
                -20,-78},{60,-78},{60,-52}}, color={0,0,127}));
        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_1_INPUT_WITH_CONST_V_SOURCE2_NO_TG;

      model Reconnection_Microgrid_PSSE_1_INPUT_WITH_CONST_V_SOURCE2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998855, angle_0=0.15699114448641)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B1(v_0=0.992504, angle_0=0.076251672237088)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=0.998855,
          angle_0=0.15699114448641,
          P_0=40000000,
          Q_0=4547321,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992681, angle_0=-0.0049879590159821)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998705, angle_0=9.4873305611609e-06)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
        OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.00014475935348966,
                                                                v_0=0.997342)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B5(v_0=1.0074, angle_0=0.0093371449790267)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_1INPUT_Pref
          G2(
          v_0=1.0074,
          angle_0=0.0093371449790267,
          V_b=24000,
          P_0=10010220,
          Q_0=10204330) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load LD1(
          V_b=220000,
          v_0=0.992681,
          angle_0=-0.0049879590159821,
          P_0=50000000,
          Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
        Electrical.Events.Breaker breaker(enableTrigger=false, t_o=0.1)
                                                 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,0})));
        Electrical.Loads.PSSE.Load_variation load_variation(
          V_b=220000,
          P_0=15000000,
          Q_0=15000000,
          v_0=0.997342,
          angle_0=-0.00014475935348966,
          d_P=0.1,
          t1=1000,
          d_t=2000)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
          annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={86,96})));
        Modelica.Blocks.Sources.Constant VR(k=0.998726)
          annotation (Placement(transformation(extent={{130,90},{110,110}})));
        Modelica.Blocks.Sources.Constant VI(k=3.7730e-5)
          annotation (Placement(transformation(extent={{132,56},{112,76}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-46},{-100,-26}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
        OpenCPS.Controls.FREQ_CALC fREQ_CALC(
          T_w=2,
          T_f=1,
          fi_0=0.0093371449790267)
                  annotation (Placement(transformation(extent={{-20,-80},{0,-60}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=B5.angle)
          annotation (Placement(transformation(extent={{-50,-80},{-30,-60}})));
        Modelica.Blocks.Sources.Constant constant_freq(k=SysData.fn)
          annotation (Placement(transformation(extent={{-20,-110},{0,-90}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{20,-94},{40,-74}})));
      equation
        OUT1 = AddU2.y;
        OUT2 = B4.v;

        connect(T1.p, B1.p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(BG1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}},
                                                       color={0,0,255}));
        connect(G1.conn, BG1.p)
          annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
        connect(L1.n, B2.p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                             color={0,0,255}));
        connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
              color={0,0,255}));
        connect(G2.conn, B5.p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(LD1.p, B2.p)
          annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
        connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s, B4.p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n, B5.p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,2},
                {80,2},{80,10}}, color={0,0,255}));
        connect(VR.y,voltageSourceReImInput. vRe)
          annotation (Line(points={{109,100},{98,100}},  color={0,0,127}));
        connect(VI.y,voltageSourceReImInput. vIm) annotation (Line(points={{111,66},{106,
                66},{106,92},{98,92}},       color={0,0,127}));
        connect(voltageSourceReImInput.p, B3.p)
          annotation (Line(points={{75,96},{60,96},{60,70}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-36},{-82,-36}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-92,0},{-92,-24},{-82,
                -24}}, color={0,0,127}));
        connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-30},{44,-30},{44,-62},
                {60,-62},{60,-52}}, color={0,0,127}));
        connect(T2.p, B4.p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));
        connect(realExpression.y,fREQ_CALC. ANGLE)
          annotation (Line(points={{-29,-70},{-19,-70}}, color={0,0,127}));
        connect(constant_freq.y, AddU2.u2) annotation (Line(points={{1,-100},{10,-100},
                {10,-90},{18,-90}}, color={0,0,127}));
        connect(fREQ_CALC.d_FREQ, AddU2.u1) annotation (Line(points={{1,-66},{10,-66},
                {10,-78},{18,-78}}, color={0,0,127}));
        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_1_INPUT_WITH_CONST_V_SOURCE2;

      model Reconnection_Microgrid_PSSE_1_INPUT_WITH_CONST_V_SOURCE2_WITH_TG
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998718, angle_0=0.15701226297036)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B1(v_0=0.99243, angle_0=0.076256751145211)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=0.998855,
          angle_0=0.15699114448641,
          P_0=40000000,
          Q_0=4547321,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992672, angle_0=-0.0049916242074113)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998726, angle_0=
              3.7778175258193e-05)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
        OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.010019446543509, v_0=0.998323)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B5(v_0=1.00875, angle_0=-0.00057912293509199)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_1INPUT_Pref_WITH_TurbGov
          G2(
          v_0=1.0074,
          angle_0=0.0093371449790267,
          V_b=24000,
          P_0=10010220,
          Q_0=10204330) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load LD1(
          V_b=220000,
          v_0=0.992681,
          angle_0=-0.0049879590159821,
          P_0=50000000,
          Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
        Electrical.Events.Breaker breaker(enableTrigger=false, t_o=5)
                                                 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,0})));
        Electrical.Loads.PSSE.Load_variation load_variation(
          V_b=220000,
          P_0=15000000,
          Q_0=10000000,
          v_0=0.997342,
          angle_0=-0.00014475935348966,
          d_P=0.05,
          t1=10000,
          d_t=1000001)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
          annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={86,96})));
        Modelica.Blocks.Sources.Constant VR(k=0.999211)
          annotation (Placement(transformation(extent={{130,90},{110,110}})));
        Modelica.Blocks.Sources.Constant VI(k=-0.00980921)
          annotation (Placement(transformation(extent={{132,56},{112,76}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-46},{-100,-26}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
      equation
        OUT1 = G2.SPEED1;
        OUT2 = G2.PMECH1;
        OUT3 = B4.v;
        OUT4 = G2.TF2_out1;

        connect(T1.p, B1.p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(BG1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}},
                                                       color={0,0,255}));
        connect(G1.conn, BG1.p)
          annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
        connect(L1.n, B2.p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                             color={0,0,255}));
        connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
              color={0,0,255}));
        connect(G2.conn, B5.p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(LD1.p, B2.p)
          annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
        connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s, B4.p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n, B5.p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,2},{80,
                2},{80,10}},          color={0,0,255}));
        connect(VR.y,voltageSourceReImInput. vRe)
          annotation (Line(points={{109,100},{98,100}},  color={0,0,127}));
        connect(VI.y,voltageSourceReImInput. vIm) annotation (Line(points={{111,66},{106,
                66},{106,92},{98,92}},       color={0,0,127}));
        connect(voltageSourceReImInput.p, B3.p)
          annotation (Line(points={{75,96},{60,96},{60,70}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-36},{-82,-36}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-92,0},{-92,-24},{-82,
                -24}}, color={0,0,127}));
        connect(T2.p, B4.p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));
        connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-30},{-20,-30},{
                -20,-78},{60,-78},{60,-52}}, color={0,0,127}));
        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            Tolerance=1e-09,
            __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_1_INPUT_WITH_CONST_V_SOURCE2_WITH_TG;

      model Reconnection_Microgrid_PSSE_1_INPUT_WITH_INF_WITH_TG
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.997684, angle_0=0.14741399928195)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B1(v_0=0.991863, angle_0=0.066525318834866)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=0.997684, angle_0=0.14741399928195,
          P_0=40000000,
          Q_0=4547321,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992584, angle_0=-0.014780076424419)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998758, angle_0=-0.0097534060056274)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
        OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.01980931247721, v_0=0.998291)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B5(v_0=1.00869, angle_0=-0.01036638309222)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-18})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_1INPUT_Pref_WITH_TurbGov
          G2(
          v_0=1.00869,
          angle_0=-0.01036638309222,
          V_b=24000,
          P_0=10010220,
          Q_0=10204330) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load LD1(
          V_b=220000,
          v_0=0.992681,
          angle_0=-0.0049879590159821,
          P_0=50000000,
          Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
        Electrical.Events.Breaker breaker(enableTrigger=false, t_o=0.25)
                                                 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,0})));
        Electrical.Loads.PSSE.Load_variation load_variation(
          V_b=220000,
          P_0=15000000,
          Q_0=10000000,
          v_0=0.997342,
          angle_0=-0.00014475935348966,
          d_P=0.05,
          t1=10000,
          d_t=1000001)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-46},{-100,-26}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Electrical.Machines.PSSE.GENCLS          IB(
          V_b=220000,
          v_0=0.998758,
          angle_0=-0.0097534060056274,
          P_0=15042100,
          Q_0=12541100,
          M_b=100000000,
          X_d=0.2) annotation (Placement(transformation(extent={{104,60},{94,80}})));
      equation
        OUT1 = G2.SPEED1;
        OUT2 = G2.PMECH1;
        OUT3 = B4.v;
        OUT4 = G2.TF2_out1;

        connect(T1.p, B1.p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(BG1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}},
                                                       color={0,0,255}));
        connect(G1.conn, BG1.p)
          annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
        connect(L1.n, B2.p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                             color={0,0,255}));
        connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
              color={0,0,255}));
        connect(G2.conn, B5.p)
          annotation (Line(points={{60,-29},{60,-18}}, color={0,0,255}));
        connect(LD1.p, B2.p)
          annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
        connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s, B4.p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n, B5.p)
          annotation (Line(points={{60,-12.6},{60,-18}}, color={0,0,255}));
        connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,2},{80,
                2},{80,10}},          color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-36},{-82,-36}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-92,0},{-92,-24},{-82,
                -24}}, color={0,0,127}));
        connect(T2.p, B4.p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));
        connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-30},{-20,-30},{
                -20,-78},{60,-78},{60,-52}}, color={0,0,127}));
        connect(IB.p, B3.p)
          annotation (Line(points={{94,70},{60,70}}, color={0,0,255}));
        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_1_INPUT_WITH_INF_WITH_TG;

      model Reconnection_Microgrid_PSSE_2_INPUT_WITH_CONST_V_SOURCE2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998718, angle_0=0.15701226297036)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B1(v_0=0.99243, angle_0=0.076256751145211)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=0.998855,
          angle_0=0.15699114448641,
          P_0=40000000,
          Q_0=4547321,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992672, angle_0=-0.0049916242074113)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998726, angle_0=
              3.7778175258193e-05)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
        OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.010019446543509, v_0=0.998323)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B5(v_0=1.00875, angle_0=-0.00057912293509199)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_2INPUTS
          G2(
          v_0=1.0074,
          angle_0=0.0093371449790267,
          V_b=24000,
          P_0=10010220,
          Q_0=10204330) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load LD1(
          V_b=220000,
          v_0=0.992681,
          angle_0=-0.0049879590159821,
          P_0=50000000,
          Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
        Electrical.Events.Breaker breaker(enableTrigger=false, t_o=0.1)
                                                 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,0})));
        Electrical.Loads.PSSE.Load_variation load_variation(
          V_b=220000,
          P_0=15000000,
          Q_0=10000000,
          v_0=0.997342,
          angle_0=-0.00014475935348966,
          d_P=0.05,
          t1=10000,
          d_t=1000001)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
          annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={86,96})));
        Modelica.Blocks.Sources.Constant VR(k=0.999211)
          annotation (Placement(transformation(extent={{130,90},{110,110}})));
        Modelica.Blocks.Sources.Constant VI(k=-0.00980921)
          annotation (Placement(transformation(extent={{132,56},{112,76}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-46},{-100,-26}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
            Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-94},{-60,-74}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,-54})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
           Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{124,-142},{144,-122}})));
           Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));
               Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{124,-142},{144,-122}})));
           Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));
               Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{124,-142},{144,-122}})));
           Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));
           Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));

      equation
        OUT1 = G2.SPEED1;
        OUT2 = G2.PMECH1;
        OUT3 = G2.gen.ANGLE;
        OUT4 = G2.TF2_out1;
        OUT5 = B3.angle;
        OUT6 = B3.v;
        OUT7 = B4.angle;
        OUT8 = B4.v;
        OUT9 = B4.p.vr;
        OUT10 = B4.p.vi;
        OUT11 = G2.gen.PELEC;

        connect(T1.p, B1.p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(BG1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}},
                                                       color={0,0,255}));
        connect(G1.conn, BG1.p)
          annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
        connect(L1.n, B2.p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                             color={0,0,255}));
        connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
              color={0,0,255}));
        connect(G2.conn, B5.p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(LD1.p, B2.p)
          annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
        connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s, B4.p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n, B5.p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,2},{80,
                2},{80,10}},          color={0,0,255}));
        connect(VR.y,voltageSourceReImInput. vRe)
          annotation (Line(points={{109,100},{98,100}},  color={0,0,127}));
        connect(VI.y,voltageSourceReImInput. vIm) annotation (Line(points={{111,66},{106,
                66},{106,92},{98,92}},       color={0,0,127}));
        connect(voltageSourceReImInput.p, B3.p)
          annotation (Line(points={{75,96},{60,96},{60,70}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-36},{-82,-36}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-92,0},{-92,-24},{-82,
                -24}}, color={0,0,127}));
        connect(T2.p, B4.p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));
        connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-30},{-20,-30},{-20,-78},
                {56,-78},{56,-52}},          color={0,0,127}));
        connect(IN22.y, AddU2.u2)
          annotation (Line(points={{-99,-90},{-82,-90}}, color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-160,-54},{-90,-54},{-90,-78},
                {-82,-78}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-84},{62,-84},{62,-52}}, color={0,0,127}));

        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            Tolerance=1e-09,
            __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_2_INPUT_WITH_CONST_V_SOURCE2;

      model Reconnection_Microgrid_PSSE_2_INPUT_WITH_CONST_V_SOURCE2_V2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998718, angle_0=0.15701226297036)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B1(v_0=0.99243, angle_0=0.076256751145211)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=0.998855,
          angle_0=0.15699114448641,
          P_0=40000000,
          Q_0=4547321,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992672, angle_0=-0.0049916242074113)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998726, angle_0=3.7778175258193e-05)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
        OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.010019446543509, v_0=0.998323)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B5(v_0=1.00875, angle_0=-0.00057912293509199)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_2INPUTS
          G2(
          v_0=1.0074,
          angle_0=0.0093371449790267,
          V_b=24000,
          P_0=10010220,
          Q_0=10204330) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load LD1(
          V_b=220000,
          v_0=0.992681,
          angle_0=-0.0049879590159821,
          P_0=50000000,
          Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
        Electrical.Events.Breaker breaker(enableTrigger=false, t_o=0.1)
                                                 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,0})));
        Electrical.Loads.PSSE.Load_variation load_variation(
          V_b=220000,
          P_0=15000000,
          Q_0=10000000,
          v_0=0.997342,
          angle_0=-0.00014475935348966,
          d_P=0.05,
          t1=10000,
          d_t=1000001)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
          annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={86,96})));
        Modelica.Blocks.Sources.Constant VR(k=0.999211)
          annotation (Placement(transformation(extent={{130,90},{110,110}})));
        Modelica.Blocks.Sources.Constant VI(k=-0.00980921)
          annotation (Placement(transformation(extent={{132,56},{112,76}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-46},{-100,-26}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
            Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-94},{-60,-74}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,-54})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
           Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{124,-142},{144,-122}})));
           Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));
               Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{124,-142},{144,-122}})));
           Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));
          Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));

      equation
        OUT1 = G2.SPEED1;
        OUT2 = G2.PMECH1;
        OUT3 = B4.v;
        OUT4 = G2.TF2_out1;
        OUT5 = B3.p.vr;
        OUT6 = B3.p.vi;
        OUT7 = B4.p.vr;
        OUT8 = B4.p.vi;
        OUT9 = G2.gen.delta;

        connect(T1.p, B1.p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(BG1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}},
                                                       color={0,0,255}));
        connect(G1.conn, BG1.p)
          annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
        connect(L1.n, B2.p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                             color={0,0,255}));
        connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
              color={0,0,255}));
        connect(G2.conn, B5.p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(LD1.p, B2.p)
          annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
        connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s, B4.p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n, B5.p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,2},{80,
                2},{80,10}},          color={0,0,255}));
        connect(VR.y,voltageSourceReImInput. vRe)
          annotation (Line(points={{109,100},{98,100}},  color={0,0,127}));
        connect(VI.y,voltageSourceReImInput. vIm) annotation (Line(points={{111,66},{106,
                66},{106,92},{98,92}},       color={0,0,127}));
        connect(voltageSourceReImInput.p, B3.p)
          annotation (Line(points={{75,96},{60,96},{60,70}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-36},{-82,-36}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-92,0},{-92,-24},{-82,
                -24}}, color={0,0,127}));
        connect(T2.p, B4.p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));
        connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-30},{-20,-30},{-20,-78},
                {56,-78},{56,-52}},          color={0,0,127}));
        connect(IN22.y, AddU2.u2)
          annotation (Line(points={{-99,-90},{-82,-90}}, color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-160,-54},{-90,-54},{-90,-78},
                {-82,-78}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-84},{62,-84},{62,-52}}, color={0,0,127}));

        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            Tolerance=1e-09,
            __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_2_INPUT_WITH_CONST_V_SOURCE2_V2;

      model Reconnection_Microgrid_PSSE_3_INPUT_WITH_CONST_V_SOURCE3
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus B1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus B5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        GenerationUnits.PSSE.G2_3INPUTS                       G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=24000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3)
          annotation (Placement(transformation(extent={{-20,20},{0,40}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=101,
          rc_enabled=false)                      annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,-40})));
        Electrical.Loads.PSSE.Load_variation Load2(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-70},{-100,-50}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-56},{-60,-36}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-110},{-100,-90}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-96},{-60,-76}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,-80})));
      Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,100},{160,120}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,80},{160,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,60},{160,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,40},{160,60}})));
           Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,20},{160,40}})));
           Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,0},{160,20}})));
               Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-20},{160,0}})));
           Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-40},{160,-20}})));
               Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-60},{160,-40}})));
           Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-80},{160,-60}})));
           Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{140,-100},{160,-80}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF01)
          annotation (Placement(transformation(extent={{-68,104},{-54,118}})));
        Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
          annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={88,96})));
        Modelica.Blocks.Sources.Constant VR(k=0.999211)
          annotation (Placement(transformation(extent={{132,90},{112,110}})));
        Modelica.Blocks.Sources.Constant VI(k=-0.00980921)
          annotation (Placement(transformation(extent={{134,56},{114,76}})));
      equation
        OUT1 = G2.SPEED1;
        OUT2 = G2.PMECH1;
        OUT3 = G2.gen.ANGLE;
        OUT4 = G2.TF2_out1;
        OUT5 =B4.angle;
        OUT6 =B4.v;
        OUT7 =B5.angle;
        OUT8 =B5.v;
        OUT9 =B5.p.vr;
        OUT10 =B5.p.vi;
        OUT11 = G2.gen.PELEC;
        connect(T1.p,B2. p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(B1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}}, color={0,0,255}));
        connect(G1.conn, B1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n,B3. p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p,B2. p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n,B4. p) annotation (Line(points={{35.4,60},{44,60},{44,70},
                {60,70}},
                      color={0,0,255}));
        connect(L2_1.n,B4. p) annotation (Line(points={{35.4,80},{44,80},{44,70},
                {60,70}},
                      color={0,0,255}));
        connect(L2_1.p,B3. p) annotation (Line(points={{24.6,80},{16,80},{16,70},
                {0,70}},     color={0,0,255}));
        connect(L2_2.p,B3. p) annotation (Line(points={{24.6,60},{16,60},{16,70},
                {0,70}},
              color={0,0,255}));
        connect(G2.conn,B6. p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(Load1.p, B3.p)
          annotation (Line(points={{-10,40},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p,B4. p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s,B5. p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n,B6. p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(Load2.p, B5.p) annotation (Line(points={{100,-20},{100,2},{80,2},
                {80,10}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-60},{-82,-60},{
                -82,-52}},  color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,-40},{-82,-40}},
                       color={0,0,127}));
        connect(T2.p,B5. p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99,-100},{-82,-100},{-82,
                -92}}, color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-160,-80},{-82,-80}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-86},{66,-86},{66,-52}}, color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-46},{44,-46},{
                44,-52},{54,-52}},                  color={0,0,127}));
        connect(VI.y, voltageSourceReImInput.vIm) annotation (Line(points={{113,
                66},{110,66},{110,86},{108,86},{108,92},{100,92}}, color={0,0,127}));
        connect(VR.y, voltageSourceReImInput.vRe)
          annotation (Line(points={{111,100},{100,100}}, color={0,0,127}));
        connect(voltageSourceReImInput.p, B4.p) annotation (Line(points={{77,96},
                {70,96},{70,70},{60,70}}, color={0,0,255}));
        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            Tolerance=1e-09,
            __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_3_INPUT_WITH_CONST_V_SOURCE3;

      model Reconnection_Microgrid_PSSE_3_INPUT_WITH_INF_BUS
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        OpenIPSL.Electrical.Buses.Bus B1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus B5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        GenerationUnits.PSSE.G2_3INPUTS                       G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=24000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3)
          annotation (Placement(transformation(extent={{-20,20},{0,40}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=101,
          rc_enabled=false)                      annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,-40})));
        Electrical.Loads.PSSE.Load_variation Load2(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-70},{-100,-50}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-56},{-60,-36}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-110},{-100,-90}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-96},{-60,-76}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,-80})));
      Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,100},{160,120}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,80},{160,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,60},{160,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,40},{160,60}})));
           Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,20},{160,40}})));
           Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,0},{160,20}})));
               Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-20},{160,0}})));
           Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-40},{160,-20}})));
               Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-60},{160,-40}})));
           Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-80},{160,-60}})));
           Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{140,-100},{160,-80}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF01)
          annotation (Placement(transformation(extent={{-68,104},{-54,118}})));
        Electrical.Machines.PSSE.GENCLS          IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1)   annotation (Placement(transformation(extent={{110,60},{100,80}})));
      equation
        OUT1 = G2.SPEED1;
        OUT2 = G2.PMECH1;
        OUT3 = G2.gen.ANGLE;
        OUT4 = G2.TF2_out1;
        OUT5 =B4.angle;
        OUT6 =B4.v;
        OUT7 =B5.angle;
        OUT8 =B5.v;
        OUT9 =B5.p.vr;
        OUT10 =B5.p.vi;
        OUT11 = G2.gen.PELEC;
        connect(T1.p,B2. p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(B1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}}, color={0,0,255}));
        connect(G1.conn, B1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n,B3. p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p,B2. p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n,B4. p) annotation (Line(points={{35.4,60},{44,60},{44,70},
                {60,70}},
                      color={0,0,255}));
        connect(L2_1.n,B4. p) annotation (Line(points={{35.4,80},{44,80},{44,70},
                {60,70}},
                      color={0,0,255}));
        connect(L2_1.p,B3. p) annotation (Line(points={{24.6,80},{16,80},{16,70},
                {0,70}},     color={0,0,255}));
        connect(L2_2.p,B3. p) annotation (Line(points={{24.6,60},{16,60},{16,70},
                {0,70}},
              color={0,0,255}));
        connect(G2.conn,B6. p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(Load1.p, B3.p)
          annotation (Line(points={{-10,40},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p,B4. p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s,B5. p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n,B6. p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(Load2.p, B5.p) annotation (Line(points={{100,-20},{100,2},{80,2},
                {80,10}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-60},{-82,-60},{
                -82,-52}},  color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,-40},{-82,-40}},
                       color={0,0,127}));
        connect(T2.p,B5. p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99,-100},{-82,-100},{-82,
                -92}}, color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-160,-80},{-82,-80}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-86},{66,-86},{66,-52}}, color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-46},{44,-46},{
                44,-52},{54,-52}},                  color={0,0,127}));
        connect(IB.p, B4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            Tolerance=1e-09,
            __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_3_INPUT_WITH_INF_BUS;
    end OBSERVABLE_CONTROLLABLE_STABLE;

    package NOTCONTROLLABLE_NOTOBSERVABLE_STABLE

      model
        Reconnection_Microgrid_PSSE_1_INPUT_1_OUTPUT_WITH_CONST_V_SOURCE2_NO_TG
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998855, angle_0=0.15699114448641)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B1(v_0=0.992504, angle_0=0.076251672237088)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=0.998855,
          angle_0=0.15699114448641,
          P_0=40000000,
          Q_0=4547321,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992681, angle_0=-0.0049879590159821)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998705, angle_0=9.4873305611609e-06)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
        OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.00014475935348966,
                                                                v_0=0.997342)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B5(v_0=1.0074, angle_0=0.0093371449790267)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_1INPUT_Pref_NO_TurbGov
          G2(
          v_0=1.0074,
          angle_0=0.0093371449790267,
          V_b=24000,
          P_0=10010220,
          Q_0=10204330) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load LD1(
          V_b=220000,
          v_0=0.992681,
          angle_0=-0.0049879590159821,
          P_0=50000000,
          Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
        Electrical.Events.Breaker breaker(enableTrigger=false, t_o=0.1)
                                                 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,0})));
        Electrical.Loads.PSSE.Load_variation load_variation(
          V_b=220000,
          P_0=15000000,
          Q_0=15000000,
          v_0=0.997342,
          angle_0=-0.00014475935348966,
          d_P=0.1,
          t1=1000,
          d_t=2000)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
          annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={86,96})));
        Modelica.Blocks.Sources.Constant VR(k=0.998726)
          annotation (Placement(transformation(extent={{130,90},{110,110}})));
        Modelica.Blocks.Sources.Constant VI(k=3.7730e-5)
          annotation (Placement(transformation(extent={{132,56},{112,76}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-46},{-100,-26}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
      equation
        OUT1 = G2.gen.w;

        connect(T1.p, B1.p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(BG1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}},
                                                       color={0,0,255}));
        connect(G1.conn, BG1.p)
          annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
        connect(L1.n, B2.p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                             color={0,0,255}));
        connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
              color={0,0,255}));
        connect(G2.conn, B5.p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(LD1.p, B2.p)
          annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
        connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s, B4.p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n, B5.p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,2},{80,
                2},{80,10}},          color={0,0,255}));
        connect(VR.y,voltageSourceReImInput. vRe)
          annotation (Line(points={{109,100},{98,100}},  color={0,0,127}));
        connect(VI.y,voltageSourceReImInput. vIm) annotation (Line(points={{111,66},{106,
                66},{106,92},{98,92}},       color={0,0,127}));
        connect(voltageSourceReImInput.p, B3.p)
          annotation (Line(points={{75,96},{60,96},{60,70}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-36},{-82,-36}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-92,0},{-92,-24},{-82,
                -24}}, color={0,0,127}));
        connect(T2.p, B4.p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));
        connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-30},{-20,-30},{
                -20,-78},{60,-78},{60,-52}}, color={0,0,127}));
        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"));
      end
        Reconnection_Microgrid_PSSE_1_INPUT_1_OUTPUT_WITH_CONST_V_SOURCE2_NO_TG;

      model Reconnection_Microgrid_PSSE_2_INPUT_WITH_CONST_V_SOURCE2_NO_TG
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;
        OpenIPSL.Electrical.Buses.Bus BG1(v_0=0.998855, angle_0=0.15699114448641)
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B1(v_0=0.992504, angle_0=0.076251672237088)
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=0.998855,
          angle_0=0.15699114448641,
          P_0=40000000,
          Q_0=4547321,
          V_b=24000)
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=0.992681, angle_0=-0.0049879590159821)
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=0.998705, angle_0=9.4873305611609e-06)
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,86},{36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) annotation (Placement(transformation(extent={{24,46},{36,54}})));
        OpenIPSL.Electrical.Buses.Bus B4(angle_0=-0.00014475935348966,
                                                                v_0=0.997342)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,10})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,40})));
        OpenIPSL.Electrical.Buses.Bus B5(v_0=1.0074, angle_0=0.0093371449790267)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-20})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=270,
              origin={60,-6})));
        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.G2_2INPUT_Pref_Efdref_NO_TurbGov_NO_Exci
          G2(
          v_0=1.0074,
          angle_0=0.0093371449790267,
          V_b=24000,
          P_0=10010220,
          Q_0=10204330) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={60,-40})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000,
                                                              fn=50)
          annotation (Placement(transformation(extent={{-140,100},{-80,120}})));
        OpenIPSL.Electrical.Loads.PSSE.Load LD1(
          V_b=220000,
          v_0=0.992681,
          angle_0=-0.0049879590159821,
          P_0=50000000,
          Q_0=10000000) annotation (Placement(transformation(extent={{-12,18},{0,30}})));
        Electrical.Events.Breaker breaker(enableTrigger=false, t_o=0.1)
                                                 annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,22})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,0})));
              Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-20,-20},{20,20}},
              rotation=0,
              origin={-160,-84})));
        Electrical.Loads.PSSE.Load_variation load_variation(
          V_b=220000,
          P_0=15000000,
          Q_0=15000000,
          v_0=0.997342,
          angle_0=-0.00014475935348966,
          d_P=0.1,
          t1=1000,
          d_t=2000)
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Electrical.Sources.VoltageSourceReImInput voltageSourceReImInput
          annotation (Placement(transformation(
              extent={{-10,10},{10,-10}},
              rotation=180,
              origin={86,96})));
        Modelica.Blocks.Sources.Constant VR(k=0.998726)
          annotation (Placement(transformation(extent={{130,90},{110,110}})));
        Modelica.Blocks.Sources.Constant VI(k=3.7730e-5)
          annotation (Placement(transformation(extent={{132,56},{112,76}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-30},{-100,-10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-114},{-100,-94}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      equation
        OUT1 = G2.gen.w;
        OUT2 = B4.v;

        connect(T1.p, B1.p)
          annotation (Line(points={{-53.4,70},{-40,70}},        color={0,0,255}));
        connect(BG1.p, T1.n)
          annotation (Line(points={{-80,70},{-66.6,70}},
                                                       color={0,0,255}));
        connect(G1.conn, BG1.p)
          annotation (Line(points={{-91,70},{-80,70}},          color={0,0,255}));
        connect(L1.n, B2.p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p, B1.p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n, B3.p) annotation (Line(points={{35.4,50},{56,50},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.n, B3.p) annotation (Line(points={{35.4,90},{56,90},{56,70},{60,
                70}}, color={0,0,255}));
        connect(L2_1.p, B2.p) annotation (Line(points={{24.6,90},{4,90},{4,70},{0,70}},
                             color={0,0,255}));
        connect(L2_2.p, B2.p) annotation (Line(points={{24.6,50},{4,50},{4,70},{0,70}},
              color={0,0,255}));
        connect(G2.conn, B5.p)
          annotation (Line(points={{60,-29},{60,-20}}, color={0,0,255}));
        connect(LD1.p, B2.p)
          annotation (Line(points={{-6,30},{-6,70},{0,70}},color={0,0,255}));
        connect(L3.p, B3.p) annotation (Line(points={{80,45.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s, B4.p)
          annotation (Line(points={{80,18},{80,10}},   color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,26},{80,34.6}},color={0,0,255}));
        connect(T2.n, B5.p)
          annotation (Line(points={{60,-12.6},{60,-20}}, color={0,0,255}));
        connect(load_variation.p, B4.p) annotation (Line(points={{100,-20},{100,2},{80,
                2},{80,10}},          color={0,0,255}));
        connect(VR.y,voltageSourceReImInput. vRe)
          annotation (Line(points={{109,100},{98,100}},  color={0,0,127}));
        connect(VI.y,voltageSourceReImInput. vIm) annotation (Line(points={{111,66},{106,
                66},{106,92},{98,92}},       color={0,0,127}));
        connect(voltageSourceReImInput.p, B3.p)
          annotation (Line(points={{75,96},{60,96},{60,70}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-20},{-82,-20},{-82,-12}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-160,0},{-82,0}},
                       color={0,0,127}));
        connect(AddU1.y, G2.P_ref) annotation (Line(points={{-59,-6},{40,-6},{40,-60},
                {56,-60},{56,-52}}, color={0,0,127}));
        connect(T2.p, B4.p) annotation (Line(points={{60,0.6},{60,2},{80,2},{80,10}},
                              color={0,0,255}));
        connect(IN2, AddU3.u1)
          annotation (Line(points={{-160,-84},{-82,-84}}, color={0,0,127}));
        connect(IN22.y, AddU3.u2) annotation (Line(points={{-99,-104},{-90,-104},{-90,
                -96},{-82,-96}}, color={0,0,127}));
        connect(AddU3.y, G2.Efd_ref)
          annotation (Line(points={{-59,-90},{64,-90},{64,-52}}, color={0,0,127}));
        annotation ( Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"));
      end Reconnection_Microgrid_PSSE_2_INPUT_WITH_CONST_V_SOURCE2_NO_TG;
    end NOTCONTROLLABLE_NOTOBSERVABLE_STABLE;

    package EquipmentOnlyLinearization

      model OptimizationModel03 "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentInfBUS = false;
        parameter Real T = 5;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={50,-16})));
        GenerationUnits.PSSE.G2_3INPUTS                       G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.001,
          rc_enabled=false,
          t_rc=30.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-76},{-60,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-60}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-60})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,58},{160,78}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,38},{160,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,18},{160,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-2},{160,18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-22},{160,-2}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-62},
                  {160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-82},
                  {160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF04)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.00000002,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{70,-28},{82,-16}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/200,
          phase=3.1415926535898,
          startTime=3)
          annotation (Placement(transformation(extent={{72,-44},{82,-34}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-30},{94,-22}})));

        Modelica.Blocks.Continuous.StateSpace stateSpace(
          A=[-0.0350467319011269,-0.390562612800037,-0.0220982102141145,-0.0580078018245206,
              0.381444455935434,0,0,0,0.116822429908667,0; 376.991118430775,0,0,0,0,0,
              0,0,0,0; 0,-0.0454184390776668,-0.986678228156109,0.523762754571772,-0.00438192488056084,
              0.199999999965295,0,0,0,0; 0,-2.38492178606947,10.4772483822384,-24.2829372788823,
              -0.230094818710897,0,0,0,0,0; 0,56.5367251635352,0.263868804467372,
              0.692655615925671,-68.5025764464478,0,0,0,0,0; 0,-4.10404377522038,-91.0705533888705,
              -239.060202328028,-48.6994875566102,-99.9999999826474,4000.00000016301,
              0,0,0; 0,-0.000410404377522038,-0.00910705533888706,-0.0239060202328028,
              -0.00486994875566103,0,-0.0999999999912857,0,0,0; -49.9999999736822,0,0,
              0,0,0,0,-2.50000000005815,0,0; 0,0,0,0,0,0,0,10.0000000002326,-10.0000000002326,
              0; 0,0,0,0,0,0,0,0,100.000000002326,-100.000000002326],
          B=[0,0; 0,0; 0,0; 0,0; 0,0; 0,20.0000016548074; 0,0.00200000016548074;
              2.49999999868411,0; 0,0; 0,0],
          C=[1,0,0,0,0,0,0,0,0,0; 0,1.00000000011134,0,0,0,0,0,0,0,0; 0,0,
              0.99999999999927,0,0,0,0,0,0,0; 0,0,0,1.00000000006264,0,0,0,0,0,0; 0,0,
              0,0,1.00000000004757,0,0,0,0,0; 0,0,0,0,0,0.999999999826474,0,0,0,0; 0,
              0,0,0,0,0,0.999999999912857,0,0,0; 0,0,0,0,0,0,0,1.00000000002326,0,0;
              0,0,0,0,0,0,0,0,1.00000000002326,0; 0,0,0,0,0,0,0,0,0,1.00000000002326;
              -0.100000008274037,0,0,0,0,0,0,0,1.00000000002326,0; 0,0,0,0,0,
              0.999999999826474,0,0,0,0; 0,0.00410404377522038,0.0910705533888705,
              0.239060202328028,0.0486994875566102,0,0,0,0,0; 0,0.334312313394889,
              0.0134167311163422,0.0352189191907436,-0.329697998696702,0,0,0,0,0],
          D=[0,0; 0,0; 0,0; 0,0; 0,0; 0,0; 0,0; 0,0; 0,0; 0,0; 0,0; 0,0; 0,0; 0,0],
          initType=Modelica.Blocks.Types.Init.InitialState,
          x_start={0.00253744713495376,3.965136266559,1.00531875113478,
              0.999279443199617,0.0750069322894724,1.03445704234505,
              0.0207763178888415,0.0501355939918311,0.0504208497418196,
              0.0504500114912884})
          annotation (Placement(transformation(extent={{34,-84},{54,-64}})));
        Modelica.Blocks.Routing.Multiplex2     multiplex2_1
          annotation (Placement(transformation(extent={{-2,-84},{18,-64}})));
        Modelica.Blocks.Sources.Pulse pulse4(
          amplitude=-0.01,
          period=T,
          offset=0,
          startTime=0.001)
          annotation (Placement(transformation(extent={{-114,-20},{-104,-10}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-118,-88},{-98,-68}})));
      equation
        OUT1 = G2.gen.SPEED;
        OUT2 = G2.gASTMPC.PMECH;
        OUT3 = G2.gen.ANGLE;
        OUT4 = G2.gASTMPC.TF2_out;
        OUT5 =Bus6.angle;
        OUT6 =Bus6.v;
        OUT7 =Bus6.p.vr;
        OUT8 =Bus6.p.vi;
        OUT9 = Bus5.v;
        OUT10 = Bus5.angle;
        OUT11 = G2.gen.PELEC;
        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(G2.conn, Bus6.p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n, Bus6.p)
          annotation (Line(points={{50,-24.8},{50,-36},{34,-36}}, color={0,0,255}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-82,0}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{50,-7.2},{50,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-60},{-82,-60}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-66},{-10,-66},{-10,-42},{-2,-42}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-6},{-10,-6},{-10,-30},
                {-2,-30}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-20},{110,0},{80,0},{80,
                6}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.5,-39},{82.5,-34},{85.2,-34},
                {85.2,-28.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.54,-22.06},
                {82.54,-23.6},{85.2,-23.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-26},{94.4,-24.5},{101.9,
                -24.5}}, color={0,0,127}));
        connect(multiplex2_1.y, stateSpace.u)
          annotation (Line(points={{19,-74},{32,-74}}, color={0,0,127}));
        connect(pulse4.y, AddU1.u2) annotation (Line(points={{-103.5,-15},{-88,-15},{-88,
                -12},{-82,-12}}, color={0,0,127}));
        connect(multiplex2_1.u1[1], pulse4.y) annotation (Line(points={{-4,-68},{-50,-68},
                {-50,-30},{-94,-30},{-94,-16},{-98,-16},{-98,-15},{-103.5,-15}},
              color={0,0,127}));
        connect(IN22.y, AddU2.u2) annotation (Line(points={{-97,-78},{-90,-78},{-90,-72},
                {-82,-72}}, color={0,0,127}));
        connect(multiplex2_1.u2[1], IN22.y) annotation (Line(points={{-4,-80},{-90,-80},
                {-90,-78},{-97,-78}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{166,-112}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-158,20},{-134,-80}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-112}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-16,-84},{70,-112}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=3,
            __Dymola_NumberOfIntervals=5000,
            __Dymola_Algorithm="Dassl"));
      end OptimizationModel03;

      model OptimizationModel04
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID= true;
        parameter Boolean equivalentInfBUS = false;

        OpenIPSL.Electrical.Buses.Bus B1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000) if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=24000) if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus B5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5) if not equivalentGRID
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus B6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=220000,
          VB1=220000,
          VNOM2=24000,
          VB2=24000,
          R=0.005,
          X=0.1) if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={52,-16})));
        GenerationUnits.PSSE.G2_3INPUTS                       G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=24000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,36},{0,56}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=false) if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-76},{-60,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-60}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-60})));
      Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,58},{160,78}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,38},{160,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,18},{160,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4 annotation (Placement(transformation(extent={{140,-2},{160,18}})));
           Modelica.Blocks.Interfaces.RealOutput OUT5 annotation (Placement(transformation(extent={{140,-22},{160,-2}})));
           Modelica.Blocks.Interfaces.RealOutput OUT6 annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
           Modelica.Blocks.Interfaces.RealOutput OUT7 annotation (Placement(transformation(extent={{140,-60},
                  {160,-40}})));
           Modelica.Blocks.Interfaces.RealOutput OUT8 annotation (Placement(transformation(extent={{140,-80},
                  {160,-60}})));
           Modelica.Blocks.Interfaces.RealOutput OUT9 annotation (Placement(transformation(extent={{140,
                  -100},{160,-80}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF04)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load          Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5)
                    if not equivalentGRID
          annotation (Placement(transformation(extent={{98,-40},{118,-20}})));
        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
      equation
        OUT1 = G2.gen.SPEED;
        OUT2 = G2.gASTMPC.PMECH;
        OUT3 = G2.gen.ANGLE;
        OUT4 = G2.gASTMPC.TF2_out;
        OUT5 = B6.angle;
        OUT6 = B6.v;
        OUT7 = B6.p.vr;
        OUT8 = B6.p.vi;
        OUT9 = G2.gen.PELEC;
        connect(T1.p,B2. p)
          annotation (Line(points={{-51.2,70},{-40,70}},        color={0,0,255}));
        connect(B1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, B1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n,B3. p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p,B2. p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n,B4. p) annotation (Line(points={{35.4,60},{44,60},{44,70},
                {60,70}},
                      color={0,0,255}));
        connect(L2_1.n,B4. p) annotation (Line(points={{35.4,80},{44,80},{44,70},
                {60,70}},
                      color={0,0,255}));
        connect(L2_1.p,B3. p) annotation (Line(points={{24.6,80},{16,80},{16,70},
                {0,70}},     color={0,0,255}));
        connect(L2_2.p,B3. p) annotation (Line(points={{24.6,60},{16,60},{16,70},
                {0,70}},
              color={0,0,255}));
        connect(G2.conn,B6. p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, B3.p)
          annotation (Line(points={{-10,56},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p,B4. p) annotation (Line(points={{80,55.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s,B5. p)
          annotation (Line(points={{80,12},{80,6}},    color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n,B6. p)
          annotation (Line(points={{52,-24.8},{52,-36},{34,-36}},
                                                         color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-30},{-90,-30},{-90,-12},
                {-82,-12}}, color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-82,0}},
                       color={0,0,127}));
        connect(T2.p,B5. p) annotation (Line(points={{52,-7.2},{52,0},{80,0},{80,6}},
                              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99,-90},{-90,-90},{-90,-72},
                {-82,-72}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-60},{-82,-60}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-66},{-10,-66},{-10,-42},{-2,-42}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-6},{-10,-6},{-10,-30},
                {-2,-30}},                          color={0,0,127}));
        connect(IB.p, B4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, B5.p) annotation (Line(points={{108,-20},{108,0},{80,0},{80,
                6}},
              color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{166,-112}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-158,20},{-134,-80}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-112}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{12,-84},{68,-112}},
                textColor={0,140,72},
                textString="DER Plant"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"));
      end OptimizationModel04;

      model OptimizationModel05
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={50,-16})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-60}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-60})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,58},{160,78}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,38},{160,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,18},{160,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-2},{160,18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-22},{160,-2}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-62},
                  {160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-82},
                  {160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF02)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));

        Electrical.Loads.PSSE.Load          Load3(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5)
                    if not equivalentGRID
          annotation (Placement(transformation(extent={{90,-40},{110,-20}})));
      equation

        OUT1 = gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = G2.gASTMPC.PMECH;
        OUT12 = G2.sEXSMPC.EFD;
        OUT13 = Bus5.v;
        OUT14 = Bus5.angle;
        OUT15 = G2.gen.P;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(G2.conn, Bus6.p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n, Bus6.p)
          annotation (Line(points={{50,-24.8},{50,-36},{34,-36}}, color={0,0,255}));
        connect(T2.p, Bus5.p) annotation (Line(points={{50,-7.2},{50,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load3.p, Bus5.p) annotation (Line(points={{100,-20},{100,-2},{50,-2},{
                50,0},{80,0},{80,6}}, color={0,0,255}));
        connect(IN1, G2.P_ref1)
          annotation (Line(points={{-150,0},{-150,-30},{-2,-30}}, color={0,0,127}));
        connect(IN2, G2.Efd_ref) annotation (Line(points={{-150,-60},{-150,-42},{-2,-42}},
              color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{166,-112}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-158,20},{-134,-80}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-112}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-16,-84},{70,-112}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=3, __Dymola_Algorithm="Dassl"));
      end OptimizationModel05;

      model OptimizationModel06
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF06)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));

      equation

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{166,-112}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-158,20},{-134,-80}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-16,-84},{70,-112}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"));
      end OptimizationModel06;

      model OptimizationModel07
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={50,-16})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=5.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-76},{-60,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-60}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-60})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,58},{160,78}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,38},{160,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,18},{160,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-2},{160,18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-22},{160,-2}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-62},
                  {160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF01)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0005,  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{70,-30},{82,-18}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0.01,
          f=1/260,
          phase=3.1415926535898,
          startTime=5.5)
          annotation (Placement(transformation(extent={{72,-44},{82,-34}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-30},{94,-22}})));

        Modelica.Blocks.Continuous.Filter filter(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{-116,-150},{-96,-130}})));
        Modelica.Blocks.Sources.RealExpression realExpression(y=G2.gen.w)
          annotation (Placement(transformation(extent={{-152,-150},{-132,-130}})));
        Modelica.Blocks.Continuous.Filter filter1(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{-116,-184},{-96,-164}})));
        Modelica.Blocks.Sources.RealExpression realExpression1(y=G2.sEXSMPC.leadLag.TF.x[
              1])
          annotation (Placement(transformation(extent={{-152,-184},{-132,-164}})));
        Modelica.Blocks.Continuous.Filter filter2(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{-40,-150},{-20,-130}})));
        Modelica.Blocks.Sources.RealExpression realExpression2(y=G2.gASTMPC.simpleLag1.state)
          annotation (Placement(transformation(extent={{-76,-148},{-56,-128}})));
        Modelica.Blocks.Continuous.Filter filter3(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{-40,-184},{-20,-164}})));
        Modelica.Blocks.Sources.RealExpression realExpression3(y=G2.gASTMPC.PMECH)
          annotation (Placement(transformation(extent={{-76,-184},{-56,-164}})));
        Modelica.Blocks.Continuous.Filter filter4(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{36,-150},{56,-130}})));
        Modelica.Blocks.Sources.RealExpression realExpression4(y=G2.sEXSMPC.EFD)
          annotation (Placement(transformation(extent={{0,-150},{20,-130}})));
        Modelica.Blocks.Continuous.Filter filter5(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{38,-184},{58,-164}})));
        Modelica.Blocks.Sources.RealExpression realExpression5(y=Bus5.v)
          annotation (Placement(transformation(extent={{0,-184},{20,-164}})));
        Modelica.Blocks.Continuous.Filter filter6(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{108,-150},{128,-130}})));
        Modelica.Blocks.Sources.RealExpression realExpression6(y=Bus5.angle)
          annotation (Placement(transformation(extent={{70,-150},{90,-130}})));
        Modelica.Blocks.Continuous.Filter filter7(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{110,-184},{130,-164}})));
        Modelica.Blocks.Sources.RealExpression realExpression7(y=G2.gen.P)
          annotation (Placement(transformation(extent={{72,-184},{92,-164}})));
          Modelica.Blocks.Continuous.Filter filter8(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{38,-222},{58,-202}})));
        Modelica.Blocks.Sources.RealExpression realExpression8(y=G2.gen.P)
          annotation (Placement(transformation(extent={{2,-222},{22,-202}})));
          Modelica.Blocks.Continuous.Filter filter9(order=2, f_cut=0.1)
          annotation (Placement(transformation(extent={{114,-222},{134,-202}})));
        Modelica.Blocks.Sources.RealExpression realExpression9(y=G2.gen.P)
          annotation (Placement(transformation(extent={{70,-222},{90,-202}})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = G2.gASTMPC.PMECH;
        OUT12 = G2.sEXSMPC.EFD;
        OUT13 = Bus5.v;
        OUT14 = Bus5.angle;
        OUT15 = G2.gen.P;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(G2.conn, Bus6.p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n, Bus6.p)
          annotation (Line(points={{50,-24.8},{50,-36},{34,-36}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-30},{-90,-30},{-90,-12},
                {-82,-12}}, color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-82,0}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{50,-7.2},{50,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99,-90},{-90,-90},{-90,-72},
                {-82,-72}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-60},{-82,-60}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-66},{-10,-66},{-10,-42},{-2,-42}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-6},{-10,-6},{-10,-30},
                {-2,-30}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-20},{110,0},{80,0},{80,
                6}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.5,-39},{82.5,-34},{85.2,-34},
                {85.2,-28.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.54,-24.06},
                {82.54,-23.6},{85.2,-23.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-26},{94.4,-24.5},{101.9,
                -24.5}}, color={0,0,127}));
        connect(realExpression.y, filter.u)
          annotation (Line(points={{-131,-140},{-118,-140}}, color={0,0,127}));
        connect(realExpression1.y, filter1.u)
          annotation (Line(points={{-131,-174},{-118,-174}}, color={0,0,127}));
        connect(realExpression2.y, filter2.u)
          annotation (Line(points={{-55,-138},{-48,-138},{-48,-140},{-42,-140}},
                                                           color={0,0,127}));
        connect(realExpression3.y, filter3.u)
          annotation (Line(points={{-55,-174},{-42,-174}}, color={0,0,127}));
        connect(realExpression4.y, filter4.u)
          annotation (Line(points={{21,-140},{34,-140}}, color={0,0,127}));
        connect(realExpression5.y, filter5.u)
          annotation (Line(points={{21,-174},{36,-174}}, color={0,0,127}));
        connect(realExpression6.y, filter6.u)
          annotation (Line(points={{91,-140},{106,-140}}, color={0,0,127}));
        connect(realExpression7.y, filter7.u)
          annotation (Line(points={{93,-174},{108,-174}}, color={0,0,127}));
        connect(realExpression9.y, filter9.u)
          annotation (Line(points={{91,-212},{112,-212}}, color={0,0,127}));
        connect(realExpression8.y, filter8.u)
          annotation (Line(points={{23,-212},{36,-212}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-160},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{166,-112}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-158,20},{-134,-80}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-112}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-16,-84},{70,-112}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=100,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-160},{140,120}})));
      end OptimizationModel07;

      model OptimizationModel08
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={50,-16})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=5.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-76},{-60,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-60}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-60})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,58},{160,78}})));
       //Modelica.Blocks.Interfaces.RealOutput OUT2
       //   annotation (Placement(transformation(extent={{140,38},{160,58}})));
       // Modelica.Blocks.Interfaces.RealOutput OUT3
        //  annotation (Placement(transformation(extent={{140,18},{160,38}})));
        //Modelica.Blocks.Interfaces.RealOutput OUT4
         // annotation (Placement(transformation(extent={{140,-2},{160,18}})));
        //Modelica.Blocks.Interfaces.RealOutput OUT5
         // annotation (Placement(transformation(extent={{140,-22},{160,-2}})));
       // Modelica.Blocks.Interfaces.RealOutput OUT6
        //  annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-62},
                  {160,-42}})));
       // Modelica.Blocks.Interfaces.RealOutput OUT8
       //   annotation (Placement(transformation(extent={{140,-82},
              //    {160,-62}})));
        //Modelica.Blocks.Interfaces.RealOutput OUT9    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF01)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0005,  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{70,-30},{82,-18}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0.01,
          f=1/260,
          phase=3.1415926535898,
          startTime=5.5)
          annotation (Placement(transformation(extent={{72,-44},{82,-34}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-30},{94,-22}})));

      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = G2.gASTMPC.PMECH;
        OUT12 = G2.sEXSMPC.EFD;
        OUT13 = Bus5.v;
        OUT14 = Bus5.angle;
        OUT15 = G2.gen.P;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(G2.conn, Bus6.p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n, Bus6.p)
          annotation (Line(points={{50,-24.8},{50,-36},{34,-36}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-30},{-90,-30},{-90,-12},
                {-82,-12}}, color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-82,0}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{50,-7.2},{50,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99,-90},{-90,-90},{-90,-72},
                {-82,-72}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-60},{-82,-60}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-66},{-10,-66},{-10,-42},{-2,-42}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-6},{-10,-6},{-10,-30},
                {-2,-30}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-20},{110,0},{80,0},{80,
                6}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.5,-39},{82.5,-34},{85.2,-34},
                {85.2,-28.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.54,-24.06},
                {82.54,-23.6},{85.2,-23.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-26},{94.4,-24.5},{101.9,
                -24.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{166,-112}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-158,20},{-134,-80}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-112}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-16,-84},{70,-112}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=100,
            __Dymola_Algorithm="Dassl"));
      end OptimizationModel08;

      model OptimizationCheck "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentInfBUS = false;

        OpenIPSL.Electrical.Buses.Bus B1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus B2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus B3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus B4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus B5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5) if not equivalentGRID
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus B6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6)
                                         annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1) if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={50,-16})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,36},{0,56}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        //       Modelica.Blocks.Interfaces.RealOutput OUT9 annotation (Placement(transformation(extent={{140,-60},{160,-40}})));
        //   Modelica.Blocks.Interfaces.RealOutput OUT10 annotation (Placement(transformation(extent={{140,-80}, {160,-60}})));
         //      Modelica.Blocks.Interfaces.RealOutput OUT10
         // annotation (Placement(transformation(extent={{140,-116},{160,-96}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF03)
          annotation (Placement(transformation(extent={{-68,96},{-48,116}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000) if not equivalentGRID
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
                                 if not equivalentGRID
          annotation (Placement(transformation(extent={{70,-28},{82,-16}})));
        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
        Electrical.Loads.PSSE.Load Load_for_Lin(
          V_b=220000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          v_0=powerFlow.powerflow.bus.V6,
          angle_0=powerFlow.powerflow.bus.A6) if equivalentGRID annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={42,-70})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=5.5)
                       if not equivalentGRID
          annotation (Placement(transformation(extent={{72,-44},{82,-34}})));
        Modelica.Blocks.Math.Add add if not equivalentGRID
          annotation (Placement(transformation(extent={{86,-30},{94,-22}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,-2.74e-16;
              1,1.23e-16; 1.5,-0.023553414; 2,0.00226445; 2.5,-0.000819532; 3,-0.000893047;
              3.5,-0.000556498; 4,0.000878186; 4.5,0.000122204; 5,0.000654087; 5.5,
              0.001129671; 6,0.00068535; 6.5,0.001316455; 7,0.00113267; 7.5,
              0.001340342; 8,0.001660903; 8.5,0.001058399; 9,0.001485748; 9.5,
              0.001592657; 10,0.001172465; 10.5,0.001786355; 11,0.001258804; 11.5,
              0.001414307; 12,0.001851642; 12.5,0.001654247; 13,0.001478177; 13.5,
              0.001573347; 14,0.00144412; 14.5,0.001425876; 15,0.001481962; 15.5,
              0.001685424; 16,0.001280223; 16.5,0.002188429; 17,0.001212146; 17.5,
              0.001057434; 18,0.002316195; 18.5,0.000823138; 19,0.001872715; 19.5,
              0.002281925; 20,0.000212087; 20.5,0.00178869; 21,0.001550175; 21.5,
              0.001323849; 22,0.001369638; 22.5,0.00158283; 23,0.001811996; 23.5,
              0.00161486; 24,0.001157025; 24.5,0.001801794],
            smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-22},{-80,-2}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              1.8e-12; 1,3.6e-12; 1.5,0.05; 2,0.1; 2.5,0.15; 3,0.2; 3.5,0.25; 4,
              0.263776487; 4.5,0.248614171; 5,0.25716742; 5.5,0.260606863; 6,
              0.265122641; 6.5,0.267769058; 7,0.270142912; 7.5,0.272213427; 8,
              0.273112005; 8.5,0.274493162; 9,0.275297708; 9.5,0.275799832; 10,
              0.276775287; 10.5,0.27692303; 11,0.277860691; 11.5,0.277428421; 12,
              0.277819019; 12.5,0.277601462; 13,0.278020966; 13.5,0.277941926; 14,
              0.277907842; 14.5,0.279245122; 15,0.277951751; 15.5,0.278432571; 16,
              0.277688224; 16.5,0.2780227; 17,0.278208204; 17.5,0.278856276; 18,
              0.277871199; 18.5,0.278786755; 19,0.278471166; 19.5,0.277629014; 20,
              0.278792724; 20.5,0.278436379; 21,0.278419601; 21.5,0.278409225; 22,
              0.278597382; 22.5,0.278101802; 23,0.278311091; 23.5,0.278380683; 24,
              0.279124937; 24.5,0.278239024],
            smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-80},{-80,-60}})));
      equation
        connect(T1.p,B2. p)
          annotation (Line(points={{-51.2,70},{-40,70}},        color={0,0,255}));
        connect(B1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, B1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n,B3. p)
          annotation (Line(points={{-14.6,70},{0,70}},            color={0,0,255}));
        connect(L1.p,B2. p) annotation (Line(points={{-25.4,70},{-40,70}},
              color={0,0,255}));
        connect(L2_2.n,B4. p) annotation (Line(points={{35.4,60},{44,60},{44,70},
                {60,70}},
                      color={0,0,255}));
        connect(L2_1.n,B4. p) annotation (Line(points={{35.4,80},{44,80},{44,70},
                {60,70}},
                      color={0,0,255}));
        connect(L2_1.p,B3. p) annotation (Line(points={{24.6,80},{16,80},{16,70},
                {0,70}},     color={0,0,255}));
        connect(L2_2.p,B3. p) annotation (Line(points={{24.6,60},{16,60},{16,70},
                {0,70}},
              color={0,0,255}));
        connect(G2.conn,B6. p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, B3.p)
          annotation (Line(points={{-10,56},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p,B4. p) annotation (Line(points={{80,55.4},{80,70},{60,70}},
                                   color={0,0,255}));
        connect(breaker.s,B5. p)
          annotation (Line(points={{80,12},{80,6}},    color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n,B6. p)
          annotation (Line(points={{50,-24.8},{50,-36},{34,-36}},
                                                         color={0,0,255}));
        connect(T2.p,B5. p) annotation (Line(points={{50,-7.2},{50,0},{80,0},{80,6}},
                              color={0,0,255}));

        connect(IB.p, B4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, B5.p) annotation (Line(points={{110,-20},{110,0},{80,0},{80,6}},
              color={0,0,255}));
        connect(Load_for_Lin.p, B6.p)
          annotation (Line(points={{42,-60},{42,-36},{34,-36}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.5,-39},{82.5,-34},{85.2,-34},
                {85.2,-28.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.54,-22.06},
                {82.54,-23.6},{85.2,-23.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-26},{94.4,-24.5},{101.9,
                -24.5}}, color={0,0,127}));
        connect(combiTimeTable.y[1], G2.P_ref1) annotation (Line(points={{-79,-12},{
                -10,-12},{-10,-30},{-2,-30}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,-70},
                {-10,-70},{-10,-42},{-2,-42}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Rectangle(
                extent={{-128,26},{124,-112}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-16,-84},{70,-112}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=25,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"));
      end OptimizationCheck;

      model OptimizationModel10 "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={50,-16})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=5.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-76},{-60,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-60}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-60})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,58},{160,78}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,38},{160,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,18},{160,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-2},{160,18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-22},{160,-2}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-62},
                  {160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-82},
                  {160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF01)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0005,  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{70,-30},{82,-18}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0.01,
          f=1/260,
          phase=3.1415926535898,
          startTime=5.5)
          annotation (Placement(transformation(extent={{72,-44},{82,-34}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-30},{94,-22}})));

      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = G2.gASTMPC.PMECH;
        OUT12 = G2.sEXSMPC.EFD;
        OUT13 = Bus5.v;
        OUT14 = Bus5.angle;
        OUT15 = G2.gen.P;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(G2.conn, Bus6.p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n, Bus6.p)
          annotation (Line(points={{50,-24.8},{50,-36},{34,-36}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-30},{-90,-30},{-90,-12},
                {-82,-12}}, color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-82,0}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{50,-7.2},{50,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99,-90},{-90,-90},{-90,-72},
                {-82,-72}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-60},{-82,-60}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-66},{-10,-66},{-10,-42},{-2,-42}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-6},{-10,-6},{-10,-30},
                {-2,-30}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-20},{110,0},{80,0},{80,
                6}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.5,-39},{82.5,-34},{85.2,-34},
                {85.2,-28.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.54,-24.06},
                {82.54,-23.6},{85.2,-23.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-26},{94.4,-24.5},{101.9,
                -24.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{166,-112}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-158,20},{-134,-80}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-112}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-16,-84},{70,-112}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=100,
            __Dymola_Algorithm="Dassl"));
      end OptimizationModel10;

      model OptimizationModel05_lessoutputs
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={50,-16})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=100.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-76},{-60,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-60}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-60})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,58},{160,78}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,18},{160,38}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF02)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{70,-30},{82,-18}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=5.5)
          annotation (Placement(transformation(extent={{72,-44},{82,-34}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-30},{94,-22}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,0},{160,20}})));
      equation

        OUT1 = G2.gen.SPEED;
        //OUT2 = G2.gASTMPC.PMECH;
        OUT3 = G2.sEXSMPC.EFD;
        OUT4 = G2.gASTMPC.simpleLag1.state;



        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(G2.conn, Bus6.p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n, Bus6.p)
          annotation (Line(points={{50,-24.8},{50,-36},{34,-36}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-30},{-90,-30},{-90,-12},
                {-82,-12}}, color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-82,0}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{50,-7.2},{50,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99,-90},{-90,-90},{-90,-72},
                {-82,-72}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-60},{-82,-60}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-66},{-10,-66},{-10,-42},{-2,-42}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-6},{-10,-6},{-10,-30},
                {-2,-30}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-20},{110,0},{80,0},{80,
                6}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.5,-39},{82.5,-34},{85.2,-34},
                {85.2,-28.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.54,-24.06},
                {82.54,-23.6},{85.2,-23.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-26},{94.4,-24.5},{101.9,
                -24.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{166,-112}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-158,20},{-134,-80}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-112}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-108},{72,-108},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{74,-88},{122,-108}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-16,-84},{70,-112}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(Interval=0.5, __Dymola_Algorithm="Dassl"));
      end OptimizationModel05_lessoutputs;

      model MPCMicrogridRenewablesIncluded
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF13)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-70},{-20,-50}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-102},{-20,-82}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
      equation

      //   OUT1 = G2.gen.w;
      //   OUT2 = G2.gen.delta;
      //   OUT3 = G2.gen.Epq;
      //   OUT4 = G2.gen.PSIkd;
      //   OUT5 = G2.gen.PSIppq;
      //   OUT6 = G2.sEXSMPC.simpleLagLim.state;
      //   OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      //   OUT8 = G2.gASTMPC.simpleLagLim.state;
      //   OUT9 = G2.gASTMPC.simpleLag.state;
      //   OUT10 = G2.gASTMPC.simpleLag1.state;
      //   OUT11 = PV.rEGCA1_1.simpleLag.state;
      //   OUT12 = PV.rEGCA1_1.integrator.y;
      //   OUT13 = PV.rEGCA1_1.integrator1.y;
      //   OUT14 = PV.rEECB1_Local_V_Q_Control.integrator.y;
      //   OUT15 = PV.rEECB1_Local_V_Q_Control.integrator1.y;
      //   OUT16 = PV.rEECB1_Local_V_Q_Control.simpleLag.state;
      //   OUT17 = PV.rEECB1_Local_V_Q_Control.integrator3.y;
      //   OUT18 = PV.rEECB1_Local_V_Q_Control.simpleLag1.state;
      //   OUT19 = PV.rEECB1_Local_V_Q_Control.simpleLag2.state;
      //   OUT20 = PV.rEECB1_Local_V_Q_Control.IGP.y;
      //   OUT21 = PV.rEECB1_Local_V_Q_Control.simpleLag3.state;
      //   OUT22 = BESS.rEGCA1_1.simpleLag.state;
      //   OUT23 = BESS.rEGCA1_1.integrator.y;
      //   OUT24 = BESS.rEGCA1_1.integrator1.y;
      //   OUT25 =BESS.rEECCU1_Local_V_Q_Control3_1.integrator3.y;
      //   OUT26 =BESS.rEECCU1_Local_V_Q_Control3_1.integrator1.y;
      //   OUT27 =BESS.rEECCU1_Local_V_Q_Control3_1.simpleLag.state;
      //   OUT28 =BESS.rEECCU1_Local_V_Q_Control3_1.IGQ.y;
      //   OUT29 =BESS.rEECCU1_Local_V_Q_Control3_1.IGV.y;
      //   OUT30 =BESS.rEECCU1_Local_V_Q_Control3_1.IGP.y;
      //   OUT31 =BESS.rEECCU1_Local_V_Q_Control3_1.simpleLag1.state;
      //   OUT32 =BESS.rEECCU1_Local_V_Q_Control3_1.simpleLag2.state;

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.integrator3.y;
      OUT18 =PV.EC.simpleLag1.state;
      OUT19 =PV.EC.simpleLag2.state;
      OUT20 =PV.EC.IGP.y;
      OUT21 =PV.EC.simpleLag3.state;
      OUT22 = BESS.rEGCA1_1.simpleLag.state;
      OUT23 = BESS.rEGCA1_1.integrator.y;
      OUT24 = BESS.rEGCA1_1.integrator1.y;
      OUT25 =BESS.EC.integrator3.y;
      OUT26 =BESS.EC.simpleLag.state;
      OUT27 =BESS.EC.IGQ.y;
      OUT28 =BESS.EC.IGV.y;
      OUT29 =BESS.EC.IGP.y;
      OUT30 =BESS.EC.simpleLag1.state;
      OUT31 =BESS.EC.simpleLag2.state;

        OUT32 = G2.gen.PMECH;
        OUT33 = G2.sEXSMPC.EFD;
        OUT34 = BESS.rEGCA1_1.Pgen;
        OUT35 = BESS.rEGCA1_1.Qgen;
        OUT36 = PV.rEGCA1_1.Pgen;
        OUT37 = PV.rEGCA1_1.Qgen;
        OUT38 = Bus5.v;
        OUT39 = Bus5.angle;
        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(PV.p1, Bus7.p)
          annotation (Line(points={{-20,-60},{-6,-60},{-6,-76},{0,-76}},
                                                               color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-50,-50},{-50,
                -60},{-42,-60}}, color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-34},{-114,-34},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(BESS.p1, Bus7.p) annotation (Line(points={{-20,-92},{-6,-92},{-6,-76},
                {4.996e-16,-76}},
                          color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-86},{-54,-86},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -98},{-42,-98}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1, IN5) annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{232,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridRenewablesIncluded;

      model MPCMicrogridRenewablesIncludedPMU
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180)));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,0})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,0})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-12},{-96,0}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-42},{-96,-30}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-22}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-22})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-54},{-140,-34}}),
              iconTransformation(extent={{-160,-54},{-140,-34}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-76},{-140,-56}}),
              iconTransformation(extent={{-160,-76},{-140,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-98},{-140,-78}}),
              iconTransformation(extent={{-160,-98},{-140,-78}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,60},{160,80}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,40},{160,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,20},{160,40}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF13)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-86})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-30})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-80},{-20,-60}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-70},{-60,-50}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-72},{-96,-60}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-126},{-60,-106}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-128},{-96,-116}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,0},{160,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-20},{160,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-40},{160,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-60},{160,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-80},{160,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-100},{160,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-120},{160,-100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,60},{184,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,40},{184,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,20},{184,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,0},{184,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-20},{184,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-40},{184,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-60},{184,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-80},{184,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-100},{184,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-120},{184,-100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,60},{204,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,40},{204,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,20},{204,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,0},{204,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-20},{204,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-40},{204,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-60},{204,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-80},{204,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-100},{204,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-120},{204,-100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,60},{224,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,40},{224,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,20},{224,40}})));
        Electrical.Buses.Bus          Bus8(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={110,-32})));
        Electrical.Loads.PSSE.Load          Load3(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5) if not equivalentGRID
          annotation (Placement(transformation(extent={{100,-80},{120,-60}})));
        Electrical.Sensors.SoftPMU softPMU annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={110,-18})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = G2.gASTMPC.PMECH;
        OUT12 = G2.sEXSMPC.EFD;
        OUT13 = PV.rEGCA1_1.simpleLag.state;
        OUT14 = PV.rEGCA1_1.integrator.y;
        OUT15 = PV.rEGCA1_1.integrator1.y;
        OUT16 =PV.rEECB_Constant_Q_Control.integrator.y;
        OUT17 =PV.rEECB_Constant_Q_Control.integrator1.y;
        OUT18 =PV.rEECB_Constant_Q_Control.integrator2.y;
        OUT19 =PV.rEECB_Constant_Q_Control.simpleLag.state;
        OUT20 =PV.rEECB_Constant_Q_Control.simpleLag1.state;
        OUT21 =PV.rEECB_Constant_Q_Control.integrator3.y;
        OUT22 = BESS.rEGCA1_1.simpleLag.state;
        OUT23 = BESS.rEGCA1_1.integrator.y;
        OUT24 = BESS.rEGCA1_1.integrator1.y;
        OUT25 =BESS.rEECCU1_Local_V_Control.integrator3.y;
        OUT26 =BESS.rEECCU1_Local_V_Control.integrator1.y;
        OUT27 =BESS.rEECCU1_Local_V_Control.integrator.y;
        OUT28 =BESS.rEECCU1_Local_V_Control.IGQ.y;
        OUT29 =BESS.rEECCU1_Local_V_Control.integrator4.y;
        OUT30 =BESS.rEECCU1_Local_V_Control.simpleLag.state;
        OUT31 =BESS.rEECCU1_Local_V_Control.simpleLag1.state;
        OUT32 = Bus5.v;
        OUT33 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,-6},{-82,-6}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-116,0},{-116,6},{-82,
                6}},   color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,-1.38778e-15},{58,-1.38778e-15},
                {58,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-36},{-82,-36}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-22},{-118,-22},{-118,-24},
                {-82,-24}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-30},{-52,-30},{-52,-6},{-42,-6}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,0},{-52,0},{-52,6},{
                -42,6}},                            color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-41},{60,-86},{0,-86}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-19},{60,0},{80,0},{80,6}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,-5.55112e-16},{0,-5.55112e-16},{0,0},{24,
                0},{24,1.38778e-15},{29,1.38778e-15}},
                                                  color={0,0,255}));
        connect(PV.p1, Bus7.p)
          annotation (Line(points={{-20,-70},{-6,-70},{-6,-86},{0,-86}},
                                                               color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-60},{-50,-60},
                {-50,-70},{-42,-70}}, color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-66},{-82,-66}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-44},{-114,-44},{-114,-54},
                {-82,-54}}, color={0,0,127}));
        connect(BESS.p1, Bus7.p) annotation (Line(points={{-20,-104},{-6,-104},{-6,-86},
                {0,-86}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-98},{-50,-98},{-50,
                -90},{-59,-90}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-122},{-82,-122}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-116},{-50,-116},{-50,
                -110},{-42,-110}}, color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-84},{-100,-84},{-100,-80},
                {-116,-80},{-116,-66},{-150,-66}}, color={0,0,127}));
        connect(AddU5.u1, IN5) annotation (Line(points={{-82,-110},{-116,-110},{-116,-88},
                {-150,-88}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,0},{-9.5,0},{-9.5,-5.55112e-16},
                {4.996e-16,-5.55112e-16}}, color={0,0,255}));
        connect(Load3.p, Bus8.p)
          annotation (Line(points={{110,-60},{110,-32}}, color={0,0,255}));
        connect(Bus8.p, softPMU.p)
          annotation (Line(points={{110,-32},{110,-25}}, color={0,0,255}));
        connect(softPMU.n, Bus5.p) annotation (Line(points={{110,-11},{110,0},{80,0},{
                80,6}}, color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{232,-134}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,20},{-134,-100}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-134}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-130},{72,-130},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-116},{114,-130}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-112},{70,-134}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=0.5, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,120}})));
      end MPCMicrogridRenewablesIncludedPMU;

      model MPCMicrogridRenewablesZEROOUTPUTS
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180)));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,0})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,0})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-12},{-96,0}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-10},{-60,10}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-42},{-96,-30}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-40},{-60,-20}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-22}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-22})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-54},{-140,-34}}),
              iconTransformation(extent={{-160,-54},{-140,-34}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-76},{-140,-56}}),
              iconTransformation(extent={{-160,-76},{-140,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-98},{-140,-78}}),
              iconTransformation(extent={{-160,-98},{-140,-78}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,60},{160,80}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,40},{160,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,20},{160,40}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF13)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-24},{82,-18}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-36},{82,-30}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-28},{94,-20}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-86})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-30})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-80},{-20,-60}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-70},{-60,-50}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-72},{-96,-60}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-126},{-60,-106}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-128},{-96,-116}})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
      //   OUT4 = G2.gen.PSIkd;
      //   OUT5 = G2.gen.PSIppq;
      //   OUT6 = G2.sEXSMPC.simpleLagLim.state;
      //   OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
      //   OUT8 = G2.gASTMPC.simpleLagLim.state;
      //   OUT9 = G2.gASTMPC.simpleLag.state;
      //   OUT10 = G2.gASTMPC.simpleLag1.state;
      //   OUT11 = G2.gASTMPC.PMECH;
      //   OUT12 = G2.sEXSMPC.EFD;
      //   OUT13 = PV.rEGCA1_1.simpleLag.state;
      //   OUT14 = PV.rEGCA1_1.integrator.y;
      //   OUT15 = PV.rEGCA1_1.integrator1.y;
      //   OUT16 = PV.rEECB1_1.integrator.y;
      //   OUT17 = PV.rEECB1_1.integrator1.y;
      //   OUT18 = PV.rEECB1_1.integrator2.y;
      //   OUT19 = PV.rEECB1_1.simpleLag.state;
      //   OUT20 = PV.rEECB1_1.simpleLag1.state;
      //   OUT21 = PV.rEECB1_1.integrator3.y;
      //   OUT22 = BESS.rEGCA1_1.simpleLag.state;
      //   OUT23 = BESS.rEGCA1_1.integrator.y;
      //   OUT24 = BESS.rEGCA1_1.integrator1.y;
      //   OUT25 = BESS.rEECCU1_1.integrator3.y;
      //   OUT26 = BESS.rEECCU1_1.integrator1.y;
      //   OUT27 = BESS.rEECCU1_1.integrator.y;
      //   OUT28 = BESS.rEECCU1_1.integrator2.y;
      //   OUT29 = BESS.rEECCU1_1.integrator4.y;
      //   OUT30 = BESS.rEECCU1_1.simpleLag.state;
      //   OUT31 = BESS.rEECCU1_1.simpleLag1.state;
      //   OUT32 = Bus5.v;
      //   OUT33 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,-6},{-82,-6}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-116,0},{-116,6},{-82,
                6}},   color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,-1.38778e-15},{58,-1.38778e-15},
                {58,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-36},{-82,-36}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-22},{-118,-22},{-118,-24},
                {-82,-24}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-30},{-52,-30},{-52,-6},{-42,-6}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,0},{-52,0},{-52,6},{
                -42,6}},                            color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-20},{110,0},{80,0},{80,
                6}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-33},{82.3,-34},{85.2,-34},
                {85.2,-26.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-21.03},
                {82.27,-21.6},{85.2,-21.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-24},{94.4,-24.5},{101.9,
                -24.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-41},{60,-86},{0,-86}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-19},{60,0},{80,0},{80,6}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,-5.55112e-16},{0,-5.55112e-16},{0,0},{24,
                0},{24,1.38778e-15},{29,1.38778e-15}},
                                                  color={0,0,255}));
        connect(PV.p1, Bus7.p)
          annotation (Line(points={{-20,-70},{-6,-70},{-6,-86},{0,-86}},
                                                               color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-60},{-50,-60},{-50,
                -70},{-42,-70}}, color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-66},{-82,-66}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-44},{-114,-44},{-114,-54},
                {-82,-54}}, color={0,0,127}));
        connect(BESS.p1, Bus7.p) annotation (Line(points={{-20,-104},{-6,-104},{-6,-86},
                {0,-86}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-98},{-50,-98},{-50,
                -90},{-59,-90}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-122},{-82,-122}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-116},{-50,-116},{-50,
                -110},{-42,-110}}, color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-84},{-100,-84},{-100,-80},
                {-116,-80},{-116,-66},{-150,-66}}, color={0,0,127}));
        connect(AddU5.u1, IN5) annotation (Line(points={{-82,-110},{-116,-110},{-116,-88},
                {-150,-88}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,0},{-9.5,0},{-9.5,-5.55112e-16},
                {4.996e-16,-5.55112e-16}}, color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,120}}), graphics={
              Rectangle(
                extent={{130,88},{232,-134}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,20},{-134,-100}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,26},{124,-134}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,88},{124,28}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,20},{-124,-130},{72,-130},{72,-60},{0,20},{-124,20}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-116},{114,-130}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-112},{70,-134}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=0.5, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,120}})));
      end MPCMicrogridRenewablesZEROOUTPUTS;

      model MPCMicrogridGasPV_01 "Microgrid with G2 and PV on Q Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF14)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = PV.rEGCA1_1.simpleLag.state;
        OUT12 = PV.rEGCA1_1.integrator.y;
        OUT13 = PV.rEGCA1_1.integrator1.y;
        OUT14 = PV.rEECB_Constant_Q_Control.simpleLag.state;
        OUT15 = PV.rEECB_Constant_Q_Control.integrator3.y;
        OUT16 = PV.rEECB_Constant_Q_Control.simpleLag1.state;
        OUT17 = PV.rEECB_Constant_Q_Control.simpleLag2.state;
        OUT18 = G2.gen.PMECH;
        OUT19 = G2.sEXSMPC.EFD;
        OUT20 = Bus7.v;
        OUT21 = Bus7.angle;
        OUT22 = Bus5.v;
        OUT23 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(PV.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-50,-50},{-50,
                -76},{-42,-76}}, color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-34},{-114,-34},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{232,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=0.9, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasPV_01;

      model MPCMicrogridGasPV_02
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF14)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-44,-86},{-24,-66}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = PV.rEGCA1_1.simpleLag.state;
        OUT12 = PV.rEGCA1_1.integrator.y;
        OUT13 = PV.rEGCA1_1.integrator1.y;
        OUT14 = PV.rEECB1_Local_V_Control.integrator1.y;
        OUT15 = PV.rEECB1_Local_V_Control.simpleLag.state;
        OUT16 = PV.rEECB1_Local_V_Control.integrator3.y;
        OUT17 = PV.rEECB1_Local_V_Control.simpleLag1.state;
        OUT18 = PV.rEGCA1_1.Qgen;
        OUT19 = PV.rEGCA1_1.Pgen;
        OUT20 = G2.gen.PMECH;
        OUT21 = G2.sEXSMPC.EFD;
        OUT22 = Bus5.v;
        OUT23 = Bus5.angle;


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-34},{-114,-34},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(PV.VINPUT, AddU3.y) annotation (Line(points={{-46,-76},{-50,-76},
                {-50,-50},{-59,-50}},
                                 color={0,0,127}));
        connect(add.u1, sine.y) annotation (Line(points={{85.2,-11.6},{85.2,-16},
                {82.3,-16},{82.3,-23}}, color={0,0,127}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,8},{80,
                8},{80,16}}, color={0,0,255}));
        connect(PV.p1, Bus7.p) annotation (Line(points={{-24,-76},{4.996e-16,
                -76}}, color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{232,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=20, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasPV_02;

      model MPCMicrogridGasPV_03 "Microgrid with G2 and PV on Q Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=10.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF14)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl_NOCONTROL
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
      //   Modelica.Blocks.Interfaces.RealOutput OUT23
      //     annotation (Placement(transformation(extent={{184,30},{204,50}})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = PV.rEGCA1_1.simpleLag.state;
        OUT12 = PV.rEGCA1_1.integrator.y;
        OUT13 = PV.rEGCA1_1.integrator1.y;
        OUT14 =PV.rEECB1_Local_V_Q_Control_PI.integrator.y;
        OUT15 =PV.rEECB1_Local_V_Q_Control_PI.integrator1.y;
        OUT16 =PV.rEECB1_Local_V_Q_Control_PI.simpleLag.state;
        OUT17 =PV.rEECB1_Local_V_Q_Control_PI.integrator3.y;
        OUT18 =PV.rEECB1_Local_V_Q_Control_PI.simpleLag1.state;
        OUT19 = G2.gen.PMECH;
        OUT20 = G2.sEXSMPC.EFD;
        OUT21 = Bus5.v;
        OUT22 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(PV.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-34},{-114,-34},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(AddU3.y, PV.u1) annotation (Line(points={{-59,-50},{-54,-50},{
                -54,-76},{-42,-76}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{232,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{84,54},{120,36}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=0.9, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasPV_03;

      model MPCMicrogridGasBESS_02
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,14}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,14})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-8}),  iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-8})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-40},{-140,-20}}),
              iconTransformation(extent={{-160,-40},{-140,-20}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Interfaces.RealInput IN4 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-60},{-140,-40}}),
              iconTransformation(extent={{-160,-60},{-140,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,12},{204,32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = BESS.rEGCA1_1.simpleLag.state;
        OUT12 = BESS.rEGCA1_1.integrator.y;
        OUT13 = BESS.rEGCA1_1.integrator1.y;
        OUT14 = BESS.rEECCU1_Local_V_Control.integrator3.y;
        OUT15 = BESS.rEECCU1_Local_V_Control.integrator1.y;
        OUT16 = BESS.rEECCU1_Local_V_Control.simpleLag.state;
        OUT17 =BESS.rEECCU1_Local_V_Control.IGQ.y;
        OUT18 = BESS.rEECCU1_Local_V_Control.simpleLag2.state;
        OUT19 =BESS.rEECCU1_Local_V_Control.IGP.y;
        OUT20 = BESS.rEECCU1_Local_V_Control.simpleLag1.state;
        OUT21 = BESS.rEGCA1_1.Qgen;
        OUT22 = BESS.rEGCA1_1.Pgen;
        OUT23 = G2.gen.PMECH;
        OUT24 = G2.sEXSMPC.EFD;
        OUT25 = Bus5.v;
        OUT26 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,14},{-116,14},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-8},{-118,-8},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-30},{-114,-30},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(AddU3.y, BESS.Pinput) annotation (Line(points={{-59,-50},{-50,-50},{-50,
                -70},{-42,-70}}, color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-84},{-120,-84},{-120,-50},
                {-150,-50}}, color={0,0,127}));
        connect(AddU4.y, BESS.Vinput) annotation (Line(points={{-59,-90},{-52,-90},{-52,
                -82},{-42,-82}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{232,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=50, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_02;

      model MPCMicrogridGasBESS_01
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,14}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,14})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-8}),  iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-8})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-40},{-140,-20}}),
              iconTransformation(extent={{-160,-40},{-140,-20}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
            Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,12},{204,32}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Interfaces.RealInput IN4 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-60},{-140,-40}}),
              iconTransformation(extent={{-160,-60},{-140,-40}})));

      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = BESS.rEGCA1_1.simpleLag.state;
        OUT12 = BESS.rEGCA1_1.integrator.y;
        OUT13 = BESS.rEGCA1_1.integrator1.y;
        OUT14 = BESS.rEECCU1_Constant_Q_Control.integrator3.y;
        OUT15 = BESS.rEECCU1_Constant_Q_Control.integrator1.y;
        OUT16 = BESS.rEECCU1_Constant_Q_Control.simpleLag.state;
        OUT17 = BESS.rEECCU1_Constant_Q_Control.simpleLag1.state;
        OUT18 = BESS.rEECCU1_Constant_Q_Control.simpleLag2.state;
        OUT19 = BESS.rEGCA1_1.Qgen;
        OUT20 = BESS.rEGCA1_1.Pgen;
        OUT21 = G2.gen.PMECH;
        OUT22 = G2.sEXSMPC.EFD;
        OUT23 = Bus5.v;
        OUT24 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,14},{-116,14},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-8},{-118,-8},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-30},{-114,-30},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-84},{-120,-84},{-120,-50},
                {-150,-50}}, color={0,0,127}));
        connect(AddU3.y, BESS.Paux1) annotation (Line(points={{-59,-50},{-54,-50},{-54,
                -70},{-42,-70}}, color={0,0,127}));
        connect(AddU4.y, BESS.Qext1) annotation (Line(points={{-59,-90},{-54,-90},{-54,
                -82},{-42,-82}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{232,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_01;

      model MPCMicrogridGasBESS_02_TABLE
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));

      //   Modelica.Blocks.Interfaces.RealOutput OUT23
      //     annotation (Placement(transformation(extent={{184,30},{204,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.TimeTable timeTable(table=[0,0; 0.5,-1.24264918032404e-14;
              1,-6.94396099437037e-15; 1.5,0.0109239876041676; 2,
              0.00809042787337886; 2.5,0.0183516175970573; 3,0.0178060228576788;
              3.5,0.0251760661526197; 4,0.026767658761367; 4.5,
              0.029211200367593; 5,0.0310996081802506; 5.5,0.0348832584909024;
              6,0.0341878619451228; 6.5,0.0373237392536458; 7,
              0.0376798059691856; 7.5,0.0388565993037793; 8,0.0400120868092364;
              8.5,0.0404609863570278; 9,0.0410265916223926; 9.5,
              0.0421280786672702; 10,0.0418992054660754; 10.5,
              0.0427900135062151; 11,0.0430500239165445; 11.5,
              0.0431658701429802; 12,0.0436896963234636; 12.5,
              0.0437900522087153; 13,0.0439108114281004; 13.5,
              0.0443182246232487; 14,0.0442328465839188; 14.5,0.044481321930258;
              15,0.044640523610534; 15.5,0.0446137427525548; 16,
              0.044820998425289; 16.5,0.0448724304330972; 17,0.0448825999159317;
              17.5,0.0450497958710889; 18,0.0450281152248613; 18.5,
              0.0450942232528553; 19,0.0451835944012748; 19.5,0.045162013705218;
              20,0.0452390248226015; 20.5,0.045276210326117; 21,
              0.0452698257996735; 21.5,0.0453402001186964; 22,
              0.0453430046656058; 22.5,0.0453594543435633; 23,
              0.0454063349693945; 23.5,0.0454000361672035; 24,
              0.0454278380939377; 24.5,0.0454527509151126; 25,
              0.0454491300394386; 25.5,0.0454787435675519; 26,
              0.0454873571129985; 26.5,0.0454916579412645; 27,
              0.0455150485768547; 27.5,0.0455162386164238; 28,0.045526463903139;
              28.5,0.0455414676520951; 29,0.0455413412483614; 29.5,
              0.045553869181129; 30,0.0455614989401403; 30.5,0.0455633385485845;
              31,0.0455746478862073; 31.5,0.0455778160329692; 32,
              0.0455819656684986; 32.5,0.0455903374235709; 33,
              0.0455917277115054; 33.5,0.0455971908336059; 34,
              0.0456024086513003; 34.5,0.0456037945995027; 35,
              0.0456092194913842; 35.5,0.0456120900069001; 36,
              0.0456141049517973; 36.5,0.0456185624338039; 37,
              0.0456201478729474; 37.5,0.0456226842127256; 38,
              0.0456258531597788; 38.5,0.0456270022199752; 39,
              0.0456296252046988; 39.5,0.0456316575512672])
          annotation (Placement(transformation(extent={{-120,-20},{-100,0}})));
        Modelica.Blocks.Sources.TimeTable timeTable1(table=[0,0; 0.5,-8.13839869011426e-12;
              1,-4.54811451008586e-12; 1.5,-0.00671806961118269; 2,-0.00348767229361689;
              2.5,-0.00552326595875817; 3,-0.00414900572145958; 3.5,-0.00577987295601266;
              4,-0.00563317429392006; 4.5,-0.00541367793989954; 5,-0.00585022758510055;
              5.5,-0.00658744868822301; 6,-0.00580640225992189; 6.5,-0.00673789887277186;
              7,-0.00650205491776111; 7.5,-0.00665931602207413; 8,-0.00698383939364864;
              8.5,-0.00685556747975445; 9,-0.0070135222039419; 9.5,-0.00730537052317968;
              10,-0.00707175092618227; 10.5,-0.00739583333251912; 11,-0.00740901180160845;
              11.5,-0.00738393138505953; 12,-0.00759439312144648; 12.5,-0.00755977458545485;
              13,-0.00760276137545444; 13.5,-0.00775524903227063; 14,-0.00768365892370935;
              14.5,-0.00779560390242238; 15,-0.00784880400307429; 15.5,-0.00782359854342416;
              16,-0.00792533529850679; 16.5,-0.00793336195604631; 17,-0.00794257204172531;
              17.5,-0.00802176082547255; 18,-0.00800639320711248; 18.5,-0.00804543529636291;
              19,-0.00808795381676873; 19.5,-0.00807856773659608; 20,-0.00812352916616575;
              20.5,-0.00814087200206557; 21,-0.00814332225020507; 21.5,-0.00818264719890869;
              22,-0.00818533940486553; 22.5,-0.00819973876843192; 23,-0.00822608050860239;
              23.5,-0.00822581234692109; 24,-0.00824528090835606; 24.5,-0.00825983529273998;
              25,-0.00826198309383784; 25.5,-0.00828094584862025; 26,-0.00828737244392595;
              26.5,-0.00829355223090498; 27,-0.00830823916318777; 27.5,-0.00831113028339324;
              28,-0.00831982477757563; 28.5,-0.00832949111566115; 29,-0.00833188115616622;
              29.5,-0.0083409831475739; 30,-0.00834655462959986; 30.5,-0.00834984635541445;
              31,-0.00835763705184288; 31.5,-0.00836079076871275; 32,-0.00836497439837501;
              32.5,-0.00837074272259018; 33,-0.00837291477910083; 33.5,-0.00837737615832555;
              34,-0.008381211954385; 34.5,-0.00838326822813405; 35,-0.0083873278915839;
              35.5,-0.00838978034988256; 36,-0.0083919897886656; 36.5,-0.0083952462394684;
              37,-0.00839692402138224; 37.5,-0.00839919670370813; 38,-0.00840157378213733;
              38.5,-0.00840292907639904; 39,-0.00840504596042289; 39.5,-0.00840669457719488])
          annotation (Placement(transformation(extent={{-120,20},{-100,40}})));
        Modelica.Blocks.Sources.TimeTable timeTable2(table=[0,0; 0.5,
              4.00978769957539e-12; 1,2.25702788003177e-12; 1.5,
              0.0027301314201461; 2,0.00326119359123799; 2.5,
              0.00314027370000735; 3,0.00324308791609928; 3.5,
              0.00310215230289633; 4,0.00316178923844267; 4.5,
              0.00318314994000934; 5,0.00317591572695851; 5.5,
              0.0031266462552063; 6,0.00319722945663391; 6.5,
              0.00314887307638988; 7,0.0031738596839107; 7.5,
              0.00316620947229761; 8,0.003161255126214; 8.5,0.00317302833364607;
              9,0.00317100838129313; 9.5,0.00315815313619649; 10,
              0.00317920370316426; 10.5,0.00316417466374063; 11,
              0.00316872611534734; 11.5,0.00317354972329819; 12,
              0.00316629542725832; 12.5,0.00317149258028359; 13,
              0.00317257677974491; 13.5,0.00316680182651523; 14,
              0.00317421232173358; 14.5,0.00317023319299592; 15,
              0.00316995894598904; 15.5,0.00317367051406059; 16,
              0.00317017414400578; 16.5,0.00317176714638557; 17,
              0.0031732075422446; 17.5,0.00317046728149773; 18,
              0.00317312954730065; 18.5,0.00317241566325; 19,
              0.00317152903165364; 19.5,0.003173450672191; 20,
              0.00317218432344646; 20.5,0.00317242938254859; 21,
              0.00317343680794813; 21.5,0.00317225140790545; 22,
              0.00317312899094969; 22.5,0.00317322834802103; 23,
              0.00317261720386997; 23.5,0.00317346445234934; 24,
              0.00317311939091181; 24.5,0.00317302229144856; 25,
              0.00317358181392769; 25.5,0.00317313066189296; 26,
              0.00317337149750963; 26.5,0.00317357377819805; 27,
              0.00317326148390041; 27.5,0.0031735932383098; 28,
              0.00317355410991844; 28.5,0.00317343749787924; 29,
              0.00317370811415163; 29.5,0.00317356527540891; 30,
              0.00317360704296644; 30.5,0.00317375179222091; 31,
              0.00317361906852027; 31.5,0.00317373458117904; 32,
              0.00317376877479542; 32.5,0.0031736974087776; 33,
              0.00317381573429882; 33.5,0.00317378547700615; 34,
              0.00317377943310543; 34.5,0.00317386030381109; 35,
              0.00317381359299432; 35.5,0.00317384861090001; 36,
              0.00317388482590595; 36.5,0.00317385141954879; 37,
              0.00317389908777336; 37.5,0.00317390243379421; 38,
              0.00317389219800353; 38.5,0.00317393213852394; 39,
              0.00317392047452779; 39.5,0.00317392933787575]) annotation (
            Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Sources.TimeTable timeTable3(table=[0,0; 0.5,-3.23585556339542e-11;
              1,-1.80913989824356e-11; 1.5,0.000790408288731436; 2,
              0.00152078774149299; 2.5,0.00130538145338687; 3,
              0.00160064414813587; 3.5,0.00150068407024616; 4,
              0.00173176207855828; 4.5,0.00162982329857751; 5,
              0.00178789169041803; 5.5,0.00177462663912419; 6,
              0.00186201114150318; 6.5,0.0018597945872315; 7,0.00193494710023;
              7.5,0.0019341686932458; 8,0.00199839775202136; 8.5,
              0.0019995609399691; 9,0.00204346597429371; 9.5,
              0.00206139503133472; 10,0.0020874713532507; 10.5,
              0.00210430027143681; 11,0.00213165464072206; 11.5,
              0.0021414761786046; 12,0.00216656790863566; 12.5,
              0.00217755696299725; 13,0.0021942733105914; 13.5,
              0.00220892466098964; 14,0.00222109866453178; 14.5,
              0.00223281502517105; 15,0.00224631152339051; 15.5,0.0022542755631;
              16,0.00226633704301628; 16.5,0.00227488594501059; 17,
              0.00228319474686868; 17.5,0.00229226138566809; 18,
              0.00229935253330606; 18.5,0.00230629229549696; 19,
              0.00231383883758486; 19.5,0.00231917609943601; 20,
              0.00232559767515496; 20.5,0.00233114216510834; 21,
              0.00233587942540527; 21.5,0.00234116208915682; 22,
              0.00234552767664655; 22.5,0.00234959199246933; 23,
              0.00235395081739411; 23.5,0.00235735604830646; 24,
              0.00236095730154475; 24.5,0.00236436103419004; 25,
              0.00236720575762285; 25.5,0.0023702525627365; 26,
              0.00237293599982815; 26.5,0.00237534425702681; 27,
              0.00237787776897382; 27.5,0.00237999888790931; 28,
              0.00238207615794752; 28.5,0.0023841146460465; 29,
              0.00238584622007433; 29.5,0.00238760975909287; 30,
              0.0023892375706039; 30.5,0.00239067769753961; 31,
              0.0023921526854291; 31.5,0.00239345008983406; 32,
              0.00239466803344642; 32.5,0.00239587283699107; 33,
              0.00239692272605914; 33.5,0.00239794980212001; 34,
              0.00239892255026826; 34.5,0.00239978515054308; 35,
              0.00240064230828428; 35.5,0.00240142485695226; 36,
              0.00240214245359398; 36.5,0.00240284858494312; 37,
              0.00240347957137162; 37.5,0.00240407843742245; 38,
              0.00240465278524725; 38.5,0.00240516604346929; 39,
              0.00240566473576502; 39.5,0.00240612790713239]) annotation (
            Placement(transformation(extent={{-120,-60},{-100,-40}})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = BESS.rEGCA1_1.simpleLag.state;
        OUT12 = BESS.rEGCA1_1.integrator.y;
        OUT13 = BESS.rEGCA1_1.integrator1.y;
        OUT14 = BESS.rEECCU1_Local_V_Control.integrator3.y;
        OUT15 = BESS.rEECCU1_Local_V_Control.integrator1.y;
        OUT16 = BESS.rEECCU1_Local_V_Control.simpleLag.state;
        OUT17 =BESS.rEECCU1_Local_V_Control.IGQ.y;
        OUT18 = BESS.rEECCU1_Local_V_Control.simpleLag2.state;
        OUT19 = G2.gen.PMECH;
        OUT20 = G2.sEXSMPC.EFD;
        OUT21 = Bus5.v;
        OUT22 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(timeTable1.y, G2.P_ref1) annotation (Line(points={{-99,30},{-50,
                30},{-50,16},{-42,16}}, color={0,0,127}));
        connect(timeTable.y, G2.Efd_ref) annotation (Line(points={{-99,-10},{
                -50,-10},{-50,4},{-42,4}}, color={0,0,127}));
        connect(timeTable3.y, BESS.Pinput) annotation (Line(points={{-99,-50},{
                -50,-50},{-50,-70},{-42,-70}}, color={0,0,127}));
        connect(timeTable2.y, BESS.Vinput) annotation (Line(points={{-99,-90},{
                -42,-90},{-42,-82}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=50, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_02_TABLE;

      model MPCMicrogridGasPV_02_rootlocus
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF14)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));
        Modelica.Blocks.Interfaces.RealInput u1
                     "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-180,-4},{-140,36}})));
        Modelica.Blocks.Interfaces.RealInput u2
                     "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-180,-34},{-140,6}})));
        Modelica.Blocks.Interfaces.RealInput u3
                     "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-180,-64},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,38},{160,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,18},{160,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,-42},{160,-20}})));
      equation

         OUT1 = G2.gen.w;
         OUT2 = Bus5.v;
         OUT3 = Bus5.angle;
        // OUT4 = PV.rEGCA1_1.Qgen;
      //   OUT5 = G2.gen.PSIppq;
      //   OUT6 = G2.sEXSMPC.simpleLagLim.state;
      //   OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
      //   OUT8 = G2.gASTMPC.simpleLagLim.state;
      //   OUT9 = G2.gASTMPC.simpleLag.state;
      //   OUT10 = G2.gASTMPC.simpleLag1.state;
      //   OUT11 = PV.rEGCA1_1.simpleLag.state;
      //   OUT12 = PV.rEGCA1_1.integrator.y;
      //   OUT13 = PV.rEGCA1_1.integrator1.y;
      //   OUT14 = PV.rEECB1_Local_V_Control.integrator1.y;
      //   OUT15 = PV.rEECB1_Local_V_Control.simpleLag.state;
      //   OUT16 = PV.rEECB1_Local_V_Control.integrator3.y;
      //   OUT17 = PV.rEECB1_Local_V_Control.simpleLag1.state;
      //   OUT18 = PV.rEGCA1_1.Qgen;
      //   OUT19 = PV.rEGCA1_1.Pgen;
      //   OUT20 = G2.gen.PMECH;
      //   OUT21 = G2.sEXSMPC.EFD;
      //   OUT22 = Bus5.v;
      //   OUT23 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(PV.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(PV.VINPUT, AddU3.y) annotation (Line(points={{-42,-76},{-50,-76},{-50,
                -50},{-59,-50}}, color={0,0,127}));
        connect(AddU1.u1, u1)
          annotation (Line(points={{-82,16},{-160,16}}, color={0,0,127}));
        connect(AddU2.u1, u2)
          annotation (Line(points={{-82,-14},{-160,-14}}, color={0,0,127}));
        connect(AddU3.u1, u3)
          annotation (Line(points={{-82,-44},{-160,-44}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=100, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasPV_02_rootlocus;

      model MPCMicrogridGasBESS_02_rootlocus2
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Interfaces.RealInput u1
                     "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-180,-4},{-140,36}})));
        Modelica.Blocks.Interfaces.RealInput u2
                     "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-180,-34},{-140,6}})));
        Modelica.Blocks.Interfaces.RealInput u3
                     "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-180,-64},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput u4
                     "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-180,-104},{-140,-64}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
      equation

         OUT1 = G2.gen.PMECH;
      //   OUT2 = G2.gen.delta;
         OUT2 = G2.gen.Q;
      //   OUT4 = G2.gen.PSIkd;
      //   OUT5 = G2.gen.PSIppq;
      //   OUT6 = G2.sEXSMPC.simpleLagLim.state;
      //   OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
      //   OUT8 = G2.gASTMPC.simpleLagLim.state;
      //   OUT9 = G2.gASTMPC.simpleLag.state;
      //   OUT10 = G2.gASTMPC.simpleLag1.state;
      //   OUT11 = BESS.rEGCA1_1.simpleLag.state;
      //   OUT12 = BESS.rEGCA1_1.integrator.y;
      //   OUT13 = BESS.rEGCA1_1.integrator1.y;
      //   OUT14 = BESS.rEECCU1_Local_V_Control.integrator3.y;
      //   OUT15 = BESS.rEECCU1_Local_V_Control.integrator1.y;
      //   OUT16 = BESS.rEECCU1_Local_V_Control.simpleLag.state;
      //   OUT17 = BESS.rEECCU1_Local_V_Control.integrator2.y;
      //   OUT18 = BESS.rEECCU1_Local_V_Control.simpleLag2.state;
        OUT3  = BESS.rEGCA1_1.Qgen;
         OUT4 = BESS.rEGCA1_1.Pgen;
      //   OUT21 = G2.gen.PMECH;
      //   OUT22 = G2.sEXSMPC.EFD;
         //OUT23 = Bus5.v;
         //OUT24 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(AddU3.y, BESS.Pinput) annotation (Line(points={{-59,-50},{-50,-50},{-50,
                -70},{-42,-70}}, color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.y, BESS.Vinput) annotation (Line(points={{-59,-90},{-52,-90},{-52,
                -82},{-42,-82}}, color={0,0,127}));
        connect(AddU1.u1, u1)
          annotation (Line(points={{-82,16},{-160,16}}, color={0,0,127}));
        connect(AddU2.u1, u2)
          annotation (Line(points={{-82,-14},{-160,-14}}, color={0,0,127}));
        connect(AddU3.u1, u3)
          annotation (Line(points={{-82,-44},{-160,-44}}, color={0,0,127}));
        connect(AddU4.u1, u4)
          annotation (Line(points={{-82,-84},{-160,-84}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{84,56},{120,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=50, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_02_rootlocus2;

      model MPCMicrogridGasBESS_02_rootlocus
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
      equation


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(AddU3.y, BESS.Pinput) annotation (Line(points={{-59,-50},{-50,-50},{-50,
                -70},{-42,-70}}, color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.y, BESS.Vinput) annotation (Line(points={{-59,-90},{-52,-90},{-52,
                -82},{-42,-82}}, color={0,0,127}));
        connect(AddU1.u1, AddU1.u2) annotation (Line(points={{-82,16},{-86,16},{-86,4},
                {-82,4}}, color={0,0,127}));
        connect(AddU2.u1, AddU2.u2) annotation (Line(points={{-82,-14},{-86,-14},{-86,
                -26},{-82,-26}}, color={0,0,127}));
        connect(AddU3.u1, AddU3.u2) annotation (Line(points={{-82,-44},{-86,-44},{-86,
                -56},{-82,-56}}, color={0,0,127}));
        connect(AddU4.u1, AddU4.u2) annotation (Line(points={{-82,-84},{-86,-84},{-86,
                -96},{-82,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{84,56},{120,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=50, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_02_rootlocus;

      model MPCMicrogridGasBESS_022
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,14}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,14})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-8}),  iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-8})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-40},{-140,-20}}),
              iconTransformation(extent={{-160,-40},{-140,-20}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Interfaces.RealInput IN4 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-60},{-140,-40}}),
              iconTransformation(extent={{-160,-60},{-140,-40}})));
                Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{140,40},{160,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{140,20},{160,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{140,0},{160,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{140,-20},{160,0}})));

      equation

        OUT1 = G2.gen.w;
      //   OUT2 = G2.gen.delta;
      //   OUT3 = G2.gen.Epq;
      //   OUT4 = G2.gen.PSIkd;
      //   OUT5 = G2.gen.PSIppq;
      //   OUT6 = G2.sEXSMPC.simpleLagLim.state;
      //   OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
      //   OUT8 = G2.gASTMPC.simpleLagLim.state;
      //   OUT9 = G2.gASTMPC.simpleLag.state;
      //   OUT10 = G2.gASTMPC.simpleLag1.state;
      //   OUT11 = BESS.rEGCA1_1.simpleLag.state;
      //   OUT12 = BESS.rEGCA1_1.integrator.y;
      //   OUT13 = BESS.rEGCA1_1.integrator1.y;
      //   OUT14 = BESS.rEECCU1_Local_V_Control.integrator3.y;
      //   OUT15 = BESS.rEECCU1_Local_V_Control.integrator1.y;
      //   OUT16 = BESS.rEECCU1_Local_V_Control.simpleLag.state;
      //   OUT17 =BESS.rEECCU1_Local_V_Control.IGQ.y;
      //   OUT18 = BESS.rEECCU1_Local_V_Control.simpleLag2.state;
      //   OUT19 =BESS.rEECCU1_Local_V_Control.IGP.y;
      //   OUT20 = BESS.rEECCU1_Local_V_Control.simpleLag1.state;
      OUT21 = BESS.rEGCA1_1.Qgen;
      OUT22 = BESS.rEGCA1_1.Pgen;
      //   OUT23 = G2.gen.PMECH;
      //   OUT24 = G2.sEXSMPC.EFD;
        OUT25 = Bus5.v;
        OUT26 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,14},{-116,14},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-8},{-118,-8},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-30},{-114,-30},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(AddU3.y, BESS.Pinput) annotation (Line(points={{-59,-50},{-50,-50},{-50,
                -70},{-42,-70}}, color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-84},{-120,-84},{-120,-50},
                {-150,-50}}, color={0,0,127}));
        connect(AddU4.y, BESS.Vinput) annotation (Line(points={{-59,-90},{-52,-90},{-52,
                -82},{-42,-82}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=50, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_022;

      model MPCMicrogridGasBESS_03
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,14}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,14})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-8}),  iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-8})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-40},{-140,-20}}),
              iconTransformation(extent={{-160,-40},{-140,-20}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0.01,
          f=1/260,
          phase=3.1415926535898,
          startTime=5.5)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Interfaces.RealInput IN4 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-60},{-140,-40}}),
              iconTransformation(extent={{-160,-60},{-140,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,40},{160,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,20},{160,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-40},{160,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{170,70},{190,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{170,40},{190,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{170,20},{190,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{170,-10},{190,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{170,-40},{190,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{170,-70},{190,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{198,72},{218,92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{198,42},{218,62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{198,22},{218,42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{198,-8},{218,12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{198,-38},{218,-18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{198,-68},{218,-48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{232,76},{252,96}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{232,46},{252,66}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{232,26},{252,46}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{232,-4},{252,16}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{232,-34},{252,-14}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{244,-60},{264,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{228,-80},{248,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{234,-98},{254,-78}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = BESS.rEGCA1_1.simpleLag.state;
      OUT12 = BESS.rEGCA1_1.integrator.y;
      OUT13 = BESS.rEGCA1_1.integrator1.y;
      OUT14 =BESS.EC.integrator3.y;
      OUT15 =BESS.EC.simpleLag.state;
      OUT16 =BESS.EC.IGQ.y;
      OUT17 =BESS.EC.IGV.y;
      OUT18 =BESS.EC.IGP.y;
      OUT19 =BESS.EC.simpleLag1.state;
      OUT20 =BESS.EC.simpleLag2.state;
      OUT21 =BESS.EC.simpleLag3.state;
      OUT22 =BESS.EC.simpleLag4.state;
      OUT23 = BESS.rEGCA1_1.Pgen;
      OUT24 = BESS.rEGCA1_1.Qgen;
      OUT25 = Bus5.v;
      OUT26 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,14},{-116,14},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-8},{-118,-8},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-30},{-114,-30},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-84},{-120,-84},{-120,-50},
                {-150,-50}}, color={0,0,127}));
        connect(AddU3.y, BESS.Paux1) annotation (Line(points={{-59,-50},{-52,-50},{-52,
                -70},{-42,-70}}, color={0,0,127}));
        connect(AddU4.y, BESS.Qext1) annotation (Line(points={{-59,-90},{-52,-90},{-52,
                -82},{-42,-82}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=100,
            __Dymola_NumberOfIntervals=100,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_03;

      model MPCMicrogridGasBESS_03_PMU
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,14}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,14})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-8}),  iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-8})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-40},{-140,-20}}),
              iconTransformation(extent={{-160,-40},{-140,-20}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
        Modelica.Blocks.Interfaces.RealInput IN4 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-60},{-140,-40}}),
              iconTransformation(extent={{-160,-60},{-140,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,40},{160,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,20},{160,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-40},{160,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{170,70},{190,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{170,40},{190,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{170,20},{190,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{170,-10},{190,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{170,-40},{190,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{170,-70},{190,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{198,72},{218,92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{198,42},{218,62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{198,22},{218,42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{198,-8},{218,12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{198,-38},{218,-18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{198,-68},{218,-48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{232,76},{252,96}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{232,46},{252,66}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{232,26},{252,46}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{232,-4},{252,16}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{232,-34},{252,-14}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{232,-64},{252,-44}})));
        Electrical.Sensors.SoftPMU softPMU(v_0=powerFlow.powerflow.bus.V5, angle_0=
              powerFlow.powerflow.bus.A5,
          Ts=0.001)                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={96,10})));
      equation

        OUT1 = 60 + 60*G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = BESS.rEGCA1_1.simpleLag.state;
        OUT12 = BESS.rEGCA1_1.integrator.y;
        OUT13 = BESS.rEGCA1_1.integrator1.y;
        OUT14 =BESS.EC.integrator3.y;
        OUT15 =BESS.EC.integrator1.y;
        OUT16 =BESS.EC.simpleLag.state;
        OUT17 =BESS.EC.IGQ.y;
        OUT18 =BESS.EC.IGV.y;
        OUT19 = BESS.rEGCA1_1.Pgen;
        OUT20 = BESS.rEGCA1_1.Qgen;
        OUT21 = G2.gen.PMECH;
        OUT22 = G2.sEXSMPC.EFD;
        OUT23 = Bus5.v;
        OUT24 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,14},{-116,14},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-8},{-118,-8},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-30},{-114,-30},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-84},{-120,-84},{-120,-50},
                {-150,-50}}, color={0,0,127}));
        connect(AddU3.y, BESS.Paux1) annotation (Line(points={{-59,-50},{-52,-50},{-52,
                -70},{-42,-70}}, color={0,0,127}));
        connect(AddU4.y, BESS.Qext1) annotation (Line(points={{-59,-90},{-52,-90},{-52,
                -82},{-42,-82}}, color={0,0,127}));
        connect(softPMU.n, Bus5.p)
          annotation (Line(points={{89,10},{80,10},{80,16}}, color={0,0,255}));
        connect(softPMU.p, Load2.p)
          annotation (Line(points={{103,10},{110,10},{110,-10}}, color={0,0,255}));
        connect(add.u1, sine.y) annotation (Line(points={{85.2,-11.6},{85.2,-16},{82.3,
                -16},{82.3,-23}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-136,-60}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=20, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_03_PMU;

      model MPCMicrogridGasBESS_03_rootlocus
        "Microgrid with G2 and PV on Local V Control"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=100,
          rc_enabled=true,
          t_rc=800.01)      if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF15)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=0,
          d_t=0)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.05) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-86},{-20,-66}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-102},{-96,-90}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-100},{-60,-80}})));
      equation

      //   OUT1 = G2.gen.w;
      //   OUT2 = G2.gen.delta;
      //   OUT3 = G2.gen.Epq;
      //   OUT4 = G2.gen.PSIkd;
      //   OUT5 = G2.gen.PSIppq;
      //   OUT6 = G2.sEXSMPC.simpleLagLim.state;
      //   OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
      //   OUT8 = G2.gASTMPC.simpleLagLim.state;
      //   OUT9 = G2.gASTMPC.simpleLag.state;
      //   OUT10 = G2.gASTMPC.simpleLag1.state;
      //   OUT11 = BESS.rEGCA1_1.simpleLag.state;
      //   OUT12 = BESS.rEGCA1_1.integrator.y;
      //   OUT13 = BESS.rEGCA1_1.integrator1.y;
      //   OUT14 =BESS.rEECCU1_Local_V_Q_Control2_1.integrator3.y;
      //   OUT15 =BESS.rEECCU1_Local_V_Q_Control2_1.integrator1.y;
      //   OUT16 =BESS.rEECCU1_Local_V_Q_Control2_1.simpleLag.state;
      //   OUT17 =BESS.rEECCU1_Local_V_Q_Control2_1.integrator.y;
      //   OUT18 =BESS.rEECCU1_Local_V_Q_Control2_1.integrator2.y;
      //   OUT19 = BESS.rEGCA1_1.Pgen;
      //   OUT20 = BESS.rEGCA1_1.Qgen;
      //   OUT21 = G2.gen.PMECH;
      //   OUT22 = G2.sEXSMPC.EFD;
      //   OUT23 = Bus5.v;
      //   OUT24 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
        connect(BESS.p1, Bus7.p)
          annotation (Line(points={{-20,-76},{4.996e-16,-76}}, color={0,0,255}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-96},{-82,-96}}, color={0,0,127}));
        connect(AddU3.y, BESS.Paux1) annotation (Line(points={{-59,-50},{-52,-50},{-52,
                -70},{-42,-70}}, color={0,0,127}));
        connect(AddU4.y, BESS.Qext1) annotation (Line(points={{-59,-90},{-52,-90},{-52,
                -82},{-42,-82}}, color={0,0,127}));
        connect(AddU2.u1, AddU2.u2) annotation (Line(points={{-82,-14},{-86,-14},{-86,
                -26},{-82,-26}}, color={0,0,127}));
        connect(AddU1.u1, IN11.y) annotation (Line(points={{-82,16},{-92,16},{
                -92,4},{-95.4,4}}, color={0,0,127}));
        connect(AddU3.u1, AddU3.u2) annotation (Line(points={{-82,-44},{-90,-44},{-90,
                -56},{-82,-56}}, color={0,0,127}));
        connect(AddU4.u1, AddU4.u2) annotation (Line(points={{-82,-84},{-90,-84},{-90,
                -96},{-82,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=20, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridGasBESS_03_rootlocus;

      model MPCMicrogridRenewablesIncluded_rootlocus
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={40,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF13)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{76,-14},{82,-8}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{76,-26},{82,-20}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));

        Electrical.Buses.Bus          Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=
              powerFlow.powerflow.bus.A7) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={0,-76})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=270,
              origin={60,-20})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-70},{-20,-50}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V7,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A7,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-102},{-20,-82}})));
      equation

      //   OUT1 = G2.gen.w;
      //   OUT2 = G2.gen.delta;
      //   OUT3 = G2.gen.Epq;
      //   OUT4 = G2.gen.PSIkd;
      //   OUT5 = G2.gen.PSIppq;
      //   OUT6 = G2.sEXSMPC.simpleLagLim.state;
      //   OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
      //   OUT8 = G2.gASTMPC.simpleLagLim.state;
      //   OUT9 = G2.gASTMPC.simpleLag.state;
      //   OUT10 = G2.gASTMPC.simpleLag1.state;
      //   OUT11 = PV.rEGCA1_1.simpleLag.state;
      //   OUT12 = PV.rEGCA1_1.integrator.y;
      //   OUT13 = PV.rEGCA1_1.integrator1.y;
      //   OUT14 = PV.rEECB1_Local_V_Q_Control.integrator.y;
      //   OUT15 = PV.rEECB1_Local_V_Q_Control.integrator1.y;
      //   OUT16 = PV.rEECB1_Local_V_Q_Control.simpleLag.state;
      //   OUT17 = PV.rEECB1_Local_V_Q_Control.integrator3.y;
      //   OUT18 = PV.rEECB1_Local_V_Q_Control.simpleLag1.state;
      //   OUT19 = BESS.rEGCA1_1.simpleLag.state;
      //   OUT20 = BESS.rEGCA1_1.integrator.y;
      //   OUT21 = BESS.rEGCA1_1.integrator1.y;
      //   OUT22 = BESS.rEECCU1_Local_V_Q_Control2.integrator3.y;
      //   OUT23 = BESS.rEECCU1_Local_V_Q_Control2.integrator1.y;
      //   OUT24 = BESS.rEECCU1_Local_V_Q_Control2.simpleLag.state;
      //   OUT25 = BESS.rEECCU1_Local_V_Q_Control2.IGQ.y;
      //   OUT26 = BESS.rEECCU1_Local_V_Q_Control2.IGV.y;
      //   OUT27 = G2.gen.PMECH;
      //   OUT28 = G2.sEXSMPC.EFD;
      //   OUT29 = BESS.rEGCA1_1.Pgen;
      //   OUT30 = BESS.rEGCA1_1.Qgen;
      //   OUT31 = PV.rEGCA1_1.Pgen;
      //   OUT32 = PV.rEGCA1_1.Qgen;
      //   OUT33 = Bus5.v;
      //   OUT34 = Bus5.angle;



        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{51,10},{80,10},{80,16}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.3,-23},{82.3,-24},{85.2,-24},
                {85.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.27,-11.03},
                {82.27,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{94.4,-14.5},{101.9,
                -14.5}}, color={0,0,127}));
        connect(T3.n, Bus7.p) annotation (Line(points={{60,-31},{60,-76},{0,-76}},
                       color={0,0,255}));
        connect(T3.p, Bus5.p) annotation (Line(points={{60,-9},{60,10},{80,10},{80,16}},
              color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{4.996e-16,10},{29,10}},
                                                  color={0,0,255}));
        connect(PV.p1, Bus7.p)
          annotation (Line(points={{-20,-60},{-6,-60},{-6,-76},{0,-76}},
                                                               color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-50,-50},{-50,
                -60},{-42,-60}}, color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN3,AddU3. u1) annotation (Line(points={{-150,-34},{-114,-34},{-114,-44},
                {-82,-44}}, color={0,0,127}));
        connect(BESS.p1, Bus7.p) annotation (Line(points={{-20,-92},{-6,-92},{-6,-76},
                {4.996e-16,-76}},
                          color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-86},{-54,-86},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -98},{-42,-98}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1, IN4) annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1, IN5) annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{4.996e-16,10}},
                                           color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Polygon(
                points={{-124,30},{-124,-120},{72,-120},{72,-50},{0,30},{-124,30}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{6,-102},{70,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCMicrogridRenewablesIncluded_rootlocus;

      model MPCAppliedEnergyOriginal
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
                  Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
      equation

      // OUT1 = G2.gen.w;
      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.Epq;
      // OUT4 = G2.gen.PSIkd;
      // OUT5 = G2.gen.PSIppq;
      // OUT6 = G2.sEXSMPC.simpleLagLim.state;
      // OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      // OUT8 = G2.gASTMPC.simpleLagLim.state;
      // OUT9 = G2.gASTMPC.simpleLag.state;
      // OUT10 = G2.gASTMPC.simpleLag1.state;
      // OUT11 = PV.rEGCA1_1.simpleLag.state;
      // OUT12 = PV.rEGCA1_1.integrator.y;
      // OUT13 = PV.rEGCA1_1.integrator1.y;
      // OUT14 =PV.EC.IGQ.y;
      // OUT15 =PV.EC.IGV.y;
      // OUT16 =PV.EC.simpleLag.state;
      // OUT17 =PV.EC.simpleLag1.state;
      // OUT18 =PV.EC.simpleLag2.state;
      // OUT19 =PV.EC.IGP.y;
      // OUT20 =PV.EC.simpleLag3.state;
      // OUT21 =PV.EC.simpleLag4.state;
      // OUT22 =PV.EC.simpleLag5.state;
      // OUT23 = BESS.rEGCA1_1.simpleLag.state;
      // OUT24 = BESS.rEGCA1_1.integrator.y;
      // OUT25 = BESS.rEGCA1_1.integrator1.y;
      // OUT26 =BESS.EC.integrator3.y;
      // OUT27 =BESS.EC.integrator1.y;
      // OUT28 =BESS.EC.simpleLag.state;
      // OUT29 =BESS.EC.IGQ.y;
      // OUT30 =BESS.EC.IGV.y;
      // OUT31 =BESS.EC.IGP.y;
      // OUT32 =BESS.EC.simpleLag1.state;
      // OUT33 =BESS.EC.simpleLag2.state;
      // OUT34 =BESS.EC.simpleLag3.state;
      // OUT35 =BESS.EC.simpleLag4.state;
      // OUT36 = G2.gen.PMECH;
      // OUT37 = G2.sEXSMPC.EFD;
      // OUT38 = BESS.rEGCA1_1.Pgen;
      // OUT39 = BESS.rEGCA1_1.Qgen;
      // OUT40 = PV.rEGCA1_1.Pgen;
      // OUT41 = PV.rEGCA1_1.Qgen;
      // OUT42 = Bus5.v;
      // OUT43 = Bus5.angle;

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag5.state;
      OUT22 = PV.EC.simpleLag4.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.simpleLag.state;
      OUT28 =BESS.EC.IGQ.y;
      OUT29 =BESS.EC.IGV.y;
      OUT30 =BESS.EC.IGP.y;
      OUT31 =BESS.EC.simpleLag1.state;
      OUT32 =BESS.EC.simpleLag2.state;
      OUT33 =BESS.EC.simpleLag3.state;
      OUT34 =BESS.EC.simpleLag4.state;
      OUT35 = G2.gen.PMECH;
      OUT36 = G2.sEXSMPC.EFD;
      OUT37 = BESS.rEGCA1_1.Pgen;
      OUT38 = BESS.rEGCA1_1.Qgen;
      OUT39 = PV.rEGCA1_1.Pgen;
      OUT40 = PV.rEGCA1_1.Qgen;
      OUT41 = Bus5.v;
      OUT42 = Bus5.angle;



        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            Interval=0.0001,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal;

      model MPCAppliedEnergyLinearized
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{208,-108},{228,-88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000000000001,
                                       samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag5.state;
      OUT22 = PV.EC.simpleLag4.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.simpleLag.state;
      OUT28 =BESS.EC.IGQ.y;
      OUT29 =BESS.EC.IGV.y;
      OUT30 =BESS.EC.IGP.y;
      OUT31 =BESS.EC.simpleLag1.state;
      OUT32 =BESS.EC.simpleLag2.state;
      OUT33 =BESS.EC.simpleLag3.state;
      OUT34 =BESS.EC.simpleLag4.state;
      OUT35 = G2.gen.PMECH;
      OUT36 = G2.sEXSMPC.EFD;
      OUT37 = BESS.rEGCA1_1.Pgen;
      OUT38 = BESS.rEGCA1_1.Qgen;
      OUT39 = PV.rEGCA1_1.Pgen;
      OUT40 = PV.rEGCA1_1.Qgen;
      OUT41 = Bus5.v;
      OUT42 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{254,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized;

      model MPCAppliedEnergyLinearized_rootlocus
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=50.0,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
      equation

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(AddU1.u1, AddU1.u2) annotation (Line(points={{-82,16},{-86,16},{-86,4},
                {-82,4}}, color={0,0,127}));
        connect(AddU2.u1, AddU2.u2) annotation (Line(points={{-82,-14},{-86,-14},{-86,
                -26},{-82,-26}}, color={0,0,127}));
        connect(AddU3.u1, AddU3.u2) annotation (Line(points={{-82,-44},{-86,-44},{-86,
                -56},{-82,-56}}, color={0,0,127}));
        connect(AddU4.u1, AddU4.u2) annotation (Line(points={{-82,-74},{-86,-74},{-86,
                -86},{-82,-86}}, color={0,0,127}));
        connect(AddU5.u1, AddU5.u2) annotation (Line(points={{-82,-100},{-86,-100},{-86,
                -112},{-82,-112}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_rootlocus;

      model MPCAppliedEnergyLinearized_step
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Step     IN1(startTime=20)
          annotation (Placement(transformation(extent={{-152,10},{-140,22}})));
        Modelica.Blocks.Sources.Step     IN2(startTime=100)
          annotation (Placement(transformation(extent={{-152,-20},{-140,-8}})));
        Modelica.Blocks.Sources.Step     IN3(startTime=100)
          annotation (Placement(transformation(extent={{-152,-50},{-140,-38}})));
        Modelica.Blocks.Sources.Step     IN4(startTime=100)
          annotation (Placement(transformation(extent={{-152,-80},{-140,-68}})));
        Modelica.Blocks.Sources.Step     IN5(startTime=100)
          annotation (Placement(transformation(extent={{-152,-106},{-140,-94}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 = BESS.rEGCA1_1.simpleLag.state;
      OUT22 = BESS.rEGCA1_1.integrator.y;
      OUT23 = BESS.rEGCA1_1.integrator1.y;
      OUT24 =BESS.EC.integrator3.y;
      OUT25 =BESS.EC.simpleLag.state;
      OUT26 =BESS.EC.IGQ.y;
      OUT27 =BESS.EC.IGV.y;
      OUT28 =BESS.EC.IGP.y;
      OUT29 =BESS.EC.simpleLag1.state;
      OUT30 =BESS.EC.simpleLag2.state;
      OUT31 = G2.gen.PMECH;
      OUT32 = G2.sEXSMPC.EFD;
      OUT33 = BESS.rEGCA1_1.Pgen;
      OUT34 = BESS.rEGCA1_1.Qgen;
      OUT35 = PV.rEGCA1_1.Pgen;
      OUT36 = PV.rEGCA1_1.Qgen;
      OUT37 = Bus5.v;
      OUT38 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(IN1.y, AddU1.u1)
          annotation (Line(points={{-139.4,16},{-82,16}}, color={0,0,127}));
        connect(IN2.y, AddU2.u1)
          annotation (Line(points={{-139.4,-14},{-82,-14}}, color={0,0,127}));
        connect(IN3.y, AddU3.u1)
          annotation (Line(points={{-139.4,-44},{-82,-44}}, color={0,0,127}));
        connect(IN4.y, AddU4.u1)
          annotation (Line(points={{-139.4,-74},{-82,-74}}, color={0,0,127}));
        connect(IN5.y, AddU5.u1) annotation (Line(points={{-139.4,-100},{-82,
                -100}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{232,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=50, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_step;

      model MPCAppliedEnergyLinearized_PYTHON
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl_PYTHON
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized_PYTHON
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
      equation


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{-1,-50}}, color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{21,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(AddU1.u1, AddU1.u2) annotation (Line(points={{-82,16},{-86,16},{-86,4},
                {-82,4}}, color={0,0,127}));
        connect(AddU2.u1, AddU2.u2)
          annotation (Line(points={{-82,-14},{-90,-26},{-82,-26}}, color={0,0,127}));
        connect(AddU3.u1, AddU3.u2) annotation (Line(points={{-82,-44},{-88,-44},{-88,
                -56},{-82,-56}}, color={0,0,127}));
        connect(AddU4.u1, AddU4.u2)
          annotation (Line(points={{-82,-74},{-90,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU5.u1, AddU5.u2) annotation (Line(points={{-82,-100},{-86,-100},{-86,
                -112},{-82,-112}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_PYTHON;

      model MPCAppliedEnergyOriginal_rootlocus
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
      equation

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(AddU1.u1, AddU1.u2)
          annotation (Line(points={{-82,16},{-92,4},{-82,4}}, color={0,0,127}));
        connect(AddU2.u1, AddU2.u2) annotation (Line(points={{-82,-14},{-88,-14},{-88,
                -26},{-82,-26}}, color={0,0,127}));
        connect(AddU3.u1, AddU3.u2) annotation (Line(points={{-82,-44},{-88,-44},{-88,
                -56},{-82,-56}}, color={0,0,127}));
        connect(AddU4.u1, AddU4.u2) annotation (Line(points={{-82,-74},{-86,-74},{-86,
                -86},{-82,-86}}, color={0,0,127}));
        connect(AddU5.u1, AddU5.u2) annotation (Line(points={{-82,-100},{-86,-100},{-86,
                -112},{-82,-112}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_rootlocus;

      model MPCAppliedEnergyOriginal_TABLE_mode1
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT43
          annotation (Placement(transformation(extent={{224,30},{244,50}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,
              1.63e-18; 1,3.25e-18; 1.5,0.01; 2,0.02; 2.5,0.03; 3,0.04; 3.5,
              0.05; 4,0.06; 4.5,0.07; 5,0.08; 5.5,0.09; 6,0.1; 6.5,0.11; 7,0.12;
              7.5,0.13; 8,0.14; 8.5,0.15; 9,0.16; 9.5,0.17; 10,0.18; 10.5,0.19;
              11,0.2; 11.5,0.21; 12,0.211394749; 12.5,0.208967391; 13,
              0.206813042; 13.5,0.204814716; 14,0.202939831; 14.5,0.201187827;
              15,0.199563061; 15.5,0.198069037; 16,0.196693391; 16.5,0.19543066;
              17,0.191430624; 17.5,0.189724498; 18,0.188315654; 18.5,
              0.186906047; 19,0.185738558; 19.5,0.184822385; 20,0.184088679;
              20.5,0.183502562; 21,0.183036426; 21.5,0.182665915; 22,
              0.182369913; 22.5,0.182115217; 23,0.181937876; 23.5,0.181800481;
              24,0.181683898; 24.5,0.181592896; 25,0.181521311; 25.5,
              0.181460187; 26,0.181410098; 26.5,0.181377246; 27,0.181347034;
              27.5,0.181323135; 28,0.181304277; 28.5,0.181291026; 29,0.18127658;
              29.5,0.181267167], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,6},{-80,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              8.72e-17; 1,1.74e-16; 1.5,0.05; 2,0.1; 2.5,0.15; 3,0.2; 3.5,0.25;
              4,0.3; 4.5,0.35; 5,0.4; 5.5,0.432268407; 6,0.4224197; 6.5,
              0.40103619; 7,0.390437125; 7.5,0.382556554; 8,0.375168263; 8.5,
              0.369553476; 9,0.365418574; 9.5,0.362471672; 10,0.360534141; 10.5,
              0.35940924; 11,0.358361886; 11.5,0.357331258; 12,0.356885581;
              12.5,0.356094554; 13,0.35563203; 13.5,0.355286945; 14,0.35505784;
              14.5,0.354745516; 15,0.354664024; 15.5,0.354648366; 16,
              0.354632249; 16.5,0.354626546; 17,0.354532805; 17.5,0.354479273;
              18,0.354444794; 18.5,0.354409796; 19,0.354379657; 19.5,
              0.354356813; 20,0.354339106; 20.5,0.354325056; 21,0.354313955;
              21.5,0.354305224; 22,0.354501548; 22.5,0.354144102; 23,
              0.354344338; 23.5,0.354209265; 24,0.354327501; 24.5,0.354371136;
              25,0.35416755; 25.5,0.35426433; 26,0.354275405; 26.5,0.354280469;
              27,0.354282307; 27.5,0.354282504; 28,0.354281971; 28.5,
              0.354281325; 29,0.354280474; 29.5,0.354279649], smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              1.26e-15; 1,2.52e-15; 1.5,-1.23e-17; 2,1.6e-18; 2.5,1.6e-18; 3,
              1.6e-18; 3.5,1.6e-18; 4,-1.87e-18; 4.5,6.11e-20; 5,-7.52e-17; 5.5,
              -1.79e-18; 6,-4.16e-20; 6.5,-4.4e-19; 7,-8.97e-19; 7.5,-3.68e-19;
              8,-2e-21; 8.5,-2e-21; 9,-2e-21; 9.5,1.39e-21; 10,-2e-21; 10.5,-3.03e-22;
              11,-3.03e-22; 11.5,-3.03e-22; 12,-3.03e-22; 12.5,1.21e-22; 13,
              1.21e-22; 13.5,-9.13e-23; 14,-1.36e-19; 14.5,-5.4e-07; 15,-8.12e-08;
              15.5,2.47e-07; 16,-8.29e-20; 16.5,5.87e-20; 17,-2.29e-20; 17.5,-1.21e-20;
              18,-1.15e-20; 18.5,-8.21e-21; 19,-9.63e-21; 19.5,-5.99e-21; 20,-4.39e-21;
              20.5,-5.12e-21; 21,-3.31e-21; 21.5,-4.22e-21; 22,-8.33e-22; 22.5,
              -5.13e-21; 23,-5.26e-23; 23.5,-2.21e-21; 24,3.31e-22; 24.5,-9.27e-23;
              25,-2.29e-21; 25.5,-1.74e-22; 26,7.7e-07; 26.5,-6.48e-10; 27,
              5.5e-07; 27.5,7.06e-07; 28,6.93e-07; 28.5,6.77e-07; 29,5.6e-07;
              29.5,4.53e-07], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-48},{-80,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              1.77e-15; 1,3.54e-15; 1.5,-1.13e-18; 2,-1.24e-18; 2.5,9.39e-20; 3,
              8.22e-18; 3.5,9.65e-18; 4,7.77e-18; 4.5,6.99e-18; 5,2.12e-18; 5.5,
              4.88e-18; 6,4.23e-18; 6.5,5.04e-18; 7,5.44e-18; 7.5,3.66e-18; 8,
              4.65e-18; 8.5,5.32e-18; 9,1.18e-18; 9.5,2.69e-18; 10,-7.44e-19;
              10.5,-3.72e-19; 11,-1.84e-18; 11.5,-6.03e-20; 12,-3.3e-20; 12.5,-1.79e-20;
              13,-1.68e-20; 13.5,-4.5e-19; 14,-1.58e-20; 14.5,-2.08e-20; 15,-2.57e-20;
              15.5,-3.07e-20; 16,-3.02e-20; 16.5,-3.11e-21; 17,1.65e-20; 17.5,
              3.11e-20; 18,-1.17e-20; 18.5,-2.59e-21; 19,4.67e-21; 19.5,
              3.75e-20; 20,1.45e-21; 20.5,5.09e-21; 21,7.98e-21; 21.5,3.5e-21;
              22,-2.84e-21; 22.5,2.28e-22; 23,3.76e-22; 23.5,1.95e-21; 24,-1.35e-21;
              24.5,-1.27e-21; 25,1.96e-21; 25.5,3.2e-22; 26,3.2e-22; 26.5,
              3.2e-22; 27,3.2e-22; 27.5,-1.03e-22; 28,-1.03e-22; 28.5,-1.03e-22;
              29,-1.03e-22; 29.5,-1.03e-22], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-94},{-80,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              1.26e-15; 1,2.52e-15; 1.5,-3.53e-19; 2,-2.82e-20; 2.5,-2.82e-20;
              3,-2.82e-20; 3.5,-2.82e-20; 4,-2.82e-20; 4.5,5.46e-18; 5,1.68e-18;
              5.5,8.51e-19; 6,-4.5e-19; 6.5,-1.28e-18; 7,-2.84e-19; 7.5,-3.24e-19;
              8,-1.47e-18; 8.5,-1.12e-18; 9,-8.41e-19; 9.5,-6.21e-19; 10,-4.59e-19;
              10.5,-3.46e-19; 11,-8.25e-19; 11.5,-6.43e-19; 12,-3.5e-19; 12.5,-1.05e-19;
              13,-6.88e-20; 13.5,-4.29e-20; 14,-8.02e-07; 14.5,-6.63e-19; 15,-5.71e-19;
              15.5,-4.41e-19; 16,4.07e-07; 16.5,5.03e-07; 17,4.38e-07; 17.5,
              3.89e-07; 18,3.31e-07; 18.5,2.64e-07; 19,2.09e-07; 19.5,1.69e-07;
              20,1.37e-07; 20.5,1.1e-07; 21,8.86e-08; 21.5,7.13e-08; 22,-4.86e-07;
              22.5,-3.96e-07; 23,-3.12e-07; 23.5,-1.59e-07; 24,-1.59e-07; 24.5,
              -4.56e-07; 25,-2.87e-07; 25.5,-6.52e-08; 26,-7.67e-07; 26.5,0; 27,
              -5.72e-07; 27.5,-7.54e-07; 28,-7.66e-07; 28.5,-7.76e-07; 29,-6.8e-07;
              29.5,-5.9e-07], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-120},{-80,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag4.state;
      OUT22 =PV.EC.simpleLag5.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.integrator1.y;
      OUT28 =BESS.EC.simpleLag.state;
      OUT29 =BESS.EC.IGQ.y;
      OUT30 =BESS.EC.IGV.y;
      OUT31 =BESS.EC.IGP.y;
      OUT32 =BESS.EC.simpleLag1.state;
      OUT33 =BESS.EC.simpleLag2.state;
      OUT34 =BESS.EC.simpleLag3.state;
      OUT35 =BESS.EC.simpleLag4.state;
      OUT36 = G2.gen.PMECH;
      OUT37 = G2.sEXSMPC.EFD;
      OUT38 = BESS.rEGCA1_1.Pgen;
      OUT39 = BESS.rEGCA1_1.Qgen;
      OUT40 = PV.rEGCA1_1.Pgen;
      OUT41 = PV.rEGCA1_1.Qgen;
      OUT42 = Bus5.v;
      OUT43 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-79,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,
                -10},{-52,-10},{-52,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-79,
                -38},{-50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-79,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-79,
                -110},{-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=30, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_TABLE_mode1;

      model MPCAppliedEnergyOriginal_TABLE_mode2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT43
          annotation (Placement(transformation(extent={{224,30},{244,50}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,
              1.63e-18; 1,3.25e-18; 1.5,0.01; 2,0.02; 2.5,0.03; 3,0.04; 3.5,
              0.05; 4,0.06; 4.5,0.07; 5,0.08; 5.5,0.09; 6,0.1; 6.5,0.11; 7,0.12;
              7.5,0.13; 8,0.14; 8.5,0.15; 9,0.16; 9.5,0.17; 10,0.18; 10.5,0.19;
              11,0.2; 11.5,0.21; 12,0.216005309; 12.5,0.213109436; 13,
              0.210605197; 13.5,0.208313713; 14,0.206171115; 14.5,0.204166729;
              15,0.202304256; 15.5,0.200585161; 16,0.199005596; 16.5,
              0.197556394; 17,0.196227474; 17.5,0.194028332; 18,0.190543197;
              18.5,0.189153799; 19,0.187753417; 19.5,0.186455549; 20,0.18537888;
              20.5,0.184561474; 21,0.183901627; 21.5,0.183370188; 22,
              0.182944999; 22.5,0.182605242; 23,0.182333794; 23.5,0.182116953;
              24,0.181943746; 24.5,0.181805396; 25,0.181699723; 25.5,
              0.181607001; 26,0.181536581; 26.5,0.181480402; 27,0.181435107;
              27.5,0.181398901; 28,0.181369977; 28.5,0.181346952; 29,
              0.181328528; 29.5,0.181313853], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,6},{-80,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              8.72e-17; 1,1.74e-16; 1.5,0.05; 2,0.1; 2.5,0.15; 3,0.2; 3.5,0.25;
              4,0.294480528; 4.5,0.265283387; 5,0.243480264; 5.5,0.225768212; 6,
              0.212390384; 6.5,0.202472182; 7,0.195322955; 7.5,0.190395046; 8,
              0.187259567; 8.5,0.185571463; 9,0.185047655; 9.5,0.185460555; 10,
              0.186624853; 10.5,0.186375363; 11,0.182795578; 11.5,0.17934458;
              12,0.175395873; 12.5,0.172017353; 13,0.169218394; 13.5,
              0.166935569; 14,0.165063451; 14.5,0.163494548; 15,0.162141664;
              15.5,0.16094197; 16,0.15985398; 16.5,0.158849237; 17,0.157909049;
              17.5,0.157096639; 18,0.156434608; 18.5,0.155926438; 19,
              0.155599894; 19.5,0.15531796; 20,0.155112583; 20.5,0.154963331;
              21,0.154855096; 21.5,0.154776993; 22,0.154721031; 22.5,
              0.154681297; 23,0.154653411; 23.5,0.154634131; 24,0.154621064;
              24.5,0.154612443; 25,0.154640782; 25.5,0.154652872; 26,0.15465697;
              26.5,0.154657349; 27,0.1546561; 27.5,0.154654258; 28,0.154652357;
              28.5,0.154650585; 29,0.154649047; 29.5,0.154647753], smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              1.26e-15; 1,2.52e-15; 1.5,0.000901236; 2,0.006688066; 2.5,
              0.010506773; 3,0.013024043; 3.5,0.014691572; 4,0.015638802; 4.5,
              0.016189828; 5,0.016656838; 5.5,0.016933452; 6,0.017106284; 6.5,
              0.017191582; 7,0.017205629; 7.5,0.017162624; 8,0.017073898; 8.5,
              0.016948851; 9,0.016795322; 9.5,0.016619658; 10,0.01642716; 10.5,
              0.016226794; 11,0.016033937; 11.5,0.015854393; 12,0.015695113;
              12.5,0.015557794; 13,0.015437971; 13.5,0.015333235; 14,
              0.015241857; 14.5,0.015162436; 15,0.01509382; 15.5,0.015035303;
              16,0.014985779; 16.5,0.014944803; 17,0.01491133; 17.5,0.014885026;
              18,0.014863264; 18.5,0.014845892; 19,0.014831932; 19.5,0.01482082;
              20,0.014812247; 20.5,0.014805443; 21,0.014800026; 21.5,
              0.014795709; 22,0.014792269; 22.5,0.014789527; 23,0.014787341;
              23.5,0.014785598; 24,0.014784209; 24.5,0.014783101; 25,0.0147821;
              25.5,0.014781214; 26,0.014780437; 26.5,0.014779768; 27,0.0147792;
              27.5,0.01477972; 28,0.014778321; 28.5,0.014778632; 29,0.014778549;
              29.5,0.014778314], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-48},{-80,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              1.77e-15; 1,3.54e-15; 1.5,-1.63e-18; 2,-3.32e-19; 2.5,3.19e-19; 3,
              -1.18e-17; 3.5,5.68e-18; 4,3.94e-18; 4.5,3.52e-18; 5,-8.35e-19;
              5.5,-1.56e-18; 6,-2.18e-18; 6.5,6.44e-19; 7,-7.57e-20; 7.5,-3.34e-20;
              8,-3.17e-18; 8.5,-2.73e-18; 9,-2.63e-18; 9.5,-1.87e-18; 10,-1.39e-18;
              10.5,-2.18e-18; 11,1.36e-18; 11.5,-3.83e-19; 12,-3.67e-19; 12.5,
              5.13e-19; 13,-3.46e-19; 13.5,-3.37e-19; 14,-3.3e-19; 14.5,
              1.11e-19; 15,1.16e-19; 15.5,1.21e-19; 16,-9.26e-20; 16.5,1.79e-20;
              17,1.89e-20; 17.5,-8.12e-21; 18,-6.22e-20; 18.5,-7.99e-21; 19,-7.97e-21;
              19.5,-8.11e-21; 20,-8.27e-21; 20.5,-8.45e-21; 21,4.92e-21; 21.5,
              1.83e-20; 22,4.58e-21; 22.5,4.44e-21; 23,-2.47e-21; 23.5,-2.59e-21;
              24,-2.69e-21; 24.5,6.05e-22; 25,6.06e-22; 25.5,6.07e-22; 26,
              6.07e-22; 26.5,6.08e-22; 27,6.08e-22; 27.5,-2.39e-22; 28,6.09e-22;
              28.5,-2.38e-22; 29,1.85e-22; 29.5,-2.38e-22], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-94},{-80,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              1.26e-15; 1,2.52e-15; 1.5,3.4e-17; 2,2.57e-17; 2.5,1.16e-18; 3,
              1.16e-18; 3.5,1.16e-18; 4,-5.79e-19; 4.5,2.88e-19; 5,2.88e-19;
              5.5,1.16e-18; 6,-1.45e-19; 6.5,7.14e-20; 7,9.53e-18; 7.5,1.01e-17;
              8,1.2e-17; 8.5,1.53e-17; 9,1.64e-17; 9.5,1.71e-17; 10,1.56e-17;
              10.5,1.28e-17; 11,-2.55e-18; 11.5,-1.26e-18; 12,2.79e-19; 12.5,
              1.67e-20; 13,1.49e-19; 13.5,4.51e-20; 14,1.45e-19; 14.5,1.25e-19;
              15,-1.72e-20; 15.5,4.26e-20; 16,8.66e-20; 16.5,-4.79e-20; 17,-3.31e-20;
              17.5,-6.01e-21; 18,-6.09e-21; 18.5,7.47e-21; 19,6.89e-22; 19.5,
              8.15e-22; 20,4.35e-21; 20.5,1.12e-21; 21,1.27e-21; 21.5,-2.68e-22;
              22,-1.27e-22; 22.5,1.28e-24; 23,1.16e-22; 23.5,2.18e-22; 24,
              3.06e-22; 24.5,3.83e-22; 25,3.83e-22; 25.5,-4.08e-23; 26,-4.08e-23;
              26.5,1.71e-22; 27,-4.08e-23; 27.5,-1e-06; 28,0; 28.5,-6.49e-07;
              29,-8.46e-07; 29.5,-8.44e-07], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-120},{-80,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag4.state;
      OUT22 =PV.EC.simpleLag5.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.integrator1.y;
      OUT28 =BESS.EC.simpleLag.state;
      OUT29 =BESS.EC.IGQ.y;
      OUT30 =BESS.EC.IGV.y;
      OUT31 =BESS.EC.IGP.y;
      OUT32 =BESS.EC.simpleLag1.state;
      OUT33 =BESS.EC.simpleLag2.state;
      OUT34 =BESS.EC.simpleLag3.state;
      OUT35 =BESS.EC.simpleLag4.state;
      OUT36 = G2.gen.PMECH;
      OUT37 = G2.sEXSMPC.EFD;
      OUT38 = BESS.rEGCA1_1.Pgen;
      OUT39 = BESS.rEGCA1_1.Qgen;
      OUT40 = PV.rEGCA1_1.Pgen;
      OUT41 = PV.rEGCA1_1.Qgen;
      OUT42 = Bus5.v;
      OUT43 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-79,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,
                -10},{-52,-10},{-52,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-79,
                -38},{-50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-79,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-79,
                -110},{-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=30, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_TABLE_mode2;

      model MPCAppliedEnergyOriginal_TABLE_mode3
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT43
          annotation (Placement(transformation(extent={{224,30},{244,50}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,
              1.63e-18; 1,3.25e-18; 1.5,0.01; 2,-5.2e-17; 2.5,0.01; 3,
              0.012018287; 3.5,0.018344075; 4,0.011720761; 4.5,0.012300868; 5,
              0.010138889; 5.5,0.009591433; 6,0.008637586; 6.5,0.008047798; 7,
              0.007498672; 7.5,0.007069727; 8,0.006722317; 8.5,0.006432896; 9,
              0.006200144; 9.5,0.006009931; 10,0.005855601; 10.5,0.005729994;
              11,0.005627959; 11.5,0.005544947; 12,0.005477509; 12.5,
              0.005422662; 13,0.00537808; 13.5,0.005341631; 14,0.005313493;
              14.5,0.005288816; 15,0.005269423; 15.5,0.005253475; 16,
              0.005240627; 16.5,0.005230138; 17,0.005221628; 17.5,0.005214752;
              18,0.005209071; 18.5,0.005204524; 19,0.005200765; 19.5,
              0.005197764; 20,0.005195281; 20.5,0.005193284; 21,0.005191659;
              21.5,0.005190341; 22,0.005189276; 22.5,0.005188402; 23,
              0.005187679; 23.5,0.005187112; 24,0.005186666; 24.5,0.00518627;
              25,0.005185968; 25.5,0.005185709; 26,0.005185501; 26.5,0.00518535;
              27,0.005185205; 27.5,0.005185091; 28,0.005185005; 28.5,
              0.005184931; 29,0.005184872; 29.5,0.005184824], smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,6},{-80,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              8.72e-17; 1,1.74e-16; 1.5,-0.05; 2,1.6e-16; 2.5,0.020788911; 3,
              0.028969492; 3.5,0.033168917; 4,0.033290846; 4.5,0.033253872; 5,
              0.032883028; 5.5,0.032676023; 6,0.032498267; 6.5,0.032386125; 7,
              0.032302081; 7.5,0.032240984; 8,0.032195423; 8.5,0.032159475; 9,
              0.032130463; 9.5,0.032106694; 10,0.03208725; 10.5,0.032071337; 11,
              0.03205835; 11.5,0.032047752; 12,0.032039125; 12.5,0.032032099;
              13,0.032026382; 13.5,0.032021718; 14,0.03201812; 14.5,0.032015304;
              15,0.032013021; 15.5,0.032011104; 16,0.03200952; 16.5,0.032008211;
              17,0.032007137; 17.5,0.032006234; 18,0.032005521; 18.5,
              0.032004927; 19,0.032004458; 19.5,0.032004067; 20,0.032003758;
              20.5,0.032003506; 21,0.0320033; 21.5,0.032003132; 22,0.032002991;
              22.5,0.032002882; 23,0.032002786; 23.5,0.032002721; 24,
              0.032002672; 24.5,0.032002643; 25,0.032002617; 25.5,0.032002597;
              26,0.032002582; 26.5,0.032002573; 27,0.032002553; 27.5,
              0.032002537; 28,0.032002527; 28.5,0.03200252; 29,0.032002515;
              29.5,0.032002512], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              1.26e-15; 1,2.52e-15; 1.5,-3.36e-17; 2,-4.45e-19; 2.5,-1.58e-18;
              3,4.28e-20; 3.5,-1.14e-20; 4,-1.14e-20; 4.5,2.17e-21; 5,8.95e-21;
              5.5,4.06e-07; 6,4.76e-22; 6.5,-3.71e-22; 7,-3.71e-22; 7.5,-3.71e-22;
              8,5.29e-23; 8.5,5.29e-23; 9,2.65e-22; 9.5,5.29e-23; 10,5.29e-23;
              10.5,5.29e-23; 11,-8.14e-07; 11.5,0; 12,-5.38e-07; 12.5,-7.07e-07;
              13,-7.08e-07; 13.5,-8.33e-07; 14,-6.35e-07; 14.5,-5.12e-07; 15,-4e-07;
              15.5,-3.27e-07; 16,-2.64e-07; 16.5,-2.15e-07; 17,-1.75e-07; 17.5,
              -1.47e-07; 18,-1.18e-07; 18.5,-9.79e-08; 19,-7.84e-08; 19.5,-6.49e-08;
              20,-5.19e-08; 20.5,-4.16e-08; 21,-3.37e-08; 21.5,-2.73e-08; 22,-2.29e-08;
              22.5,4.61e-07; 23,2.23e-07; 23.5,5.41e-07; 24,2.67e-07; 24.5,
              4.79e-07; 25,6.5e-07; 25.5,7.9e-07; 26,3.92e-07; 26.5,4.86e-07;
              27,5.6e-07; 27.5,6.21e-07; 28,6.7e-07; 28.5,7.1e-07; 29,7.43e-07;
              29.5,7.7e-07], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-48},{-80,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              1.77e-15; 1,3.54e-15; 1.5,0.05; 2,0.024838528; 2.5,0.034316539; 3,
              0.028648948; 3.5,0.030350876; 4,0.029219023; 4.5,0.029525673; 5,
              0.029329908; 5.5,0.029376572; 6,0.02933671; 6.5,0.029335159; 7,
              0.029324175; 7.5,0.029316997; 8,0.029312496; 8.5,0.029307744; 9,
              0.029304223; 9.5,0.029301189; 10,0.029298777; 10.5,0.02929679; 11,
              0.029295183; 11.5,0.029293876; 12,0.029292813; 12.5,0.029291949;
              13,0.029291247; 13.5,0.029290452; 14,0.029290204; 14.5,
              0.029289755; 15,0.029289488; 15.5,0.029289224; 16,0.029289028;
              16.5,0.029288861; 17,0.029288728; 17.5,0.02928862; 18,0.029288529;
              18.5,0.02928846; 19,0.029288399; 19.5,0.029288353; 20,0.029288313;
              20.5,0.029288282; 21,0.029288257; 21.5,0.029288236; 22,
              0.029288219; 22.5,0.029288203; 23,0.029288197; 23.5,0.029288176;
              24,0.02928818; 24.5,0.029288168; 25,0.029288166; 25.5,0.029288161;
              26,0.02928816; 26.5,0.029288154; 27,0.029288154; 27.5,0.029288151;
              28,0.02928815; 28.5,0.029288149; 29,0.029288148; 29.5,0.029288147],
            smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-94},{-80,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              1.26e-15; 1,2.52e-15; 1.5,0.013963432; 2,0.012045376; 2.5,
              0.0083516; 3,0.007874428; 3.5,0.007164645; 4,0.007147054; 4.5,
              0.007080234; 5,0.007142216; 5.5,0.007172701; 6,0.007215719; 6.5,
              0.007244268; 7,0.007271442; 7.5,0.007291538; 8,0.00730936; 8.5,
              0.007323639; 9,0.007335148; 9.5,0.007344504; 10,0.007352093; 10.5,
              0.007358263; 11,0.007364092; 11.5,0.007367354; 12,0.007371208;
              12.5,0.00737407; 13,0.007376262; 13.5,0.007378018; 14,0.007379306;
              14.5,0.007380417; 15,0.007381266; 15.5,0.007381977; 16,
              0.007382547; 16.5,0.007383014; 17,0.007383392; 17.5,0.007383701;
              18,0.007383952; 18.5,0.007384155; 19,0.007384321; 19.5,
              0.007384454; 20,0.007384564; 20.5,0.007384651; 21,0.007384723;
              21.5,0.007384782; 22,0.007384829; 22.5,0.007384388; 23,
              0.007384658; 23.5,0.007384366; 24,0.007384663; 24.5,0.007384471;
              25,0.007384313; 25.5,0.007384185; 26,0.007384593; 26.5,0.00738451;
              27,0.007384441; 27.5,0.007384385; 28,0.00738434; 28.5,0.007384303;
              29,0.007384273; 29.5,0.007384249], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-120},{-80,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag4.state;
      OUT22 =PV.EC.simpleLag5.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.integrator1.y;
      OUT28 =BESS.EC.simpleLag.state;
      OUT29 =BESS.EC.IGQ.y;
      OUT30 =BESS.EC.IGV.y;
      OUT31 =BESS.EC.IGP.y;
      OUT32 =BESS.EC.simpleLag1.state;
      OUT33 =BESS.EC.simpleLag2.state;
      OUT34 =BESS.EC.simpleLag3.state;
      OUT35 =BESS.EC.simpleLag4.state;
      OUT36 = G2.gen.PMECH;
      OUT37 = G2.sEXSMPC.EFD;
      OUT38 = BESS.rEGCA1_1.Pgen;
      OUT39 = BESS.rEGCA1_1.Qgen;
      OUT40 = PV.rEGCA1_1.Pgen;
      OUT41 = PV.rEGCA1_1.Qgen;
      OUT42 = Bus5.v;
      OUT43 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-79,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,
                -10},{-52,-10},{-52,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-79,
                -38},{-50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-79,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-79,
                -110},{-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=30, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_TABLE_mode3;

      model MPCAppliedEnergyOriginal_TABLE_mode4
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT43
          annotation (Placement(transformation(extent={{224,30},{244,50}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,
              1.63e-18; 1,3.25e-18; 1.5,0.01; 2,-7.46e-17; 2.5,0.01; 3,
              0.011947754; 3.5,0.018469101; 4,0.011764015; 4.5,0.012390771; 5,
              0.010205379; 5.5,0.009669309; 6,0.00871494; 6.5,0.008126979; 7,
              0.007577389; 7.5,0.007148819; 8,0.006800779; 8.5,0.006511839; 9,
              0.006278707; 9.5,0.006088355; 10,0.005933983; 10.5,0.005808338;
              11,0.00570625; 11.5,0.005623227; 12,0.005555742; 12.5,0.005500873;
              13,0.005456268; 13.5,0.005419799; 14,0.005391647; 14.5,
              0.005366957; 15,0.005347556; 15.5,0.005331599; 16,0.005318744;
              16.5,0.005308249; 17,0.005299735; 17.5,0.005292855; 18,0.00528717;
              18.5,0.005282621; 19,0.005278861; 19.5,0.005275857; 20,
              0.005273373; 20.5,0.005271375; 21,0.005269749; 21.5,0.00526843;
              22,0.005267365; 22.5,0.005266491; 23,0.005265768; 23.5,
              0.005265203; 24,0.005264756; 24.5,0.005264361; 25,0.005264057;
              25.5,0.0052638; 26,0.005263592; 26.5,0.005263441; 27,0.005263294;
              27.5,0.005263182; 28,0.005263095; 28.5,0.005263022; 29,
              0.005262964; 29.5,0.005262916], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,6},{-80,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              8.72e-17; 1,1.74e-16; 1.5,-0.05; 2,1.8e-16; 2.5,0.020899243; 3,
              0.029894402; 3.5,0.034593171; 4,0.035008482; 4.5,0.035133463; 5,
              0.034855779; 5.5,0.034700953; 6,0.034553084; 6.5,0.034457033; 7,
              0.034381429; 7.5,0.034324496; 8,0.03428055; 8.5,0.034244785; 9,
              0.034215471; 9.5,0.034191198; 10,0.034171212; 10.5,0.034154789;
              11,0.034141345; 11.5,0.034130361; 12,0.034121402; 12.5,
              0.034114102; 13,0.03410816; 13.5,0.034103311; 14,0.034099559;
              14.5,0.034096625; 15,0.034094247; 15.5,0.034092253; 16,
              0.034090606; 16.5,0.034089247; 17,0.034088131; 17.5,0.034087195;
              18,0.034086454; 18.5,0.034085837; 19,0.034085348; 19.5,
              0.034084942; 20,0.03408462; 20.5,0.034084359; 21,0.034084145;
              21.5,0.03408397; 22,0.034083824; 22.5,0.03408371; 23,0.034083636;
              23.5,0.034083575; 24,0.034083544; 24.5,0.034083512; 25,
              0.034083494; 25.5,0.034083489; 26,0.03408349; 26.5,0.034083472;
              27,0.034083446; 27.5,0.034083431; 28,0.034083426; 28.5,
              0.034083425; 29,0.034083426; 29.5,0.034083428], smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              1.26e-15; 1,2.52e-15; 1.5,0.04038; 2,0.038167268; 2.5,0.039627456;
              3,0.039142786; 3.5,0.040187805; 4,0.040055855; 4.5,0.040263843; 5,
              0.040272598; 5.5,0.04032756; 6,0.040341833; 6.5,0.040355937; 7,
              0.040363268; 7.5,0.040367197; 8,0.040371036; 8.5,0.04037324; 9,
              0.040374805; 9.5,0.040375887; 10,0.040376716; 10.5,0.040377353;
              11,0.040377859; 11.5,0.040378264; 12,0.040378591; 12.5,
              0.040378855; 13,0.040379069; 13.5,0.040379052; 14,0.040379305;
              14.5,0.040379456; 15,0.040379582; 15.5,0.040379663; 16,0.04037973;
              16.5,0.040379781; 17,0.040379822; 17.5,0.040379851; 18,
              0.040379881; 18.5,0.040379901; 19,0.040379921; 19.5,0.040379934;
              20,0.040379947; 20.5,0.040379958; 21,0.040379966; 21.5,
              0.040379972; 22,0.040379977; 22.5,0.040380461; 23,0.040380224;
              23.5,0.040380541; 24,0.040380268; 24.5,0.040380479; 25,
              0.040380651; 25.5,0.040380791; 26,0.040380394; 26.5,0.040380486;
              27,0.040380561; 27.5,0.040380622; 28,0.040380671; 28.5,
              0.040380712; 29,0.040380744; 29.5,0.040380771], smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-48},{-80,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              1.77e-15; 1,3.54e-15; 1.5,0.05; 2,0.024796407; 2.5,0.034388945; 3,
              0.028637523; 3.5,0.03038199; 4,0.029228227; 4.5,0.029542322; 5,
              0.029342629; 5.5,0.029390417; 6,0.029350085; 6.5,0.029348681; 7,
              0.029337543; 7.5,0.029330455; 8,0.029325802; 8.5,0.029321057; 9,
              0.029317495; 9.5,0.029314434; 10,0.029312003; 10.5,0.029310001;
              11,0.029308384; 11.5,0.029307066; 12,0.029305996; 12.5,
              0.029305126; 13,0.029304419; 13.5,0.02930362; 14,0.029303369;
              14.5,0.029302916; 15,0.029302647; 15.5,0.029302382; 16,
              0.029302185; 16.5,0.029302016; 17,0.029301882; 17.5,0.029301774;
              18,0.029301682; 18.5,0.029301612; 19,0.029301551; 19.5,
              0.029301505; 20,0.029301464; 20.5,0.029301434; 21,0.029301408;
              21.5,0.029301387; 22,0.02930137; 22.5,0.029301354; 23,0.029301347;
              23.5,0.029301327; 24,0.02930133; 24.5,0.029301319; 25,0.029301317;
              25.5,0.029301312; 26,0.029301311; 26.5,0.029301305; 27,
              0.029301304; 27.5,0.029301302; 28,0.029301301; 28.5,0.0293013; 29,
              0.029301299; 29.5,0.029301298], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-94},{-80,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              1.26e-15; 1,2.52e-15; 1.5,-0.026462106; 2,-0.026068148; 2.5,-0.03118349;
              3,-0.031172361; 3.5,-0.032926079; 4,-0.032802321; 4.5,-0.033079393;
              5,-0.033023541; 5.5,-0.033048091; 6,-0.033019103; 6.5,-0.033004595;
              7,-0.032984659; 7.5,-0.032968426; 8,-0.032954493; 8.5,-0.0329424;
              9,-0.032932485; 9.5,-0.032924241; 10,-0.032917507; 10.5,-0.032911993;
              11,-0.032907503; 11.5,-0.032903844; 12,-0.032900869; 12.5,-0.032898448;
              13,-0.03289648; 13.5,-0.032894839; 14,-0.032893611; 14.5,-0.032892532;
              15,-0.0328917; 15.5,-0.032891; 16,-0.032890436; 16.5,-0.032889973;
              17,-0.032889598; 17.5,-0.032889291; 18,-0.032889041; 18.5,-0.03288884;
              19,-0.032888675; 19.5,-0.032888542; 20,-0.032888433; 20.5,-0.032888346;
              21,-0.032888274; 21.5,-0.032888216; 22,-0.032888169; 22.5,-0.03288861;
              23,-0.032888339; 23.5,-0.032888632; 24,-0.032888334; 24.5,-0.032888527;
              25,-0.032888684; 25.5,-0.032888811; 26,-0.032888403; 26.5,-0.032888486;
              27,-0.032888556; 27.5,-0.032888611; 28,-0.032888656; 28.5,-0.032888693;
              29,-0.032888723; 29.5,-0.032888747], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-120},{-80,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag4.state;
      OUT22 =PV.EC.simpleLag5.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.integrator1.y;
      OUT28 =BESS.EC.simpleLag.state;
      OUT29 =BESS.EC.IGQ.y;
      OUT30 =BESS.EC.IGV.y;
      OUT31 =BESS.EC.IGP.y;
      OUT32 =BESS.EC.simpleLag1.state;
      OUT33 =BESS.EC.simpleLag2.state;
      OUT34 =BESS.EC.simpleLag3.state;
      OUT35 =BESS.EC.simpleLag4.state;
      OUT36 = G2.gen.PMECH;
      OUT37 = G2.sEXSMPC.EFD;
      OUT38 = BESS.rEGCA1_1.Pgen;
      OUT39 = BESS.rEGCA1_1.Qgen;
      OUT40 = PV.rEGCA1_1.Pgen;
      OUT41 = PV.rEGCA1_1.Qgen;
      OUT42 = Bus5.v;
      OUT43 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-79,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,
                -10},{-52,-10},{-52,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-79,
                -38},{-50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-79,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-79,
                -110},{-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=5,
            __Dymola_NumberOfIntervals=100,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_TABLE_mode4;

      model MPCAppliedEnergyOriginal_TABLE_mode5
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF17)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT43
          annotation (Placement(transformation(extent={{224,30},{244,50}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,-2.68e-18;
              1,-5.35e-18; 1.5,-0.01; 2,-0.02; 2.5,-0.03; 3,-0.04; 3.5,-0.05; 4,
              -0.06; 4.5,-0.07; 5,-0.08; 5.5,-0.09; 6,-0.1; 6.5,-0.11; 7,-0.12;
              7.5,-0.13; 8,-0.14; 8.5,-0.15; 9,-0.16; 9.5,-0.17; 10,-0.18; 10.5,
              -0.19; 11,-0.2; 11.5,-0.21; 12,-0.22; 12.5,-0.23; 13,-0.24; 13.5,
              -0.25; 14,-0.26; 14.5,-0.27; 15,-0.28; 15.5,-0.29; 16,-0.3; 16.5,
              -0.31; 17,-0.32; 17.5,-0.33; 18,-0.32826628; 18.5,-0.325796166;
              19,-0.323688923; 19.5,-0.321790062; 20,-0.320027013; 20.5,-0.318380983;
              21,-0.316852234; 21.5,-0.31544171; 22,-0.314145738; 22.5,-0.312133228;
              23,-0.308556286; 23.5,-0.307298764; 24,-0.305931655; 24.5,-0.304626396;
              25,-0.3035816; 25.5,-0.302764542; 26,-0.302109139; 26.5,-0.301584639;
              27,-0.301166952; 27.5,-0.300834552; 28,-0.300569906; 28.5,-0.300359207;
              29,-0.300191069; 29.5,-0.30004429],
                                              smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,6},{-80,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              6.58e-17; 1,1.32e-16; 1.5,-0.05; 2,-0.1; 2.5,-0.15; 3,-0.2; 3.5,-0.25;
              4,-0.3; 4.5,-0.35; 5,-0.4; 5.5,-0.434840368; 6,-0.389296406; 6.5,
              -0.367017423; 7,-0.350904259; 7.5,-0.339406413; 8,-0.313122586;
              8.5,-0.310692091; 9,-0.297297382; 9.5,-0.288224051; 10,-0.28228848;
              10.5,-0.277458363; 11,-0.27351905; 11.5,-0.281780817; 12,-0.275215634;
              12.5,-0.272522928; 13,-0.271954805; 13.5,-0.271364668; 14,-0.270856027;
              14.5,-0.270532271; 15,-0.270513207; 15.5,-0.270745474; 16,-0.271068335;
              16.5,-0.27159941; 17,-0.271787379; 17.5,-0.272005846; 18,-0.272160451;
              18.5,-0.272211509; 19,-0.272163417; 19.5,-0.272179236; 20,-0.272248329;
              20.5,-0.272320862; 21,-0.27238111; 21.5,-0.272432361; 22,-0.272479954;
              22.5,-0.272507994; 23,-0.272489478; 23.5,-0.272497234; 24,-0.272512108;
              24.5,-0.272517726; 25,-0.27251731; 25.5,-0.27251585; 26,-0.272514826;
              26.5,-0.272514148; 27,-0.272513807; 27.5,-0.272512735; 28,-0.272512517;
              28.5,-0.272511721; 29,-0.272584921; 29.5,-0.272490555],
                                                              smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              1.56e-15; 1,3.13e-15; 1.5,-1.74e-20; 2,-2.87e-16; 2.5,-4.81e-16;
              3,-4.9e-16; 3.5,-3.99e-16; 4,-4.15e-16; 4.5,-4.2e-16; 5,-3.28e-16;
              5.5,-3.38e-16; 6,1.41e-19; 6.5,-5.93e-20; 7,-5.37e-21; 7.5,-1.6e-20;
              8,1.11e-20; 8.5,-1.84e-20; 9,-1.49e-20; 9.5,-1.34e-21; 10,-1.34e-21;
              10.5,-1.34e-21; 11,-1.34e-21; 11.5,2.63e-20; 12,-7.76e-22; 12.5,-7.76e-22;
              13,7.05e-23; 13.5,7.05e-23; 14,8.43e-07; 14.5,4.56e-07; 15,
              2.53e-07; 15.5,5.14e-07; 16,1.06e-22; 16.5,1.06e-22; 17,-3.18e-22;
              17.5,1.06e-22; 18,3.18e-22; 18.5,8.37e-07; 19,3.64e-07; 19.5,-1.66e-08;
              20,-2.72e-07; 20.5,-3.64e-07; 21,-4.09e-07; 21.5,-4.68e-07; 22,-5.47e-07;
              22.5,-1.06e-22; 23,-1.06e-22; 23.5,-1.06e-22; 24,-1.06e-22; 24.5,
              -1.06e-22; 25,1.06e-22; 25.5,1.06e-22; 26,-1.06e-22; 26.5,-9.29e-07;
              27,-1.24e-07; 27.5,-6.47e-07; 28,-7.64e-08; 28.5,-4.08e-07; 29,-4.83e-07;
              29.5,-6.16e-08],                                smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-48},{-80,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              4.32e-17; 1,8.63e-17; 1.5,1.29e-16; 2,-1.39e-17; 2.5,-3.56e-17; 3,
              -2.37e-17; 3.5,-1.93e-17; 4,-1.17e-17; 4.5,4.01e-18; 5,2.19e-18;
              5.5,6.32e-18; 6,1.19e-17; 6.5,-3.63e-18; 7,7.79e-18; 7.5,6.12e-18;
              8,5.46e-18; 8.5,5.54e-17; 9,5.92e-17; 9.5,5.07e-17; 10,5.3e-17;
              10.5,4.85e-17; 11,5.07e-17; 11.5,3.05e-17; 12,2.97e-17; 12.5,
              3.23e-17; 13,2.94e-17; 13.5,2.74e-17; 14,2.27e-17; 14.5,1.82e-17;
              15,1.69e-17; 15.5,1.26e-17; 16,7.33e-18; 16.5,2.3e-18; 17,1.3e-18;
              17.5,4.71e-19; 18,6.09e-20; 18.5,1.46e-19; 19,2.39e-19; 19.5,
              1.09e-19; 20,-2.71e-20; 20.5,4.77e-20; 21,3.29e-19; 21.5,-7.54e-20;
              22,-3.67e-20; 22.5,-6.31e-21; 23,-3.66e-21; 23.5,-1.58e-21; 24,
              5.22e-23; 24.5,1.35e-21; 25,2.39e-21; 25.5,3.22e-21; 26,3.88e-21;
              26.5,4.41e-21; 27,-3.25e-21; 27.5,-2.92e-21; 28,-3.48e-21; 28.5,
              1.17e-22; 29,1.17e-22; 29.5,3.99e-22],
                                              smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-94},{-80,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              1.56e-15; 1,3.13e-15; 1.5,1.65e-18; 2,-8.4e-20; 2.5,-8.4e-20; 3,-8.4e-20;
              3.5,-8.4e-20; 4,-8.4e-20; 4.5,-8.4e-20; 5,-8.4e-20; 5.5,-2.8e-19;
              6,-3.33e-19; 6.5,-8.17e-21; 7,1.99e-21; 7.5,9.17e-16; 8,9.34e-16;
              8.5,-3.71e-20; 9,7.72e-20; 9.5,2.12e-19; 10,3.81e-19; 10.5,
              1.48e-19; 11,3.76e-19; 11.5,1.29e-21; 12,7.57e-20; 12.5,1.56e-19;
              13,2.37e-20; 13.5,1.14e-19; 14,-1.11e-20; 14.5,8e-20; 15,5.8e-20;
              15.5,-7.99e-20; 16,9.74e-20; 16.5,4.49e-20; 17,2.34e-19; 17.5,
              1.09e-17; 18,1.04e-19; 18.5,1.13e-19; 19,1.07e-19; 19.5,8.7e-20;
              20,8.08e-20; 20.5,7.63e-20; 21,4.75e-20; 21.5,4.87e-20; 22,
              3.93e-20; 22.5,-6.27e-07; 23,-6.76e-07; 23.5,-6.52e-07; 24,-5.55e-07;
              24.5,-4.33e-07; 25,-3.3e-07; 25.5,-2.55e-07; 26,-1.99e-07; 26.5,
              7.73e-07; 27,-2.12e-22; 27.5,5.53e-07; 28,-1.06e-22; 28.5,
              3.51e-07; 29,9.92e-07; 29.5,2.72e-07],
                                                   smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-120},{-80,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag4.state;
      OUT22 =PV.EC.simpleLag5.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.integrator1.y;
      OUT28 =BESS.EC.simpleLag.state;
      OUT29 =BESS.EC.IGQ.y;
      OUT30 =BESS.EC.IGV.y;
      OUT31 =BESS.EC.IGP.y;
      OUT32 =BESS.EC.simpleLag1.state;
      OUT33 =BESS.EC.simpleLag2.state;
      OUT34 =BESS.EC.simpleLag3.state;
      OUT35 =BESS.EC.simpleLag4.state;
      OUT36 = G2.gen.PMECH;
      OUT37 = G2.sEXSMPC.EFD;
      OUT38 = BESS.rEGCA1_1.Pgen;
      OUT39 = BESS.rEGCA1_1.Qgen;
      OUT40 = PV.rEGCA1_1.Pgen;
      OUT41 = PV.rEGCA1_1.Qgen;
      OUT42 = Bus5.v;
      OUT43 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-79,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,
                -10},{-52,-10},{-52,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-79,
                -38},{-50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-79,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-79,
                -110},{-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=30, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_TABLE_mode5;

      model CascadePIController
        extends Modelica.Icons.Example;
        Modelica.Blocks.Continuous.PI PI(
          T=10,
          initType=Modelica.Blocks.Types.Init.InitialOutput,
          x_start=0,
          y_start=1) annotation (Placement(transformation(extent={{-20,-10},{0,10}})));
        Modelica.Blocks.Continuous.PI PI1(
          T=10,
          initType=Modelica.Blocks.Types.Init.InitialOutput,
          x_start=0,
          y_start=1) annotation (Placement(transformation(extent={{28,-10},{48,10}})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-54,-10},{-34,10}})));
        Modelica.Blocks.Sources.Step step(offset=1, startTime=1)
          annotation (Placement(transformation(extent={{-88,-4},{-68,16}})));
        Modelica.Blocks.Continuous.FirstOrder firstOrder(
          T=0.5,
          initType=Modelica.Blocks.Types.Init.InitialState,
          y_start=1) annotation (Placement(transformation(extent={{60,-10},{80,10}})));
        Modelica.Blocks.Math.Add add1(k1=-1)
          annotation (Placement(transformation(extent={{0,40},{20,60}})));
        Modelica.Blocks.Sources.Step     step1
          annotation (Placement(transformation(extent={{-40,46},{-20,66}})));
      equation
        connect(PI1.y, firstOrder.u)
          annotation (Line(points={{49,0},{58,0}}, color={0,0,127}));
        connect(step1.y, add1.u1)
          annotation (Line(points={{-19,56},{-2,56}}, color={0,0,127}));
        connect(PI.y, add1.u2) annotation (Line(points={{1,0},{10,0},{10,28},{-12,28},
                {-12,44},{-2,44}}, color={0,0,127}));
        connect(add1.y, PI1.u) annotation (Line(points={{21,50},{26,50},{26,20},{18,20},
                {18,0},{26,0}}, color={0,0,127}));
        connect(step.y, add.u1)
          annotation (Line(points={{-67,6},{-56,6}}, color={0,0,127}));
        connect(firstOrder.y, add.u2) annotation (Line(points={{81,0},{90,0},{90,-30},
                {-64,-30},{-64,-6},{-56,-6}}, color={0,0,127}));
        connect(add.y, PI.u)
          annotation (Line(points={{-33,0},{-22,0}}, color={0,0,127}));
        annotation ();
      end CascadePIController;

      model ParallelCascadePIController
        extends Modelica.Icons.Example;
        Modelica.Blocks.Continuous.PI PI(
          T=10,
          initType=Modelica.Blocks.Types.Init.InitialOutput,
          x_start=0,
          y_start=1) annotation (Placement(transformation(extent={{-24,30},{-4,
                  50}})));
        Modelica.Blocks.Continuous.PI PI1(
          T=10,
          initType=Modelica.Blocks.Types.Init.InitialOutput,
          x_start=0,
          y_start=1) annotation (Placement(transformation(extent={{40,60},{60,
                  80}})));
        Modelica.Blocks.Math.Add add(k2=-1)
          annotation (Placement(transformation(extent={{-54,30},{-34,50}})));
        Modelica.Blocks.Sources.Step step(offset=1, startTime=1)
          annotation (Placement(transformation(extent={{-90,32},{-70,52}})));
        Modelica.Blocks.Continuous.FirstOrder firstOrder(
          T=0.5,
          initType=Modelica.Blocks.Types.Init.InitialState,
          y_start=1) annotation (Placement(transformation(extent={{76,-10},{96,
                  10}})));
        Modelica.Blocks.Math.Add add1(k1=-1)
          annotation (Placement(transformation(extent={{4,60},{24,80}})));
        Modelica.Blocks.Sources.Step     step1
          annotation (Placement(transformation(extent={{-34,70},{-14,90}})));
        Modelica.Blocks.Continuous.PI PI2(
          T=10,
          initType=Modelica.Blocks.Types.Init.InitialOutput,
          x_start=0,
          y_start=1) annotation (Placement(transformation(extent={{-30,-80},{
                  -10,-60}})));
        Modelica.Blocks.Continuous.PI PI3(
          T=10,
          initType=Modelica.Blocks.Types.Init.InitialOutput,
          x_start=0,
          y_start=1) annotation (Placement(transformation(extent={{40,-80},{60,
                  -60}})));
        Modelica.Blocks.Math.Add add2(k2=-1)
          annotation (Placement(transformation(extent={{-60,-80},{-40,-60}})));
        Modelica.Blocks.Sources.Step step2(offset=1, startTime=1)
          annotation (Placement(transformation(extent={{-94,-80},{-74,-60}})));
        Modelica.Blocks.Math.Add add3(k1=-1)
          annotation (Placement(transformation(extent={{4,-80},{24,-60}})));
        Modelica.Blocks.Sources.Step     step3
          annotation (Placement(transformation(extent={{-40,-40},{-20,-20}})));
        Modelica.Blocks.Math.Add add4(k1=-1)
          annotation (Placement(transformation(extent={{40,-10},{60,10}})));
      equation
        connect(step1.y, add1.u1)
          annotation (Line(points={{-13,80},{-13,76},{2,76}},
                                                      color={0,0,127}));
        connect(PI.y, add1.u2) annotation (Line(points={{-3,40},{0,40},{0,56},{
                2,56},{2,64}},     color={0,0,127}));
        connect(add1.y, PI1.u) annotation (Line(points={{25,70},{38,70}},
                                color={0,0,127}));
        connect(step.y, add.u1)
          annotation (Line(points={{-69,42},{-62,42},{-62,46},{-56,46}},
                                                     color={0,0,127}));
        connect(add.y, PI.u)
          annotation (Line(points={{-33,40},{-26,40}},
                                                     color={0,0,127}));
        connect(step3.y,add3. u1)
          annotation (Line(points={{-19,-30},{2,-30},{2,-64}},
                                                      color={0,0,127}));
        connect(PI2.y, add3.u2) annotation (Line(points={{-9,-70},{-4,-70},{-4,
                -76},{2,-76}}, color={0,0,127}));
        connect(add3.y,PI3. u) annotation (Line(points={{25,-70},{38,-70}},
                                color={0,0,127}));
        connect(step2.y, add2.u1) annotation (Line(points={{-73,-70},{-68,-70},
                {-68,-64},{-62,-64}}, color={0,0,127}));
        connect(add2.y, PI2.u)
          annotation (Line(points={{-39,-70},{-32,-70}}, color={0,0,127}));
        connect(PI3.y, add4.u2) annotation (Line(points={{61,-70},{74,-70},{74,
                -42},{18,-42},{18,-6},{38,-6}}, color={0,0,127}));
        connect(PI1.y, add4.u1) annotation (Line(points={{61,70},{78,70},{78,38},
                {20,38},{20,6},{38,6}}, color={0,0,127}));
        connect(add4.y, firstOrder.u)
          annotation (Line(points={{61,0},{74,0}}, color={0,0,127}));
      end ParallelCascadePIController;

      model MPCAppliedEnergyOriginal_TABLE_mode4_modified
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT43
          annotation (Placement(transformation(extent={{224,30},{244,50}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,0;
              1,0; 1.5,0.004505781; 2,-0.00549; 2.5,-0.015494219; 3,-0.025494219;
              3.5,-0.035494219; 4,-0.045494219; 4.5,-0.048325981; 5,-0.044503544;
              5.5,-0.039520789; 6,-0.035408788; 6.5,-0.032618842; 7,-0.030999584;
              7.5,-0.030242549; 8,-0.030056786; 8.5,-0.03021966; 9,-0.030577966;
              9.5,-0.031033374; 10,-0.031526159; 10.5,-0.032021887; 11,-0.032501873;
              11.5,-0.032956831; 12,-0.033382879; 12.5,-0.033779114; 13,-0.034146196;
              13.5,-0.034485542; 14,-0.034798888; 14.5,-0.035088057; 15,-0.035354836;
              15.5,-0.035600927; 16,-0.035827924; 16.5,-0.036037305; 17,-0.036230438;
              17.5,-0.036408585; 18,-0.036572911; 18.5,-0.03672449; 19,-0.036864309;
              19.5,-0.036993283; 20,-0.037112253; 20.5,-0.037221995; 21,-0.037323225],
                                              smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,6},{-80,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              0; 1,0; 1.5,0.01; 2,0.02; 2.5,0.03; 3,0.03867007; 3.5,0.043095729;
              4,0.045328787; 4.5,0.046550951; 5,0.047394078; 5.5,0.04813991; 6,
              0.048887028; 6.5,0.049652444; 7,0.050424147; 7.5,0.051184466; 8,
              0.051918668; 8.5,0.05261697; 9,0.053274033; 9.5,0.053887804; 10,
              0.054458391; 10.5,0.054987202; 11,0.055476353; 11.5,0.055928287;
              12,0.05634554; 12.5,0.056730617; 13,0.057085917; 13.5,0.0574137;
              14,0.057716076; 14.5,0.057995006; 15,0.058252303; 15.5,
              0.058489643; 16,0.058708574; 16.5,0.058910523; 17,0.059096808;
              17.5,0.059268643; 18,0.059427151; 18.5,0.059573364; 19,
              0.059708236; 19.5,0.059832647; 20,0.059947408; 20.5,0.060053269;
              21,0.060150918],                                smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              0; 1,0; 1.5,0.036932785; 2,0.037835264; 2.5,0.03737385; 3,
              0.037540644; 3.5,0.037587899; 4,0.037581034; 4.5,0.037553439; 5,
              0.036391678; 5.5,0.034942323; 6,0.033657632; 6.5,0.032683173; 7,
              0.032008884; 7.5,0.031570603; 8,0.031298955; 8.5,0.031137183; 9,
              0.03104438; 9.5,0.030993218; 10,0.030966369; 10.5,0.030953278; 11,
              0.030947728; 11.5,0.030946161; 12,0.030946598; 12.5,0.030947972;
              13,0.030949723; 13.5,0.030951568; 14,0.030953375; 14.5,
              0.030955086; 15,0.030956679; 15.5,0.030958153; 16,0.030959511;
              16.5,0.030960763; 17,0.030961915; 17.5,0.030962977; 18,
              0.030963955; 18.5,0.030964857; 19,0.030965688; 19.5,0.030966455;
              20,0.030967162; 20.5,0.030967814; 21,0.030968416],
                                                              smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-48},{-80,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              0; 1,0; 1.5,0.05; 2,0.034765727; 2.5,0.02942776; 3,0.033710698;
              3.5,0.035233013; 4,0.036508047; 4.5,0.037498507; 5,0.037699351;
              5.5,0.037211381; 6,0.036525568; 6.5,0.035922638; 7,0.03549443;
              7.5,0.035236578; 8,0.035111103; 8.5,0.035076572; 9,0.035099123;
              9.5,0.035154505; 10,0.035226707; 10.5,0.035305784; 11,0.03538589;
              11.5,0.035463785; 12,0.035537819; 12.5,0.035607267; 13,
              0.035671923; 13.5,0.035731861; 14,0.035787292; 14.5,0.035838489;
              15,0.035885741; 15.5,0.035929337; 16,0.035969555; 16.5,
              0.036006652; 17,0.036040872; 17.5,0.036072435; 18,0.03610155;
              18.5,0.036128406; 19,0.036153179; 19.5,0.03617603; 20,0.036197108;
              20.5,0.036216552; 21,0.036234487],
                                              smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-94},{-80,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              0; 1,0; 1.5,-0.028219386; 2,-0.035694202; 2.5,-0.039658828; 3,-0.040321303;
              3.5,-0.041947097; 4,-0.043723737; 4.5,-0.04550335; 5,-0.046170199;
              5.5,-0.046412537; 6,-0.046460401; 6.5,-0.046401782; 7,-0.046282072;
              7.5,-0.046129369; 8,-0.045961849; 8.5,-0.045790979; 9,-0.045623631;
              9.5,-0.045463622; 10,-0.04531284; 10.5,-0.045172001; 11,-0.045041145;
              11.5,-0.044919948; 12,-0.044807904; 12.5,-0.044704429; 13,-0.044608924;
              13.5,-0.044520802; 14,-0.044439505; 14.5,-0.044364511; 15,-0.044295334;
              15.5,-0.044231523; 16,-0.044172662; 16.5,-0.044118367; 17,-0.044068284;
              17.5,-0.044022085; 18,-0.04397947; 18.5,-0.043940161; 19,-0.0439039;
              19.5,-0.043870452; 20,-0.043839599; 20.5,-0.043811138; 21,-0.043784885],
                                                   smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-120},{-80,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag4.state;
      OUT22 =PV.EC.simpleLag5.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.integrator1.y;
      OUT28 =BESS.EC.simpleLag.state;
      OUT29 =BESS.EC.IGQ.y;
      OUT30 =BESS.EC.IGV.y;
      OUT31 =BESS.EC.IGP.y;
      OUT32 =BESS.EC.simpleLag1.state;
      OUT33 =BESS.EC.simpleLag2.state;
      OUT34 =BESS.EC.simpleLag3.state;
      OUT35 =BESS.EC.simpleLag4.state;
      OUT36 = G2.gen.PMECH;
      OUT37 = G2.sEXSMPC.EFD;
      OUT38 = BESS.rEGCA1_1.Pgen;
      OUT39 = BESS.rEGCA1_1.Qgen;
      OUT40 = PV.rEGCA1_1.Pgen;
      OUT41 = PV.rEGCA1_1.Qgen;
      OUT42 = Bus5.v;
      OUT43 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-79,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,
                -10},{-52,-10},{-52,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-79,
                -38},{-50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-79,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-79,
                -110},{-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=21, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_TABLE_mode4_modified;

      model MPCAppliedEnergyOriginal_TABLE_mode4_modified2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{82,-20},{92,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{184,-90},{204,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{184,-110},{204,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{204,70},{224,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{204,50},{224,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{204,30},{224,50}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{204,10},{224,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT43
          annotation (Placement(transformation(extent={{224,30},{244,50}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,0;
              1,0; 1.5,0.01; 4.5,0.01],       smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,6},{-80,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              0; 1,0; 1.5,-0.01; 4.5,-0.01],                  smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,
              0; 1,0; 1.5,-0.001734925; 4.5,-0.001734925],    smoothness=
              Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-48},{-80,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              0; 1,0; 1.5,0.05; 4.5,0.05],    smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-94},{-80,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,
              0; 1,0; 1.5,0.012751724; 4.5,0.012751724],
                                                   smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-120},{-80,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag4.state;
      OUT22 =PV.EC.simpleLag5.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.integrator1.y;
      OUT28 =BESS.EC.simpleLag.state;
      OUT29 =BESS.EC.IGQ.y;
      OUT30 =BESS.EC.IGV.y;
      OUT31 =BESS.EC.IGP.y;
      OUT32 =BESS.EC.simpleLag1.state;
      OUT33 =BESS.EC.simpleLag2.state;
      OUT34 =BESS.EC.simpleLag3.state;
      OUT35 =BESS.EC.simpleLag4.state;
      OUT36 = G2.gen.PMECH;
      OUT37 = G2.sEXSMPC.EFD;
      OUT38 = BESS.rEGCA1_1.Pgen;
      OUT39 = BESS.rEGCA1_1.Qgen;
      OUT40 = PV.rEGCA1_1.Pgen;
      OUT41 = PV.rEGCA1_1.Qgen;
      OUT42 = Bus5.v;
      OUT43 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(sine.y, Load2.u) annotation (Line(points={{92.5,-15},{96.1,-15},{96.1,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-79,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,
                -10},{-52,-10},{-52,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-79,
                -38},{-50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-79,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-79,
                -110},{-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=5,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_TABLE_mode4_modified2;

      model MPCAppliedEnergyOriginal2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=8.5,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
                  Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{206,-110},{226,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
      equation

      // OUT1 = G2.gen.w;
      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.Epq;
      // OUT4 = G2.gen.PSIkd;
      // OUT5 = G2.gen.PSIppq;
      // OUT6 = G2.sEXSMPC.simpleLagLim.state;
      // OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      // OUT8 = G2.gASTMPC.simpleLagLim.state;
      // OUT9 = G2.gASTMPC.simpleLag.state;
      // OUT10 = G2.gASTMPC.simpleLag1.state;
      // OUT11 = PV.rEGCA1_1.simpleLag.state;
      // OUT12 = PV.rEGCA1_1.integrator.y;
      // OUT13 = PV.rEGCA1_1.integrator1.y;
      // OUT14 =PV.EC.IGQ.y;
      // OUT15 =PV.EC.IGV.y;
      // OUT16 =PV.EC.simpleLag.state;
      // OUT17 =PV.EC.simpleLag1.state;
      // OUT18 =PV.EC.simpleLag2.state;
      // OUT19 =PV.EC.IGP.y;
      // OUT20 =PV.EC.simpleLag3.state;
      // OUT21 =PV.EC.simpleLag4.state;
      // OUT22 =PV.EC.simpleLag5.state;
      // OUT23 = BESS.rEGCA1_1.simpleLag.state;
      // OUT24 = BESS.rEGCA1_1.integrator.y;
      // OUT25 = BESS.rEGCA1_1.integrator1.y;
      // OUT26 =BESS.EC.integrator3.y;
      // OUT27 =BESS.EC.integrator1.y;
      // OUT28 =BESS.EC.simpleLag.state;
      // OUT29 =BESS.EC.IGQ.y;
      // OUT30 =BESS.EC.IGV.y;
      // OUT31 =BESS.EC.IGP.y;
      // OUT32 =BESS.EC.simpleLag1.state;
      // OUT33 =BESS.EC.simpleLag2.state;
      // OUT34 =BESS.EC.simpleLag3.state;
      // OUT35 =BESS.EC.simpleLag4.state;
      // OUT36 = G2.gen.PMECH;
      // OUT37 = G2.sEXSMPC.EFD;
      // OUT38 = BESS.rEGCA1_1.Pgen;
      // OUT39 = BESS.rEGCA1_1.Qgen;
      // OUT40 = PV.rEGCA1_1.Pgen;
      // OUT41 = PV.rEGCA1_1.Qgen;
      // OUT42 = Bus5.v;
      // OUT43 = Bus5.angle;

      OUT1 = G2.gen.w;
      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.Epq;
      // OUT4 = G2.gen.PSIkd;
      // OUT5 = G2.gen.PSIppq;
      // OUT6 = G2.sEXSMPC.simpleLagLim.state;
      // OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      // OUT8 = G2.gASTMPC.simpleLagLim.state;
      // OUT9 = G2.gASTMPC.simpleLag.state;
      // OUT10 = G2.gASTMPC.simpleLag1.state;
      // OUT11 = PV.rEGCA1_1.simpleLag.state;
      // OUT12 = PV.rEGCA1_1.integrator.y;
      // OUT13 = PV.rEGCA1_1.integrator1.y;
      // OUT14 =PV.EC.IGQ.y;
      // OUT15 =PV.EC.IGV.y;
      // OUT16 =PV.EC.simpleLag.state;
      // OUT17 =PV.EC.simpleLag1.state;
      // OUT18 =PV.EC.simpleLag2.state;
      // OUT19 =PV.EC.IGP.y;
      // OUT20 =PV.EC.simpleLag3.state;
      // OUT21 =PV.EC.simpleLag5.state;
      // OUT22 = PV.EC.simpleLag4.state;
      // OUT23 = BESS.rEGCA1_1.simpleLag.state;
      // OUT24 = BESS.rEGCA1_1.integrator.y;
      // OUT25 = BESS.rEGCA1_1.integrator1.y;
      // OUT26 =BESS.EC.integrator3.y;
      // OUT27 =BESS.EC.simpleLag.state;
      // OUT28 =BESS.EC.IGQ.y;
      // OUT29 =BESS.EC.IGV.y;
      // OUT30 =BESS.EC.IGP.y;
      // OUT31 =BESS.EC.simpleLag1.state;
      // OUT32 =BESS.EC.simpleLag2.state;
      // OUT33 =BESS.EC.simpleLag3.state;
      // OUT34 =BESS.EC.simpleLag4.state;
      OUT35 = G2.gen.PMECH;
      OUT36 = G2.sEXSMPC.EFD;
      OUT37 = BESS.rEGCA1_1.Pgen;
      OUT38 = BESS.rEGCA1_1.Qgen;
      OUT39 = PV.rEGCA1_1.Pgen;
      OUT40 = PV.rEGCA1_1.Qgen;
      OUT41 = Bus5.v;
      OUT42 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=20,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal2;

      model MPCAppliedEnergyLinearized2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{206,-10},{226,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{206,-30},{226,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{206,-50},{226,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{206,-70},{226,-50}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{206,-90},{226,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{208,-108},{228,-88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{224,70},{244,90}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{224,50},{244,70}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag5.state;
      OUT22 = PV.EC.simpleLag4.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.simpleLag.state;
      OUT28 =BESS.EC.IGQ.y;
      OUT29 =BESS.EC.IGV.y;
      OUT30 =BESS.EC.IGP.y;
      OUT31 =BESS.EC.simpleLag1.state;
      OUT32 =BESS.EC.simpleLag2.state;
      OUT33 =BESS.EC.simpleLag3.state;
      OUT34 =BESS.EC.simpleLag4.state;
      OUT35 = G2.gen.PMECH;
      OUT36 = G2.sEXSMPC.EFD;
      OUT37 = BESS.rEGCA1_1.Pgen;
      OUT38 = BESS.rEGCA1_1.Qgen;
      OUT39 = PV.rEGCA1_1.Pgen;
      OUT40 = PV.rEGCA1_1.Qgen;
      OUT41 = Bus5.v;
      OUT42 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized2;

      model MPCAppliedEnergyLinearized3
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.P;
      OUT3 = G2.gen.Q;
      OUT4 = G2.sEXSMPC.EFD;
      OUT5 = G2.gASTMPC.PMECH;
      OUT6 = G2.gASTMPC.simpleLag1.state;
      OUT7 = Bus6.v;
      OUT8 = Bus6.angle;
      OUT9 = PV.rEGCA1_1.p.ir;
      OUT10 = PV.rEGCA1_1.p.ii;
      OUT11 = PV.rEGCA1_1.Pgen;
      OUT12 = PV.rEGCA1_1.Qgen;
      OUT13 = Bus8.v;
      OUT14 = Bus8.angle;
      OUT15 = BESS.rEGCA1_1.p.ir;
      OUT16 = BESS.rEGCA1_1.p.ii;
      OUT17 = BESS.rEGCA1_1.Pgen;
      OUT18 = BESS.rEGCA1_1.Qgen;
      OUT19 = Bus10.v;
      OUT20 = Bus10.angle;
      OUT21 = Bus5.v;
      OUT22 = Bus5.angle;


      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.Epq;
      // OUT4 = G2.gen.PSIkd;
      // OUT5 = G2.gen.PSIppq;
      // OUT6 = G2.sEXSMPC.simpleLagLim.state;
      // OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      // OUT8 = G2.gASTMPC.simpleLagLim.state;
      // OUT9 = G2.gASTMPC.simpleLag.state;
      // OUT10 = G2.gASTMPC.simpleLag1.state;
      // OUT11 = PV.rEGCA1_1.simpleLag.state;
      // OUT12 = PV.rEGCA1_1.integrator.y;
      // OUT13 = PV.rEGCA1_1.integrator1.y;
      // OUT14 =PV.EC.IGQ.y;
      // OUT15 =PV.EC.IGV.y;
      // OUT16 =PV.EC.simpleLag.state;
      // OUT17 =PV.EC.simpleLag1.state;
      // OUT18 =PV.EC.simpleLag2.state;
      // OUT19 =PV.EC.IGP.y;
      // OUT20 =PV.EC.simpleLag3.state;
      // OUT21 =PV.EC.simpleLag5.state;
      // OUT22 = PV.EC.simpleLag4.state;
      // OUT23 = BESS.rEGCA1_1.simpleLag.state;
      // OUT24 = BESS.rEGCA1_1.integrator.y;
      // OUT25 = BESS.rEGCA1_1.integrator1.y;
      // OUT26 =BESS.EC.integrator3.y;
      // OUT27 =BESS.EC.simpleLag.state;
      // OUT28 =BESS.EC.IGQ.y;
      // OUT29 =BESS.EC.IGV.y;
      // OUT30 =BESS.EC.IGP.y;
      // OUT31 =BESS.EC.simpleLag1.state;
      // OUT32 =BESS.EC.simpleLag2.state;
      // OUT33 =BESS.EC.simpleLag3.state;
      // OUT34 =BESS.EC.simpleLag4.state;


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized3;

      model MPCAppliedEnergyLinearized3_table
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.000001,
                               samplePeriod=0.001)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{184,-50},{204,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{202,-94},{222,-74}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{212,-116},{232,-96}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,6},{-80,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-20},{-80,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-48},{-80,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-94},{-80,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-100,-120},{-80,-100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{226,-8},{246,12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{226,-8},{246,12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{226,-8},{246,12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{226,-8},{246,12}})));
      equation

      OUT1 = G2.gen.w;
      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.Epq;
      // OUT4 = G2.gen.PSIkd;
      // OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag5.state;
      OUT22 = PV.EC.simpleLag4.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.simpleLag.state;
      OUT28 =BESS.EC.IGQ.y;
      OUT29 =BESS.EC.IGV.y;
      OUT30 =BESS.EC.IGP.y;
      OUT31 =BESS.EC.simpleLag1.state;
      OUT32 =BESS.EC.simpleLag2.state;
      OUT33 =BESS.EC.simpleLag3.state;
      OUT34 =BESS.EC.simpleLag4.state;


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(combiTimeTable.y[1], G2.P_ref1)
          annotation (Line(points={{-79,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-79,-10},{
                -52,-10},{-52,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-79,-38},{-50,
                -38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1)
          annotation (Line(points={{-79,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-79,-110},
                {-52,-110},{-52,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Rectangle(
                extent={{130,98},{252,-124}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{128,118},{168,98}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=2,
            Interval=0.01,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized3_table;

      model MPCAppliedEnergyLinearized_WITHOUT_OUTPUTS
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
      equation

      // OUT1 = G2.gen.w;
      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.Epq;
      // OUT4 = G2.gen.PSIkd;
      // OUT5 = G2.gen.PSIppq;
      // OUT6 = G2.sEXSMPC.simpleLagLim.state;
      // OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      // OUT8 = G2.gASTMPC.simpleLagLim.state;
      // OUT9 = G2.gASTMPC.simpleLag.state;
      // OUT10 = G2.gASTMPC.simpleLag1.state;
      // OUT11 = PV.rEGCA1_1.simpleLag.state;
      // OUT12 = PV.rEGCA1_1.integrator.y;
      // OUT13 = PV.rEGCA1_1.integrator1.y;
      // OUT14 =PV.EC.IGQ.y;
      // OUT15 =PV.EC.IGV.y;
      // OUT16 =PV.EC.simpleLag.state;
      // OUT17 =PV.EC.simpleLag1.state;
      // OUT18 =PV.EC.simpleLag2.state;
      // OUT19 =PV.EC.IGP.y;
      // OUT20 =PV.EC.simpleLag3.state;
      // OUT21 =PV.EC.simpleLag5.state;
      // OUT22 = PV.EC.simpleLag4.state;
      // OUT23 = BESS.rEGCA1_1.simpleLag.state;
      // OUT24 = BESS.rEGCA1_1.integrator.y;
      // OUT25 = BESS.rEGCA1_1.integrator1.y;
      // OUT26 =BESS.EC.integrator3.y;
      // OUT27 =BESS.EC.simpleLag.state;
      // OUT28 =BESS.EC.IGQ.y;
      // OUT29 =BESS.EC.IGV.y;
      // OUT30 =BESS.EC.IGP.y;
      // OUT31 =BESS.EC.simpleLag1.state;
      // OUT32 =BESS.EC.simpleLag2.state;
      // OUT33 =BESS.EC.simpleLag3.state;
      // OUT34 =BESS.EC.simpleLag4.state;
      // OUT35 = G2.gen.PMECH;
      // OUT36 = G2.sEXSMPC.EFD;
      // OUT37 = BESS.rEGCA1_1.Pgen;
      // OUT38 = BESS.rEGCA1_1.Qgen;
      // OUT39 = PV.rEGCA1_1.Pgen;
      // OUT40 = PV.rEGCA1_1.Qgen;
      // OUT41 = Bus5.v;
      // OUT42 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_WITHOUT_OUTPUTS;

      model Caceta

        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl_OBSERVABILITY
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}})));
        Modelica.Blocks.Interfaces.RealInput QINPUT1
                                                    "Reactive Power Reference"
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        OpenIPSL.Electrical.Buses.Bus
                             Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={20,0})));
        OpenIPSL.Examples.ModelPredictiveControl.PFData.PowerFlow
                         powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-60,72},{-40,92}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load2(
          P_0=powerFlow.powerflow.machines.PPV,
          Q_0=powerFlow.powerflow.machines.PPV,
          v_0=powerFlow.powerflow.bus.V8,
          angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(extent={{40,-40},{60,-20}})));

        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-82,-36},{-70,-24}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-48,-10},{-28,10}})));
      equation

      // OUT1 = PV.rEGCA1_1.simpleLag.state;
      // OUT2 = PV.rEGCA1_1.integrator.y;
      // OUT3 = PV.rEGCA1_1.integrator1.y;
      // OUT4 =PV.EC.IGQ.y;
      // OUT5 =PV.EC.IGV.y;
      // OUT6 =PV.EC.simpleLag.state;
      // OUT7 =PV.EC.simpleLag1.state;
      // OUT8 =PV.EC.simpleLag2.state;
      // OUT9 =PV.EC.IGP.y;
      // OUT10 =PV.EC.simpleLag3.state;
      // OUT11 =PV.EC.simpleLag5.state;
      // OUT12 =PV.EC.simpleLag4.state;
        connect(PV.p1, Bus8.p) annotation (Line(points={{10,0},{15,0},{15,-5.55112e-16},
                {20,-5.55112e-16}}, color={0,0,255}));
        connect(Load2.p, Bus8.p)
          annotation (Line(points={{50,-20},{50,0},{20,0}}, color={0,0,255}));
        connect(QINPUT1, AddU1.u1) annotation (Line(points={{-120,0},{-60,0},{-60,6},{
                -50,6}}, color={0,0,127}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-69.4,-30},{-60,-30},{-60,
                -6},{-50,-6}}, color={0,0,127}));
        connect(AddU1.y, PV.QINPUT)
          annotation (Line(points={{-27,0},{-12,0}}, color={0,0,127}));
        annotation (experiment(__Dymola_Algorithm="Dassl"));
      end Caceta;

      model Caceta2

        OpenIPSL.Examples.ModelPredictiveControl.GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}})));
        Modelica.Blocks.Interfaces.RealInput QINPUT1
                                                    "Reactive Power Reference"
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        OpenIPSL.Electrical.Buses.Bus
                             Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={20,0})));
        OpenIPSL.Examples.ModelPredictiveControl.PFData.PowerFlow
                         powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-60,72},{-40,92}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load2(
          P_0=powerFlow.powerflow.machines.PPV,
          Q_0=powerFlow.powerflow.machines.QPV,
          v_0=powerFlow.powerflow.bus.V8,
          angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(extent={{40,-40},{60,-20}})));

        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{76,80},{96,100}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{76,60},{96,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{76,40},{96,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{76,20},{96,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{76,0},{96,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{76,-20},{96,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{76,-40},{96,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{76,-60},{96,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{76,-80},{96,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{76,-100},{96,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{100,80},{120,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{100,60},{120,80}})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-82,-36},{-70,-24}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-48,-10},{-28,10}})));
      equation

      OUT1 = PV.rEGCA1_1.simpleLag.state;
      OUT2 = PV.rEGCA1_1.integrator.y;
      OUT3 = PV.rEGCA1_1.integrator1.y;
      OUT4 =PV.EC.IGQ.y;
      OUT5 =PV.EC.IGV.y;
      OUT6 =PV.EC.simpleLag.state;
      OUT7 =PV.EC.simpleLag1.state;
      OUT8 =PV.EC.simpleLag2.state;
      OUT9 =PV.EC.IGP.y;
      OUT10 =PV.EC.simpleLag3.state;
      OUT11 =PV.EC.simpleLag5.state;
      OUT12 =PV.EC.simpleLag4.state;
        connect(PV.p1, Bus8.p) annotation (Line(points={{10,0},{15,0},{15,-5.55112e-16},
                {20,-5.55112e-16}}, color={0,0,255}));
        connect(Load2.p, Bus8.p)
          annotation (Line(points={{50,-20},{50,0},{20,0}}, color={0,0,255}));
        connect(QINPUT1, AddU1.u1) annotation (Line(points={{-120,0},{-60,0},{-60,6},{
                -50,6}}, color={0,0,127}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-69.4,-30},{-60,-30},{-60,
                -6},{-50,-6}}, color={0,0,127}));
        connect(AddU1.y, PV.QINPUT)
          annotation (Line(points={{-27,0},{-12,0}}, color={0,0,127}));
      end Caceta2;

      model Caceta3

        OpenIPSL.Examples.ModelPredictiveControl.PFData.PowerFlow
                         powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-60,72},{-40,92}})));

        Electrical.Buses.Bus          Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={76,44})));
        Electrical.Buses.Bus          Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-14,38})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={6,38})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-34,38})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-112,26},{-100,38}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-84,28},{-64,48}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-112,-4},{-100,8}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-84,-2},{-64,18}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{96,-2},{116,18}})));
        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-14,-62})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={6,-62})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-44,-32},{-24,-12}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-84,-32},{-64,-12}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-112,-34},{-100,-22}})));
        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-84,-62},{-64,-42}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-84,-88},{-64,-68}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-112,-64},{-100,-52}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-112,-90},{-100,-78}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-44,-72},{-24,-52}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-14,-22})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={8,-22})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={26,-62})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={26,-22})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={26,38})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{34,34},{46,42}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{34,-26},{46,-18}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{34,-66},{46,-58}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{64,-8},{74,2}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{62,10},{74,22}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{80,10},{88,18}})));
        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-154,38}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-154,16}),  iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
        Modelica.Blocks.Interfaces.RealInput IN3(start=0)   "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-164,-16},{-144,4}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start=0)   "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-164,-38},{-144,-18}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start=0)   "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-164,-60},{-144,-40}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));
        Electrical.Loads.PSSE.Load          Load1(
          P_0=-3004660,
          Q_0=-548994,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=180,
              origin={76,72})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{130,78},{150,98}})));
      //   Modelica.Blocks.Interfaces.RealOutput OUT2 annotation (Placement(transformation(extent={{128,26},{148,46}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{128,26},{148,46}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{152,-2},{172,18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{152,2},{172,22}})));

        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{130,-22},{150,-2}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{130,-42},{150,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{130,-62},{150,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{130,-82},{150,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{130,-102},{150,-82}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{154,78},{174,98}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{154,58},{174,78}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{154,38},{174,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{154,18},{174,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{154,-2},{174,18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{154,-22},{174,-2}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{154,-42},{174,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{154,-62},{174,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{154,-82},{174,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{154,-102},{174,-82}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{174,78},{194,98}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{174,58},{194,78}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{174,38},{194,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{174,18},{194,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{174,-2},{194,18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{174,-22},{194,-2}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{174,-42},{194,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{174,-62},{194,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{174,-82},{194,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{174,-102},{194,-82}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{194,78},{214,98}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{194,58},{214,78}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{194,38},{214,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{194,18},{214,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{228,-16},{248,4}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{234,-50},{254,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{260,-88},{280,-68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{258,-88},{278,-68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{278,-112},{298,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{242,-126},{262,-106}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{232,-104},{252,-84}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{278,-148},{298,-128}})));
      equation

      OUT1 = G2.gen.w;
      //OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag5.state;
      OUT22 = PV.EC.simpleLag4.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.simpleLag.state;
      OUT28 =BESS.EC.IGQ.y;
      OUT29 =BESS.EC.IGV.y;
      OUT30 =BESS.EC.IGP.y;
      OUT31 =BESS.EC.simpleLag1.state;
      OUT32 =BESS.EC.simpleLag2.state;
      OUT33 =BESS.EC.simpleLag3.state;
      OUT34 =BESS.EC.simpleLag4.state;
      OUT35 = Bus5.v;
      OUT36 = Bus5.angle;
      OUT37 = Bus6.v;
      OUT38 = Bus6.angle;
      OUT39 = Bus8.v;
      OUT40 = Bus8.angle;
      OUT41 = Bus10.v;
      OUT42 = Bus10.angle;
        connect(IN11.y,AddU1. u2) annotation (Line(points={{-99.4,32},{-86,32}},
                            color={0,0,127}));
        connect(IN1,AddU1. u1) annotation (Line(points={{-154,38},{-116,38},{-116,44},
                {-86,44}},
                       color={0,0,127}));
        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99.4,2},{-86,2}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-154,16},{-154,14},{-86,14}},
                       color={0,0,127}));
        connect(AddU2.y,G2. Efd_ref)
          annotation (Line(points={{-63,8},{-54,8},{-54,32},{-46,32}},
                                                                 color={0,0,127}));
        connect(AddU1.y,G2. P_ref1) annotation (Line(points={{-63,38},{-56,38},{-56,44},
                {-46,44}},                          color={0,0,127}));
        connect(Load2.p,Bus5. p) annotation (Line(points={{106,18},{106,30},{76,30},{76,
                44}},color={0,0,255}));
        connect(T4.n,Bus10. p)
          annotation (Line(points={{-5,-62},{-14,-62}}, color={0,0,255}));
        connect(Bus6.p,T2. n)
          annotation (Line(points={{-14,38},{-5,38}},
                                                  color={0,0,255}));
        connect(AddU3.y,PV. QINPUT) annotation (Line(points={{-63,-22},{-46,-22}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-99.4,-28},{-86,-28}}, color={0,0,127}));
        connect(BESS.p1,Bus10. p)
          annotation (Line(points={{-24,-62},{-14,-62}}, color={0,0,255}));
        connect(BESS.Paux1,AddU4. y) annotation (Line(points={{-46,-56},{-56,-56},{-56,
                -52},{-63,-52}}, color={0,0,127}));
        connect(IN55.y,AddU5. u2)
          annotation (Line(points={{-99.4,-84},{-86,-84}},   color={0,0,127}));
        connect(AddU5.y,BESS. Qext1) annotation (Line(points={{-63,-78},{-54,-78},{-54,
                -68},{-46,-68}},   color={0,0,127}));
        connect(IN44.y,AddU4. u2)
          annotation (Line(points={{-99.4,-58},{-86,-58}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-86,-46},{-138,-46},{-138,-28},
                {-154,-28}},                       color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-86,-72},{-154,-72},{-154,-50}},
                             color={0,0,127}));
        connect(G2.conn,Bus6. p) annotation (Line(points={{-23,38},{-14,38}},
                                           color={0,0,255}));
        connect(AddU3.u1,IN3)  annotation (Line(points={{-86,-16},{-138,-16},{-138,-6},
                {-154,-6}},  color={0,0,127}));
        connect(PV.p1,Bus8. p)
          annotation (Line(points={{-24,-22},{-14,-22}}, color={0,0,255}));
        connect(Bus8.p,T3. n)
          annotation (Line(points={{-14,-22},{-3,-22}}, color={0,0,255}));
        connect(T2.p,Bus7. p) annotation (Line(points={{17,38},{26,38}},
                      color={0,0,255}));
        connect(T3.p,Bus9. p)
          annotation (Line(points={{19,-22},{26,-22}}, color={0,0,255}));
        connect(T4.p,Bus11. p)
          annotation (Line(points={{17,-62},{26,-62}}, color={0,0,255}));
        connect(L4.n,Bus5. p) annotation (Line(points={{45.4,38},{60,38},{60,44},{76,44}},
                              color={0,0,255}));
        connect(L5.n,Bus5. p) annotation (Line(points={{45.4,-22},{56,-22},{56,28},{76,
                28},{76,44}}, color={0,0,255}));
        connect(Bus11.p,L6. p)
          annotation (Line(points={{26,-62},{34.6,-62}}, color={0,0,255}));
        connect(Bus9.p,L5. p)
          annotation (Line(points={{26,-22},{34.6,-22}}, color={0,0,255}));
        connect(L6.n,Bus5. p) annotation (Line(points={{45.4,-62},{56,-62},{56,28},{76,
                28},{76,44}}, color={0,0,255}));
        connect(Bus7.p,L4. p) annotation (Line(points={{26,38},{34.6,38}},
                      color={0,0,255}));
        connect(sine.y,add. u2) annotation (Line(points={{74.5,-3},{74.5,11.6},{79.2,11.6}},
                               color={0,0,127}));
        connect(whiteNoiseInjection.y,add. u1) annotation (Line(points={{74.54,15.94},
                {76.87,15.94},{76.87,16.4},{79.2,16.4}},            color={0,0,
                127}));
        connect(add.y,Load2. u) annotation (Line(points={{88.4,14},{93.15,14},{93.15,13.5},
                {97.9,13.5}},                 color={0,0,127}));
        connect(Load1.p, Bus5.p)
          annotation (Line(points={{76,62},{76,44}}, color={0,0,255}));
        annotation (Diagram(graphics={
              Rectangle(
                extent={{-164,58},{-138,-62}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Text(
                extent={{-168,78},{-136,58}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{118,126},{158,106}},
                textColor={0,140,72},
                textString="Outputs")}));
      end Caceta3;

      model Caceta4

        Modelica.Blocks.Interfaces.RealOutput y1
                     "Connector of Real output signal"
          annotation (Placement(transformation(extent={{100,10},{120,30}})));
        Modelica.Blocks.Interfaces.RealInput u1
                    "Connector of Real input signal"
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        NonElectrical.Continuous.SimpleLag simpleLag(
          K=1,
          T=1,
          y_start=0)
          annotation (Placement(transformation(extent={{-8,-10},{12,10}})));
      equation

      // OUT1 = PV.rEGCA1_1.simpleLag.state;
      // OUT2 = PV.rEGCA1_1.integrator.y;
      // OUT3 = PV.rEGCA1_1.integrator1.y;
      // OUT4 =PV.EC.IGQ.y;
      // OUT5 =PV.EC.IGV.y;
      // OUT6 =PV.EC.simpleLag.state;
      // OUT7 =PV.EC.simpleLag1.state;
      // OUT8 =PV.EC.simpleLag2.state;
      // OUT9 =PV.EC.IGP.y;
      // OUT10 =PV.EC.simpleLag3.state;
      // OUT11 =PV.EC.simpleLag5.state;
      // OUT12 =PV.EC.simpleLag4.state;



        connect(u1, simpleLag.u)
          annotation (Line(points={{-120,0},{-10,0}}, color={0,0,127}));
        connect(simpleLag.y, y1) annotation (Line(points={{13,0},{96,0},{96,20},{110,20}},
              color={0,0,127}));
      end Caceta4;

      model Caceta5

        Modelica.Blocks.Interfaces.RealOutput y1
                     "Connector of Real output signal"
          annotation (Placement(transformation(extent={{100,-10},{120,10}})));
        Modelica.Blocks.Interfaces.RealInput u1
                    "Connector of Real input signal"
          annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
        Modelica.Blocks.Continuous.Integrator IGQ(
          k=1,
          initType=Modelica.Blocks.Types.Init.InitialState,
          y_start=0)
          annotation (Placement(transformation(extent={{-60,-30},{-40,-10}})));
        Modelica.Blocks.Math.Gain PGQ(k=1)
          annotation (Placement(transformation(extent={{-60,10},{-40,30}})));
        Modelica.Blocks.Math.Add add2
          annotation (Placement(transformation(extent={{-2,-10},{18,10}})));
      equation

      // OUT1 = PV.rEGCA1_1.simpleLag.state;
      // OUT2 = PV.rEGCA1_1.integrator.y;
      // OUT3 = PV.rEGCA1_1.integrator1.y;
      // OUT4 =PV.EC.IGQ.y;
      // OUT5 =PV.EC.IGV.y;
      // OUT6 =PV.EC.simpleLag.state;
      // OUT7 =PV.EC.simpleLag1.state;
      // OUT8 =PV.EC.simpleLag2.state;
      // OUT9 =PV.EC.IGP.y;
      // OUT10 =PV.EC.simpleLag3.state;
      // OUT11 =PV.EC.simpleLag5.state;
      // OUT12 =PV.EC.simpleLag4.state;

      y1 = IGQ.y;
        connect(PGQ.y,add2. u1)
          annotation (Line(points={{-39,20},{-12,20},{-12,6},{-4,6}},
                                                       color={0,0,127}));
        connect(IGQ.y,add2. u2) annotation (Line(points={{-39,-20},{-12,-20},{-12,-6},
                {-4,-6}},      color={0,0,127}));
        connect(IGQ.u, u1) annotation (Line(points={{-62,-20},{-94,-20},{-94,0},{-120,
                0}}, color={0,0,127}));
        connect(PGQ.u, u1) annotation (Line(points={{-62,20},{-94,20},{-94,0},{-120,0}},
              color={0,0,127}));
      end Caceta5;

      model MPCAppliedEnergyLinearized_test
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.5,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Step     IN33(height=0, startTime=1)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Step     IN44(height=0.05, startTime=1)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Step     IN55(height=0.05, startTime=1)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
      equation


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(AddU3.y, PV.QINPUT)
          annotation (Line(points={{-59,-50},{-42,-50}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=4,
            __Dymola_NumberOfIntervals=50000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_test;

      model MPCAppliedEnergyLinearized_test2
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        PFData.PowerFlow powerFlow(redeclare record PowerFlow = PFData.PF16)
          annotation (Placement(transformation(extent={{-116,106},{-96,126}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{146,68},{166,88}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{146,48},{166,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{146,28},{166,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{146,8},{166,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{146,-12},{166,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{146,-32},{166,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{146,-52},{166,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{146,-72},{166,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{146,-92},{166,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{146,-112},{166,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{170,68},{190,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{170,48},{190,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{170,28},{190,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{170,8},{190,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{170,-12},{190,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{170,-32},{190,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{170,-52},{190,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{170,-72},{190,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{170,-92},{190,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{170,-112},{190,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{190,68},{210,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{190,48},{210,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{190,28},{210,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{190,8},{210,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{190,-12},{210,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{190,-32},{210,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{190,-52},{210,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{190,-72},{210,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{190,-92},{210,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{190,-112},{210,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{210,68},{230,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{210,48},{230,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{210,28},{230,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{210,8},{230,28}})));
        Electrical.Loads.PSSE.Load          Load1(
          P_0=-3004660,
          Q_0=-548994,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=180,
              origin={80,60})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{210,-12},{230,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{210,-32},{230,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{210,-52},{230,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{210,-72},{230,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{220,-96},{240,-76}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{220,-116},{240,-96}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{220,-136},{240,-116}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{220,-156},{240,-136}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_1.simpleLag.state;
      OUT12 = PV.rEGCA1_1.integrator.y;
      OUT13 = PV.rEGCA1_1.integrator1.y;
      OUT14 =PV.EC.IGQ.y;
      OUT15 =PV.EC.IGV.y;
      OUT16 =PV.EC.simpleLag.state;
      OUT17 =PV.EC.simpleLag1.state;
      OUT18 =PV.EC.simpleLag2.state;
      OUT19 =PV.EC.IGP.y;
      OUT20 =PV.EC.simpleLag3.state;
      OUT21 =PV.EC.simpleLag5.state;
      OUT22 = PV.EC.simpleLag4.state;
      OUT23 = BESS.rEGCA1_1.simpleLag.state;
      OUT24 = BESS.rEGCA1_1.integrator.y;
      OUT25 = BESS.rEGCA1_1.integrator1.y;
      OUT26 =BESS.EC.integrator3.y;
      OUT27 =BESS.EC.simpleLag.state;
      OUT28 =BESS.EC.IGQ.y;
      OUT29 =BESS.EC.IGV.y;
      OUT30 =BESS.EC.IGP.y;
      OUT31 =BESS.EC.simpleLag1.state;
      OUT32 =BESS.EC.simpleLag2.state;
      OUT33 =BESS.EC.simpleLag3.state;
      OUT34 =BESS.EC.simpleLag4.state;
      OUT35 = G2.gen.PMECH;
      OUT36 = G2.sEXSMPC.EFD;
      OUT37 = BESS.rEGCA1_1.Pgen;
      OUT38 = BESS.rEGCA1_1.Qgen;
      OUT39 = PV.rEGCA1_1.Pgen;
      OUT40 = PV.rEGCA1_1.Qgen;
      OUT41 = Bus5.v;
      OUT42 = Bus5.angle;




        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(Load1.p, Bus5.p) annotation (Line(points={{80,50},{80,30},{94,30},{94,
                10},{80,10},{80,16}}, color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_test2;

      model MPCAppliedEnergyLinearized_test2_table
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl_OBSERVABILITY
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized_OBSERVABILITY
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,80},{160,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-20},{160,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-40},{160,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-60},{160,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-80},{160,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-100},{160,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,80},{184,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,60},{184,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,40},{184,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,20},{184,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,0},{184,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-20},{184,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-40},{184,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-60},{184,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-80},{184,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-100},{184,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{186,80},{206,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{186,60},{206,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{186,40},{206,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{186,20},{206,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{186,0},{206,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{186,-20},{206,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{186,-40},{206,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{186,-60},{206,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{186,-80},{206,-60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{186,-100},{206,-80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{212,80},{232,100}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{212,60},{232,80}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{212,40},{232,60}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{212,20},{232,40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT35
          annotation (Placement(transformation(extent={{212,0},{232,20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT36
          annotation (Placement(transformation(extent={{212,-20},{232,0}})));
        Modelica.Blocks.Interfaces.RealOutput OUT37
          annotation (Placement(transformation(extent={{212,-40},{232,-20}})));
        Modelica.Blocks.Interfaces.RealOutput OUT38
          annotation (Placement(transformation(extent={{212,-60},{232,-40}})));
        Modelica.Blocks.Interfaces.RealOutput OUT39
          annotation (Placement(transformation(extent={{254,-54},{274,-34}})));
        Modelica.Blocks.Interfaces.RealOutput OUT40
          annotation (Placement(transformation(extent={{254,-74},{274,-54}})));
        Modelica.Blocks.Interfaces.RealOutput OUT41
          annotation (Placement(transformation(extent={{254,-94},{274,-74}})));
        Modelica.Blocks.Interfaces.RealOutput OUT42
          annotation (Placement(transformation(extent={{254,-114},{274,-94}})));
        Modelica.Blocks.Interfaces.RealOutput OUT43
          annotation (Placement(transformation(extent={{254,-134},{274,-114}})));
        Modelica.Blocks.Interfaces.RealOutput OUT44
          annotation (Placement(transformation(extent={{254,-154},{274,-134}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-130,0},{-110,20}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-130,-26},{-110,-6}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-130,-54},{-110,-34}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-130,-100},{-110,-80}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-130,-126},{-110,-106}})));
      equation

      OUT1 = G2.gen.w;
      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.Epq;
      // OUT4 = G2.gen.PSIkd;
      // OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;
      OUT11 = PV.rEGCA1_OBSERVABILITY.simpleLag.state;
      OUT12 = PV.rEGCA1_OBSERVABILITY.simpleLag1.state;
      OUT13 = PV.rEGCA1_OBSERVABILITY.simpleLag2.state;
      OUT14 = PV.EC.simpleLag.state;
      OUT15 = PV.EC.simpleLag3.state;
      OUT16 = PV.EC.simpleLag1.state;
      OUT17 = PV.EC.simpleLag2.state;
      OUT18 = PV.EC.PI.x;
      OUT19 = PV.EC.PI1.x;
      OUT20 = PV.EC.PI2.x;
      OUT21 = BESS.rEGCA1_OBSERVABILITY.simpleLag.state;
      OUT22 = BESS.rEGCA1_OBSERVABILITY.simpleLag1.state;
      OUT23 = BESS.rEGCA1_OBSERVABILITY.simpleLag2.state;
      OUT24 = BESS.EC.simpleLag.state;
      OUT25 = BESS.EC.simpleLag2.state;
      OUT26 = BESS.EC.simpleLag3.state;
      OUT27 = BESS.EC.PI.x;
      OUT28 = BESS.EC.PI1.x;
      OUT29 = BESS.EC.simpleLag1.state;
      OUT30 = BESS.EC.PI2.x;
      OUT31 = Bus5.v;
      OUT32 = Bus5.angle;
      OUT33 = Bus6.v;
      OUT34 = Bus6.angle;
      OUT35 = Bus8.v;
      OUT36 = Bus8.angle;
      OUT37 = Bus10.v;
      OUT38 = Bus10.angle;
      OUT39 = G2.gen.P;
      OUT40 = G2.gen.Q;
      OUT41 = PV.rEGCA1_OBSERVABILITY.Pgen;
      OUT42 = PV.rEGCA1_OBSERVABILITY.Qgen;
      OUT43 = BESS.rEGCA1_OBSERVABILITY.Pgen;
      OUT44 = BESS.rEGCA1_OBSERVABILITY.Qgen;

      // OUT1 = G2.gen.w;
      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.Epq;
      // OUT4 = G2.gen.PSIkd;
      // OUT5 = G2.gen.PSIppq;
      // OUT6 = G2.sEXSMPC.simpleLagLim.state;
      // OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      // OUT8 = G2.gASTMPC.simpleLagLim.state;
      // OUT9 = G2.gASTMPC.simpleLag.state;
      // OUT10 = G2.gASTMPC.simpleLag1.state;
      // OUT11 = PV.rEGCA1_OBSERVABILITY.simpleLag.state;
      // OUT12 = PV.rEGCA1_OBSERVABILITY.simpleLag1.state;
      // OUT13 = PV.rEGCA1_OBSERVABILITY.simpleLag2.state;
      // OUT14 = PV.EC.simpleLag.state;
      // OUT15 = PV.EC.simpleLag3.state;
      // OUT16 = PV.EC.simpleLag1.state;
      // OUT17 = PV.EC.simpleLag2.state;
      // OUT18 = PV.EC.PI.x;
      // OUT19 = PV.EC.PI1.x;
      // OUT20 = PV.EC.PI2.x;
      // OUT21 = BESS.rEGCA1_1.simpleLag.state;
      // OUT22 = BESS.rEGCA1_1.integrator.y;
      // OUT23 = BESS.rEGCA1_1.integrator1.y;
      // OUT24 = BESS.EC.integrator3.y;
      // OUT25 = BESS.EC.simpleLag.state;
      // OUT26 = BESS.EC.IGQ.y;
      // OUT27 = BESS.EC.IGV.y;
      // OUT28 = BESS.EC.IGP.y;
      // OUT29 = BESS.EC.simpleLag1.state;
      // OUT30 = BESS.EC.simpleLag2.state;
      // OUT31 = BESS.EC.simpleLag3.state;
      // OUT32 = BESS.EC.simpleLag4.state;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(combiTimeTable.y[1], G2.P_ref1) annotation (Line(points={{-109,10},{-52,
                10},{-52,16},{-42,16}}, color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-109,-16},
                {-50,-16},{-50,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-109,-44},{
                -52,-44},{-52,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1) annotation (Line(points={{-109,-90},
                {-52,-90},{-52,-84},{-42,-84}}, color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-109,-116},
                {-50,-116},{-50,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_test2_table;

      model MPCAppliedEnergyLinearized_test2_LINEAR
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        import Modelica_LinearSystems2.StateSpace;
        parameter Real[:] y0 = vector(DataFiles.readMATmatrix("MyData.mat", "y0")) annotation(Evaluate = false);
        parameter StateSpace ss=StateSpace.Import.fromFile("MyData.mat", "ABCD");
        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;
        parameter Integer ny=size(ss.C,1);

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        PFData.PowerFlow powerFlow(redeclare record PowerFlow = PFData.PF16)
          annotation (Placement(transformation(extent={{-116,106},{-96,126}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{146,68},{166,88}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{146,48},{166,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{146,28},{166,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{146,8},{166,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{146,-12},{166,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{146,-32},{166,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{146,-52},{166,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{146,-72},{166,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{146,-92},{166,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{146,-112},{166,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{170,68},{190,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{170,48},{190,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{170,28},{190,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{170,8},{190,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{170,-12},{190,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{170,-32},{190,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{170,-52},{190,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{170,-72},{190,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{170,-92},{190,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{170,-112},{190,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{190,68},{210,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{190,48},{210,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{190,28},{210,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{190,8},{210,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{190,-12},{210,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{190,-32},{210,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{190,-52},{210,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{190,-72},{210,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT29
          annotation (Placement(transformation(extent={{190,-92},{210,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT30
          annotation (Placement(transformation(extent={{190,-112},{210,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT31
          annotation (Placement(transformation(extent={{210,68},{230,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT32
          annotation (Placement(transformation(extent={{210,48},{230,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT33
          annotation (Placement(transformation(extent={{210,28},{230,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT34
          annotation (Placement(transformation(extent={{210,8},{230,28}})));
        Modelica_LinearSystems2.Controller.StateSpace stateSpace(system=ss)
          annotation (Placement(transformation(extent={{0,-10},{20,10}})));
        Modelica.Blocks.Routing.Multiplex5 multiplex5_1
          annotation (Placement(transformation(extent={{-40,-50},{-20,-30}})));
        Modelica.Blocks.Routing.DeMultiplex demux(n=34)
          annotation (Placement(transformation(extent={{30,-10},{50,10}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{20,-50},{40,-30}})));
        Modelica.Blocks.Sources.Constant const(k=y0)
          annotation (Placement(transformation(extent={{-28,-90},{-8,-70}})));
      equation


        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(AddU1.y, multiplex5_1.u1[1]) annotation (Line(points={{-59,10},{-50,10},
                {-50,-30},{-42,-30}}, color={0,0,127}));
        connect(AddU2.y, multiplex5_1.u2[1]) annotation (Line(points={{-59,-20},{-52,-20},
                {-52,-35},{-42,-35}}, color={0,0,127}));
        connect(AddU3.y, multiplex5_1.u3[1]) annotation (Line(points={{-59,-50},{-52,-50},
                {-52,-40},{-42,-40}}, color={0,0,127}));
        connect(AddU4.y, multiplex5_1.u4[1]) annotation (Line(points={{-59,-80},{-50,-80},
                {-50,-45},{-42,-45}}, color={0,0,127}));
        connect(AddU5.y, multiplex5_1.u5[1]) annotation (Line(points={{-59,-106},{-48,
                -106},{-48,-50},{-42,-50}}, color={0,0,127}));
        connect(multiplex5_1.y, stateSpace.u) annotation (Line(points={{-19,-40},{-16,
                -40},{-16,0},{-2,0}}, color={0,0,127}));
        connect(demux.y[1], OUT1) annotation (Line(points={{50,-3.39706},{64,-3.39706},
                {64,78},{156,78}}, color={0,0,127}));
        connect(OUT2, demux.y[2]) annotation (Line(points={{156,58},{64,58},{64,-3.19118},
                {50,-3.19118}}, color={0,0,127}));
        connect(OUT3, demux.y[3]) annotation (Line(points={{156,38},{64,38},{64,-2.98529},
                {50,-2.98529}}, color={0,0,127}));
        connect(OUT4, demux.y[4]) annotation (Line(points={{156,18},{64,18},{64,-2.77941},
                {50,-2.77941}}, color={0,0,127}));
        connect(OUT5, demux.y[5]) annotation (Line(points={{156,-2},{58,-2},{58,-2.57353},
                {50,-2.57353}}, color={0,0,127}));
        connect(OUT6, demux.y[6]) annotation (Line(points={{156,-22},{64,-22},{64,-2.36765},
                {50,-2.36765}}, color={0,0,127}));
        connect(OUT7, demux.y[7]) annotation (Line(points={{156,-42},{64,-42},{64,-2.16176},
                {50,-2.16176}}, color={0,0,127}));
        connect(OUT8, demux.y[8]) annotation (Line(points={{156,-62},{64,-62},{64,-1.95588},
                {50,-1.95588}}, color={0,0,127}));
        connect(OUT9, demux.y[9]) annotation (Line(points={{156,-82},{64,-82},{64,-1.75},
                {50,-1.75}}, color={0,0,127}));
        connect(OUT10, demux.y[10]) annotation (Line(points={{156,-102},{64,-102},{64,
                -1.54412},{50,-1.54412}}, color={0,0,127}));
        connect(OUT11, demux.y[11]) annotation (Line(points={{180,78},{176,78},{176,106},
                {44,106},{44,-1.33824},{50,-1.33824}}, color={0,0,127}));
        connect(OUT12, demux.y[12]) annotation (Line(points={{180,58},{64,58},{64,-1.13235},
                {50,-1.13235}}, color={0,0,127}));
        connect(OUT13, demux.y[13]) annotation (Line(points={{180,38},{64,38},{64,-0.926471},
                {50,-0.926471}}, color={0,0,127}));
        connect(OUT14, demux.y[14]) annotation (Line(points={{180,18},{64,18},{64,-0.720588},
                {50,-0.720588}}, color={0,0,127}));
        connect(OUT15, demux.y[15]) annotation (Line(points={{180,-2},{64,-2},{64,-0.514706},
                {50,-0.514706}}, color={0,0,127}));
        connect(OUT16, demux.y[16]) annotation (Line(points={{180,-22},{64,-22},{64,-0.308824},
                {50,-0.308824}}, color={0,0,127}));
        connect(OUT17, demux.y[17]) annotation (Line(points={{180,-42},{64,-42},{64,-0.102941},
                {50,-0.102941}}, color={0,0,127}));
        connect(OUT18, demux.y[18]) annotation (Line(points={{180,-62},{64,-62},{64,0.102941},
                {50,0.102941}}, color={0,0,127}));
        connect(OUT19, demux.y[19]) annotation (Line(points={{180,-82},{64,-82},{64,0.308824},
                {50,0.308824}}, color={0,0,127}));
        connect(OUT20, demux.y[20]) annotation (Line(points={{180,-102},{64,-102},{64,
                0.514706},{50,0.514706}}, color={0,0,127}));
        connect(OUT21, demux.y[21]) annotation (Line(points={{200,78},{176,78},{176,106},
                {44,106},{44,0.720588},{50,0.720588}}, color={0,0,127}));
        connect(OUT22, demux.y[22]) annotation (Line(points={{200,58},{64,58},{64,0.926471},
                {50,0.926471}}, color={0,0,127}));
        connect(OUT23, demux.y[23]) annotation (Line(points={{200,38},{64,38},{64,1.13235},
                {50,1.13235}}, color={0,0,127}));
        connect(OUT24, demux.y[24]) annotation (Line(points={{200,18},{64,18},{64,1.33824},
                {50,1.33824}}, color={0,0,127}));
        connect(OUT25, demux.y[25]) annotation (Line(points={{200,-2},{64,-2},{64,1.54412},
                {50,1.54412}}, color={0,0,127}));
        connect(OUT26, demux.y[26]) annotation (Line(points={{200,-22},{64,-22},{64,1.75},
                {50,1.75}}, color={0,0,127}));
        connect(OUT27, demux.y[27]) annotation (Line(points={{200,-42},{64,-42},{64,1.95588},
                {50,1.95588}}, color={0,0,127}));
        connect(OUT28, demux.y[28]) annotation (Line(points={{200,-62},{64,-62},{64,2.16176},
                {50,2.16176}}, color={0,0,127}));
        connect(OUT29, demux.y[29]) annotation (Line(points={{200,-82},{64,-82},{64,2.36765},
                {50,2.36765}}, color={0,0,127}));
        connect(OUT30, demux.y[30]) annotation (Line(points={{200,-102},{64,-102},{64,
                2.57353},{50,2.57353}}, color={0,0,127}));
        connect(OUT31, demux.y[31]) annotation (Line(points={{220,78},{176,78},{176,106},
                {44,106},{44,2.77941},{50,2.77941}}, color={0,0,127}));
        connect(OUT32, demux.y[32]) annotation (Line(points={{220,58},{64,58},{64,2.98529},
                {50,2.98529}}, color={0,0,127}));
        connect(OUT33, demux.y[33]) annotation (Line(points={{220,38},{64,38},{64,3.19118},
                {50,3.19118}}, color={0,0,127}));
        connect(OUT34, demux.y[34]) annotation (Line(points={{220,18},{64,18},{64,3.39706},
                {50,3.39706}},
                        color={0,0,127}));
        connect(add.u1, stateSpace.y[1]) annotation (Line(points={{18,-34},{8,
                -34},{8,-22},{21,-22},{21,0}}, color={0,0,127}));
        connect(const.y, add.u2) annotation (Line(points={{-7,-80},{6,-80},{6,
                -46},{18,-46}}, color={0,0,127}));
        connect(add.y, demux.u[1]) annotation (Line(points={{41,-40},{50,-40},{
                50,-20},{28,-20},{28,-0.970588}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}})),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_test2_LINEAR;

      model MPCAppliedEnergyLinearized_test22
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCSysIdentification
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        PFData.PowerFlow powerFlow(redeclare record PowerFlow = PFData.PF16)
          annotation (Placement(transformation(extent={{-116,106},{-96,126}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{146,68},{166,88}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{146,48},{166,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{146,28},{166,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{146,8},{166,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{146,-12},{166,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{146,-32},{166,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{146,-52},{166,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{146,-72},{166,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{146,-92},{166,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{146,-112},{166,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{170,68},{190,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{170,48},{190,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{170,28},{190,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{170,8},{190,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{170,-12},{190,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{170,-32},{190,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{170,-52},{190,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{170,-72},{190,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{170,-92},{190,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{170,-112},{190,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{190,68},{210,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{190,48},{210,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{190,28},{210,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{190,8},{210,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{190,-12},{210,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{190,-32},{210,-12}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.P;
      OUT4 = G2.gen.Q;
      OUT5 = G2.gen.p.ir;
      OUT6 = G2.gen.p.ii;
      OUT7 = G2.gen.PMECH;
      OUT8 = G2.sEXSMPC.EFD;
      OUT9 = Bus6.v;
      OUT10 = Bus6.angle;

      OUT11 = PV.rEGCA1_1.Pgen;
      OUT12 = PV.rEGCA1_1.Qgen;
      OUT13 = PV.rEGCA1_1.p.ir;
      OUT14 = PV.rEGCA1_1.p.ii;
      OUT15 = Bus8.v;
      OUT16 = Bus8.angle;

      OUT17 = BESS.rEGCA1_1.Pgen;
      OUT18 = BESS.rEGCA1_1.Qgen;
      OUT19 = BESS.rEGCA1_1.p.ir;
      OUT20 = BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;
      OUT22 = Bus10.angle;

      OUT23 = Load2.P;
      OUT24 = Load2.Q;

      OUT25 = Bus5.v;
      OUT26 = Bus5.angle;



        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=100,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_test22;

      model MPCAppliedEnergyOriginal_test22
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));
                  Modelica.Blocks.Interfaces.RealInput IN3 "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{186,-10},{206,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{186,-30},{206,-10}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.P;
      OUT4 = G2.gen.Q;
      OUT5 = G2.gen.p.ir;
      OUT6 = G2.gen.p.ii;
      OUT7 = G2.gen.PMECH;
      OUT8 = G2.sEXSMPC.EFD;
      OUT9 = Bus6.v;
      OUT10 = Bus6.angle;

      OUT11 = PV.rEGCA1_1.Pgen;
      OUT12 = PV.rEGCA1_1.Qgen;
      OUT13 = PV.rEGCA1_1.p.ir;
      OUT14 = PV.rEGCA1_1.p.ii;
      OUT15 = Bus8.v;
      OUT16 = Bus8.angle;

      OUT17 = BESS.rEGCA1_1.Pgen;
      OUT18 = BESS.rEGCA1_1.Qgen;
      OUT19 = BESS.rEGCA1_1.p.ir;
      OUT20 = BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;
      OUT22 = Bus10.angle;

      OUT23 = Load2.P;
      OUT24 = Load2.Q;

      OUT25 = Bus5.v;
      OUT26 = Bus5.angle;


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=20,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_test22;

      model MPCAppliedEnergyOriginal_test22_table
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=false,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{70,-36},{80,-26}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));

        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControl BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.1)
          annotation (Placement(transformation(extent={{68,-18},{80,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-18},{94,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{186,-10},{206,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{186,-30},{206,-10}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable(table=[0,0; 0.5,0;
              0.51,0.01; 5,0.01],
                           smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-128,6},{-108,26}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable1(table=[0,0; 0.5,
              0; 0.51,0.01; 5,0.01],
                           smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-128,-20},{-108,0}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable2(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-128,-48},{-108,-28}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable3(table=[0,0; 0.5,
              0; 0.51,0.3; 5,0.3],
                           smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-128,-94},{-108,-74}})));
        Modelica.Blocks.Sources.CombiTimeTable combiTimeTable4(table=[0,0; 0.5,0; 0.51,
              0.1; 5,0.1], smoothness=Modelica.Blocks.Types.Smoothness.ConstantSegments)
          annotation (Placement(transformation(extent={{-128,-120},{-108,-100}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.P;
      OUT4 = G2.gen.Q;
      OUT5 = G2.gen.p.ir;
      OUT6 = G2.gen.p.ii;
      OUT7 = G2.gen.PMECH;
      OUT8 = G2.sEXSMPC.EFD;
      OUT9 = Bus6.v;
      OUT10 = Bus6.angle;

      OUT11 = PV.rEGCA1_1.Pgen;
      OUT12 = PV.rEGCA1_1.Qgen;
      OUT13 = PV.rEGCA1_1.p.ir;
      OUT14 = PV.rEGCA1_1.p.ii;
      OUT15 = Bus8.v;
      OUT16 = Bus8.angle;

      OUT17 = BESS.rEGCA1_1.Pgen;
      OUT18 = BESS.rEGCA1_1.Qgen;
      OUT19 = BESS.rEGCA1_1.p.ir;
      OUT20 = BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;
      OUT22 = Bus10.angle;

      OUT23 = Load2.P;
      OUT24 = Load2.Q;

      OUT25 = Bus5.v;
      OUT26 = Bus5.angle;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));

        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{80.5,-31},{85.2,-31},{85.2,-16.4}},
              color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{80.54,-12.06},
                {82.87,-12.06},{82.87,-11.6},{85.2,-11.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-14},{98.15,-14},{98.15,
                -14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(combiTimeTable.y[1], G2.P_ref1) annotation (Line(points={{-107,16},{-42,
                16}},                   color={0,0,127}));
        connect(combiTimeTable1.y[1], G2.Efd_ref) annotation (Line(points={{-107,-10},
                {-50,-10},{-50,4},{-42,4}}, color={0,0,127}));
        connect(combiTimeTable2.y[1], PV.QINPUT) annotation (Line(points={{-107,-38},{
                -50,-38},{-50,-50},{-42,-50}}, color={0,0,127}));
        connect(combiTimeTable3.y[1], BESS.Paux1) annotation (Line(points={{-107,-84},
                {-42,-84}},                     color={0,0,127}));
        connect(combiTimeTable4.y[1], BESS.Qext1) annotation (Line(points={{-107,-110},
                {-50,-110},{-50,-96},{-42,-96}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=20,
            __Dymola_NumberOfIntervals=1000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyOriginal_test22_table;

      model MPCAppliedEnergyLinearized_test22_PSAT_MODEL
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCLocalVQControl PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCLocalVQControlLinearized
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        PFData.PowerFlow powerFlow(redeclare record PowerFlow = PFData.PF16)
          annotation (Placement(transformation(extent={{-116,106},{-96,126}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{146,68},{166,88}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{146,48},{166,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{146,28},{166,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{146,8},{166,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{146,-12},{166,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{146,-32},{166,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{146,-52},{166,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{146,-72},{166,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{146,-92},{166,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{146,-112},{166,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{170,68},{190,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{170,48},{190,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{170,28},{190,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{170,8},{190,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{170,-12},{190,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{170,-32},{190,-12}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{170,-52},{190,-32}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{170,-72},{190,-52}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{170,-92},{190,-72}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{170,-112},{190,-92}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{190,68},{210,88}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{190,48},{210,68}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{190,28},{210,48}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{190,8},{210,28}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{190,-12},{210,8}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{190,-32},{210,-12}})));
        Electrical.Loads.PSSE.Load          Load1(
          P_0=-3004660,
          Q_0=-548994,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5)
          annotation (Placement(transformation(extent={{-10,-10},{10,10}},
              rotation=180,
              origin={80,58})));
      equation

      OUT1  = G2.gen.w;
      OUT2  = G2.gen.delta;
      OUT3  = G2.gen.P;
      OUT4  = G2.gen.Q;
      OUT5  = G2.gen.p.ir;
      OUT6  = G2.gen.p.ii;
      OUT7  = G2.gen.PMECH;
      OUT8  = G2.sEXSMPC.EFD;
      OUT9  = Bus6.v;
      OUT10 = Bus6.angle;

      OUT11 = PV.rEGCA1_1.Pgen;
      OUT12 = PV.rEGCA1_1.Qgen;
      OUT13 = PV.rEGCA1_1.p.ir;
      OUT14 = PV.rEGCA1_1.p.ii;
      OUT15 = Bus8.v;
      OUT16 = Bus8.angle;

      OUT17 = BESS.rEGCA1_1.Pgen;
      OUT18 = BESS.rEGCA1_1.Qgen;
      OUT19 = BESS.rEGCA1_1.p.ir;
      OUT20 = BESS.rEGCA1_1.p.ii;
      OUT21 = Bus10.v;
      OUT22 = Bus10.angle;

      OUT23 = Load2.P;
      OUT24 = Load2.Q;

      OUT25 = Bus5.v;
      OUT26 = Bus5.angle;

        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(AddU3.y, PV.QINPUT) annotation (Line(points={{-59,-50},{-42,-50}},
                                 color={0,0,127}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(Load1.p, Bus5.p)
          annotation (Line(points={{80,48},{80,16}}, color={0,0,255}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(StopTime=10, __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end MPCAppliedEnergyLinearized_test22_PSAT_MODEL;

      model Microgrid_with_simplified_renewable
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = true;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,70},{-70,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,70},{-30,90}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,80})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,70},{-92,90}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,76},
                  {-14,84}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,70},{10,90}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,70},{70,90}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,86},
                  {36,94}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,66},
                  {36,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,16})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,60})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,10})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,10})));
        GenerationUnits.PSSE.G2_16MVA                         G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-30,10})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,104},{-74,124}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,48},{0,68}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=0.5,
          rc_enabled=true,
          t_rc=10000)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,26})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,10}),iconTransformation(extent={{-10,-10},{10,10}}, origin={-150,10})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-108,-2},{-96,10}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,0},{-60,20}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-108,-32},{-96,-20}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-30},{-60,-10}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2"
                 annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-12}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-12})));

        Modelica.Blocks.Interfaces.RealInput IN3(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-44},{-140,-24}}),
              iconTransformation(extent={{-160,-44},{-140,-24}})));
        Modelica.Blocks.Interfaces.RealInput IN4(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-66},{-140,-46}}),
              iconTransformation(extent={{-160,-66},{-140,-46}})));
        Modelica.Blocks.Interfaces.RealInput IN5(start = 0) "Connector of Real input signal 1"
          annotation (Placement(transformation(extent={{-160,-88},{-140,-68}}),
              iconTransformation(extent={{-160,-88},{-140,-68}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF16)
          annotation (Placement(transformation(extent={{-68,104},{-48,124}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,70},
                  {100,90}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-30},{120,-10}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,102},{-22,122}})));

        Electrical.Buses.Bus Bus10(v_0=powerFlow.powerflow.bus.V10, angle_0=powerFlow.powerflow.bus.A10)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-90})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T4(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={10,-90})));
        GenerationUnits.PSSE.Solar_Units.SolarMPCSysIdentification
                                                                PV(
          V_b=480,
          P_0=powerFlow.powerflow.machines.PPV,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QPV,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V8,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A8,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-60},{-20,-40}})));
        Modelica.Blocks.Math.Add AddU3
          annotation (Placement(transformation(extent={{-80,-60},{-60,-40}})));
        Modelica.Blocks.Sources.Constant IN33(k=0)
          annotation (Placement(transformation(extent={{-108,-62},{-96,-50}})));

        Modelica.Blocks.Math.Add AddU4
          annotation (Placement(transformation(extent={{-80,-90},{-60,-70}})));
        Modelica.Blocks.Math.Add AddU5
          annotation (Placement(transformation(extent={{-80,-116},{-60,-96}})));
        Modelica.Blocks.Sources.Constant IN44(k=0)
          annotation (Placement(transformation(extent={{-108,-92},{-96,-80}})));
        Modelica.Blocks.Sources.Constant IN55(k=0)
          annotation (Placement(transformation(extent={{-108,-118},{-96,-106}})));
        GenerationUnits.PSSE.Battery_Units.BESSMPCSysIdentification
                                                                 BESS(
          V_base=480,
          V_b(displayUnit="kV") = 480,
          enableV_b=true,
          P_0=powerFlow.powerflow.machines.PBESS,
          enableP_0=true,
          Q_0=powerFlow.powerflow.machines.QBESS,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V10,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A10,
          enableangle_0=true)
          annotation (Placement(transformation(extent={{-40,-100},{-20,-80}})));
        Electrical.Buses.Bus Bus8(v_0=powerFlow.powerflow.bus.V8, angle_0=powerFlow.powerflow.bus.A8)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={-10,-50})));
        Electrical.Branches.PSSE.TwoWindingTransformer          T3(
          G=0,
          B=0,
          CW=1,
          VNOM1=13800,
          VB1=13800,
          VNOM2=480,
          VB2=480,
          R=0.001,
          X=0.1)  annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={12,-50})));
        Electrical.Buses.Bus Bus11(v_0=powerFlow.powerflow.bus.V11, angle_0=powerFlow.powerflow.bus.A11)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-90})));
        Electrical.Buses.Bus Bus9(v_0=powerFlow.powerflow.bus.V9, angle_0=powerFlow.powerflow.bus.A9)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,-50})));
        Electrical.Buses.Bus Bus7(v_0=powerFlow.powerflow.bus.V7, angle_0=powerFlow.powerflow.bus.A7)
          annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={30,10})));
        Electrical.Branches.PwLine          L4(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,6},{
                  50,14}})));
        Electrical.Branches.PwLine          L5(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-54},
                  {50,-46}})));
        Electrical.Branches.PwLine          L6(
          R=0.01,
          X=0.001,
          G=0,
          B=0)  annotation (Placement(transformation(extent={{38,-94},
                  {50,-86}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=1000)
          annotation (Placement(transformation(extent={{68,-36},{78,-26}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000001, samplePeriod=0.01)
          annotation (Placement(transformation(extent={{66,-18},{78,-6}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{84,-18},{92,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,70},{160,90}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,50},{160,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,30},{160,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,10},{160,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-10},{160,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-30},{160,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-50},{160,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-70},{160,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9
          annotation (Placement(transformation(extent={{140,-90},{160,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10
          annotation (Placement(transformation(extent={{140,-110},{160,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11
          annotation (Placement(transformation(extent={{164,70},{184,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12
          annotation (Placement(transformation(extent={{164,50},{184,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13
          annotation (Placement(transformation(extent={{164,30},{184,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14
          annotation (Placement(transformation(extent={{164,10},{184,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15
          annotation (Placement(transformation(extent={{164,-10},{184,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT16
          annotation (Placement(transformation(extent={{164,-30},{184,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT17
          annotation (Placement(transformation(extent={{164,-50},{184,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT18
          annotation (Placement(transformation(extent={{164,-70},{184,-50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT19
          annotation (Placement(transformation(extent={{164,-90},{184,-70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT20
          annotation (Placement(transformation(extent={{164,-110},{184,-90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT21
          annotation (Placement(transformation(extent={{184,70},{204,90}})));
        Modelica.Blocks.Interfaces.RealOutput OUT22
          annotation (Placement(transformation(extent={{184,50},{204,70}})));
        Modelica.Blocks.Interfaces.RealOutput OUT23
          annotation (Placement(transformation(extent={{184,30},{204,50}})));
        Modelica.Blocks.Interfaces.RealOutput OUT24
          annotation (Placement(transformation(extent={{184,10},{204,30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT25
          annotation (Placement(transformation(extent={{184,-10},{204,10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT26
          annotation (Placement(transformation(extent={{184,-30},{204,-10}})));
        Modelica.Blocks.Interfaces.RealOutput OUT27
          annotation (Placement(transformation(extent={{186,-50},{206,-30}})));
        Modelica.Blocks.Interfaces.RealOutput OUT28
          annotation (Placement(transformation(extent={{184,-70},{204,-50}})));
      equation

      OUT1 = G2.gen.w;
      OUT2 = G2.gen.delta;
      OUT3 = G2.gen.Epq;
      OUT4 = G2.gen.PSIkd;
      OUT5 = G2.gen.PSIppq;
      OUT6 = G2.sEXSMPC.simpleLagLim.state;
      OUT7 = G2.sEXSMPC.leadLag.TF.x_scaled[1];
      OUT8 = G2.gASTMPC.simpleLagLim.state;
      OUT9 = G2.gASTMPC.simpleLag.state;
      OUT10 = G2.gASTMPC.simpleLag1.state;

      // OUT1 = G2.gen.w;
      // OUT2 = G2.gen.delta;
      // OUT3 = G2.gen.P;
      // OUT4 = G2.gen.Q;
      // OUT5 = G2.gen.p.ir;
      // OUT6 = G2.gen.p.ii;
      // OUT7 = G2.gen.PMECH;
      // OUT8 = G2.sEXSMPC.EFD;
      // OUT9 = G2.gASTMPC.simpleLag1.y;
      OUT11 = Bus6.v;
      OUT12 = Bus6.angle;

      OUT13 =PV.rEGCA1_1.Pgen;
      OUT14 =PV.rEGCA1_1.Qgen;
      OUT15 =PV.rEGCA1_1.p.ir;
      OUT16 =PV.rEGCA1_1.p.ii;
      OUT17 = Bus8.v;
      OUT18 = Bus8.angle;

      OUT19 =BESS.rEGCA1_1.Pgen;
      OUT20 =BESS.rEGCA1_1.Qgen;
      OUT21 =BESS.rEGCA1_1.p.ir;
      OUT22 =BESS.rEGCA1_1.p.ii;
      OUT23 = Bus10.v;
      OUT24 = Bus10.angle;

      OUT25 = Load2.P;
      OUT26 = Load2.Q;

      OUT27 = Bus5.v;
      OUT28 = Bus5.angle;


        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,80},{-40,80}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,80},{-68.8,80}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,80},{-80,80}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,80},{0,80}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,80},{-40,80}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,70},{44,70},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,90},{44,90},{44,80},{60,
                80}}, color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,90},{16,90},{16,80},{0,
                80}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,70},{16,70},{16,80},{0,
                80}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,68},{-10,80},{0,80}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,65.4},{80,80},{60,80}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,22},{80,16}},color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,30},{80,54.6}},color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-95.4,4},{-82,4}},
                            color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,10},{-116,10},{-116,16},
                {-82,16}},
                       color={0,0,127}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-95.4,-26},{-82,-26}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-12},{-118,-12},{-118,-14},
                {-82,-14}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-20},{-52,-20},{-52,4},{-42,4}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,10},{-52,10},{-52,16},
                {-42,16}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,80},{60,80}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-10},{110,10},{80,10},{
                80,16}},
                     color={0,0,255}));
        connect(T4.n, Bus10.p)
          annotation (Line(points={{-1,-90},{-10,-90}}, color={0,0,255}));
        connect(Bus6.p, T2.n)
          annotation (Line(points={{-10,10},{-1,10}},
                                                  color={0,0,255}));
        connect(IN33.y,AddU3. u2)
          annotation (Line(points={{-95.4,-56},{-82,-56}}, color={0,0,127}));
        connect(BESS.p1, Bus10.p)
          annotation (Line(points={{-20,-90},{-10,-90}}, color={0,0,255}));
        connect(BESS.Paux1, AddU4.y) annotation (Line(points={{-42,-84},{-54,-84},{-54,
                -80},{-59,-80}}, color={0,0,127}));
        connect(IN55.y, AddU5.u2)
          annotation (Line(points={{-95.4,-112},{-82,-112}}, color={0,0,127}));
        connect(AddU5.y, BESS.Qext1) annotation (Line(points={{-59,-106},{-52,-106},{-52,
                -96},{-42,-96}},   color={0,0,127}));
        connect(IN44.y, AddU4.u2)
          annotation (Line(points={{-95.4,-86},{-82,-86}}, color={0,0,127}));
        connect(AddU4.u1,IN4)  annotation (Line(points={{-82,-74},{-100,-74},{-100,-70},
                {-116,-70},{-116,-56},{-150,-56}}, color={0,0,127}));
        connect(AddU5.u1,IN5)  annotation (Line(points={{-82,-100},{-116,-100},{-116,-78},
                {-150,-78}}, color={0,0,127}));
        connect(G2.conn, Bus6.p) annotation (Line(points={{-19,10},{-10,10}},
                                           color={0,0,255}));
        connect(AddU3.u1, IN3) annotation (Line(points={{-82,-44},{-118,-44},{-118,-34},
                {-150,-34}}, color={0,0,127}));
        connect(PV.p1, Bus8.p)
          annotation (Line(points={{-20,-50},{-10,-50}}, color={0,0,255}));
        connect(Bus8.p, T3.n)
          annotation (Line(points={{-10,-50},{1,-50}},  color={0,0,255}));
        connect(T2.p, Bus7.p) annotation (Line(points={{21,10},{25.5,10},{25.5,10},{30,
                10}}, color={0,0,255}));
        connect(T3.p, Bus9.p)
          annotation (Line(points={{23,-50},{30,-50}}, color={0,0,255}));
        connect(T4.p, Bus11.p)
          annotation (Line(points={{21,-90},{30,-90}}, color={0,0,255}));
        connect(L4.n, Bus5.p) annotation (Line(points={{49.4,10},{60,10},{60,10},{80,10},
                {80,16}},     color={0,0,255}));
        connect(L5.n, Bus5.p) annotation (Line(points={{49.4,-50},{60,-50},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus11.p, L6.p)
          annotation (Line(points={{30,-90},{38.6,-90}}, color={0,0,255}));
        connect(Bus9.p, L5.p)
          annotation (Line(points={{30,-50},{38.6,-50}}, color={0,0,255}));
        connect(L6.n, Bus5.p) annotation (Line(points={{49.4,-90},{60,-90},{60,10},{80,
                10},{80,16}}, color={0,0,255}));
        connect(Bus7.p, L4.p) annotation (Line(points={{30,10},{34.3,10},{34.3,10},{38.6,
                10}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{78.5,-31},{78.5,-16.4},
                {83.2,-16.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{78.54,
                -12.06},{80.87,-12.06},{80.87,-11.6},{83.2,-11.6}}, color={0,0,
                127}));
        connect(add.y, Load2.u) annotation (Line(points={{92.4,-14},{97.15,-14},
                {97.15,-14.5},{101.9,-14.5}}, color={0,0,127}));
        connect(PV.Qref, AddU3.y) annotation (Line(points={{-42,-56},{-54,-56},{-54,-50},
                {-59,-50}}, color={0,0,127}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-140},{140,140}}), graphics={
              Rectangle(
                extent={{-160,30},{-134,-90}},
                lineColor={0,140,72},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,36},{124,-124}},
                lineColor={238,46,47},
                lineThickness=0.5),
              Rectangle(
                extent={{-128,98},{124,38}},
                lineColor={0,128,255},
                lineThickness=0.5),
              Text(
                extent={{78,-106},{114,-120}},
                textColor={238,46,47},
                textString="Microgrid"),
              Text(
                extent={{76,58},{128,34}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-30,-102},{34,-124}},
                textColor={0,140,72},
                textString="Linearization Unit"),
              Text(
                extent={{-164,50},{-132,30}},
                textColor={0,140,72},
                textString="Inputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=10000,
            __Dymola_Algorithm="Dassl"),
          Icon(coordinateSystem(extent={{-140,-140},{140,140}})));
      end Microgrid_with_simplified_renewable;
    end EquipmentOnlyLinearization;

    package MicrogridWithDistrictHeating
      "Microgrid Model with District Heating System and Load"
      model OptimizationModel_with_DistrictHeating
        "THIS ONE IS STABLE, CONTROLLABLE, OBSERVABLE!!!!!!!"
        extends Modelica.Icons.Example;

        parameter Boolean equivalentGRID = false;
        parameter Boolean equivalentsystem = false;

        OpenIPSL.Electrical.Buses.Bus Bus1(v_0=powerFlow.powerflow.bus.V1, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-90,60},{-70,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus2(v_0=powerFlow.powerflow.bus.V2, angle_0=
              powerFlow.powerflow.bus.A1) if not equivalentGRID
          annotation (Placement(transformation(extent={{-50,60},{-30,80}})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T1(
          R=0.001,
          X=0.2,
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000)  if not equivalentGRID annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=180,
              origin={-60,70})));
        OpenIPSL.Examples.OpenCPS.Generators.G1 G1(
          enableV_b=true,
          v_0=powerFlow.powerflow.bus.V1,
          angle_0=powerFlow.powerflow.bus.A1,
          P_0=powerFlow.powerflow.machines.PG1,
          Q_0=powerFlow.powerflow.machines.QG1,
          V_b=6000)  if not equivalentGRID
          annotation (Placement(transformation(extent={{-112,60},{-92,80}})));
        OpenIPSL.Electrical.Branches.PwLine L1(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{-26,66},{-14,74}})));
        OpenIPSL.Electrical.Buses.Bus Bus3(v_0=powerFlow.powerflow.bus.V3, angle_0=
              powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-10,60},{10,80}})));
        OpenIPSL.Electrical.Buses.Bus Bus4(v_0=powerFlow.powerflow.bus.V4, angle_0=
              powerFlow.powerflow.bus.V4) if not equivalentGRID
          annotation (Placement(transformation(extent={{50,60},{70,80}})));
        OpenIPSL.Electrical.Branches.PwLine L2_1(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,76},{36,84}})));
        OpenIPSL.Electrical.Branches.PwLine L2_2(
          R=0.0005,
          X=0.1,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(extent={{24,56},{36,64}})));
        OpenIPSL.Electrical.Buses.Bus Bus5(angle_0=powerFlow.powerflow.bus.A5, v_0=
              powerFlow.powerflow.bus.V5)  annotation (Placement(
              transformation(
              extent={{-10,-10},{10,10}},
              rotation=90,
              origin={80,6})));
        OpenIPSL.Electrical.Branches.PwLine L3(
          R=0.001,
          X=0.2,
          G=0,
          B=0) if not equivalentGRID annotation (Placement(transformation(
              extent={{-6,-4},{6,4}},
              rotation=-90,
              origin={80,50})));
        OpenIPSL.Electrical.Buses.Bus Bus6(v_0=powerFlow.powerflow.bus.V6, angle_0=
              powerFlow.powerflow.bus.A6) annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=180,
              origin={34,-36})));
        OpenIPSL.Electrical.Branches.PSSE.TwoWindingTransformer T2(
          G=0,
          B=0,
          VNOM1=13800,
          VB1=13800,
          VNOM2=6000,
          VB2=6000,
          R=0.005,
          X=0.1)  annotation (Placement(transformation(
              extent={{-8,-8},{8,8}},
              rotation=270,
              origin={50,-16})));
        GenerationUnits.PSSE.G2_16MVA_THERMAL                 G2(
          enableV_b=true,
          enableP_0=true,
          enableQ_0=true,
          v_0=powerFlow.powerflow.bus.V6,
          enablev_0=true,
          angle_0=powerFlow.powerflow.bus.A6,
          V_b=6000,
          P_0=powerFlow.powerflow.machines.PG2,
          Q_0=powerFlow.powerflow.machines.QG2,
          enableangle_0=true)
                        annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={10,-36})));
        inner OpenIPSL.Electrical.SystemBase SysData(S_b=100000000, fn=60)
          annotation (Placement(transformation(extent={{-128,94},{-74,114}})));
        OpenIPSL.Electrical.Loads.PSSE.Load Load1(
          V_b=220000,
          P_0=powerFlow.powerflow.loads.PL1,
          Q_0=powerFlow.powerflow.loads.QL1,
          v_0=powerFlow.powerflow.bus.V3,
          angle_0=powerFlow.powerflow.bus.A3) if not equivalentGRID
          annotation (Placement(transformation(extent={{-20,38},{0,58}})));
        Electrical.Events.Breaker breaker(enableTrigger=false,
          t_o=1.01,
          rc_enabled=true,
          t_rc=80.01)       if not equivalentGRID                     annotation (Placement(transformation(
              extent={{-4,-4},{4,4}},
              rotation=90,
              origin={80,16})));

        Modelica.Blocks.Interfaces.RealInput IN1(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,0}), iconTransformation(extent={{-10,-10},{10,10}}, origin=
                 {-150,0})));
        Modelica.Blocks.Sources.Constant IN11(k=0)
          annotation (Placement(transformation(extent={{-120,-40},{-100,-20}})));
        Modelica.Blocks.Math.Add AddU1
          annotation (Placement(transformation(extent={{-80,-16},{-60,4}})));
        Modelica.Blocks.Sources.Constant IN22(k=0)
          annotation (Placement(transformation(extent={{-120,-100},{-100,-80}})));
        Modelica.Blocks.Math.Add AddU2
          annotation (Placement(transformation(extent={{-80,-76},{-60,-56}})));
        Modelica.Blocks.Interfaces.RealInput IN2(start=0)
          "Connector of Real input signal 2" annotation (Placement(transformation(
              extent={{-10,-10},{10,10}},
              rotation=0,
              origin={-150,-60}), iconTransformation(extent={{-10,-10},{10,10}},
                origin={-150,-60})));
        Modelica.Blocks.Interfaces.RealOutput OUT1
          annotation (Placement(transformation(extent={{140,58},{160,78}})));
       Modelica.Blocks.Interfaces.RealOutput OUT2
          annotation (Placement(transformation(extent={{140,38},{160,58}})));
        Modelica.Blocks.Interfaces.RealOutput OUT3
          annotation (Placement(transformation(extent={{140,18},{160,38}})));
        Modelica.Blocks.Interfaces.RealOutput OUT4
          annotation (Placement(transformation(extent={{140,-2},{160,18}})));
        Modelica.Blocks.Interfaces.RealOutput OUT5
          annotation (Placement(transformation(extent={{140,-22},{160,-2}})));
        Modelica.Blocks.Interfaces.RealOutput OUT6
          annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT7
          annotation (Placement(transformation(extent={{140,-62},
                  {160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT8
          annotation (Placement(transformation(extent={{140,-82},
                  {160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT9    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT10   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT11  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT12    annotation (Placement(transformation(extent={{140,-42},{160,-22}})));
        Modelica.Blocks.Interfaces.RealOutput OUT13   annotation (Placement(transformation(extent={{140,-62},{160,-42}})));
        Modelica.Blocks.Interfaces.RealOutput OUT14  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));
        Modelica.Blocks.Interfaces.RealOutput OUT15  annotation (Placement(transformation(extent={{140,-82},{160,-62}})));

        PFData.PowerFlow powerFlow(redeclare record PowerFlow =
              OpenIPSL.Examples.ModelPredictiveControl.PFData.PF02)
          annotation (Placement(transformation(extent={{-68,94},{-48,114}})));
        Electrical.Machines.PSSE.GENCLS IB(
          V_b=220000,
          v_0=powerFlow.powerflow.bus.V4,
          angle_0=powerFlow.powerflow.bus.A4,
          P_0=powerFlow.powerflow.machines.Pinf,
          Q_0=powerFlow.powerflow.machines.Qinf,
          M_b=100000000,
          X_d=1) if not equivalentGRID annotation (Placement(transformation(extent={{110,60},{100,80}})));
        Electrical.Loads.PSSE.Load_ExtInput Load2(
          P_0=powerFlow.powerflow.loads.PL2,
          Q_0=powerFlow.powerflow.loads.QL2,
          v_0=powerFlow.powerflow.bus.V5,
          angle_0=powerFlow.powerflow.bus.A5,
          d_P=0,
          t1=100,
          d_t=1000)
          annotation (Placement(transformation(extent={{100,-40},{120,-20}})));
        Electrical.Loads.NoiseInjections.WhiteNoiseInjection whiteNoiseInjection(
            active_sigma=0.0000000005,
                                  samplePeriod=0.02)
          annotation (Placement(transformation(extent={{70,-30},{82,-18}})));

        inner Modelica.Blocks.Noise.GlobalSeed globalSeed(useAutomaticSeed=false,
            fixedSeed=10000)
          annotation (Placement(transformation(extent={{-42,92},{-22,112}})));
        Modelica.Blocks.Sources.Sine sine(
          amplitude=0,
          f=1/260,
          phase=3.1415926535898,
          startTime=5.5)
          annotation (Placement(transformation(extent={{72,-44},{82,-34}})));
        Modelica.Blocks.Math.Add add
          annotation (Placement(transformation(extent={{86,-30},{94,-22}})));

        ThermalPower.DistrictHeating.Consumers.IdealHeatConsumer
          idealHeatConsumer(use_heatDemand_in=false)
          annotation (Placement(transformation(extent={{88,-78},{108,-58}})));
        ThermalPower.TwoPhase.FlowChannels.DualPipe_dynamicDelay
          dualPipe_dynamicDelay(N_B_supply=1, N_B_return=1)
          annotation (Placement(transformation(extent={{56,-84},{76,-64}})));
        Modelon.ThermoFluid.Sources.PressureBoundary pressureBoundary(N=1)
          annotation (Placement(transformation(extent={{16,-82},{36,-62}})));
      equation

        OUT1 = G2.gen.w;
        OUT2 = G2.gen.delta;
        OUT3 = G2.gen.Epq;
        OUT4 = G2.gen.PSIkd;
        OUT5 = G2.gen.PSIppq;
        OUT6 = G2.sEXSMPC.simpleLagLim.state;
        OUT7 = G2.sEXSMPC.leadLag.TF.x[1];
        OUT8 = G2.gASTMPC.simpleLagLim.state;
        OUT9 = G2.gASTMPC.simpleLag.state;
        OUT10 = G2.gASTMPC.simpleLag1.state;
        OUT11 = G2.gASTMPC.PMECH;
        OUT12 = G2.sEXSMPC.EFD;
        OUT13 = Bus5.v;
        OUT14 = Bus5.angle;
        OUT15 = G2.gen.P;

        connect(T1.p, Bus2.p)
          annotation (Line(points={{-51.2,70},{-40,70}}, color={0,0,255}));
        connect(Bus1.p, T1.n)
          annotation (Line(points={{-80,70},{-68.8,70}}, color={0,0,255}));
        connect(G1.conn, Bus1.p)
          annotation (Line(points={{-91,70},{-80,70}}, color={0,0,255}));
        connect(L1.n, Bus3.p)
          annotation (Line(points={{-14.6,70},{0,70}}, color={0,0,255}));
        connect(L1.p, Bus2.p)
          annotation (Line(points={{-25.4,70},{-40,70}}, color={0,0,255}));
        connect(L2_2.n, Bus4.p) annotation (Line(points={{35.4,60},{44,60},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.n, Bus4.p) annotation (Line(points={{35.4,80},{44,80},{44,70},{
                60,70}},
                      color={0,0,255}));
        connect(L2_1.p, Bus3.p) annotation (Line(points={{24.6,80},{16,80},{16,70},{0,
                70}}, color={0,0,255}));
        connect(L2_2.p, Bus3.p) annotation (Line(points={{24.6,60},{16,60},{16,70},{0,
                70}}, color={0,0,255}));
        connect(G2.conn, Bus6.p)
          annotation (Line(points={{21,-36},{34,-36}}, color={0,0,255}));
        connect(Load1.p, Bus3.p)
          annotation (Line(points={{-10,58},{-10,70},{0,70}}, color={0,0,255}));
        connect(L3.p, Bus4.p)
          annotation (Line(points={{80,55.4},{80,70},{60,70}}, color={0,0,255}));
        connect(breaker.s, Bus5.p)
          annotation (Line(points={{80,12},{80,6}}, color={0,0,255}));
        connect(breaker.r, L3.n)
          annotation (Line(points={{80,20},{80,44.6}},color={0,0,255}));
        connect(T2.n, Bus6.p)
          annotation (Line(points={{50,-24.8},{50,-36},{34,-36}}, color={0,0,255}));
        connect(IN11.y, AddU1.u2) annotation (Line(points={{-99,-30},{-90,-30},{-90,-12},
                {-82,-12}}, color={0,0,127}));
        connect(IN1, AddU1.u1) annotation (Line(points={{-150,0},{-82,0}},
                       color={0,0,127}));
        connect(T2.p, Bus5.p) annotation (Line(points={{50,-7.2},{50,0},{80,0},{80,6}},
              color={0,0,255}));

        connect(IN22.y,AddU2. u2) annotation (Line(points={{-99,-90},{-90,-90},{-90,-72},
                {-82,-72}},
                       color={0,0,127}));
        connect(IN2,AddU2. u1) annotation (Line(points={{-150,-60},{-82,-60}},
                       color={0,0,127}));
        connect(AddU2.y, G2.Efd_ref)
          annotation (Line(points={{-59,-66},{-10,-66},{-10,-42},{-2,-42}},
                                                                 color={0,0,127}));
        connect(AddU1.y, G2.P_ref1) annotation (Line(points={{-59,-6},{-10,-6},{-10,-30},
                {-2,-30}},                          color={0,0,127}));
        connect(IB.p, Bus4.p)
          annotation (Line(points={{100,70},{60,70}}, color={0,0,255}));
        connect(Load2.p, Bus5.p) annotation (Line(points={{110,-20},{110,0},{80,0},{80,
                6}}, color={0,0,255}));
        connect(sine.y, add.u2) annotation (Line(points={{82.5,-39},{82.5,-34},{85.2,-34},
                {85.2,-28.4}}, color={0,0,127}));
        connect(whiteNoiseInjection.y, add.u1) annotation (Line(points={{82.54,-24.06},
                {82.54,-23.6},{85.2,-23.6}}, color={0,0,127}));
        connect(add.y, Load2.u) annotation (Line(points={{94.4,-26},{94.4,-24.5},{101.9,
                -24.5}}, color={0,0,127}));
        connect(dualPipe_dynamicDelay.portB_supply[1], idealHeatConsumer.portA)
          annotation (Line(points={{76.2,-72},{88,-72}}, color={0,0,255}));
        connect(dualPipe_dynamicDelay.portB_return[1], idealHeatConsumer.portB)
          annotation (Line(points={{76,-76},{88,-76}}, color={0,0,255}));
        connect(pressureBoundary.fluidPort[1], dualPipe_dynamicDelay.portA_supply)
          annotation (Line(points={{35,-72},{56,-72}}, color={255,128,0}));
          annotation (Placement(transformation(extent={{140,-20},{160,0}})),
                      Placement(transformation(extent={{140,-40},{160,-20}})),
                      Placement(transformation(extent={{140,-60},{160,-40}})),
                      Placement(transformation(extent={{140,-80},{160,-60}})),
                     Diagram(coordinateSystem(preserveAspectRatio=false,
                extent={{-140,-120},{140,120}}), graphics={
              Text(
                extent={{76,48},{128,24}},
                textColor={28,108,200},
                textString="Utility Grid"),
              Text(
                extent={{-164,40},{-132,20}},
                textColor={0,140,72},
                textString="Inputs"),
              Text(
                extent={{128,108},{168,88}},
                textColor={0,140,72},
                textString="Outputs")}),
          Documentation(info="<html>
<p>This example system shows how the preparation for resynchronization of Generator 2 to the grid. Note that at 2 seconds, a signal is triggered so voltages between buses 3 and 4 should be equal.</p>
<p>Simulate the system for 10 seconds. Variables of interest are:</p>
<ul>
<li><code>B3.v</code></li>
<li><code>B4.v</code></li>
<li><code>G1.gen.SPEED</code></li>
<li><code>G2.gen.SPEED</code></li>
</ul>
<p>Note the behavior of those variables before and after the connection of generator G2 to the main grid.</p>
</html>"),experiment(
            StopTime=10,
            __Dymola_NumberOfIntervals=100,
            __Dymola_Algorithm="Dassl"));
      end OptimizationModel_with_DistrictHeating;

      model LearningThermalPower

        parameter Modelica.Units.SI.Temperature T0=70 "Supply temperature";


        ThermalPower.DistrictHeating.Consumers.IdealHeatConsumer idealHeatConsumer(
            redeclare package Medium =
              Modelon.Media.PreDefined.TwoPhase.WaterIF97,
            use_heatDemand_in=true)
          annotation (Placement(transformation(extent={{32,-4},{52,16}})));
        ThermalPower.TwoPhase.FlowChannels.DualPipe_dynamicDelay
          dualPipe_dynamicDelay(N_B_supply=1, N_B_return=1)
          annotation (Placement(transformation(extent={{0,-10},{20,10}})));
        Modelon.ThermoFluid.Sources.PressureBoundary pressureBoundary(
          redeclare package Medium =
              Modelon.Media.PreDefined.TwoPhase.WaterIF97,
          energyDefinition=Modelon.ThermoFluid.Choices.EnergyDefinition.T,
          p=500000,
          T=298.15,
          pressureUnit=Modelon.ThermoFluid.Choices.RealPressureUnit.Pa,
          temperatureUnit=Modelon.ThermoFluid.Choices.RealTemperatureUnit.degC,
          use_p_in=false,
          use_Th_in=false,
          N=1) annotation (Placement(transformation(extent={{-60,-30},{-40,-10}})));

        Modelica.Blocks.Sources.Ramp           ThermalLoad(
          height=500,
          duration=100,
          offset=100,
          startTime=10)
          annotation (Placement(transformation(extent={{90,0},{70,20}})));
        Modelon.ThermoFluid.Sources.PressureBoundary pressureBoundary_supply(
          redeclare package Medium =
              Modelon.Media.PreDefined.TwoPhase.WaterIF97,
          pressureUnit=Modelon.ThermoFluid.Choices.RealPressureUnit.bar,
          temperatureUnit=Modelon.ThermoFluid.Choices.RealTemperatureUnit.degC,
          use_p_in=true,
          use_Th_in=true,
          N=1) annotation (Placement(transformation(extent={{-60,10},{-40,30}})));
        Modelica.Blocks.Sources.RealExpression SourcePressure(y=8)
          annotation (Placement(transformation(extent={{-92,26},{-72,46}})));
        Modelica.Blocks.Sources.RealExpression SourceTemperature(y=100)
          annotation (Placement(transformation(extent={{-92,50},{-72,70}})));
      equation
        connect(dualPipe_dynamicDelay.portB_supply[1], idealHeatConsumer.portA)
          annotation (Line(points={{20.2,2},{32,2}}, color={0,0,255}));
        connect(dualPipe_dynamicDelay.portB_return[1], idealHeatConsumer.portB)
          annotation (Line(points={{20,-2},{32,-2}}, color={0,0,255}));
        connect(idealHeatConsumer.heatDemand, ThermalLoad.y)
          annotation (Line(points={{53,10},{69,10}}, color={0,0,127}));
        connect(pressureBoundary.fluidPort[1], dualPipe_dynamicDelay.portA_return)
          annotation (Line(points={{-41,-20},{-20,-20},{-20,-2},{0,-2}}, color={255,128,
                0}));
        connect(pressureBoundary_supply.fluidPort[1], dualPipe_dynamicDelay.portA_supply)
          annotation (Line(points={{-41,20},{-20,20},{-20,2},{0,2}}, color={255,128,0}));
        connect(SourcePressure.y, pressureBoundary_supply.p_in)
          annotation (Line(points={{-71,36},{-56,36},{-56,30}}, color={0,0,127}));
        connect(SourceTemperature.y, pressureBoundary_supply.T_in) annotation (
            Line(points={{-71,60},{-49,60},{-49,30}}, color={0,0,127}));
        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(
              coordinateSystem(preserveAspectRatio=false)));
      end LearningThermalPower;
    end MicrogridWithDistrictHeating;
  end PSSE;

  package PFData
    record PowerFlowTemplate "Template Record for Power Flow Results"
      extends Modelica.Icons.Record;

      annotation (Documentation(info="<html>
<p>Template Record for Power Flow Results.</p>
</html>"));
    end PowerFlowTemplate;

    record PowerFlow "Record containing replaceable record with power flow results"
      extends Modelica.Icons.Record;

      replaceable record PowerFlow =
          PowerFlowTemplate constrainedby PowerFlowTemplate "Replaceable power flow record"
                                                      annotation (
          choicesAllMatching);

      PowerFlow powerflow;

      annotation (Documentation(info="<html>
<p>Instantiable record containing the replaceable record with power flow results.</p>
</html>"));
    end PowerFlow;

    extends Modelica.Icons.RecordsPackage;

    package BusData
      partial record BusTemplatewithRenewables2
        "Record template for power flow solutions in buses"

        parameter OpenIPSL.Types.PerUnit V1 "Voltage magnitude at G1"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A1 "Voltage angle at G1" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V2 "Voltage magnitude at bus 2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A2 "Voltage angle at bus 2" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V3 "Voltage magnitude at bus 3"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A3 "Voltage angle at bus 3" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V4 "Voltage magnitude at bus 4"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A4 "Voltage angle at bus 4" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V5 "Voltage magnitude at bus 5"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A5 "Voltage angle at bus 5" annotation (Dialog(enable=false));
       parameter OpenIPSL.Types.PerUnit V6 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A6 "Voltage angle at G2" annotation (Dialog(enable=false));
         parameter OpenIPSL.Types.PerUnit V7 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A7 "Voltage angle at G2" annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.PerUnit V8 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A8 "Voltage angle at G2" annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.PerUnit V9 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A9 "Voltage angle at G2" annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.PerUnit V10 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A10 "Voltage angle at G2" annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.PerUnit V11 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A11 "Voltage angle at G2" annotation (Dialog(enable=false));

      end BusTemplatewithRenewables2;

      partial record BusTemplatewithRenewables
        "Record template for power flow solutions in buses"

        parameter OpenIPSL.Types.PerUnit V1 "Voltage magnitude at G1"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A1 "Voltage angle at G1" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V2 "Voltage magnitude at bus 2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A2 "Voltage angle at bus 2" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V3 "Voltage magnitude at bus 3"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A3 "Voltage angle at bus 3" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V4 "Voltage magnitude at bus 4"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A4 "Voltage angle at bus 4" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V5 "Voltage magnitude at bus 5"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A5 "Voltage angle at bus 5" annotation (Dialog(enable=false));
       parameter OpenIPSL.Types.PerUnit V6 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A6 "Voltage angle at G2" annotation (Dialog(enable=false));
         parameter OpenIPSL.Types.PerUnit V7 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A7 "Voltage angle at G2" annotation (Dialog(enable=false));

      end BusTemplatewithRenewables;
      extends Modelica.Icons.RecordsPackage;

      partial record BusTemplate "Record template for power flow solutions in buses"

        parameter OpenIPSL.Types.PerUnit V1 "Voltage magnitude at G1"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A1 "Voltage angle at G1" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V2 "Voltage magnitude at bus 2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A2 "Voltage angle at bus 2" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V3 "Voltage magnitude at bus 3"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A3 "Voltage angle at bus 3" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V4 "Voltage magnitude at bus 4"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A4 "Voltage angle at bus 4" annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.PerUnit V5 "Voltage magnitude at bus 5"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A5 "Voltage angle at bus 5" annotation (Dialog(enable=false));
       parameter OpenIPSL.Types.PerUnit V6 "Voltage magnitude at G2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.Angle A6 "Voltage angle at G2" annotation (Dialog(enable=false));

      end BusTemplate;

      record PFBus01
        "Record for power flow solutions in buses - Microgrid Load = 5 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000,
        V2 = 0.9903815,
        V3 = 0.9927449,
        V4 = 1.0000,
        V5 = 0.9978245,
        V6 = 1.0000,
        A1 = 12.69018*pi/180,
        A2 = 6.426857*pi/180,
        A3 = 0.117574*pi/180,
        A4 = 0*pi/180,
        A5 = -0.4589332*pi/180,
        A6 = -0.1773913*pi/180);

          // Voltage Magnitudes

        // Angle

        // Bus: 'B01' (PV bus)

        // Bus: 'B02' (slack bus)

        // Bus: 'B03' (PQ bus)

        // Bus: 'B04' (PQ bus)

        // Bus: 'B05' (PQ bus)

      end PFBus01;

      record PFBus02
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000,
        V2 = 0.9910569,
        V3 = 0.9929926,
        V4 = 1.0000,
        V5 = 0.997748,
        V6 = 0.9999999,
        A1 = 12.02401*pi/180,
        A2 = 6.055835*pi/180,
        A3 = 0.04538411*pi/180,
        A4 = 0*pi/180,
        A5 = -0.1719799*pi/180,
        A6 = 0.2532443*pi/180);

          // Voltage Magnitudes

        // Angle

        // Bus: 'B01' (PV bus)

        // Bus: 'B02' (slack bus)

        // Bus: 'B03' (PQ bus)

        // Bus: 'B04' (PQ bus)

        // Bus: 'B05' (PQ bus)

      end PFBus02;

      record PFBus03
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000,
        V2 = 0.9916971,
        V3 = 0.9932263,
        V4 = 1.0000,
        V5 = 0.9976591,
        V6 = 1.0000,
        A1 = 11.35992*pi/180,
        A2 = 5.686001*pi/180,
        A3 = -0.02673999*pi/180,
        A4 = 0*pi/180,
        A5 = 0.1149386*pi/180,
        A6 = 0.6838229*pi/180);

          // Voltage Magnitudes

        // Angle

        // Bus: 'B01' (PV bus)

        // Bus: 'B02' (slack bus)

        // Bus: 'B03' (PQ bus)

        // Bus: 'B04' (PQ bus)

        // Bus: 'B05' (PQ bus)

      end PFBus03;

      record PFBus04
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000,
        V2 = 0.9926503,
        V3 = 0.9935721,
        V4 = 1.0000,
        V5 = 0.9985361,
        V6 = 1.0000,
        A1 = 10.30002*pi/180,
        A2 = 5.095809*pi/180,
        A3 = -0.1421618*pi/180,
        A4 = 0*pi/180,
        A5 = 0.5736473*pi/180,
        A6 = 1.144547*pi/180);

          // Voltage Magnitudes

        // Angle

        // Bus: 'B01' (PV bus)

        // Bus: 'B02' (slack bus)

        // Bus: 'B03' (PQ bus)

        // Bus: 'B04' (PQ bus)

        // Bus: 'B05' (PQ bus)

      end PFBus04;

      record PFBus05
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000,
        V2 = 0.9920654,
        V3 = 0.9933603,
        V4 = 1.0000,
        V5 = 0.9986383,
        V6 = 1.0000,
        A1 = 10.96133*pi/180,
        A2 = 5.464046*pi/180,
        A3 = -0.07010145*pi/180,
        A4 = 0*pi/180,
        A5 = 0.2869359*pi/180,
        A6 = 0.714334*pi/180);

          // Voltage Magnitudes

        // Angle

        // Bus: 'B01' (PV bus)

        // Bus: 'B02' (slack bus)

        // Bus: 'B03' (PQ bus)

        // Bus: 'B04' (PQ bus)

        // Bus: 'B05' (PQ bus)

      end PFBus05;

      record PFBus06
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 0.9999999,
        V2 = 0.9914459,
        V3 = 0.9931347,
        V4 = 1.0000,
        V5 = 0.998728,
        V6 = 1.0000,
        A1 = 11.62454*pi/180,
        A2 = 5.833365*pi/180,
        A3 = 0.002017891*pi/180,
        A4 = 0*pi/180,
        A5 = 0.0002148477*pi/180,
        A6 = 0.2840931*pi/180);

          // Voltage Magnitudes

        // Angle

        // Bus: 'B01' (PV bus)

        // Bus: 'B02' (slack bus)

        // Bus: 'B03' (PQ bus)

        // Bus: 'B04' (PQ bus)

        // Bus: 'B05' (PQ bus)

      end PFBus06;

      record PFBus07
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000000,
        V2 = 0.9914461,
        V3 = 0.9931349,
        V4 = 1.0000,
        V5 = 0.9993664,
        V6 = 0.9999999,
        A1 = 11.62429*pi/180,
        A2 = 5.833227*pi/180,
        A3 = 0.001990927*pi/180,
        A4 = 0*pi/180,
        A5 = 0.0001441713*pi/180,
        A6 = 0.142008*pi/180);

      end PFBus07;

      record PFBus08
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000000,
        V2 = 0.9914461,
        V3 = 0.9931349,
        V4 = 1.0000,
        V5 = 0.9993664,
        V6 = 0.9999999,
        A1 = 11.62453*pi/180,
        A2 = 5.83336*pi/180,
        A3 = 0.00201686*pi/180,
        A4 = 0*pi/180,
        A5 = 0.0002148475*pi/180,
        A6 = 0.2840931*pi/180);

      end PFBus08;

      record PFBus09
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000000,
        V2 = 0.9914455,
        V3 = 0.9931346,
        V4 = 1.0000,
        V5 = 0.9980846,
        V6 = 1.0000,
        A1 = 11.62498*pi/180,
        A2 = 5.833611*pi/180,
        A3 = 0.002065807*pi/180,
        A4 = 0*pi/180,
        A5 = 0.0002116913*pi/180,
        A6 = 0.4262582*pi/180);

      end PFBus09;

      record PFBus10
        "Record for power flow solutions in buses - Microgrid Load = 10 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000000,
        V2 = 0.9914451,
        V3 = 0.9931345,
        V4 = 1.0000,
        V5 = 0.9976962,
        V6 = 1.0000,
        A1 = 11.62533*pi/180,
        A2 = 5.833803*pi/180,
        A3 = 0.002103247*pi/180,
        A4 = 0*pi/180,
        A5 = 0.0001742224*pi/180,
        A6 = 0.5115968*pi/180);

      end PFBus10;

      record PFBus11
        "Record for power flow solutions in buses - Microgrid Load = 1 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000000,
        V2 = 0.9903815,
        V3 = 0.9927449,
        V4 = 1.0000,
        V5 = 0.9978246,
        V6 = 1.0000,
        A1 = 12.69018*pi/180,
        A2 = 6.426857*pi/180,
        A3 = 0.117574*pi/180,
        A4 = 0*pi/180,
        A5 = -0.4589332*pi/180,
        A6 = -0.177391*pi/180);

      end PFBus11;

      record PFBus12
        "Record for power flow solutions in buses - Microgrid Load = 1 MW"
        import Modelica.Constants.pi;
        extends BusTemplate(
        V1 = 1.0000000,
        V2 = 0.9903815,
        V3 = 0.9927449,
        V4 = 1.0000,
        V5 = 0.9978246,
        V6 = 1.0000,
        A1 = 12.69018*pi/180,
        A2 = 6.426857*pi/180,
        A3 = 0.117574*pi/180,
        A4 = 0*pi/180,
        A5 = -0.4589332*pi/180,
        A6 = -0.177391*pi/180);

      end PFBus12;

      record PFBus13
        "Record for power flow solutions in buses - Microgrid Load = 1 MW"
        import Modelica.Constants.pi;
        extends BusTemplatewithRenewables(
        V1 = 1.0000000,
        V2 = 0.9903815,
        V3 = 0.992745,
        V4 = 1.0000,
        V5 = 0.9986958,
        V6 = 1.0000,
        V7 = 1.0000,
        A1 = 12.69013*pi/180,
        A2 = 6.426827*pi/180,
        A3 = 0.1175681*pi/180,
        A4 = 0*pi/180,
        A5 = -0.4587689*pi/180,
        A6 = -0.1749737*pi/180,
        A7 = -0.4595171*pi/180);

      end PFBus13;

      record PFBus14
        "Record for power flow solutions in buses - Microgrid Load = 1 MW"
        import Modelica.Constants.pi;
        extends BusTemplatewithRenewables(
        V1 = 1.0000000,
        V2 = 0.9906561,
        V3 = 0.9928458,
        V4 = 1.0000,
        V5 = 0.9986964,
        V6 = 1.0000,
        V7 = 1.0000,
        A1 = 12.42328*pi/180,
        A2 = 6.278201*pi/180,
        A3 = 0.08867037*pi/180,
        A4 = 0*pi/180,
        A5 = -0.3440189*pi/180,
        A6 = -0.0602222*pi/180,
        A7 = -0.2873908*pi/180);

      end PFBus14;

      record PFBus15
        "Record for power flow solutions in buses - Microgrid Load = 1 MW"
        import Modelica.Constants.pi;
        extends BusTemplatewithRenewables(
        V1 = 1.0000000,
        V2 = 0.990681,
        V3 = 0.99287,
        V4 = 1.0000,
        V5 = 0.999095,
        V6 = 1.0000,
        V7 = 1.0000,
        A1 = 12.4219*pi/180,
        A2 = 6.27711*pi/180,
        A3 = 0.0878938*pi/180,
        A4 = 0*pi/180,
        A5 = -0.344745*pi/180,
        A6 = -0.06*pi/180,
        A7 = -0.3171*pi/180);

      end PFBus15;

      record PFBus16
        "Record for power flow solutions in buses - Microgrid Load = 1 MW"
        import Modelica.Constants.pi;
        extends BusTemplatewithRenewables2(
        V1 = 1.0000000,
        V2 = 0.9906552,
        V3 = 0.9928454,
        V4 = 1.0000,
        V5 = 0.99889,
        V6 = 1.0000,
        V7 = 0.9994217,
        V8 = 0.9999999,
        V9 = 0.9990281,
        V10 = 1.0000,
        V11 = 0.99883,
        A1 = 12.42416*pi/180,
        A2 = 6.27869*pi/180,
        A3 = 0.08876556*pi/180,
        A4 = 0*pi/180,
        A5 =-0.3443786*pi/180,
        A6 =-0.05788516*pi/180,
        A7 = -0.343482*pi/180,
        A8 = -0.2340838*pi/180,
        A9 = -0.3482724*pi/180,
        A10 = -0.4099371*pi/180,
        A11 = -0.3518794*pi/180);

      end PFBus16;

      record PFBus17
        "Record for power flow solutions in buses - Microgrid Load = 1 MW"
        import Modelica.Constants.pi;
        extends BusTemplatewithRenewables2(
        V1 = 1.0000000,
        V2 = 0.9926486,
        V3 = 0.9935714,
        V4 = 1.0000,
        V5 = 0.9990979,
        V6 = 1.0000,
        V7 = 0.9994217,
        V8 = 0.9999999,
        V9 = 0.9990281,
        V10 = 1.0000,
        V11 = 0.9990,
        A1 = 10.30208*pi/180,
        A2 = 5.096955*pi/180,
        A3 = -0.1419372*pi/180,
        A4 = 0*pi/180,
        A5 = 0.5722654*pi/180,
        A6 =1.09702*pi/180,
        A7 = 0.5801952*pi/180,
        A8 = 0.6838356*pi/180,
        A9 = 0.5695525*pi/180,
        A10 = 0.5080193*pi/180,
        A11 = 0.5659471*pi/180);

      end PFBus17;
      annotation (Documentation(info="<html>
<p>Records with power flow solutions for buses.</p>
</html>"));

    end BusData;

    package LoadData "Records with power flow solutions for loads"
      extends Modelica.Icons.RecordsPackage;

      partial record LoadTemplate
        "Record template for power flow solutions in loads"

        parameter OpenIPSL.Types.ActivePower PL1 "Load: constantLoad"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower QL1 "Load: constantLoad"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ActivePower PL2 "Load: constantLoad"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower QL2 "Load: constantLoad"
          annotation (Dialog(enable=false));

      end LoadTemplate;

      record PFLoad01
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9582e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad01;

      record PFLoad02
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9582e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad02;

      record PFLoad03 "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9582e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad03;

      record PFLoad04
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 5MW, QL2 = 1.6434 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=5e6,
         QL2=1.643421e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad04;

      record PFLoad05 "{PL1  = 50MW, QL1 = 10MVar, PL2 = 5MW, QL2 = 1.6434 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=5e6,
         QL2=1.643421e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad05;

      record PFLoad06 "{PL1  = 50MW, QL1 = 10MVar, PL2 = 5MW, QL2 = 1.6434 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=5e6,
         QL2=1.643421e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad06;

      record PFLoad07
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 2.5MW, QL2 = 0.8217 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=2.5e6,
         QL2=0.82171e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad07;

      record PFLoad08
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 5MW, QL2 = 1.6434 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=5e6,
         QL2=1.64342e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad08;

      record PFLoad09
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 7.5MW, QL2 = 2.4651 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=7.5e6,
         QL2=2.46513e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad09;

      record PFLoad10
        "Record for power flow solutions in loads - Pload = 10 MW"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9582e6);
        // Load 1

        // Load 2

        // Load: '3_1'

      end PFLoad10;

      record PFLoad11
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9582e6);

      end PFLoad11;

      record PFLoad12 "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9582e6);

      end PFLoad12;

      record PFLoad13
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9582e6);

      end PFLoad13;

      record PFLoad14
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9582e6);

      end PFLoad14;

      record PFLoad15
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9580e6);

      end PFLoad15;

      record PFLoad16
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=9e6,
         QL2=2.9580e6);

      end PFLoad16;

      record PFLoad17
        "{PL1  = 50MW, QL1 = 10MVar, PL2 = 9MW, QL2 = 2.9582 MVar}"
        extends LoadTemplate(
         PL1=50e6,
         QL1=10e6,
         PL2=5e6,
         QL2=1.64e6);

      end PFLoad17;
      annotation (Documentation(info="<html>
<p>Records with power flow solutions for loads.</p>
</html>"));
    end LoadData;

    package MachineData "Records with power flow solutions for machines"
      partial record MachineTemplatewithRenewables
        "Record template for power flow solutions in machines"

        parameter OpenIPSL.Types.ActivePower PG1 "machine: generator1"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower QG1 "machine: generator1"
          annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.ActivePower PG2 "machine: generator2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower QG2 "machine: generator2"
           annotation (Dialog(enable=false));
          parameter OpenIPSL.Types.ActivePower PPV "machine: generator2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower QPV "machine: generator2"
           annotation (Dialog(enable=false));
             parameter OpenIPSL.Types.ActivePower PBESS "machine: generator2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower QBESS "machine: generator2"
           annotation (Dialog(enable=false));
           parameter OpenIPSL.Types.ActivePower Pinf "machine: infinite bus"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower Qinf "machine: infinite bus"
          annotation (Dialog(enable=false));

      end MachineTemplatewithRenewables;
      extends Modelica.Icons.RecordsPackage;

      partial record MachineTemplate
        "Record template for power flow solutions in machines"

        parameter OpenIPSL.Types.ActivePower PG1 "machine: generator1"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower QG1 "machine: generator1"
          annotation (Dialog(enable=false));

        parameter OpenIPSL.Types.ActivePower PG2 "machine: generator2"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower QG2 "machine: generator2"
           annotation (Dialog(enable=false));
           parameter OpenIPSL.Types.ActivePower Pinf "machine: infinite bus"
          annotation (Dialog(enable=false));
        parameter OpenIPSL.Types.ReactivePower Qinf "machine: infinite bus"
          annotation (Dialog(enable=false));

      end MachineTemplate;

      record PFMachine01
        "Machine Record - [L2 10MW/3.28684MVar]; [G2 5MW/2.1669MVar]"
        extends MachineTemplate(
         PG1=54.0618e6,
         QG1=7.494723e6,
         PG2=5.00000e6,
         QG2=1.93757e6,
         Pinf=-4.524317e-05,
         Qinf=15.61806e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine01;

      record PFMachine02
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=51.5576e6,
         QG1=6.899646e6,
         PG2=7.5e6,
         QG2=1.904409e6,
         Pinf=4.163468e-05,
         Qinf=15.14367e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine02;

      record PFMachine03
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=49.0546e6,
         QG1=6.335524e6,
         PG2=10e6,
         QG2=1.890087e6,
         Pinf=-5.40828e-06,
         Qinf=14.71908e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine03;

      record PFMachine04
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=45.047e6,
         QG1=5.495558e6,
         PG2=10e6,
         QG2=1.013569e6,
         Pinf=-3.016484e-05,
         Qinf=13.61904e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine04;

      record PFMachine05
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=47.5493e6,
         QG1=6.010928e6,
         PG2=7.5e6,
         QG2=1.01453e6,
         Pinf=2.667061e-05,
         Qinf=13.96811e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine05;

      record PFMachine06
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=50.05274e6,
         QG1=6.556822e6,
         PG2=5e6,
         QG2=1.03429e6,
         Pinf=6.032772e-06,
         Qinf=14.36652e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine06;

      record PFMachine07
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=50.0518e6,
         QG1=6.556613e6,
         PG2=2.5000e6,
         QG2=0.5116372e6,
         Pinf=-4.105587e-05,
         Qinf=14.04712e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine07;

      record PFMachine08
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=50.0527e6,
         QG1=6.556815e6,
         PG2=5e6,
         QG2=1.03429e6,
         Pinf=4.172131e-05,
         Qinf=14.36652e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine08;

      record PFMachine09
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=50.0544e6,
         QG1=6.557196e6,
         PG2=7.5e6,
         QG2=1.56799e6,
         Pinf=-1.641935e-05,
         Qinf=14.68852e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine09;

      record PFMachine10
        "Record for power flow solutions in machines - Pload = 10 MW"
        extends MachineTemplate(
         PG1=50.0557e6,
         QG1=6.557487e6,
         PG2=9e6,
         QG2=1.893555e6,
         Pinf=-1.516062e-05,
         Qinf=14.88296e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine10;

      record PFMachine11
        "Record for power flow solutions in machines - Pload = 1 MW"
        extends MachineTemplate(
         PG1=54.0618e6,
         QG1=7.494723e6,
         PG2=5e6,
         QG2=1.937436e6,
         Pinf=-4.527057e-05,
         Qinf=15.618e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine11;

      record PFMachine12
        "Record for power flow solutions in machines - Pload = 1 MW"
        extends MachineTemplate(
         PG1=54.0618e6,
         QG1=7.494723e6,
         PG2=5e6,
         QG2=1.937436e6,
         Pinf=-4.527057e-05,
         Qinf=15.618e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine12;

      record PFMachine13
        "Record for power flow solutions in machines - Pload = 1 MW"
        extends MachineTemplatewithRenewables(
         PG1=54.0616e6,
         QG1=7.494674e6,
         PG2=5e6,
         QG2=1.066431e6,
         PPV=1e6,
         QPV=0.6520903e6,
         PBESS=-1e6,
         QBESS=0.6520903e6,
         Pinf=3.556131e-05,
         Qinf=15.18235e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine13;

      record PFMachine14
        "This is the first example with G2 and a PV source only"
        extends MachineTemplatewithRenewables(
         PG1=53.0593e6,
         QG1=7.252797e6,
         PG2=5e6,
         QG2=1.065823e6,
         PPV=1e6,
         QPV=1.294059e6,
         PBESS=0,
         QBESS=0,
         Pinf=2.37497e-5,
         Qinf=14.97167e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine14;

      record PFMachine15
        "This is the first example with G2 and a PV source only"
        extends MachineTemplatewithRenewables(
         PG1=53.0593e6,
         QG1=7.25264e6,
         PG2=5e6,
         QG2=0.698234e6,
         PPV=0,
         QPV=0,
         PBESS=1e6,
         QBESS=1.84739e6,
         Pinf=1.4769e-1,
         Qinf=14.7846e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine15;

      record PFMachine16 "New Microgrid Scenario with G2, PV, and BESS"
        extends MachineTemplatewithRenewables(
         PG1=53.0626e6,
         QG1=7.253585e6,
         Pinf=-3.868197e1,
         Qinf=14.87556e6,
         PG2=5e6,
         QG2=0.3687915e6,
         PPV=2e6,
         QPV=0.8830127e6,
         PBESS=-1e6,
         QBESS=1.20856e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine16;

      record PFMachine17 "New Microgrid Scenario with G2, PV, and BESS"
        extends MachineTemplatewithRenewables(
         PG1=45.0548e6,
         QG1=5.497117e6,
         Pinf=1.418905e1,
         Qinf=13.33923e6,
         PG2=9e6,
         QG2=-0.4020076e6,
         PPV=2e6,
         QPV=0.6771919e6,
         PBESS=-1e6,
         QBESS=1.002671e6);
          // Machine G1

        // Machine G2

        // Machine Inf

      end PFMachine17;
      annotation (Documentation(info="<html>
<p>Records with power flow solutions for machines.</p>
</html>"));
    end MachineData;

    record PF01 "Microgrid Load Scenario: [L2 10MW/3.28684MVar]; [G2 5MW/2.1669MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus01   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad01    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine01    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF01;

    record PF02 "Microgrid Load Scenario: [L2 10MW/3.28684MVar]; [G2 7.5MW/2.1304MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus02   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad02    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine02    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF02;

    record PF03
      "Microgrid Load Scenario: [L2 10MW/3.28684MVar]; [G2 10MW/2.1127MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus03   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad03    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine03    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF03;

    record PF04
      "Microgrid Load Scenario: [L2 5MW/1.6434MVar]; [G2 10MW/1.0135MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus04   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad04    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine04    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF04;

    record PF05
      "Microgrid Load Scenario: [L2 5MW/1.6434MVar]; [G2 7.5MW/1.0145MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus05   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad05    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine05    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF05;

    record PF06
      "Microgrid Load Scenario: [L2 5MW/1.6434MVar]; [G2 5MW/1.0342MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus06   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad06    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine06    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF06;

    record PF07
      "Microgrid Load Scenario: [L2 2.5MW/0.8217MVar]; [G2 2.5MW/6.6782MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus07   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad07    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine07    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF07;

    record PF08
      "Microgrid Load Scenario: [L2 2.5MW/0.8217MVar]; [G2 2.5MW/6.6782MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus08   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad08    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine08    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF08;

    record PF09
      "Microgrid Load Scenario: [L2 2.5MW/0.8217MVar]; [G2 2.5MW/6.6782MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus09   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad09    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine09    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF09;

    record PF10
      "Microgrid Load Scenario: [L2 2.5MW/0.8217MVar]; [G2 2.5MW/6.6782MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus10   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad10    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine10    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF10;

    record PF11
      "Microgrid Load Scenario: [L2 1MW/0.328MVar]; [G2 10MW/0.1599MVar]"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus11   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad11    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine11    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF11;

    record PF13 "Microgrid Load Scenario with Renewables"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus13   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad13    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine13    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF13;

    record PF14 "Microgrid Load Scenario with Renewables"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus14   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad14    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine14    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF14;

    record PF15 "Microgrid Load Scenario with Renewables"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus15   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad15    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine15    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF15;

    record PF16 "Microgrid Load Scenario with Renewables"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus16   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad16    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine16    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF16;

    record PF17 "Microgrid Load Scenario with Renewables"
      extends PowerFlowTemplate;

      replaceable record Bus =
          BusData.PFBus17   constrainedby BusData.BusTemplate
        "Power flow results for buses";
      Bus bus;

      replaceable record Loads =
          LoadData.PFLoad17    constrainedby LoadData.LoadTemplate
        "Power flow results for loads";
      Loads loads;

      replaceable record Machines =
          MachineData.PFMachine17    constrainedby MachineData.MachineTemplate
        "Power flow results for machines";
      Machines machines;

    end PF17;
  end PFData;

  package Functions
    function Linearization_Microgrid
      import Modelica_LinearSystems2.StateSpace;
      import Modelica_LinearSystems2.TransferFunction;

      input String pathToNonlinearPlantModel="OpenIPSL.Examples.ModelPredictiveControl.PSSE.EquipmentOnlyLinearization.MPCAppliedEnergyLinearized_test2";
      input Modelica.Units.SI.Time tlin = 0.001;

    algorithm


      // Linearize plant model at t_lin
      ss := Modelica_LinearSystems2.ModelAnalysis.Linearize(pathToNonlinearPlantModel,
      simulationSetup=Modelica_LinearSystems2.Records.SimulationOptionsForLinearization(linearizeAtInitial=false, t_linearize=tlin));

      // Print Linear System
      Modelica.Utilities.Streams.print(String(ss));

      //SAVE the data in a .mat file
      DataFiles.writeMATmatrix(
      "MyData.mat",
      "ABCD",
      [ss.A,ss.B; ss.C,ss.D],
      append = false);

      nx:= size(ss.A, 1);
      DataFiles.writeMATmatrix(
      "MyData.mat",
      "nx",
      [nx],
      append = true);





    end Linearization_Microgrid;
  end Functions;
end ModelPredictiveControl;
